"Variable Name","Public","Protected","Private","Static","Final","Type","Initial Value","Annotation","Comment","Java File Path"
"android.gesture.GesturePoint.y","true","false","false","false","true","float","","","","\android\gesture\GesturePoint.java"
"android.gesture.GesturePoint.x","true","false","false","false","true","float","","","","\android\gesture\GesturePoint.java"
"android.gesture.GesturePoint.timestamp","true","false","false","false","true","long","","","","\android\gesture\GesturePoint.java"
"android.pim.vcard.VCardBuilder.mShouldUseQuotedPrintable","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.addressData","false","false","false","false","true","String","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mRefrainsQPToNameProperties","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mBuilder","false","false","true","false","false","StringBuilder","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_WS","false","false","true","true","true","String",""" ""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.PostalStruct.appendCharset","false","false","false","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mUsesAndroidProperty","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_DATA_PUBLIC","false","false","true","true","true","String","""PUBLIC""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.SHIFT_JIS","false","false","true","true","true","String","""SHIFT_JIS""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mIsDoCoMo","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.sPostalTypePriorityMap","false","false","true","true","true","Map<Integer,Integer>","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.DEFAULT_PHONE_TYPE","true","false","false","true","true","int","Phone.TYPE_HOME","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.reallyUseQuotedPrintable","false","false","false","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mVCardType","false","false","true","false","true","int","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_PARAM_ENCODING_BASE64_V21","false","false","true","true","true","String","""ENCODING=BASE64""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mNeedsToConvertPhoneticString","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.UTF_8","false","false","true","true","true","String","""UTF-8""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mAppendTypeParamName","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mUsesShiftJis","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_PARAM_ENCODING_QP","false","false","true","true","true","String","""ENCODING=QUOTED-PRINTABLE""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_ITEM_SEPARATOR","false","false","true","true","true","String",""";""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mVCardCharsetParameter","false","false","true","false","true","String","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mIsV30","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mOnlyOneNoteFieldIsAvailable","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mShouldAppendCharsetParam","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.DEFAULT_POSTAL_TYPE","true","false","false","true","true","int","StructuredPostal.TYPE_HOME","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_DATA_SEPARATOR","false","false","true","true","true","String",""":""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.PostalStruct.addressData","false","false","false","false","true","String","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_PARAM_EQUAL","false","false","true","true","true","String","""=""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mUsesDefactProperty","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mEndAppended","false","false","true","false","false","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_DATA_VCARD","false","false","true","true","true","String","""VCARD""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.appendCharset","false","false","false","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.LOG_TAG","false","false","true","true","true","String","""VCardBuilder""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mCharsetString","false","false","true","false","true","String","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mIsJapaneseMobilePhone","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.PostalStruct.reallyUseQuotedPrintable","false","false","false","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_PARAM_SEPARATOR","false","false","true","true","true","String",""";""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.mUsesUtf8","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_PARAM_ENCODING_BASE64_V30","false","false","true","true","true","String","""ENCODING=b""","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.sAllowedAndroidPropertySet","false","false","true","true","true","Set<String>","Collections.unmodifiableSet(new HashSet<String>(Arrays.asList(Nickname.CONTENT_ITEM_TYPE, Event.CONTENT_ITEM_TYPE, Relation.CONTENT_ITEM_TYPE)))","","// e.g. BLOB is not what we can handle here now.
","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.DEFAULT_EMAIL_TYPE","true","false","false","true","true","int","Email.TYPE_OTHER","","","\android\pim\vcard\VCardBuilder.java"
"android.pim.vcard.VCardBuilder.VCARD_END_OF_LINE","false","false","true","true","true","String","""\r\n""","","","\android\pim\vcard\VCardBuilder.java"
"android.os.LatencyTimer.store","false","false","false","false","false","HashMap<String,long[]>","new HashMap<String, long[]>()","","","\android\os\LatencyTimer.java"
"android.os.LatencyTimer.TAG","false","false","false","false","true","String","""LatencyTimer""","","","\android\os\LatencyTimer.java"
"android.os.LatencyTimer.mSampleSize","false","false","false","false","true","int","","","","\android\os\LatencyTimer.java"
"android.os.LatencyTimer.mScaleFactor","false","false","false","false","true","int","","","","\android\os\LatencyTimer.java"
"android.text.AlteredCharSequence.mSpanned","false","false","true","false","false","Spanned","","","","\android\text\AlteredCharSequence.java"
"android.text.AlteredCharSequence.mEnd","false","false","true","false","false","int","","","","\android\text\AlteredCharSequence.java"
"android.text.AlteredCharSequence.mSource","false","false","true","false","false","CharSequence","","","","\android\text\AlteredCharSequence.java"
"android.text.AlteredCharSequence.mChars","false","false","true","false","false","char","","","","\android\text\AlteredCharSequence.java"
"android.text.AlteredCharSequence.mStart","false","false","true","false","false","int","","","","\android\text\AlteredCharSequence.java"
"android.text.AlteredSpanned.mSpanned","false","false","true","false","false","Spanned","","","","\android\text\AlteredCharSequence.java"
"android.widget.TextView.TAG","false","false","false","true","true","String","""TextView""","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mTmpExtracted","false","false","false","false","true","ExtractedText","new ExtractedText()","","","\android\widget\TextView.java"
"android.widget.TextView.SIGNED","false","false","true","true","true","int","2","","// TODO: How can we get this from the XML instead of hardcoding it here?
","\android\widget\TextView.java"
"android.widget.TextView.mMarqueeRepeatLimit","false","false","true","false","false","int","3","","","\android\widget\TextView.java"
"android.widget.TextView.mCurHintTextColor","false","false","true","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.EXTRACT_NOTHING","false","false","false","true","true","int","-2","","","\android\widget\TextView.java"
"android.widget.TextView.mLayout","false","false","true","false","false","Layout","","","","\android\widget\TextView.java"
"android.widget.TextView.mSingleLine","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.mCharWrapper","false","false","true","false","false","CharWrapper","null","","","\android\widget\TextView.java"
"android.widget.TextView.imeOptions","false","false","false","false","false","int","EditorInfo.IME_NULL","","","\android\widget\TextView.java"
"android.widget.TextView.mNewStart","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mEatTouchRelease","false","false","true","false","false","boolean","false","","","\android\widget\TextView.java"
"android.widget.TextView.mInputType","false","false","true","false","false","int","EditorInfo.TYPE_NULL","","","\android\widget\TextView.java"
"android.widget.TextView.mSelectionMoved","false","false","true","false","false","boolean","false","","","\android\widget\TextView.java"
"android.widget.TextView.mBufferType","false","false","true","false","false","BufferType","BufferType.NORMAL","","","\android\widget\TextView.java"
"android.widget.Drawables.mDrawableSizeTop","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.MARQUEE_PIXELS_PER_SECOND","false","false","true","true","true","int","30","","","\android\widget\TextView.java"
"android.widget.ErrorPopup.mView","false","false","true","false","false","TextView","","","","\android\widget\TextView.java"
"android.widget.TextView.mStart","false","false","true","false","false","int","","","","\android\widget\TextView.java"
"android.widget.Marquee.MARQUEE_RUNNING","false","false","true","true","true","byte","0x2","","","\android\widget\TextView.java"
"android.widget.TextView.mTmpExtracted","false","false","false","false","true","ExtractedText","new ExtractedText()","","","\android\widget\TextView.java"
"android.widget.TextView.mFadeStop","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.CharWrapper.mStart","false","false","true","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.DECIMAL","false","false","true","true","true","int","4","","","\android\widget\TextView.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\TextView.java"
"android.widget.TextView.mBlink","false","false","true","false","false","Blink","","","","\android\widget\TextView.java"
"android.widget.TextView.mMaxScroll","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.Marquee.mScrollUnit","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.mStatus","false","false","true","false","false","byte","MARQUEE_STOPPED","","","\android\widget\TextView.java"
"android.widget.TextView.MARQUEE_STOPPED","false","false","true","true","true","byte","0x0","","","\android\widget\TextView.java"
"android.widget.Blink.mView","false","false","true","false","false","WeakReference<TextView>","","","","\android\widget\TextView.java"
"android.widget.TextView.mGhostOffset","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.mTransformation","false","false","true","false","false","TransformationMethod","","","","\android\widget\TextView.java"
"android.widget.TextView.mMovement","false","false","true","false","false","MovementMethod","","","","\android\widget\TextView.java"
"android.widget.TextView.mCompoundRect","false","false","false","false","true","Rect","new Rect()","","","\android\widget\TextView.java"
"android.widget.TextView.mMaxWidth","false","false","true","false","false","int","Integer.MAX_VALUE","","","\android\widget\TextView.java"
"android.widget.TextView.EMPTY_SPANNED","false","false","true","true","true","Spanned","new SpannedString("""")","","","\android\widget\TextView.java"
"android.widget.TextView.mRestartMarquee","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.privateImeOptions","false","false","false","false","false","String","","","","\android\widget\TextView.java"
"android.widget.TextView.mNewEnd","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.Drawables.mDrawablePadding","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mSpacingAdd","false","false","true","false","false","float","0","","","\android\widget\TextView.java"
"android.widget.TextView.mCurTextColor","false","false","true","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mSavedLayout","false","false","true","false","false","BoringLayout","","","","\android\widget\TextView.java"
"android.widget.TextView.PREDRAW_NOT_REGISTERED","false","false","true","true","true","int","0","","","\android\widget\TextView.java"
"android.widget.TextView.SERIF","false","false","true","true","true","int","2","","","\android\widget\TextView.java"
"android.widget.TextView.MARQUEE_DELAY","false","false","true","true","true","int","1200","","","\android\widget\TextView.java"
"android.widget.TextView.mScrollUnit","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.mAbove","false","false","true","false","false","boolean","false","","","\android\widget\TextView.java"
"android.widget.TextView.mView","false","false","true","false","false","WeakReference<TextView>","","","","\android\widget\TextView.java"
"android.widget.TextView.mTouchFocusSelected","false","false","true","false","false","boolean","false","","","\android\widget\TextView.java"
"android.widget.TextView.mHighlightPathBogus","false","false","true","false","false","boolean","true","","","\android\widget\TextView.java"
"android.widget.TextView.mMaxWidthMode","false","false","true","false","false","int","PIXELS","","","\android\widget\TextView.java"
"android.widget.TextView.mMarquee","false","false","true","false","false","Marquee","","","","\android\widget\TextView.java"
"android.widget.Marquee.MESSAGE_RESTART","false","false","true","true","true","int","0x3","","","\android\widget\TextView.java"
"android.widget.TextView.mEditableFactory","false","false","true","false","false","Editable.Factory","Editable.Factory.getInstance()","","","\android\widget\TextView.java"
"android.widget.TextView.frozenWithFocus","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.sTempRect","false","false","true","true","true","RectF","new RectF()","","","\android\widget\TextView.java"
"android.widget.Marquee.MESSAGE_TICK","false","false","true","true","true","int","0x2","","","\android\widget\TextView.java"
"android.widget.TextView.mSelectAllOnFocus","false","false","true","false","false","boolean","false","","","\android\widget\TextView.java"
"android.widget.TextView.ID_STOP_SELECTING_TEXT","false","false","true","true","true","int","android.R.id.stopSelectingText","","","\android\widget\TextView.java"
"android.widget.TextView.mHorizontallyScrolling","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.onEditorActionListener","false","false","false","false","false","OnEditorActionListener","","","","\android\widget\TextView.java"
"android.widget.Marquee.mMaxFadeScroll","false","false","false","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.MARQUEE_STARTING","false","false","true","true","true","byte","0x1","","","\android\widget\TextView.java"
"android.widget.TextView.mCursorVisible","false","false","true","false","false","boolean","true","","","\android\widget\TextView.java"
"android.widget.TextView.mBeforeText","false","false","true","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.TextView.mMaxFadeScroll","false","false","false","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.ID_COPY_URL","false","false","true","true","true","int","android.R.id.copyUrl","","","\android\widget\TextView.java"
"android.widget.TextView.BLINK","false","false","true","true","true","int","500","","","\android\widget\TextView.java"
"android.widget.TextView.mHighlightColor","false","false","true","false","false","int","0xFFBBDDFF","","","\android\widget\TextView.java"
"android.widget.Marquee.MARQUEE_STARTING","false","false","true","true","true","byte","0x1","","","\android\widget\TextView.java"
"android.widget.TextView.mGravity","false","false","true","false","false","int","Gravity.TOP | Gravity.LEFT","","","\android\widget\TextView.java"
"android.widget.InputContentType.extras","false","false","false","false","false","Bundle","","","","\android\widget\TextView.java"
"android.widget.TextView.mHintLayout","false","false","true","false","false","Layout","","","","\android\widget\TextView.java"
"android.widget.TextView.mScroll","false","false","false","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.NO_FILTERS","false","false","true","true","true","InputFilter","new InputFilter[0]","","","\android\widget\TextView.java"
"android.widget.TextView.MESSAGE_RESTART","false","false","true","true","true","int","0x3","","","\android\widget\TextView.java"
"android.widget.TextView.ID_ADD_TO_DICTIONARY","false","false","true","true","true","int","android.R.id.addToDictionary","","","\android\widget\TextView.java"
"android.widget.TextView.EXTRACT_UNKNOWN","false","false","false","true","true","int","-1","","","\android\widget\TextView.java"
"android.widget.TextView.mDispatchTemporaryDetach","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.mShowCursor","false","false","true","false","false","long","","","","\android\widget\TextView.java"
"android.widget.TextView.mSpacingMult","false","false","true","false","false","float","1","","","\android\widget\TextView.java"
"android.widget.TextView.mPopup","false","false","true","false","false","ErrorPopup","","","","\android\widget\TextView.java"
"android.widget.TextView.mMinMode","false","false","true","false","false","int","LINES","","","\android\widget\TextView.java"
"android.widget.TextView.mSpannableFactory","false","false","true","false","false","Spannable.Factory","Spannable.Factory.getInstance()","","","\android\widget\TextView.java"
"android.widget.TextView.ID_PASTE","false","false","true","true","true","int","android.R.id.paste","","","\android\widget\TextView.java"
"android.widget.TextView.mTextPaint","false","false","true","false","false","TextPaint","","","// display attributes
","\android\widget\TextView.java"
"android.widget.ErrorPopup.mAbove","false","false","true","false","false","boolean","false","","","\android\widget\TextView.java"
"android.widget.TextView.LINES","false","false","true","true","true","int","1","","","\android\widget\TextView.java"
"android.widget.TextView.mCursorRectInWindow","false","false","false","false","false","Rect","new Rect()","","","\android\widget\TextView.java"
"android.widget.TextView.mMaximum","false","false","true","false","false","int","Integer.MAX_VALUE","","","\android\widget\TextView.java"
"android.widget.TextView.UNKNOWN_BORING","false","false","true","true","true","BoringLayout.Metrics","new BoringLayout.Metrics()","","","\android\widget\TextView.java"
"android.widget.TextView.mHighlightPaint","false","false","true","false","false","Paint","","","","\android\widget\TextView.java"
"android.widget.SavedState.selEnd","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mDrawables","false","false","true","false","false","Drawables","","","","\android\widget\TextView.java"
"android.widget.TextView.DEBUG_EXTRACT","false","false","false","true","true","boolean","false","","","\android\widget\TextView.java"
"android.widget.TextView.mLinksClickable","false","false","true","false","false","boolean","true","","","\android\widget\TextView.java"
"android.widget.TextView.mText","false","false","true","false","false","CharSequence","","@ViewDebug.ExportedProperty","","\android\widget\TextView.java"
"android.widget.CommitSelectionReceiver.mNewEnd","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mChangeWatcher","false","false","true","false","false","ChangeWatcher","","","","\android\widget\TextView.java"
"android.widget.TextView.ID_COPY","false","false","true","true","true","int","android.R.id.copy","","","\android\widget\TextView.java"
"android.widget.TextView.MESSAGE_START","false","false","true","true","true","int","0x1","","","\android\widget\TextView.java"
"android.widget.Marquee.mScroll","false","false","false","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.mRepeatLimit","false","false","true","false","false","int","","","","\android\widget\TextView.java"
"android.widget.InputContentType.imeActionId","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mShadowRadius","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.Marquee.mStatus","false","false","true","false","false","byte","MARQUEE_STOPPED","","","\android\widget\TextView.java"
"android.widget.TextView.mErrorWasChanged","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.text","false","false","false","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.CommitSelectionReceiver.mNewStart","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.Marquee.MARQUEE_RESOLUTION","false","false","true","true","true","int","1000 / 30","","","\android\widget\TextView.java"
"android.widget.TextView.mDrawableSizeTop","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.Marquee.mGhostOffset","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.mDrawablePadding","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.MARQUEE_RESOLUTION","false","false","true","true","true","int","1000 / 30","","","\android\widget\TextView.java"
"android.widget.TextView.mHighlightPath","false","false","true","false","false","Path","","","// tmp primitives, so we don't alloc them on each draw
","\android\widget\TextView.java"
"android.widget.TextView.mTemporaryDetach","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.mExtracting","false","false","false","false","false","ExtractedTextRequest","","","","\android\widget\TextView.java"
"android.widget.TextView.mPreDrawState","false","false","true","false","false","int","PREDRAW_NOT_REGISTERED","","","\android\widget\TextView.java"
"android.widget.TextView.VERY_WIDE","false","false","true","true","true","int","16384","","// XXX should be much larger
","\android\widget\TextView.java"
"android.widget.TextView.mFilters","false","false","true","false","false","InputFilter","NO_FILTERS","","","\android\widget\TextView.java"
"android.widget.SavedState.selStart","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.ID_SELECT_ALL","false","false","true","true","true","int","android.R.id.selectAll","","","\android\widget\TextView.java"
"android.widget.Marquee.mFadeStop","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.enterDown","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.Drawables.mDrawableTop","false","false","false","false","false","Drawable","","","","\android\widget\TextView.java"
"android.widget.TextView.MARQUEE_RESTART_DELAY","false","false","true","true","true","int","1200","","","\android\widget\TextView.java"
"android.widget.TextView.ANIMATED_SCROLL_GAP","false","false","true","true","true","int","250","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mExtracting","false","false","false","false","false","ExtractedTextRequest","","","","\android\widget\TextView.java"
"android.widget.TextView.mFrozenWithFocus","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.mFreezesText","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.MESSAGE_TICK","false","false","true","true","true","int","0x2","","","\android\widget\TextView.java"
"android.widget.TextView.mShowErrorAfterAttach","false","false","true","false","false","boolean","","","/**
 * This flag is set if the TextView tries to display an error before it
 * is attached to the window (so its position is still unknown).
 * It causes the error to be shown later, when onAttachedToWindow()
 * is called.
 */
","\android\widget\TextView.java"
"android.widget.TextView.EMS","false","false","true","true","true","int","LINES","","","\android\widget\TextView.java"
"android.widget.TextView.mMaxMode","false","false","true","false","false","int","LINES","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mChangedStart","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.Marquee.MARQUEE_DELTA_MAX","false","false","true","true","true","float","0.07f","","// TODO: Add an option to configure this
","\android\widget\TextView.java"
"android.widget.TextView.mGhostStart","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.Marquee.MESSAGE_START","false","false","true","true","true","int","0x1","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mCursorRectInWindow","false","false","false","false","false","Rect","new Rect()","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mTmpRectF","false","false","false","false","false","RectF","new RectF()","","","\android\widget\TextView.java"
"android.widget.TextView.mTmpRectF","false","false","false","false","false","RectF","new RectF()","","","\android\widget\TextView.java"
"android.widget.Marquee.mGhostStart","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.mChangedStart","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.MARQUEE_DELTA_MAX","false","false","true","true","true","float","0.07f","","// TODO: Add an option to configure this
","\android\widget\TextView.java"
"android.widget.TextView.ID_START_SELECTING_TEXT","false","false","true","true","true","int","android.R.id.startSelectingText","","","\android\widget\TextView.java"
"android.widget.TextView.error","false","false","false","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.Marquee.mMaxScroll","false","false","true","false","false","float","","","","\android\widget\TextView.java"
"android.widget.TextView.selStart","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mTmpOffset","false","false","false","false","false","float","new float[2]","","","\android\widget\TextView.java"
"android.widget.TextView.mMinWidthMode","false","false","true","false","false","int","PIXELS","","","\android\widget\TextView.java"
"android.widget.InputContentType.imeActionLabel","false","false","false","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.TextView.mBoring","false","false","true","false","false","BoringLayout.Metrics","","","","\android\widget\TextView.java"
"android.widget.TextView.mTextColor","false","false","true","false","false","ColorStateList","","","","\android\widget\TextView.java"
"android.widget.TextView.mIncludePad","false","false","true","false","false","boolean","true","","","\android\widget\TextView.java"
"android.widget.TextView.selEnd","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.InputContentType.enterDown","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.MARQUEE_RUNNING","false","false","true","true","true","byte","0x2","","","\android\widget\TextView.java"
"android.widget.TextView.mAutoLinkMask","false","false","true","false","false","int","","","","\android\widget\TextView.java"
"android.widget.InputContentType.onEditorActionListener","false","false","false","false","false","OnEditorActionListener","","","","\android\widget\TextView.java"
"android.widget.InputContentType.imeOptions","false","false","false","false","false","int","EditorInfo.IME_NULL","","","\android\widget\TextView.java"
"android.widget.TextView.mHintTextColor","false","false","true","false","false","ColorStateList","","","","\android\widget\TextView.java"
"android.widget.InputContentType.privateImeOptions","false","false","false","false","false","String","","","","\android\widget\TextView.java"
"android.widget.Marquee.MARQUEE_STOPPED","false","false","true","true","true","byte","0x0","","","\android\widget\TextView.java"
"android.widget.TextView.mHint","false","false","true","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.TextView.ID_SWITCH_INPUT_METHOD","false","false","true","true","true","int","android.R.id.switchInputMethod","","","\android\widget\TextView.java"
"android.widget.TextView.mDrawableWidthTop","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mMinWidth","false","false","true","false","false","int","0","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mSelectionModeChanged","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.MONOSPACE","false","false","true","true","true","int","3","","","\android\widget\TextView.java"
"android.widget.TextView.SANS","false","false","true","true","true","int","1","","// TODO: How can we get this from the XML instead of hardcoding it here?
","\android\widget\TextView.java"
"android.widget.TextView.mCancelled","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.SavedState.frozenWithFocus","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.mBatchEditNesting","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.Marquee.MARQUEE_RESTART_DELAY","false","false","true","true","true","int","1200","","","\android\widget\TextView.java"
"android.widget.TextView.mListeners","false","false","true","false","false","ArrayList<TextWatcher>","null","","","\android\widget\TextView.java"
"android.widget.TextView.mMinimum","false","false","true","false","false","int","0","","","\android\widget\TextView.java"
"android.widget.ChangeWatcher.mBeforeText","false","false","true","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.SavedState.error","false","false","false","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.TextView.mUserSetTextScaleX","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.Drawables.mDrawableWidthTop","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mCursorChanged","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mTmpOffset","false","false","false","false","false","float","new float[2]","","","\android\widget\TextView.java"
"android.widget.Drawables.mCompoundRect","false","false","false","false","true","Rect","new Rect()","","","\android\widget\TextView.java"
"android.widget.Marquee.mRepeatLimit","false","false","true","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mDesiredHeightAtMeasure","false","false","true","false","false","int","-1","","","\android\widget\TextView.java"
"android.widget.Marquee.MARQUEE_DELAY","false","false","true","true","true","int","1200","","","\android\widget\TextView.java"
"android.widget.TextView.PREDRAW_DONE","false","false","true","true","true","int","2","","","\android\widget\TextView.java"
"android.widget.TextView.PIXELS","false","false","true","true","true","int","2","","","\android\widget\TextView.java"
"android.widget.TextView.mContentChanged","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.CharWrapper.mChars","false","false","true","false","false","char","","","","\android\widget\TextView.java"
"android.widget.TextView.mTransformed","false","false","true","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.TextView.PRIORITY","false","false","true","true","false","int","100","","","\android\widget\TextView.java"
"android.widget.TextView.mSelectionModeChanged","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.mLastScroll","false","false","true","false","false","long","","","","\android\widget\TextView.java"
"android.widget.Marquee.mView","false","false","true","false","true","WeakReference<TextView>","","","","\android\widget\TextView.java"
"android.widget.TextView.mCursorChanged","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.mChars","false","false","true","false","false","char","","","","\android\widget\TextView.java"
"android.widget.TextView.mInputMethodState","false","false","false","false","false","InputMethodState","","","","\android\widget\TextView.java"
"android.widget.Marquee.MARQUEE_PIXELS_PER_SECOND","false","false","true","true","true","int","30","","","\android\widget\TextView.java"
"android.widget.TextView.mError","false","false","true","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.TextView.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mContentChanged","false","false","false","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.imeActionLabel","false","false","false","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.TextView.ID_CUT","false","false","true","true","true","int","android.R.id.cut","","","\android\widget\TextView.java"
"android.widget.TextView.imeActionId","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mLinkTextColor","false","false","true","false","false","ColorStateList","","","","\android\widget\TextView.java"
"android.widget.SavedState.text","false","false","false","false","false","CharSequence","","","","\android\widget\TextView.java"
"android.widget.TextView.mInputContentType","false","false","false","false","false","InputContentType","","","","\android\widget\TextView.java"
"android.widget.Blink.mCancelled","false","false","true","false","false","boolean","","","","\android\widget\TextView.java"
"android.widget.TextView.mHintBoring","false","false","true","false","false","BoringLayout.Metrics","","","","\android\widget\TextView.java"
"android.widget.InputMethodState.mBatchEditNesting","false","false","false","false","false","int","","","","\android\widget\TextView.java"
"android.widget.TextView.mScroller","false","false","true","false","false","Scroller","null","","","\android\widget\TextView.java"
"android.widget.TextView.PREDRAW_PENDING","false","false","true","true","true","int","1","","","\android\widget\TextView.java"
"android.widget.TextView.mEllipsize","false","false","true","false","false","TextUtils.TruncateAt","null","","","\android\widget\TextView.java"
"android.widget.TextView.mScrolled","false","false","true","false","false","boolean","false","","","\android\widget\TextView.java"
"android.widget.TextView.mInput","false","false","true","false","false","KeyListener","","","","\android\widget\TextView.java"
"android.widget.TextView.mDrawableTop","false","false","false","false","false","Drawable","","","","\android\widget\TextView.java"
"android.widget.TextView.extras","false","false","false","false","false","Bundle","","","","\android\widget\TextView.java"
"android.webkit.ViewManager.mWebView","false","false","true","false","true","WebView","","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.height","false","false","false","false","false","int","","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.width","false","false","false","false","false","int","","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.mHidden","false","false","true","false","false","boolean","","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.mReadyToDraw","false","false","true","false","false","boolean","","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.mView","false","false","false","false","false","View","","","// generic view to show
","\android\webkit\ViewManager.java"
"android.webkit.ChildView.y","false","false","false","false","false","int","","","","\android\webkit\ViewManager.java"
"android.webkit.ChildView.x","false","false","false","false","false","int","","","","\android\webkit\ViewManager.java"
"android.webkit.ChildView.mView","false","false","false","false","false","View","","","// generic view to show
","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.mZoomInProgress","false","false","true","false","false","boolean","false","","","\android\webkit\ViewManager.java"
"android.webkit.ChildView.height","false","false","false","false","false","int","","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.x","false","false","false","false","false","int","","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.y","false","false","false","false","false","int","","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.MAX_SURFACE_DIMENSION","false","false","true","true","true","int","2048","","// GPU Limit (hard coded for now)
","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.mChildren","false","false","true","false","true","ArrayList<ChildView>","new ArrayList<ChildView>()","","","\android\webkit\ViewManager.java"
"android.webkit.ViewManager.MAX_SURFACE_AREA","false","false","true","false","true","int","","","// Threshold at which a surface is prevented from further increasing in size
","\android\webkit\ViewManager.java"
"android.webkit.ChildView.width","false","false","false","false","false","int","","","","\android\webkit\ViewManager.java"
"android.widget.ExpandableListConnector.flPos","false","false","false","false","false","int","","","/**
 * This group's flat list position
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.PositionMetadata.position","true","false","false","false","false","ExpandableListPosition","","","/**
 * Data type to hold the position and its type (child/group)
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.position","true","false","false","false","false","ExpandableListPosition","","","/**
 * Data type to hold the position and its type (child/group)
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.lastChildFlPos","false","false","false","false","false","int","","","/**
 * This group's last child's flat list position, so basically
 * the range of this group in the flat list
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.GroupMetadata.CREATOR","true","false","false","true","true","Parcelable.Creator<GroupMetadata>","new Parcelable.Creator<GroupMetadata>() {

    public GroupMetadata createFromParcel(Parcel in) {
        GroupMetadata gm = GroupMetadata.obtain(in.readInt(), in.readInt(), in.readInt(), in.readLong());
        return gm;
    }

    public GroupMetadata[] newArray(int size) {
        return new GroupMetadata[size];
    }
}","","","\android\widget\ExpandableListConnector.java"
"android.widget.GroupMetadata.REFRESH","false","false","false","true","true","int","-1","","","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.mDataSetObserver","false","false","true","false","true","DataSetObserver","new MyDataSetObserver()","","/**
 * Change observer used to have ExpandableListAdapter changes pushed to us
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.MAX_POOL_SIZE","false","false","true","true","true","int","5","","","\android\widget\ExpandableListConnector.java"
"android.widget.GroupMetadata.lastChildFlPos","false","false","false","false","false","int","","","/**
 * This group's last child's flat list position, so basically
 * the range of this group in the flat list
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.GroupMetadata.gPos","false","false","false","false","false","int","","","/**
 * This group's group position
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.PositionMetadata.sPool","false","false","true","true","false","ArrayList<PositionMetadata>","new ArrayList<PositionMetadata>(MAX_POOL_SIZE)","","","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.groupInsertIndex","true","false","false","false","false","int","","","/**
 * For groups that are collapsed, we use this as the index (in
 * mExpGroupMetadataList) to insert this group when we are expanding
 * this group.
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.groupMetadata","true","false","false","false","false","GroupMetadata","","","/**
 * Link back to the expanded GroupMetadata for this group. Useful for
 * removing the group from the list of expanded groups inside the
 * connector when we collapse the group, and also as a check to see if
 * the group was expanded or collapsed (this will be null if the group
 * is collapsed since we don't keep that group's metadata)
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.mTotalExpChildrenCount","false","false","true","false","false","int","","","/**
 * The number of children from all currently expanded groups
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.PositionMetadata.groupMetadata","true","false","false","false","false","GroupMetadata","","","/**
 * Link back to the expanded GroupMetadata for this group. Useful for
 * removing the group from the list of expanded groups inside the
 * connector when we collapse the group, and also as a check to see if
 * the group was expanded or collapsed (this will be null if the group
 * is collapsed since we don't keep that group's metadata)
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.GroupMetadata.gId","false","false","false","false","false","long","","","/**
 * This group's id
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.CREATOR","true","false","false","true","true","Parcelable.Creator<GroupMetadata>","new Parcelable.Creator<GroupMetadata>() {

    public GroupMetadata createFromParcel(Parcel in) {
        GroupMetadata gm = GroupMetadata.obtain(in.readInt(), in.readInt(), in.readInt(), in.readLong());
        return gm;
    }

    public GroupMetadata[] newArray(int size) {
        return new GroupMetadata[size];
    }
}","","","\android\widget\ExpandableListConnector.java"
"android.widget.GroupMetadata.flPos","false","false","false","false","false","int","","","/**
 * This group's flat list position
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.PositionMetadata.MAX_POOL_SIZE","false","false","true","true","true","int","5","","","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.sPool","false","false","true","true","false","ArrayList<PositionMetadata>","new ArrayList<PositionMetadata>(MAX_POOL_SIZE)","","","\android\widget\ExpandableListConnector.java"
"android.widget.PositionMetadata.groupInsertIndex","true","false","false","false","false","int","","","/**
 * For groups that are collapsed, we use this as the index (in
 * mExpGroupMetadataList) to insert this group when we are expanding
 * this group.
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.mMaxExpGroupCount","false","false","true","false","false","int","Integer.MAX_VALUE","","/**
 * The maximum number of allowable expanded groups. Defaults to 'no limit'
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.gId","false","false","false","false","false","long","","","/**
 * This group's id
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.mExpGroupMetadataList","false","false","true","false","false","ArrayList<GroupMetadata>","","","/**
 * List of metadata for the currently expanded groups. The metadata consists
 * of data essential for efficiently translating between flat list positions
 * and group/child positions. See {@link GroupMetadata}.
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.REFRESH","false","false","false","true","true","int","-1","","","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.gPos","false","false","false","false","false","int","","","/**
 * This group's group position
 */
","\android\widget\ExpandableListConnector.java"
"android.widget.ExpandableListConnector.mExpandableListAdapter","false","false","true","false","false","ExpandableListAdapter","","","/**
 * The ExpandableListAdapter to fetch the data/Views for this expandable list
 */
","\android\widget\ExpandableListConnector.java"
"com.android.internal.os.ZygoteConnection.TAG","false","false","true","true","true","String","""Zygote""","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.classpath","false","false","false","false","false","String","","","/**
 * from --classpath
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.gidSpecified","false","false","false","false","false","boolean","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.sPeerWaitSocket","false","false","true","true","false","LocalSocket","null","","/**
 * A long-lived reference to the original command socket used to launch
 * this peer. If ""peer wait"" mode is specified, the process that requested
 * the new VM instance intends to track the lifetime of the spawned instance
 * via the command socket. In this case, the command socket is closed
 * in the Zygote and placed here in the spawned instance so that it will
 * not be collected and finalized. This field remains null at all times
 * in the original Zygote process, and in all spawned processes where
 * ""peer-wait"" mode was not requested.
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.gid","false","false","false","false","false","int","0","","/**
 * from --setgid
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.intArray2d","false","false","true","true","true","int","new int[0][0]","","/**
 * a prototype instance for a future List.toArray()
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.mSocket","false","false","true","false","true","LocalSocket","","","/**
 * The command socket.
 *
 * mSocket is retained in the child process in ""peer wait"" mode, so
 * that it closes when the child process terminates. In other cases,
 * it is closed in the peer.
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.CONNECTION_TIMEOUT_MILLIS","false","false","true","true","true","int","1000","","/**
 * {@link android.net.LocalSocket#setSoTimeout} value for connections.
 * Effectively, the amount of time a requestor has between the start of
 * the request and the completed request. The select-loop mode Zygote
 * doesn't have the logic to return to the select loop in the middle of
 * a request, so we need to time out here to avoid being denial-of-serviced.
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.peer","false","false","true","false","true","Credentials","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.effectiveCapabilities","false","false","false","false","false","long","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.debugFlags","false","false","false","false","false","int","","","/**
 * From --enable-debugger, --enable-checkjni, --enable-assert, and
 * --enable-safemode
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.remainingArgs","false","false","false","false","false","String","","","/**
 * Any args after and including the first non-option arg
 * (or after a '--')
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.gids","false","false","false","false","false","int","","","/**
 * from --setgroups
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.capabilitiesSpecified","false","false","false","false","false","boolean","","","/**
 * from --capabilities
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.uidSpecified","false","false","false","false","false","boolean","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.gids","false","false","false","false","false","int","","","/**
 * from --setgroups
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.runtimeInit","false","false","false","false","false","boolean","","","/**
 * from --runtime-init
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.runtimeInit","false","false","false","false","false","boolean","","","/**
 * from --runtime-init
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.permittedCapabilities","false","false","false","false","false","long","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.remainingArgs","false","false","false","false","false","String","","","/**
 * Any args after and including the first non-option arg
 * (or after a '--')
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.mSocketReader","false","false","true","false","true","BufferedReader","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.peerWait","false","false","false","false","false","boolean","","","/**
 * from --peer-wait
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.MAX_ZYGOTE_ARGC","false","false","true","true","true","int","1024","","/**
 * max number of arguments that a connection can specify
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.uid","false","false","false","false","false","int","0","","/**
 * from --setuid
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.classpath","false","false","false","false","false","String","","","/**
 * from --classpath
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.rlimits","false","false","false","false","false","ArrayList<int[]>","","","/**
 * from all --rlimit=r,c,m
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.capabilitiesSpecified","false","false","false","false","false","boolean","","","/**
 * from --capabilities
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.effectiveCapabilities","false","false","false","false","false","long","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.peerWait","false","false","false","false","false","boolean","","","/**
 * from --peer-wait
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.uid","false","false","false","false","false","int","0","","/**
 * from --setuid
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.uidSpecified","false","false","false","false","false","boolean","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.mSocketOutStream","false","false","true","false","true","DataOutputStream","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.gid","false","false","false","false","false","int","0","","/**
 * from --setgid
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.debugFlags","false","false","false","false","false","int","","","/**
 * From --enable-debugger, --enable-checkjni, --enable-assert, and
 * --enable-safemode
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.permittedCapabilities","false","false","false","false","false","long","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.ZygoteConnection.rlimits","false","false","false","false","false","ArrayList<int[]>","","","/**
 * from all --rlimit=r,c,m
 */
","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.os.Arguments.gidSpecified","false","false","false","false","false","boolean","","","","\com\android\internal\os\ZygoteConnection.java"
"com.android.internal.util.HsmHandler.mHaltingState","false","false","true","false","false","HaltingState","new HaltingState()","","/**
 * State used when state machine is halted
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mTempStateStack","false","false","true","false","false","StateInfo","","","/**
 * A temporary stack used to manage the state stack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mHsm","false","false","true","false","false","HierarchicalStateMachine","","","/**
 * Reference to the HierarchicalStateMachine
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mDbg","false","false","true","false","false","boolean","false","","/**
 * The debug flag
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mName","false","false","true","false","false","String","","","","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mProcessedMessages","false","false","true","false","false","ProcessedMessages","new ProcessedMessages()","","/**
 * A list of messages that this state machine has processed
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mQuitObj","false","false","true","true","true","Object","new Object()","","/**
 * The quit object
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mTempStateStackCount","false","false","true","false","false","int","","","/**
 * The top of the mTempStateStack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mTempStateStack","false","false","true","false","false","StateInfo","","","/**
 * A temporary stack used to manage the state stack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.TAG","false","false","true","true","true","String","""HierarchicalStateMachine""","","","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mIsConstructionCompleted","false","false","true","false","false","boolean","","","/**
 * true if construction of the state machine has not been completed
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mStateInfo","false","false","true","false","false","HashMap<HierarchicalState,StateInfo>","new HashMap<HierarchicalState, StateInfo>()","","/**
 * The map of all of the states in the state machine
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mProcessedMessages","false","false","true","false","false","ProcessedMessages","new ProcessedMessages()","","/**
 * A list of messages that this state machine has processed
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mTempStateStackCount","false","false","true","false","false","int","","","/**
 * The top of the mTempStateStack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mDestState","false","false","true","false","false","HierarchicalState","","","/**
 * The destination state when transitionTo has been invoked
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mHsmThread","false","false","true","false","false","HandlerThread","","","","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.active","false","false","false","false","false","boolean","","","/**
 * True when the state has been entered and on the stack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.StateInfo.parentStateInfo","false","false","false","false","false","StateInfo","","","/**
 * The parent of this state, null if there is no parent
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mStateInfo","false","false","true","false","false","HashMap<HierarchicalState,StateInfo>","new HashMap<HierarchicalState, StateInfo>()","","/**
 * The map of all of the states in the state machine
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mStateStackTopIndex","false","false","true","false","false","int","-1","","/**
 * Top of mStateStack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mQuitObj","false","false","true","true","true","Object","new Object()","","/**
 * The quit object
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.active","false","false","false","false","false","boolean","","","/**
 * True when the state has been entered and on the stack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mDbg","false","false","true","false","false","boolean","false","","/**
 * The debug flag
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.state","false","false","false","false","false","HierarchicalState","","","/**
 * The state
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mHsm","false","false","true","false","false","HierarchicalStateMachine","","","/**
 * Reference to the HierarchicalStateMachine
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mQuittingState","false","false","true","false","false","QuittingState","new QuittingState()","","/**
 * State used when state machine is quitting
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mInitialState","false","false","true","false","false","HierarchicalState","","","/**
 * The initial state that will process the first message
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.parentStateInfo","false","false","false","false","false","StateInfo","","","/**
 * The parent of this state, null if there is no parent
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mIsConstructionCompleted","false","false","true","false","false","boolean","","","/**
 * true if construction of the state machine has not been completed
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.StateInfo.state","false","false","false","false","false","HierarchicalState","","","/**
 * The state
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mStateStack","false","false","true","false","false","StateInfo","","","/**
 * Stack used to manage the current hierarchy of states
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.parentStateInfo","false","false","false","false","false","StateInfo","","","/**
 * The parent of this state, null if there is no parent
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mHaltingState","false","false","true","false","false","HaltingState","new HaltingState()","","/**
 * State used when state machine is halted
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mDeferredMessages","false","false","true","false","false","ArrayList<Message>","new ArrayList<Message>()","","/**
 * The list of deferred messages
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.HSM_QUIT_CMD","true","false","false","true","true","int","-1","","","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mInitialState","false","false","true","false","false","HierarchicalState","","","/**
 * The initial state that will process the first message
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HsmHandler.mQuittingState","false","false","true","false","false","QuittingState","new QuittingState()","","/**
 * State used when state machine is quitting
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mStateStack","false","false","true","false","false","StateInfo","","","/**
 * Stack used to manage the current hierarchy of states
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mStateStackTopIndex","false","false","true","false","false","int","-1","","/**
 * Top of mStateStack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.state","false","false","false","false","false","HierarchicalState","","","/**
 * The state
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mHsmHandler","false","false","true","false","false","HsmHandler","","","","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.StateInfo.active","false","false","false","false","false","boolean","","","/**
 * True when the state has been entered and on the stack
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mDeferredMessages","false","false","true","false","false","ArrayList<Message>","new ArrayList<Message>()","","/**
 * The list of deferred messages
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"com.android.internal.util.HierarchicalStateMachine.mDestState","false","false","true","false","false","HierarchicalState","","","/**
 * The destination state when transitionTo has been invoked
 */
","\com\android\internal\util\HierarchicalStateMachine.java"
"android.net.NetworkStateTracker.EVENT_RESTORE_DEFAULT_NETWORK","true","false","false","true","true","int","7","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mTeardownRequested","false","false","true","false","false","boolean","","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mDnsPropNames","false","true","false","false","false","String","","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.EVENT_CONFIGURATION_CHANGED","true","false","false","true","true","int","4","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mContext","false","true","false","false","false","Context","","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.EVENT_ROAMING_CHANGED","true","false","false","true","true","int","5","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mPrivateDnsRouteSet","false","false","true","false","false","boolean","","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.EVENT_NETWORK_SUBTYPE_CHANGED","true","false","false","true","true","int","6","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.EVENT_STATE_CHANGED","true","false","false","true","true","int","1","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.DBG","false","false","true","true","false","boolean","true","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.TAG","false","false","true","true","true","String","""NetworkStateTracker""","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mNetworkInfo","false","true","false","false","false","NetworkInfo","","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.EVENT_SCAN_RESULTS_AVAILABLE","true","false","false","true","true","int","2","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mDefaultGatewayAddr","false","true","false","false","false","int","","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mInterfaceName","false","true","false","false","false","String","","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mTarget","false","true","false","false","false","Handler","","","","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.EVENT_NOTIFICATION_CHANGED","true","false","false","true","true","int","3","","/**
 * arg1: 1 to show, 0 to hide
 * arg2: ID of the notification
 * obj: Notification (if showing)
 */
","\android\net\NetworkStateTracker.java"
"android.net.NetworkStateTracker.mDefaultRouteSet","false","false","true","false","false","boolean","","","","\android\net\NetworkStateTracker.java"
"android.content.UriMatcher.mText","false","false","true","false","false","String","","","","\android\content\UriMatcher.java"
"android.content.UriMatcher.mChildren","false","false","true","false","false","ArrayList<UriMatcher>","","","","\android\content\UriMatcher.java"
"android.content.UriMatcher.NO_MATCH","true","false","false","true","true","int","-1","","","\android\content\UriMatcher.java"
"android.content.UriMatcher.EXACT","false","false","true","true","true","int","0","","","\android\content\UriMatcher.java"
"android.content.UriMatcher.TEXT","false","false","true","true","true","int","2","","","\android\content\UriMatcher.java"
"android.content.UriMatcher.mCode","false","false","true","false","false","int","","","","\android\content\UriMatcher.java"
"android.content.UriMatcher.PATH_SPLIT_PATTERN","false","false","false","true","true","Pattern","Pattern.compile(""/"")","","","\android\content\UriMatcher.java"
"android.content.UriMatcher.mWhich","false","false","true","false","false","int","","","","\android\content\UriMatcher.java"
"android.content.UriMatcher.NUMBER","false","false","true","true","true","int","1","","","\android\content\UriMatcher.java"
"android.view.KeyEvent.CREATOR","true","false","false","true","true","Parcelable.Creator<KeyEvent>","new Parcelable.Creator<KeyEvent>() {

    public KeyEvent createFromParcel(Parcel in) {
        return new KeyEvent(in);
    }

    public KeyEvent[] newArray(int size) {
        return new KeyEvent[size];
    }
}","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.META_SHIFT_RIGHT_ON","true","false","false","true","true","int","0x80","","/**
 * <p>This mask is used to check whether the right SHIFT meta key is pressed.</p>
 *
 * @see #isShiftPressed()
 * @see #getMetaState()
 * @see #KEYCODE_SHIFT_RIGHT
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_APOSTROPHE","true","false","false","true","true","int","75","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mActiveLongPresses","false","false","false","false","false","SparseIntArray","new SparseIntArray()","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SEARCH","true","false","false","true","true","int","84","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.META_SHIFT_ON","true","false","false","true","true","int","0x1","","/**
 * <p>This mask is used to check whether one of the SHIFT meta keys is pressed.</p>
 *
 * @see #isShiftPressed()
 * @see #getMetaState()
 * @see #KEYCODE_SHIFT_LEFT
 * @see #KEYCODE_SHIFT_RIGHT
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_AT","true","false","false","true","true","int","77","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mKeyCode","false","false","true","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.META_ALT_RIGHT_ON","true","false","false","true","true","int","0x20","","/**
 * <p>This mask is used to check whether the right the ALT meta key is pressed.</p>
 *
 * @see #isAltPressed()
 * @see #getMetaState()
 * @see #KEYCODE_ALT_RIGHT
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_PLUS","true","false","false","true","true","int","81","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mEventTime","false","false","true","false","false","long","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_LONG_PRESS","true","false","false","true","true","int","0x80","","/**
 * This flag is set for the first key repeat that occurs after the
 * long press timeout.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_GRAVE","true","false","false","true","true","int","68","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mDownTarget","false","false","false","false","false","Object","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_FROM_SYSTEM","true","false","false","true","true","int","0x8","","/**
 * This mask is set if an event was known to come from a trusted part
 * of the system.  That is, the event is known to come from the user,
 * and could not have been spoofed by a third party component.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SOFT_RIGHT","true","false","false","true","true","int","2","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SYM","true","false","false","true","true","int","63","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_VIRTUAL_HARD_KEY","true","false","false","true","true","int","0x40","","/**
 * This key event was generated by a virtual (on-screen) hard key area.
 * Typically this is an area of the touchscreen, outside of the regular
 * display, dedicated to ""hardware"" buttons.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_POUND","true","false","false","true","true","int","18","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_VOLUME_DOWN","true","false","false","true","true","int","25","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_LEFT_BRACKET","true","false","false","true","true","int","71","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.TAG","false","false","false","true","true","String","""KeyEvent""","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_BACKSLASH","true","false","false","true","true","int","73","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.DEBUG","false","false","false","true","true","boolean","false","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_SOFT_KEYBOARD","true","false","false","true","true","int","0x2","","/**
 * This mask is set if the key event was generated by a software keyboard.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_CALL","true","false","false","true","true","int","5","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.META_SYM_ON","true","false","false","true","true","int","0x4","","/**
 * <p>This mask is used to check whether the SYM meta key is pressed.</p>
 *
 * @see #isSymPressed()
 * @see #getMetaState()
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_STAR","true","false","false","true","true","int","17","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.ACTION_DOWN","true","false","false","true","true","int","0","","/**
 * {@link #getAction} value: the key has been pressed down.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_DPAD_LEFT","true","false","false","true","true","int","21","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_ALT_LEFT","true","false","false","true","true","int","57","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_TRACKING","true","false","false","true","true","int","0x200","","/**
 * Set for {@link #ACTION_UP} when this event's key code is still being
 * tracked from its initial down.  That is, somebody requested that tracking
 * started on the key down and a long press has not caused
 * the tracking to be canceled.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_4","true","false","false","true","true","int","11","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_5","true","false","false","true","true","int","12","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_6","true","false","false","true","true","int","13","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_NOTIFICATION","true","false","false","true","true","int","83","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_7","true","false","false","true","true","int","14","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_8","true","false","false","true","true","int","15","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_9","true","false","false","true","true","int","16","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_0","true","false","false","true","true","int","7","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mAction","false","false","true","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_1","true","false","false","true","true","int","8","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_2","true","false","false","true","true","int","9","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_3","true","false","false","true","true","int","10","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_D","true","false","false","true","true","int","32","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_START_TRACKING","true","false","false","true","true","int","0x40000000","","/**
 * Private control to determine when an app is tracking a key sequence.
 * @hide
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_E","true","false","false","true","true","int","33","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MEDIA_REWIND","true","false","false","true","true","int","89","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_F","true","false","false","true","true","int","34","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_G","true","false","false","true","true","int","35","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_PERIOD","true","false","false","true","true","int","56","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_H","true","false","false","true","true","int","36","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_I","true","false","false","true","true","int","37","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_J","true","false","false","true","true","int","38","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_K","true","false","false","true","true","int","39","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_DPAD_DOWN","true","false","false","true","true","int","20","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.META_ALT_ON","true","false","false","true","true","int","0x02","","/**
 * <p>This mask is used to check whether one of the ALT meta keys is pressed.</p>
 *
 * @see #isAltPressed()
 * @see #getMetaState()
 * @see #KEYCODE_ALT_LEFT
 * @see #KEYCODE_ALT_RIGHT
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MUTE","true","false","false","true","true","int","91","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_A","true","false","false","true","true","int","29","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_B","true","false","false","true","true","int","30","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_C","true","false","false","true","true","int","31","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MEDIA_NEXT","true","false","false","true","true","int","87","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_T","true","false","false","true","true","int","48","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_U","true","false","false","true","true","int","49","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_V","true","false","false","true","true","int","50","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_W","true","false","false","true","true","int","51","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_X","true","false","false","true","true","int","52","","","\android\view\KeyEvent.java"
"android.view.DispatcherState.mDownTarget","false","false","false","false","false","Object","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_Y","true","false","false","true","true","int","53","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_Z","true","false","false","true","true","int","54","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_L","true","false","false","true","true","int","40","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_EQUALS","true","false","false","true","true","int","70","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_M","true","false","false","true","true","int","41","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_N","true","false","false","true","true","int","42","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_O","true","false","false","true","true","int","43","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_P","true","false","false","true","true","int","44","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_Q","true","false","false","true","true","int","45","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SPACE","true","false","false","true","true","int","62","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_R","true","false","false","true","true","int","46","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_S","true","false","false","true","true","int","47","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_POWER","true","false","false","true","true","int","26","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MEDIA_FAST_FORWARD","true","false","false","true","true","int","90","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SOFT_LEFT","true","false","false","true","true","int","1","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mDownTime","false","false","true","false","false","long","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SHIFT_RIGHT","true","false","false","true","true","int","60","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.META_ALT_LEFT_ON","true","false","false","true","true","int","0x10","","/**
 * <p>This mask is used to check whether the left ALT meta key is pressed.</p>
 *
 * @see #isAltPressed()
 * @see #getMetaState()
 * @see #KEYCODE_ALT_LEFT
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_EXPLORER","true","false","false","true","true","int","64","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_HOME","true","false","false","true","true","int","3","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.ACTION_MULTIPLE","true","false","false","true","true","int","2","","/**
 * {@link #getAction} value: multiple duplicate key events have
 * occurred in a row, or a complex string is being delivered.  If the
 * key code is not {#link {@link #KEYCODE_UNKNOWN} then the
 * {#link {@link #getRepeatCount()} method returns the number of times
 * the given key code should be executed.
 * Otherwise, if the key code {@link #KEYCODE_UNKNOWN}, then
 * this is a sequence of characters as returned by {@link #getCharacters}.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_WOKE_HERE","true","false","false","true","true","int","0x1","","/**
 * This mask is set if the device woke because of this key event.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE","true","false","false","true","true","int","85","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mMetaState","false","false","true","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_EDITOR_ACTION","true","false","false","true","true","int","0x10","","/**
 * This mask is used for compatibility, to identify enter keys that are
 * coming from an IME whose enter key has been auto-labelled ""next"" or
 * ""done"".  This allows TextView to dispatch these as normal enter keys
 * for old applications, but still do the appropriate action when
 * receiving them.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SHIFT_LEFT","true","false","false","true","true","int","59","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_VOLUME_UP","true","false","false","true","true","int","24","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_CAMERA","true","false","false","true","true","int","27","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_DEL","true","false","false","true","true","int","67","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_BACK","true","false","false","true","true","int","4","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_RIGHT_BRACKET","true","false","false","true","true","int","72","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SLASH","true","false","false","true","true","int","76","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_CLEAR","true","false","false","true","true","int","28","","","\android\view\KeyEvent.java"
"android.view.DispatcherState.mActiveLongPresses","false","false","false","false","false","SparseIntArray","new SparseIntArray()","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_DPAD_CENTER","true","false","false","true","true","int","23","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_ENVELOPE","true","false","false","true","true","int","65","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_UNKNOWN","true","false","false","true","true","int","0","","// key codes
","\android\view\KeyEvent.java"
"android.view.KeyEvent.mDeviceId","false","false","true","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mCharacters","false","false","true","false","false","String","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_CANCELED","true","false","false","true","true","int","0x20","","/**
 * When associated with up key events, this indicates that the key press
 * has been canceled.  Typically this is used with virtual touch screen
 * keys, where the user can slide from the virtual key area on to the
 * display: in that case, the application will receive a canceled up
 * event and should not perform the action normally associated with the
 * key.  Note that for this to work, the application can not perform an
 * action for a key until it receives an up or the long press timeout has
 * expired.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.mRepeatCount","false","false","true","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.DispatcherState.mDownKeyCode","false","false","false","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MENU","true","false","false","true","true","int","82","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MINUS","true","false","false","true","true","int","69","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MEDIA_PREVIOUS","true","false","false","true","true","int","88","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mFlags","false","false","true","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.LAST_KEYCODE","false","false","true","true","true","int","KEYCODE_MUTE","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_DPAD_RIGHT","true","false","false","true","true","int","22","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_TAB","true","false","false","true","true","int","61","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mScancode","false","false","true","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.META_SHIFT_LEFT_ON","true","false","false","true","true","int","0x40","","/**
 * <p>This mask is used to check whether the left SHIFT meta key is pressed.</p>
 *
 * @see #isShiftPressed()
 * @see #getMetaState()
 * @see #KEYCODE_SHIFT_LEFT
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_NUM","true","false","false","true","true","int","78","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_SEMICOLON","true","false","false","true","true","int","74","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_CANCELED_LONG_PRESS","true","false","false","true","true","int","0x100","","/**
 * Set when a key event has {@link #FLAG_CANCELED} set because a long
 * press action was executed while it was down.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_FOCUS","true","false","false","true","true","int","80","","// *Camera* focus
","\android\view\KeyEvent.java"
"android.view.KeyEvent.ACTION_UP","true","false","false","true","true","int","1","","/**
 * {@link #getAction} value: the key has been released.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.MAX_KEYCODE","true","false","false","true","true","int","84","@Deprecated","/**
 * @deprecated There are now more than MAX_KEYCODE keycodes.
 * Use {@link #getMaxKeyCode()} instead.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_ENTER","true","false","false","true","true","int","66","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_ALT_RIGHT","true","false","false","true","true","int","58","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_HEADSETHOOK","true","false","false","true","true","int","79","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_MEDIA_STOP","true","false","false","true","true","int","86","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.mDownKeyCode","false","false","false","false","false","int","","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_ENDCALL","true","false","false","true","true","int","6","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_COMMA","true","false","false","true","true","int","55","","","\android\view\KeyEvent.java"
"android.view.KeyEvent.FLAG_KEEP_TOUCH_MODE","true","false","false","true","true","int","0x4","","/**
 * This mask is set if we don't want the key event to cause us to leave
 * touch mode.
 */
","\android\view\KeyEvent.java"
"android.view.KeyEvent.KEYCODE_DPAD_UP","true","false","false","true","true","int","19","","","\android\view\KeyEvent.java"
"android.service.urlrenderer.UrlRenderer.mCallback","false","false","true","false","true","Callback","","","","\android\service\urlrenderer\UrlRenderer.java"
"android.service.urlrenderer.InternalCallback.mCallback","false","false","true","false","true","Callback","","","","\android\service\urlrenderer\UrlRenderer.java"
"android.service.urlrenderer.UrlRenderer.mService","false","false","true","false","false","IUrlRendererService","","","","\android\service\urlrenderer\UrlRenderer.java"
"android.app.CrashInfo.throwClassName","true","false","false","false","false","String","","","/**
 * Class which the exception was thrown from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.TYPE_BATTERY","true","false","false","true","true","int","3","","/**
 * An error report about an application that's consuming too much battery.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.AnrInfo.info","true","false","false","false","false","String","","","/**
 * Additional info, including CPU stats.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.CrashInfo.throwMethodName","true","false","false","false","false","String","","","/**
 * Method which the exception was thrown from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.durationMicros","true","false","false","false","false","long","","","/**
 * Duration in microseconds over which the process used the above
 * percentage of battery.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.installerPackageName","true","false","false","false","false","String","","","/**
 * Package name of the application which installed the application this
 * report pertains to.
 * This identifies which Market the application came from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.checkinDetails","true","false","false","false","false","String","","","/**
 * Checkin details.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.usageDetails","true","false","false","false","false","String","","","/**
 * Dump of various info impacting battery use.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.CREATOR","true","false","false","true","true","Parcelable.Creator<ApplicationErrorReport>","new Parcelable.Creator<ApplicationErrorReport>() {

    public ApplicationErrorReport createFromParcel(Parcel source) {
        return new ApplicationErrorReport(source);
    }

    public ApplicationErrorReport[] newArray(int size) {
        return new ApplicationErrorReport[size];
    }
}","","","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.activity","true","false","false","false","false","String","","","/**
 * Activity name.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.throwFileName","true","false","false","false","false","String","","","/**
 * File which the exception was thrown from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.SYSTEM_APPS_ERROR_RECEIVER_PROPERTY","false","false","false","true","true","String","""ro.error.receiver.system.apps""","","// System property defining error report receiver for system apps
","\android\app\ApplicationErrorReport.java"
"android.app.CrashInfo.exceptionClassName","true","false","false","false","false","String","","","/**
 * Class name of the exception that caused the crash.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.packageName","true","false","false","false","false","String","","","/**
 * Package name of the application.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.throwMethodName","true","false","false","false","false","String","","","/**
 * Method which the exception was thrown from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.TYPE_ANR","true","false","false","true","true","int","2","","/**
 * An error report about an application that's not responding.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.processName","true","false","false","false","false","String","","","/**
 * Process name of the application.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.time","true","false","false","false","false","long","","","/**
 * Time at which the error occurred.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.exceptionMessage","true","false","false","false","false","String","","","/**
 * Message stored in the exception.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.BatteryInfo.usageDetails","true","false","false","false","false","String","","","/**
 * Dump of various info impacting battery use.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.info","true","false","false","false","false","String","","","/**
 * Additional info, including CPU stats.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.TYPE_CRASH","true","false","false","true","true","int","1","","/**
 * An error report about an application crash.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.usagePercent","true","false","false","false","false","int","","","/**
 * Percentage of the battery that was used up by the process.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.anrInfo","true","false","false","false","false","AnrInfo","","","/**
 * If this report is of type {@link #TYPE_ANR}, contains an instance
 * of AnrInfo describing the ANR; otherwise null.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.TYPE_NONE","true","false","false","true","true","int","0","","/**
 * Uninitialized error report.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.DEFAULT_ERROR_RECEIVER_PROPERTY","false","false","false","true","true","String","""ro.error.receiver.default""","","// System property defining default error report receiver
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.stackTrace","true","false","false","false","false","String","","","/**
 * Stack trace.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.BatteryInfo.checkinDetails","true","false","false","false","false","String","","","/**
 * Checkin details.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.systemApp","true","false","false","false","false","boolean","","","/**
 * Set if the app is on the system image.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.BatteryInfo.durationMicros","true","false","false","false","false","long","","","/**
 * Duration in microseconds over which the process used the above
 * percentage of battery.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.type","true","false","false","false","false","int","","","/**
 * Type of this report. Can be one of {@link #TYPE_NONE},
 * {@link #TYPE_CRASH}, {@link #TYPE_ANR}, or {@link #TYPE_BATTERY}.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.CrashInfo.throwFileName","true","false","false","false","false","String","","","/**
 * File which the exception was thrown from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.exceptionClassName","true","false","false","false","false","String","","","/**
 * Class name of the exception that caused the crash.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.AnrInfo.activity","true","false","false","false","false","String","","","/**
 * Activity name.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.crashInfo","true","false","false","false","false","CrashInfo","","","/**
 * If this report is of type {@link #TYPE_CRASH}, contains an instance
 * of CrashInfo describing the crash; otherwise null.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.throwLineNumber","true","false","false","false","false","int","","","/**
 * Line number the exception was thrown from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.BatteryInfo.usagePercent","true","false","false","false","false","int","","","/**
 * Percentage of the battery that was used up by the process.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.throwClassName","true","false","false","false","false","String","","","/**
 * Class which the exception was thrown from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.CrashInfo.exceptionMessage","true","false","false","false","false","String","","","/**
 * Message stored in the exception.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.CrashInfo.stackTrace","true","false","false","false","false","String","","","/**
 * Stack trace.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.CrashInfo.throwLineNumber","true","false","false","false","false","int","","","/**
 * Line number the exception was thrown from.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.AnrInfo.cause","true","false","false","false","false","String","","","/**
 * Description of the operation that timed out.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.cause","true","false","false","false","false","String","","","/**
 * Description of the operation that timed out.
 */
","\android\app\ApplicationErrorReport.java"
"android.app.ApplicationErrorReport.batteryInfo","true","false","false","false","false","BatteryInfo","","","/**
 * If this report is of type {@link #TYPE_BATTERY}, contains an instance
 * of BatteryInfo; otherwise null.
 */
","\android\app\ApplicationErrorReport.java"
"android.accounts.GrantCredentialsPermissionActivity.mInflater","false","true","false","false","false","LayoutInflater","","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.EXTRAS_RESPONSE","true","false","false","true","true","String","""response""","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.EXTRAS_REQUESTING_UID","true","false","false","true","true","String","""uid""","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.EXTRAS_AUTH_TOKEN_LABEL","true","false","false","true","true","String","""authTokenLabel""","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.mAccount","false","false","true","false","false","Account","","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.mAuthTokenType","false","false","true","false","false","String","","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.mUid","false","false","true","false","false","int","","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.EXTRAS_ACCOUNT","true","false","false","true","true","String","""account""","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.EXTRAS_PACKAGES","true","false","false","true","true","String","""application""","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.EXTRAS_ACCOUNT_TYPE_LABEL","true","false","false","true","true","String","""accountTypeLabel""","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.mResultBundle","false","false","true","false","false","Bundle","null","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.accounts.GrantCredentialsPermissionActivity.EXTRAS_AUTH_TOKEN_TYPE","true","false","false","true","true","String","""authTokenType""","","","\android\accounts\GrantCredentialsPermissionActivity.java"
"android.gesture.Learner.mInstances","false","false","true","false","true","ArrayList<Instance>","new ArrayList<Instance>()","","","\android\gesture\Learner.java"
"com.android.internal.os.Uid.mLoadedWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device loaded from a
 * previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTotalDataRx","false","false","true","false","false","long","new long[4]","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiRunningTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mRunning","false","false","false","false","false","boolean","","","/**
 * True if we are currently running.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started as of the last run (ms
 * in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLastSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time loaded from the previous run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUnpluggedForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time since unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mSystemTime","false","false","false","false","false","long","","","/**
 * Total time (in 1/100 sec) spent executing in kernel code.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mScreenBrightnessBin","false","false","false","false","false","int","-1","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPhoneDataConnectionType","false","false","false","false","false","int","-1","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mRunningSince","false","false","false","false","false","long","","","/**
 * If service has been started and not yet stopped, this is
 * when it was started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mRadioDataUptime","false","false","true","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiTurnedOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLaunched","false","false","false","false","false","boolean","","","/**
 * True if we are currently launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUidCache","false","false","true","false","false","HashMap<String,Integer>","new HashMap<String, Integer>()","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mFullWifiLockOut","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLaunchedTime","false","false","false","false","false","long","","","/**
 * Total time (ms in battery uptime) the service has been left launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mScanWifiLockOut","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPhoneOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mRunning","false","false","false","false","false","boolean","","","/**
 * True if we are currently running.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.StopwatchTimer.mUpdateTime","false","false","false","false","false","long","","","/**
 * The last time at which we updated the timer.  If mNesting is > 0,
 * subtract this from the current battery time to find the amount of
 * time we have been running since we last computed an update.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWindowTimers","false","false","false","false","true","ArrayList<StopwatchTimer>","new ArrayList<StopwatchTimer>()","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.SamplingTimer.mUpdateVersion","false","false","false","false","false","int","","","/*
         * A sequnce counter, incremented once for each update of the stats.
         */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.VERSION","false","false","true","true","true","int","43","","// Current on-disk Parcel version
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastWriteTime","false","false","false","false","false","long","0","","// Milliseconds
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mStartedTcpBytesReceived","false","false","false","false","false","long","-1","","// to return from the parcel with a snapshot of the state.
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mServiceStats","false","false","false","false","true","HashMap<String,Serv>","new HashMap<String, Serv>()","","/**
 * The statics we have collected for this package's services.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUptime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mVideoTurnedOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mWifiMulticastTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mAudioTurnedOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mTimerFull","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has been keeping the device fully awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTcpBytesSentAtLastUnplug","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLoadedSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mProcessStats","false","false","false","false","true","HashMap<String,Proc>","new HashMap<String, Proc>()","","/**
 * The statistics we have collected for this uid's processes.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mLastUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time loaded from the previous run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started loaded from a previous save
 * (ms in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUnpluggedLaunches","false","false","false","false","false","int","","","/**
 * The number of launches when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLastStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started as of the last run (ms
 * in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Counter.mLastCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mDischargeCurrentLevel","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLoadedForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLoadedLaunches","false","false","false","false","false","int","","","/**
 * The number of launches loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLoadedTcpBytesReceived","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUpdateVersion","false","false","false","false","false","int","","","/*
         * A sequnce counter, incremented once for each update of the stats.
         */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBluetoothPingCount","false","false","true","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mSensorStats","false","false","false","false","true","HashMap<Integer,Sensor>","new HashMap<Integer, Sensor>()","","/**
 * The statistics we have collected for this uid's sensor activations.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mLoadedTime","false","false","false","false","false","long","","","/**
 * The total time we loaded for the previous runs.  Subtract this from
 * mTotalTime to find the time for the current run of the system.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mCurrentTcpBytesReceived","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Sensor.mTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device as of the
 * last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLoadedStarts","false","false","false","false","false","int","","","/**
 * The number of starts loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mScreenOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Wakelock.mTimerFull","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has been keeping the device fully awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mLoadedForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mStarts","false","false","false","false","false","int","","","/**
 * Total number of times startService() has been called.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mUnpluggedCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mLastTime","false","false","false","false","false","long","","","/**
 * The run time of the last run of the system, as loaded from the
 * saved data.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mProcessStats","false","false","false","false","true","HashMap<String,Proc>","new HashMap<String, Proc>()","","/**
 * The statistics we have collected for this uid's processes.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBluetoothPingStart","false","false","true","false","false","int","-1","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time loaded from the previous run
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLastStarts","false","false","false","false","false","int","","","/**
 * The number of starts as of the last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTrackBatteryPastUptime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBatteryLastRealtime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mUnpluggedLaunches","false","false","false","false","false","int","","","/**
 * The number of launches when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mInputEventCounter","false","false","false","false","false","Counter","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.KernelWakelockStats.mVersion","true","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLaunchedTime","false","false","false","false","false","long","","","/**
 * Total time (ms in battery uptime) the service has been left launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.TAG","false","false","true","true","true","String","""BatteryStatsImpl""","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mTimerPartial","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has been keeping the device partially awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mInDischarge","false","false","false","false","false","boolean","","","/**
 * Whether we are currently in a discharge cycle.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mStarts","false","false","false","false","false","int","","","/**
 * Total number of times startService() has been called.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mScanWifiLockTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTimerFull","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has been keeping the device fully awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLoadedWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device loaded from a
 * previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLastForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time loaded from the previous run
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mUnpluggedStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started when last unplugged (ms
 * in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLastStarts","false","false","false","false","false","int","","","/**
 * The number of starts as of the last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mWakelockStats","false","false","false","false","true","HashMap<String,Wakelock>","new HashMap<String, Wakelock>()","","/**
 * The statistics we have collected for this uid's wake locks.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUpdateTime","false","false","false","false","false","long","","","/**
 * The last time at which we updated the timer.  If mNesting is > 0,
 * subtract this from the current battery time to find the amount of
 * time we have been running since we last computed an update.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTcpBytesReceivedAtLastUnplug","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.MAGIC","false","false","true","true","true","int","0xBA757475","","// 'BATSTATS'
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLastLaunches","false","false","false","false","false","int","","","/**
 * The number of launches as of the last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUserActivityCounters","false","false","false","false","false","Counter","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mUnpluggedLaunches","false","false","false","false","false","int","","","/**
 * The number of launches when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mType","false","false","false","false","true","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mSpeedBins","false","false","false","false","false","SamplingCounter","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBatteryLastUptime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLastLaunches","false","false","false","false","false","int","","","/**
 * The number of launches as of the last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mRunning","false","false","false","false","false","boolean","","","/**
 * True if we are currently running.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedReportedTotalTime","false","false","false","false","false","long","","","/**
 * The reported total_time from /proc/wakelocks when unplug() was last
 * called.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mVideoTurnedOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastStarts","false","false","false","false","false","int","","","/**
 * The number of starts as of the last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mSensorStats","false","false","false","false","true","HashMap<Integer,Sensor>","new HashMap<Integer, Sensor>()","","/**
 * The statistics we have collected for this uid's sensor activations.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.SamplingTimer.mTrackingReportedValues","false","false","false","false","false","boolean","","","/**
 * Whether we are currently recording reported values.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Sensor.mHandle","false","false","false","false","true","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mLastSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time loaded from the previous run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.MAX_WAKELOCKS_PER_UID","false","false","true","true","true","int","20","","// in to one common name.
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device loaded from a
 * previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedBatteryRealtime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLaunchedSince","false","false","false","false","false","long","","","/**
 * If service has been launched and not yet exited, this is
 * when it was launched (ms in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastLaunches","false","false","false","false","false","int","","","/**
 * The number of launches as of the last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.DEBUG","false","false","true","true","true","boolean","false","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mTimerWindow","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has had a window keeping the device awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLaunchedSince","false","false","false","false","false","long","","","/**
 * If service has been launched and not yet exited, this is
 * when it was launched (ms in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mMobileDataTx","false","false","true","false","false","long","new long[4]","","// Mobile data transferred while on battery
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mProcWakelocksName","false","false","true","false","true","String","new String[3]","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mStartedTcpBytesSent","false","false","false","false","false","long","-1","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggables","false","false","false","false","true","ArrayList<Unpluggable>","new ArrayList<Unpluggable>()","","// is unplugged from power.
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.StopwatchTimer.mTimerPool","false","false","false","false","true","ArrayList<StopwatchTimer>","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mCurrentTcpBytesSent","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mFullWifiLockTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTimeout","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Wakelock.mTimerWindow","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has had a window keeping the device awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mFullWifiLockTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mUnpluggedStarts","false","false","false","false","false","int","","","/**
 * The number of times the process has started before unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mFile","false","false","true","false","true","JournaledFile","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mServiceStats","false","false","false","false","true","HashMap<String,Serv>","new HashMap<String, Serv>()","","/**
 * The statics we have collected for this package's services.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLoadedStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started loaded from a previous save
 * (ms in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mRunningSince","false","false","false","false","false","long","","","/**
 * If service has been started and not yet stopped, this is
 * when it was started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUptimeStart","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTotalDataTx","false","false","true","false","false","long","new long[4]","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mSystemTime","false","false","false","false","false","long","","","/**
 * Total time (in 1/100 sec) spent executing in kernel code.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mUnpluggedUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mProcWakelockFileStats","false","false","true","false","true","Map<String,KernelWakelockStats>","new HashMap<String, KernelWakelockStats>()","","/*
     * Used as a buffer for reading in data from /proc/wakelocks before it is processed and added
     * to mKernelWakelockStats.
     */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mLoadedUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Counter.mLoadedCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mScreenOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTrackingReportedValues","false","false","false","false","false","boolean","","","/**
 * Whether we are currently recording reported values.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mForegroundTime","false","false","false","false","false","long","","","/**
 * Amount of time the process was running in the foreground.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mStartTime","false","false","false","false","false","long","","","/**
 * Total time (ms in battery uptime) the service has been left started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiRunning","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastRealtime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBluetoothOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPhoneDataConnectionsTimer","false","false","false","false","true","StopwatchTimer","new StopwatchTimer[NUM_DATA_CONNECTION_TYPES]","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mUnpluggedStarts","false","false","false","false","false","int","","","/**
 * The number of starts when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedLaunches","false","false","false","false","false","int","","","/**
 * The number of launches loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mLastCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mUnpluggedTime","false","false","false","false","false","long","","","/**
 * The value of mTotalTime when unplug() was last called.  Subtract
 * this from mTotalTime to find the time since the last unplug from
 * power.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mAudioOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLastStarts","false","false","false","false","false","int","","","/**
 * The number of starts as of the last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Wakelock.mTimerPartial","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has been keeping the device partially awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mRunning","false","false","false","false","false","boolean","","","/**
 * True if we are currently running.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLoadedUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mVideoOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.PROC_WAKELOCKS_FORMAT","false","false","true","true","true","int","new int[] { // 0: name
Process.PROC_TAB_TERM | Process.PROC_OUT_STRING, // 1: count
Process.PROC_TAB_TERM | Process.PROC_OUT_LONG, Process.PROC_TAB_TERM, Process.PROC_TAB_TERM, Process.PROC_TAB_TERM, // 5: totalTime
Process.PROC_TAB_TERM | Process.PROC_OUT_LONG }","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mTcpBytesReceivedAtLastUnplug","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLastStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started as of the last run (ms
 * in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.sKernelWakelockUpdateVersion","false","false","true","true","false","int","0","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLastStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started as of the last run (ms
 * in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mCount","true","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mScanWifiLockOut","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mOnBattery","false","false","false","false","false","boolean","","","/**
 * These provide time bases that discount the time the device is plugged
 * in to power.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mMobileDataRx","false","false","true","false","false","long","new long[4]","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mLoadedCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.SamplingTimer.mUnpluggedReportedTotalTime","false","false","false","false","false","long","","","/**
 * The reported total_time from /proc/wakelocks when unplug() was last
 * called.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mVideoOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUserActivityCounters","false","false","false","false","false","Counter","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUnpluggedSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastUptime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPhoneSignalStrengthBin","false","false","false","false","false","int","-1","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLastUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time loaded from the previous run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mLoadedSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLastWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device as of the
 * last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mSystemTime","false","false","false","false","false","long","","","/**
 * Total time (in 1/100 sec) spent executing in kernel code.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLoadedLaunches","false","false","false","false","false","int","","","/**
 * The number of launches loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTrackBatteryUptimeStart","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mSpeedBins","false","false","false","false","false","SamplingCounter","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLaunchedSince","false","false","false","false","false","long","","","/**
 * If service has been launched and not yet exited, this is
 * when it was launched (ms in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPhoneOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mStartedTcpBytesReceived","false","false","false","false","false","long","-1","","// to return from the parcel with a snapshot of the state.
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWakeups","false","false","false","false","false","int","","","/**
 * Number of times this package has done something that could wake up the
 * device from sleep.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBluetoothOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUnpluggedWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device as of the
 * last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedStarts","false","false","false","false","false","int","","","/**
 * The number of starts loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLaunchedSince","false","false","false","false","false","long","","","/**
 * If service has been launched and not yet exited, this is
 * when it was launched (ms in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWakelockStats","false","false","false","false","true","HashMap<String,Wakelock>","new HashMap<String, Wakelock>()","","/**
 * The statistics we have collected for this uid's wake locks.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLoadedStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started loaded from a previous save
 * (ms in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mWakeups","false","false","false","false","false","int","","","/**
 * Number of times this package has done something that could wake up the
 * device from sleep.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mWifiTurnedOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLaunched","false","false","false","false","false","boolean","","","/**
 * True if we are currently launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mCurrentReportedTotalTime","false","false","false","false","false","long","","","/**
 * The most recent reported total_time from /proc/wakelocks.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.CREATOR","true","false","false","true","true","Parcelable.Creator<BatteryStatsImpl>","new Parcelable.Creator<BatteryStatsImpl>() {

    public BatteryStatsImpl createFromParcel(Parcel in) {
        return new BatteryStatsImpl(in);
    }

    public BatteryStatsImpl[] newArray(int size) {
        return new BatteryStatsImpl[size];
    }
}","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mHandle","false","false","false","false","true","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mStartTime","false","false","false","false","false","long","","","/**
 * Total time (ms in battery uptime) the service has been left started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mForegroundTime","false","false","false","false","false","long","","","/**
 * Amount of time the process was running in the foreground.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mAudioTurnedOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.KernelWakelockStats.mCount","true","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mRunningSince","false","false","false","false","false","long","","","/**
 * If service has been started and not yet stopped, this is
 * when it was started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.StopwatchTimer.mTimeout","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBatteryUptime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time since unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mFullTimers","false","false","false","false","true","ArrayList<StopwatchTimer>","new ArrayList<StopwatchTimer>()","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.KernelWakelockStats.mTotalTime","true","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLoadedStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started loaded from a previous save
 * (ms in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUserTime","false","false","false","false","false","long","","","/**
 * Total time (in 1/100 sec) spent executing in user code.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mStarts","false","false","false","false","false","int","","","/**
 * Total number of times startService() has been called.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedReportedCount","false","false","false","false","false","int","","","/**
 * The reported count from /proc/wakelocks when unplug() was last
 * called.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mStartTime","false","false","false","false","false","long","","","/**
 * Total time (ms in battery uptime) the service has been left started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLaunchedTime","false","false","false","false","false","long","","","/**
 * Total time (ms in battery uptime) the service has been left launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mFullWifiLockOut","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLaunches","false","false","false","false","false","int","","","/**
 * Total number times the service has been launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mSensorTimers","false","false","false","false","true","SparseArray<ArrayList<StopwatchTimer>>","new SparseArray<ArrayList<StopwatchTimer>>()","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastTime","false","false","false","false","false","long","","","/**
 * The run time of the last run of the system, as loaded from the
 * saved data.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mSpeedBins","false","false","false","false","false","SamplingCounter","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time loaded from the previous run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLoadedStarts","false","false","false","false","false","int","","","/**
 * The number of starts loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mProcWakelocksData","false","false","true","false","true","long","new long[3]","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mWakeups","false","false","false","false","false","int","","","/**
 * Number of times this package has done something that could wake up the
 * device from sleep.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLoadedStarts","false","false","false","false","false","int","","","/**
 * The number of starts loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mScreenBrightnessTimer","false","false","false","false","true","StopwatchTimer","new StopwatchTimer[NUM_SCREEN_BRIGHTNESS_BINS]","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPartialTimers","false","false","false","false","true","ArrayList<StopwatchTimer>","new ArrayList<StopwatchTimer>()","","// changes.
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mPackageStats","false","false","false","false","true","HashMap<String,Pkg>","new HashMap<String, Pkg>()","","/**
 * The statistics we have collected for this uid's processes.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiOnUid","false","false","false","false","false","int","-1","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUid","false","false","false","false","true","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedTime","false","false","false","false","false","long","","","/**
 * The total time we loaded for the previous runs.  Subtract this from
 * mTotalTime to find the time for the current run of the system.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLaunched","false","false","false","false","false","boolean","","","/**
 * True if we are currently launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPhoneSignalScanningTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBtHeadset","false","false","false","false","false","BluetoothHeadset","","","/**
 * Bluetooth headset object
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTrackBatteryRealtimeStart","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mRealtimeStart","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedLaunches","false","false","false","false","false","int","","","/**
 * The number of launches when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mStartTime","false","false","false","false","false","long","","","/**
 * Total time (ms in battery uptime) the service has been left started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mNesting","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mUnpluggedStarts","false","false","false","false","false","int","","","/**
 * The number of starts when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiTurnedOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mHandle","false","false","false","false","true","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUnpluggedStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started when last unplugged (ms
 * in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.BATCHED_WAKELOCK_NAME","false","false","true","true","true","String","""*overflow*""","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiMulticastEnabled","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Counter.mPluggedCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mStartCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedTime","false","false","false","false","false","long","","","/**
 * The value of mTotalTime when unplug() was last called.  Subtract
 * this from mTotalTime to find the time since the last unplug from
 * power.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTimerWindow","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has had a window keeping the device awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mAudioOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mOnBatteryInternal","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mServiceStats","false","false","false","false","true","HashMap<String,Serv>","new HashMap<String, Serv>()","","/**
 * The statics we have collected for this package's services.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUserTime","false","false","false","false","false","long","","","/**
 * Total time (in 1/100 sec) spent executing in user code.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mForegroundTime","false","false","false","false","false","long","","","/**
 * Amount of time the process was running in the foreground.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mUserTime","false","false","false","false","false","long","","","/**
 * Total time (in 1/100 sec) spent executing in user code.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mCurrentTcpBytesReceived","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mTcpBytesSentAtLastUnplug","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLastWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device as of the
 * last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUnpluggedUserTime","false","false","false","false","false","long","","","/**
 * The amount of user time when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mStarts","false","false","false","false","false","int","","","/**
 * Total number of times startService() has been called.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTotalTime","true","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mCurrentReportedCount","false","false","false","false","false","int","","","/**
 * The most recent reported count from /proc/wakelocks.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mWifiMulticastEnabled","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mUnpluggedForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time since unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mLoadedStarts","false","false","false","false","false","int","","","/**
 * The number of times the process has started from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mAcquireTime","false","false","false","false","false","long","","","/**
 * The total time at which the timer was acquired, to determine if
 * was actually held for an interesting duration.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.StopwatchTimer.mAcquireTime","false","false","false","false","false","long","","","/**
 * The total time at which the timer was acquired, to determine if
 * was actually held for an interesting duration.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.SamplingTimer.mInDischarge","false","false","false","false","false","boolean","","","/**
 * Whether we are currently in a discharge cycle.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mBatteryRealtime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mRealtime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started when last unplugged (ms
 * in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTrackBatteryPastRealtime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPackageStats","false","false","false","false","true","HashMap<String,Pkg>","new HashMap<String, Pkg>()","","/**
 * The statistics we have collected for this uid's processes.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLaunches","false","false","false","false","false","int","","","/**
 * Total number times the service has been launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mWifiMulticastTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mWifiTurnedOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedTcpBytesReceived","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mUnpluggedStartTime","false","false","false","false","false","long","","","/**
 * The amount of time spent started when last unplugged (ms
 * in battery uptime).
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLaunchedTime","false","false","false","false","false","long","","","/**
 * Total time (ms in battery uptime) the service has been left launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedBatteryUptime","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mRunningSince","false","false","false","false","false","long","","","/**
 * If service has been started and not yet stopped, this is
 * when it was started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPhoneServiceState","false","false","true","false","false","int","-1","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mAudioTurnedOn","false","false","false","false","false","boolean","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mScanWifiLockTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.SamplingTimer.mCurrentReportedCount","false","false","false","false","false","int","","","/**
 * The most recent reported count from /proc/wakelocks.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLaunched","false","false","false","false","false","boolean","","","/**
 * True if we are currently launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mKernelWakelockStats","false","false","true","false","true","HashMap<String,SamplingTimer>","new HashMap<String, SamplingTimer>()","","/*
     * Holds a SamplingTimer associated with each kernel wakelock name being tracked.
     */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTimerPool","false","false","false","false","true","ArrayList<StopwatchTimer>","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mType","false","false","false","false","true","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mDischargeStartLevel","false","false","false","false","false","int","","","/*
     * These keep track of battery levels (1-100) at the last plug event and the last unplug event.
     */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device as of the
 * last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mStartedTcpBytesSent","false","false","false","false","false","long","-1","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mRadioDataStart","false","false","true","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mCurrentTcpBytesSent","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLaunches","false","false","false","false","false","int","","","/**
 * Total number times the service has been launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mStarts","false","false","false","false","false","int","","","/**
 * Number of times the process has been started.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedTcpBytesSent","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUidStats","false","false","false","false","true","SparseArray<BatteryStatsImpl.Uid>","new SparseArray<BatteryStatsImpl.Uid>()","","/**
 * The statistics we have collected organized by uids.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Counter.mUnpluggedCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Timer.mTotalTime","false","false","false","false","false","long","","","/**
 * The total time we have accumulated since the start of the original
 * boot, to the last time something interesting happened in the
 * current run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mUnpluggedWakeups","false","false","false","false","false","int","","","/**
 * Number of things that could wake up the device as of the
 * last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mLastStarts","false","false","false","false","false","int","","","/**
 * The number of times the process has started from the previous run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mVideoTurnedOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mUnpluggedSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.StopwatchTimer.mNesting","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPhoneSignalStrengthsTimer","false","false","false","false","true","StopwatchTimer","new StopwatchTimer[NUM_SIGNAL_STRENGTH_BINS]","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mUnpluggedStarts","false","false","false","false","false","int","","","/**
 * The number of starts when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.SamplingTimer.mCurrentReportedTotalTime","false","false","false","false","false","long","","","/**
 * The most recent reported total_time from /proc/wakelocks.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Pkg.mLaunches","false","false","false","false","false","int","","","/**
 * Total number times the service has been launched.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mAudioTurnedOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.SamplingTimer.mUnpluggedReportedCount","false","false","false","false","false","int","","","/**
 * The reported count from /proc/wakelocks when unplug() was last
 * called.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLoadedLaunches","false","false","false","false","false","int","","","/**
 * The number of launches loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mLoadedTcpBytesSent","false","false","false","false","false","long","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mTimerPartial","false","false","false","false","false","StopwatchTimer","","","/**
 * How long (in ms) this uid has been keeping the device partially awake.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mVideoTurnedOnTimer","false","false","false","false","false","StopwatchTimer","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Proc.mLastForegroundTime","false","false","false","false","false","long","","","/**
 * The amount of foreground time loaded from the previous run
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUnpluggedStarts","false","false","false","false","false","int","","","/**
 * The number of starts when last unplugged.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLoadedSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time loaded from a previous save.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.sNumSpeedSteps","false","false","true","true","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mPluggedCount","false","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Counter.mCount","false","false","false","false","true","AtomicInteger","new AtomicInteger()","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mVersion","true","false","false","false","false","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Uid.mUid","false","false","false","false","true","int","","","","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.BatteryStatsImpl.mLastSystemTime","false","false","false","false","false","long","","","/**
 * The amount of system time loaded from the previous run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.os.Serv.mLastLaunches","false","false","false","false","false","int","","","/**
 * The number of launches as of the last run.
 */
","\com\android\internal\os\BatteryStatsImpl.java"
"com.android.internal.view.menu.MenuItemImpl.CHECKED","false","false","true","true","true","int","0x00000002","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.TAG","false","false","true","true","true","String","""MenuItemImpl""","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mIntent","false","false","true","false","false","Intent","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mClickListener","false","false","true","false","false","MenuItem.OnMenuItemClickListener","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mGroup","false","false","true","false","true","int","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mSubMenu","false","false","true","false","false","SubMenuBuilder","","","/**
 * If this item should launch a sub menu, this is the sub menu to launch
 */
","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mMenuInfo","false","false","true","false","false","ContextMenuInfo","","","/**
 * Current use case is for context menu: Extra information linked to the
 * View that added this item to the context menu.
 */
","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mItemViews","false","false","true","false","false","WeakReference<ItemView>","","","/**
 * The (cached) menu item views for this item
 */
","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.ENABLED","false","false","true","true","true","int","0x00000010","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mItemCallback","false","false","true","false","false","Runnable","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.sPrependShortcutLabel","false","false","true","true","false","String","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mCategoryOrder","false","false","true","false","true","int","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.sSpaceShortcutLabel","false","false","true","true","false","String","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.NO_ICON","false","false","false","true","true","int","0","","/**
 * Used for the icon resource ID if this item does not have an icon
 */
","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.EXCLUSIVE","false","false","true","true","true","int","0x00000004","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mShortcutNumericChar","false","false","true","false","false","char","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mId","false","false","true","false","true","int","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.sEnterShortcutLabel","false","false","true","true","false","String","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mTitleCondensed","false","false","true","false","false","CharSequence","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mMenu","false","false","true","false","false","MenuBuilder","","","/**
 * The menu to which this item belongs
 */
","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.CHECKABLE","false","false","true","true","true","int","0x00000001","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mIconDrawable","false","false","true","false","false","Drawable","","","/**
 * The icon's drawable which is only created as needed
 */
","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mShortcutAlphabeticChar","false","false","true","false","false","char","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mTitle","false","false","true","false","false","CharSequence","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.sDeleteShortcutLabel","false","false","true","true","false","String","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.HIDDEN","false","false","true","true","true","int","0x00000008","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mOrdering","false","false","true","false","true","int","","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mFlags","false","false","true","false","false","int","ENABLED","","","\com\android\internal\view\menu\MenuItemImpl.java"
"com.android.internal.view.menu.MenuItemImpl.mIconResId","false","false","true","false","false","int","NO_ICON","","/**
 * The icon's resource ID which is used to get the Drawable when it is
 * needed (if the Drawable isn't already obtained--only one of the two is
 * needed).
 */
","\com\android\internal\view\menu\MenuItemImpl.java"
"android.view.FactoryMerger.mF1","false","false","true","false","true","Factory","","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.DEBUG","false","false","true","false","true","boolean","false","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.TAG_REQUEST_FOCUS","false","false","true","true","true","String","""requestFocus""","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.mConstructorSignature","false","false","true","true","true","Class","new Class[] { Context.class, AttributeSet.class }","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.mFilterMap","false","false","true","false","false","HashMap<String,Boolean>","","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.mConstructorArgs","false","false","true","false","true","Object","new Object[2]","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.mFactorySet","false","false","true","false","false","boolean","","","// these are optional, set by the caller
","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.mF1","false","false","true","false","true","Factory","","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.mContext","false","true","false","false","true","Context","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.mFilter","false","false","true","false","false","Filter","","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.TAG_INCLUDE","false","false","true","true","true","String","""include""","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.TAG_MERGE","false","false","true","true","true","String","""merge""","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.sConstructorMap","false","false","true","true","true","HashMap<String,Constructor>","new HashMap<String, Constructor>()","","","\android\view\LayoutInflater.java"
"android.view.LayoutInflater.mFactory","false","false","true","false","false","Factory","","","","\android\view\LayoutInflater.java"
"com.android.internal.app.NetInitiatedActivity.NEGATIVE_BUTTON","false","false","true","true","true","int","AlertDialog.BUTTON2","","","\com\android\internal\app\NetInitiatedActivity.java"
"com.android.internal.app.NetInitiatedActivity.BUTTON_TEXT_ACCEPT","true","false","false","true","true","String","""Accept""","","// Dialog button text
","\com\android\internal\app\NetInitiatedActivity.java"
"com.android.internal.app.NetInitiatedActivity.POSITIVE_BUTTON","false","false","true","true","true","int","AlertDialog.BUTTON1","","","\com\android\internal\app\NetInitiatedActivity.java"
"com.android.internal.app.NetInitiatedActivity.TAG","false","false","true","true","true","String","""NetInitiatedActivity""","","","\com\android\internal\app\NetInitiatedActivity.java"
"com.android.internal.app.NetInitiatedActivity.BUTTON_TEXT_DENY","true","false","false","true","true","String","""Deny""","","","\com\android\internal\app\NetInitiatedActivity.java"
"com.android.internal.app.NetInitiatedActivity.notificationId","false","false","true","false","false","int","-1","","// Received ID from intent, -1 when no notification is in progress
","\com\android\internal\app\NetInitiatedActivity.java"
"com.android.internal.app.NetInitiatedActivity.VERBOSE","false","false","true","true","true","boolean","false","","","\com\android\internal\app\NetInitiatedActivity.java"
"com.android.internal.app.NetInitiatedActivity.mNetInitiatedReceiver","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        if (DEBUG)
            Log.d(TAG, ""NetInitiatedReceiver onReceive: "" + intent.getAction());
        if (intent.getAction() == GpsNetInitiatedHandler.ACTION_NI_VERIFY) {
            handleNIVerify(intent);
        }
    }
}","","/**
 * Used to detect when NI request is received
 */
","\com\android\internal\app\NetInitiatedActivity.java"
"com.android.internal.app.NetInitiatedActivity.DEBUG","false","false","true","true","true","boolean","true","","","\com\android\internal\app\NetInitiatedActivity.java"
"android.net.http.Request.mProxyHost","false","false","false","false","false","HttpHost","","","/**
 * Set if I'm using a proxy server
 */
","\android\net\http\Request.java"
"android.net.http.Request.mLoadingPaused","false","false","true","false","false","boolean","false","","/**
 * True if loading should be paused *
 */
","\android\net\http\Request.java"
"android.net.http.Request.mHttpRequest","false","false","false","false","false","BasicHttpRequest","","","/**
 * The Apache http request
 */
","\android\net\http\Request.java"
"android.net.http.Request.requestContentProcessor","false","false","true","true","false","RequestContent","new RequestContent()","","/**
 * Processor used to set content-length and transfer-encoding
 * headers.
 */
","\android\net\http\Request.java"
"android.net.http.Request.mClientResource","false","false","true","false","true","Object","new Object()","","/* Used to synchronize waitUntilComplete() requests */
","\android\net\http\Request.java"
"android.net.http.Request.mCancelled","false","false","false","false","false","boolean","false","","/**
 * True if request has been cancelled
 */
","\android\net\http\Request.java"
"android.net.http.Request.mPath","false","false","false","false","false","String","","","/**
 * The path component of this request
 */
","\android\net\http\Request.java"
"android.net.http.Request.HOST_HEADER","false","false","true","true","true","String","""Host""","","","\android\net\http\Request.java"
"android.net.http.Request.mEventHandler","false","false","false","false","false","EventHandler","","","/**
 * The eventhandler to call as the request progresses
 */
","\android\net\http\Request.java"
"android.net.http.Request.CONTENT_LENGTH_HEADER","false","false","true","true","true","String","""content-length""","","","\android\net\http\Request.java"
"android.net.http.Request.mHost","false","false","false","false","false","HttpHost","","","/**
 * Host serving this request
 */
","\android\net\http\Request.java"
"android.net.http.Request.mBodyLength","false","false","true","false","false","int","","","","\android\net\http\Request.java"
"android.net.http.Request.mBodyProvider","false","false","true","false","false","InputStream","","","","\android\net\http\Request.java"
"android.net.http.Request.mReceivedBytes","false","false","true","false","false","int","0","","// is http/1.1 feature.
","\android\net\http\Request.java"
"android.net.http.Request.mConnection","false","false","true","false","false","Connection","","","","\android\net\http\Request.java"
"android.net.http.Request.mFailCount","false","false","false","false","false","int","0","","","\android\net\http\Request.java"
"android.net.http.Request.ACCEPT_ENCODING_HEADER","false","false","true","true","true","String","""Accept-Encoding""","","","\android\net\http\Request.java"
"android.text.style.QuoteSpan.GAP_WIDTH","false","false","true","true","true","int","2","","","\android\text\style\QuoteSpan.java"
"android.text.style.QuoteSpan.STRIPE_WIDTH","false","false","true","true","true","int","2","","","\android\text\style\QuoteSpan.java"
"android.text.style.QuoteSpan.mColor","false","false","true","false","true","int","","","","\android\text\style\QuoteSpan.java"
"android.content.res.AssetManager.mNumRefs","false","false","true","false","false","int","1","","","\android\content\res\AssetManager.java"
"android.content.res.AssetInputStream.mLength","false","false","true","false","false","long","","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.sSystem","false","false","true","true","false","AssetManager","null","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mMarkPos","false","false","true","false","false","long","","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.STYLE_ASSET_COOKIE","false","false","false","true","true","int","2","","/*package*/
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.ACCESS_BUFFER","true","false","false","true","true","int","3","","/**
 * Mode for {@link #open(String, int)}: Attempt to load contents into
 * memory, for fast small reads.
 */
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mLength","false","false","true","false","false","long","","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.ACCESS_STREAMING","true","false","false","true","true","int","2","","/**
 * Mode for {@link #open(String, int)}: Read sequentially, with an
 * occasional forward seek.
 */
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mOffsets","false","false","true","false","true","long","new long[2]","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.STYLE_TYPE","false","false","false","true","true","int","0","","/*package*/
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.STYLE_DENSITY","false","false","false","true","true","int","5","","/*package*/
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.DEBUG_REFS","false","false","true","true","true","boolean","false","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.STYLE_NUM_ENTRIES","false","false","false","true","true","int","6","","/*package*/
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.sSync","false","false","true","true","true","Object","new Object()","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.localLOGV","false","false","true","true","true","boolean","Config.LOGV || false","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mObject","false","false","true","false","false","int","","","// For communication with native code.
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mValue","false","false","true","false","true","TypedValue","new TypedValue()","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mStringBlocks","false","false","true","false","false","StringBlock","null","","","\android\content\res\AssetManager.java"
"android.content.res.AssetInputStream.mAsset","false","false","true","false","false","int","","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mOpen","false","false","true","false","false","boolean","true","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.STYLE_RESOURCE_ID","false","false","false","true","true","int","3","","/*package*/
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.ACCESS_UNKNOWN","true","false","false","true","true","int","0","","/**
 * Mode for {@link #open(String, int)}: no specific information about how
 * data will be accessed.
 */
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mAsset","false","false","true","false","false","int","","","","\android\content\res\AssetManager.java"
"android.content.res.AssetInputStream.mMarkPos","false","false","true","false","false","long","","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.TAG","false","false","true","true","true","String","""AssetManager""","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.mRefStacks","false","false","true","false","false","HashMap<Integer,RuntimeException>","","","","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.STYLE_CHANGING_CONFIGURATIONS","false","false","false","true","true","int","4","","/*package*/
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.ACCESS_RANDOM","true","false","false","true","true","int","1","","/**
 * Mode for {@link #open(String, int)}: Read chunks, and seek forward and
 * backward.
 */
","\android\content\res\AssetManager.java"
"android.content.res.AssetManager.STYLE_DATA","false","false","false","true","true","int","1","","/*package*/
","\android\content\res\AssetManager.java"
"android.webkit.PerfChecker.mResponseThreshold","false","false","true","true","true","long","2000","","// 2s
","\android\webkit\PerfChecker.java"
"android.webkit.PerfChecker.mTime","false","false","true","false","false","long","","","","\android\webkit\PerfChecker.java"
"android.view.ContextThemeWrapper.mInflater","false","false","true","false","false","LayoutInflater","","","","\android\view\ContextThemeWrapper.java"
"android.view.ContextThemeWrapper.mTheme","false","false","true","false","false","Resources.Theme","","","","\android\view\ContextThemeWrapper.java"
"android.view.ContextThemeWrapper.mBase","false","false","true","false","false","Context","","","","\android\view\ContextThemeWrapper.java"
"android.view.ContextThemeWrapper.mThemeResource","false","false","true","false","false","int","","","","\android\view\ContextThemeWrapper.java"
"android.widget.SetDrawableParameters.targetBackground","false","false","false","false","false","boolean","","","","\android\widget\RemoteViews.java"
"android.widget.ViewGroupAction.TAG","true","false","false","true","true","int","4","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.targetBackground","false","false","false","false","false","boolean","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.mLayoutId","false","false","true","false","false","int","","","/**
 * The resource ID of the layout file. (Added to the parcel)
 */
","\android\widget\RemoteViews.java"
"android.widget.SetDrawableParameters.TAG","true","false","false","true","true","int","3","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.BUNDLE","false","false","false","true","true","int","13","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.DOUBLE","false","false","false","true","true","int","7","","","\android\widget\RemoteViews.java"
"android.widget.SetDrawableParameters.filterMode","false","false","false","false","false","PorterDuff.Mode","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.SHORT","false","false","false","true","true","int","3","","","\android\widget\RemoteViews.java"
"android.widget.SetDrawableParameters.viewId","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.SetDrawableParameters.colorFilter","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.value","false","false","false","false","false","Object","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.LOG_TAG","false","false","true","true","true","String","""RemoteViews""","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.CHAR","false","false","false","true","true","int","8","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.type","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.LONG","false","false","false","true","true","int","5","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.methodName","false","false","false","false","false","String","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.mActions","false","false","true","false","false","ArrayList<Action>","","","/**
 * An array of actions to perform on the view tree once it has been
 * inflated
 */
","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.BYTE","false","false","false","true","true","int","2","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.pendingIntent","false","false","false","false","false","PendingIntent","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.viewId","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.BOOLEAN","false","false","false","true","true","int","1","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.FLOAT","false","false","false","true","true","int","6","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.STRING","false","false","false","true","true","int","9","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.methodName","false","false","false","false","false","String","","","","\android\widget\RemoteViews.java"
"android.widget.SetOnClickPendingIntent.viewId","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.level","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.TAG","true","false","false","true","true","int","4","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.BITMAP","false","false","false","true","true","int","12","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.INT","false","false","false","true","true","int","4","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.CHAR_SEQUENCE","false","false","false","true","true","int","10","","","\android\widget\RemoteViews.java"
"android.widget.ViewGroupAction.viewId","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.FLOAT","false","false","false","true","true","int","6","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.viewId","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.BITMAP","false","false","false","true","true","int","12","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.BUNDLE","false","false","false","true","true","int","13","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.URI","false","false","false","true","true","int","11","","","\android\widget\RemoteViews.java"
"android.widget.SetDrawableParameters.level","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.BOOLEAN","false","false","false","true","true","int","1","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.BYTE","false","false","false","true","true","int","2","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.STRING","false","false","false","true","true","int","9","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.nestedViews","false","false","false","false","false","RemoteViews","","","","\android\widget\RemoteViews.java"
"android.widget.SetDrawableParameters.alpha","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.CREATOR","true","false","false","true","true","Parcelable.Creator<RemoteViews>","new Parcelable.Creator<RemoteViews>() {

    public RemoteViews createFromParcel(Parcel parcel) {
        return new RemoteViews(parcel);
    }

    public RemoteViews[] newArray(int size) {
        return new RemoteViews[size];
    }
}","","/**
 * Parcelable.Creator that instantiates RemoteViews objects
 */
","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.TAG","false","false","false","true","true","int","2","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.LONG","false","false","false","true","true","int","5","","","\android\widget\RemoteViews.java"
"android.widget.SetOnClickPendingIntent.pendingIntent","false","false","false","false","false","PendingIntent","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.type","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.value","false","false","false","false","false","Object","","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.URI","false","false","false","true","true","int","11","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.CHAR_SEQUENCE","false","false","false","true","true","int","10","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.mPackage","false","false","true","false","false","String","","","/**
 * The package name of the package containing the layout
 * resource. (Added to the parcel)
 */
","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.INT","false","false","false","true","true","int","4","","","\android\widget\RemoteViews.java"
"android.widget.SetOnClickPendingIntent.TAG","true","false","false","true","true","int","1","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.DOUBLE","false","false","false","true","true","int","7","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.colorFilter","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.ViewGroupAction.nestedViews","false","false","false","false","false","RemoteViews","","","","\android\widget\RemoteViews.java"
"android.widget.ReflectionAction.SHORT","false","false","false","true","true","int","3","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.CHAR","false","false","false","true","true","int","8","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.filterMode","false","false","false","false","false","PorterDuff.Mode","","","","\android\widget\RemoteViews.java"
"android.widget.RemoteViews.alpha","false","false","false","false","false","int","","","","\android\widget\RemoteViews.java"
"android.widget.ImageView.mUri","false","false","true","false","false","Uri","","","// settable by the client
","\android\widget\ImageView.java"
"android.widget.ImageView.mDrawableHeight","false","false","true","false","false","int","","","","\android\widget\ImageView.java"
"android.widget.ImageView.mColorMod","false","false","true","false","false","boolean","false","","","\android\widget\ImageView.java"
"android.widget.ImageView.nativeInt","false","false","false","false","true","int","","","","\android\widget\ImageView.java"
"android.widget.ImageView.mCropToPadding","false","false","true","false","false","boolean","","","","\android\widget\ImageView.java"
"android.widget.ImageView.sScaleTypeArray","false","false","true","true","true","ScaleType","{ ScaleType.MATRIX, ScaleType.FIT_XY, ScaleType.FIT_START, ScaleType.FIT_CENTER, ScaleType.FIT_END, ScaleType.CENTER, ScaleType.CENTER_CROP, ScaleType.CENTER_INSIDE }","","","\android\widget\ImageView.java"
"android.widget.ImageView.mAdjustViewBounds","false","false","true","false","false","boolean","false","","","\android\widget\ImageView.java"
"android.widget.ImageView.mTempSrc","false","false","true","false","false","RectF","new RectF()","","// Avoid allocations...
","\android\widget\ImageView.java"
"android.widget.ImageView.mResource","false","false","true","false","false","int","0","","","\android\widget\ImageView.java"
"android.widget.ImageView.mDrawMatrix","false","false","true","false","false","Matrix","null","","","\android\widget\ImageView.java"
"android.widget.ImageView.mViewAlphaScale","false","false","true","false","false","int","256","","","\android\widget\ImageView.java"
"android.widget.ImageView.mMatrix","false","false","true","false","false","Matrix","","","","\android\widget\ImageView.java"
"android.widget.ImageView.mDrawable","false","false","true","false","false","Drawable","null","","","\android\widget\ImageView.java"
"android.widget.ImageView.mMaxWidth","false","false","true","false","false","int","Integer.MAX_VALUE","","","\android\widget\ImageView.java"
"android.widget.ImageView.mMergeState","false","false","true","false","false","boolean","false","","","\android\widget\ImageView.java"
"android.widget.ImageView.mAlpha","false","false","true","false","false","int","255","","","\android\widget\ImageView.java"
"android.widget.ImageView.mState","false","false","true","false","false","int","null","","","\android\widget\ImageView.java"
"android.widget.ImageView.mColorFilter","false","false","true","false","false","ColorFilter","","","// these are applied to the drawable
","\android\widget\ImageView.java"
"android.widget.ImageView.mBaselineAligned","false","false","true","false","false","boolean","false","","","\android\widget\ImageView.java"
"android.widget.ImageView.mTempDst","false","false","true","false","false","RectF","new RectF()","","","\android\widget\ImageView.java"
"android.widget.ImageView.sS2FArray","false","false","true","true","true","Matrix.ScaleToFit","{ Matrix.ScaleToFit.FILL, Matrix.ScaleToFit.START, Matrix.ScaleToFit.CENTER, Matrix.ScaleToFit.END }","","","\android\widget\ImageView.java"
"android.widget.ImageView.mLevel","false","false","true","false","false","int","0","","","\android\widget\ImageView.java"
"android.widget.ImageView.mDrawableWidth","false","false","true","false","false","int","","","","\android\widget\ImageView.java"
"android.widget.ImageView.mHaveFrame","false","false","true","false","false","boolean","false","","","\android\widget\ImageView.java"
"android.widget.ImageView.mScaleType","false","false","true","false","false","ScaleType","","","","\android\widget\ImageView.java"
"android.widget.ImageView.mMaxHeight","false","false","true","false","false","int","Integer.MAX_VALUE","","","\android\widget\ImageView.java"
"com.google.android.mms.pdu.PduComposer.REGEXP_IPV4_ADDRESS_TYPE","false","false","false","true","true","String","""[0-9]{1,3}\\.{1}[0-9]{1,3}\\.{1}"" + ""[0-9]{1,3}\\.{1}[0-9]{1,3}""","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.currentPosition","true","false","false","false","false","int","0","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.LENGTH_QUOTE","false","false","true","true","true","int","31","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_COMPOSER_BLOCK_SIZE","false","false","true","true","true","int","1024","","/**
 * Block size when read data from InputStream.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.currentStackSize","false","false","true","false","false","int","","","// Current stack size
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.LengthRecordNode.currentPosition","true","false","false","false","false","int","0","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.mPduHeader","false","false","true","false","false","PduHeaders","null","","/**
 * Header of this pdu.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_COMPOSE_FIELD_NOT_SET","false","false","true","true","true","int","2","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.next","true","false","false","false","false","LengthRecordNode","null","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_COMPOSE_FIELD_NOT_SUPPORTED","false","false","true","true","true","int","3","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.LONG_INTEGER_LENGTH_MAX","false","false","true","true","true","int","8","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.mPosition","false","true","false","false","false","int","0","","/**
 * Current visiting position of the mMessage.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.BufferStack.toCopy","false","false","true","false","false","LengthRecordNode","null","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.LengthRecordNode.currentMessage","false","false","false","false","false","ByteArrayOutputStream","null","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.mResolver","false","false","true","false","true","ContentResolver","","","/**
 * Content resolver.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.LengthRecordNode.next","true","false","false","false","false","LengthRecordNode","null","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PositionMarker.c_pos","false","false","true","false","false","int","","","// Current position
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.mPdu","false","false","true","false","false","GenericPdu","null","","/**
 * The PDU.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.STRING_IPV6_ADDRESS_TYPE","false","false","false","true","true","String","""/TYPE=IPV6""","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.toCopy","false","false","true","false","false","LengthRecordNode","null","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.stack","false","false","true","false","false","LengthRecordNode","null","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.currentMessage","false","false","false","false","false","ByteArrayOutputStream","null","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PositionMarker.currentStackSize","false","false","true","false","false","int","","","// Current stack size
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.mStack","false","false","true","false","false","BufferStack","null","","/**
 * Message compose buffer stack.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.c_pos","false","false","true","false","false","int","","","// Current position
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.STRING_PHONE_NUMBER_ADDRESS_TYPE","false","false","false","true","true","String","""/TYPE=PLMN""","","/**
 * The postfix strings of address.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.mContentTypeMap","false","false","true","true","false","HashMap<String,Integer>","null","","/**
 * Map of all content type
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.stackSize","false","false","false","false","false","int","0","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_COMPOSE_SUCCESS","false","false","true","true","true","int","0","","/**
 * Error values.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_PHONE_NUMBER_ADDRESS_TYPE","false","false","true","true","true","int","1","","/**
 * Address type.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_IPV6_ADDRESS_TYPE","false","false","true","true","true","int","4","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.END_STRING_FLAG","false","false","true","true","true","int","0","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.BufferStack.stackSize","false","false","false","false","false","int","0","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_UNKNOWN_ADDRESS_TYPE","false","false","true","true","true","int","5","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.BufferStack.stack","false","false","true","false","false","LengthRecordNode","null","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.TEXT_MAX","false","false","true","true","true","int","127","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_IPV4_ADDRESS_TYPE","false","false","true","true","true","int","3","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.REGEXP_PHONE_NUMBER_ADDRESS_TYPE","false","false","false","true","true","String","""\\+?[0-9|\\.|\\-]+""","","/**
 * Address regular expression string.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.REGEXP_IPV6_ADDRESS_TYPE","false","false","false","true","true","String","""[a-fA-F]{4}\\:{1}[a-fA-F0-9]{4}\\:{1}[a-fA-F0-9]{4}\\:{1}"" + ""[a-fA-F0-9]{4}\\:{1}[a-fA-F0-9]{4}\\:{1}[a-fA-F0-9]{4}\\:{1}"" + ""[a-fA-F0-9]{4}\\:{1}[a-fA-F0-9]{4}""","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_EMAIL_ADDRESS_TYPE","false","false","true","true","true","int","2","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.SHORT_INTEGER_MAX","false","false","true","true","true","int","127","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.REGEXP_EMAIL_ADDRESS_TYPE","false","false","false","true","true","String","""[a-zA-Z| ]*\\<{0,1}[a-zA-Z| ]+@{1}"" + ""[a-zA-Z| ]+\\.{1}[a-zA-Z| ]+\\>{0,1}""","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.PDU_COMPOSE_CONTENT_ERROR","false","false","true","true","true","int","1","","","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.mMessage","false","true","false","false","false","ByteArrayOutputStream","null","","/**
 * The output message.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.QUOTED_STRING_FLAG","false","false","true","true","true","int","34","","/**
 * WAP values defined in WSP spec.
 */
","\com\google\android\mms\pdu\PduComposer.java"
"com.google.android.mms.pdu.PduComposer.STRING_IPV4_ADDRESS_TYPE","false","false","false","true","true","String","""/TYPE=IPV4""","","","\com\google\android\mms\pdu\PduComposer.java"
"android.util.Description.mName","true","false","false","false","true","String","","","","\android\util\EventLogTags.java"
"android.util.Description.mTag","true","false","false","false","true","int","","","","\android\util\EventLogTags.java"
"android.util.EventLogTags.mTag","true","false","false","false","true","int","","","","\android\util\EventLogTags.java"
"android.util.EventLogTags.mName","true","false","false","false","true","String","","","","\android\util\EventLogTags.java"
"android.widget.CursorFilter.mClient","false","false","false","false","false","CursorFilterClient","","","","\android\widget\CursorFilter.java"
"android.accounts.AccountManagerService.COUNT_OF_MATCHING_GRANTS","false","false","true","true","true","String",""""" + ""SELECT COUNT(*) FROM "" + TABLE_GRANTS + "", "" + TABLE_ACCOUNTS + "" WHERE "" + GRANTS_ACCOUNTS_ID + ""="" + ACCOUNTS_ID + "" AND "" + GRANTS_GRANTEE_UID + ""=?"" + "" AND "" + GRANTS_AUTH_TOKEN_TYPE + ""=?"" + "" AND "" + ACCOUNTS_NAME + ""=?"" + "" AND "" + ACCOUNTS_TYPE + ""=?""","","","\android\accounts\AccountManagerService.java"
"android.accounts.TestFeaturesSession.mAccount","false","false","true","false","true","Account","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mResponse","false","false","false","false","false","IAccountManagerResponse","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.AUTHTOKENS_ID","false","false","true","true","true","String","""_id""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mAccountsOfType","false","false","true","false","false","Account","null","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.TABLE_GRANTS","false","false","true","true","true","String","""grants""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.META_KEY","false","false","true","true","true","String","""key""","","","\android\accounts\AccountManagerService.java"
"android.accounts.RemoveAccountSession.mAccount","false","false","false","false","true","Account","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mAccount","false","false","false","false","true","Account","","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mStripAuthTokenFromResult","false","false","true","false","true","boolean","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mExpectActivityLaunch","false","false","false","false","true","boolean","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.DATABASE_VERSION","false","false","true","true","true","int","4","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mNumResults","true","false","false","false","false","int","0","","","\android\accounts\AccountManagerService.java"
"android.accounts.GetAccountsByTypeAndFeatureSession.mFeatures","false","false","true","false","true","String","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AuthTokenKey.mAccount","true","false","false","false","true","Account","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mSessions","false","false","true","false","true","LinkedHashMap<String,Session>","new LinkedHashMap<String, Session>()","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.TIMEOUT_DELAY_MS","false","false","true","true","true","int","1000 * 60","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mNumErrors","false","false","true","false","false","int","0","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.EXTRAS_KEY","false","false","true","true","true","String","""key""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.MESSAGE_TIMED_OUT","false","false","true","true","true","int","3","","// Messages that can be sent on mHandler
","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.ACCOUNTS_NAME","false","false","true","true","true","String","""name""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mMessageThread","false","false","true","false","false","HandlerThread","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.EXTRAS_ACCOUNTS_ID","false","false","true","true","true","String","""accounts_id""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.ACCOUNTS_PASSWORD","false","false","true","true","true","String","""password""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.isDebuggableMonkeyBuild","false","false","true","true","true","boolean","SystemProperties.getBoolean(""ro.monkey"", false)","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.AUTHTOKENS_ACCOUNTS_ID","false","false","true","true","true","String","""accounts_id""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.TABLE_EXTRAS","false","false","true","true","true","String","""extras""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mAccountType","false","false","false","false","true","String","","","","\android\accounts\AccountManagerService.java"
"android.accounts.TestFeaturesSession.mFeatures","false","false","true","false","true","String","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.META_VALUE","false","false","true","true","true","String","""value""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mNotificationIds","false","false","true","false","true","AtomicInteger","new AtomicInteger(1)","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.GRANTS_GRANTEE_UID","false","false","true","true","true","String","""uid""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.ACCOUNTS_CHANGED_INTENT","false","false","true","true","true","Intent","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.ACCOUNTS_ID","false","false","true","true","true","String","""_id""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mNumRequestContinued","false","false","true","false","false","int","0","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mAccountType","false","false","false","false","true","String","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.GOOGLE_ACCOUNT_TYPE","false","false","true","true","true","String","""com.google""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mAuthTokenType","true","false","false","false","true","String","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.TAG","false","false","true","true","true","String","""AccountManagerService""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mOpenHelper","false","false","true","false","true","DatabaseHelper","","","","\android\accounts\AccountManagerService.java"
"android.accounts.GetAccountsByTypeAndFeatureSession.mAccountsWithFeatures","false","false","true","false","false","ArrayList<Account>","null","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.GRANTS_AUTH_TOKEN_TYPE","false","false","true","true","true","String","""auth_token_type""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mCredentialsPermissionNotificationIds","false","false","true","false","true","HashMap<Pair<Pair<Account,String>,Integer>,Integer>","new HashMap<Pair<Pair<Account, String>, Integer>, Integer>()","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mCurrentAccount","false","false","true","false","false","int","0","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.EXTRAS_VALUE","false","false","true","true","true","String","""value""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mNumResults","true","false","false","false","false","int","0","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mNumRequestContinued","false","false","true","false","false","int","0","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.GRANTS_ACCOUNTS_ID","false","false","true","true","true","String","""accounts_id""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.DATABASE_NAME","false","false","true","true","true","String","""accounts.db""","","","\android\accounts\AccountManagerService.java"
"android.accounts.GetAccountsByTypeAndFeatureSession.mCurrentAccount","false","false","true","false","false","int","0","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mFeatures","false","false","true","false","true","String","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mMessageHandler","false","false","true","false","true","MessageHandler","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mAccountsWithFeatures","false","false","true","false","false","ArrayList<Account>","null","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mExpectActivityLaunch","false","false","false","false","true","boolean","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mAuthenticator","false","false","false","false","false","IAccountAuthenticator","null","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.ACCOUNT_NAME_TYPE_PROJECTION","false","false","true","true","true","String","new String[] { ACCOUNTS_ID, ACCOUNTS_NAME, ACCOUNTS_TYPE }","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mContext","false","false","true","false","true","Context","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.TABLE_META","false","false","true","true","true","String","""meta""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mSigninRequiredNotificationIds","false","false","true","false","true","HashMap<Account,Integer>","new HashMap<Account, Integer>()","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.AUTHTOKENS_AUTHTOKEN","false","false","true","true","true","String","""authtoken""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.ACCOUNTS_TYPE_COUNT","false","false","true","true","true","String","""count(type)""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.TABLE_ACCOUNTS","false","false","true","true","true","String","""accounts""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mStripAuthTokenFromResult","false","false","true","false","true","boolean","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AuthTokenKey.mHashCode","false","false","true","false","true","int","","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mCreationTime","false","false","false","false","true","long","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mCreationTime","false","false","false","false","true","long","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mSimWatcher","false","false","true","false","true","SimWatcher","","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mAuthenticator","false","false","false","false","false","IAccountAuthenticator","null","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.EXTRAS_ID","false","false","true","true","true","String","""_id""","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mResponse","false","false","false","false","false","IAccountManagerResponse","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.ACCOUNT_TYPE_COUNT_PROJECTION","false","false","true","true","true","String","new String[] { ACCOUNTS_TYPE, ACCOUNTS_TYPE_COUNT }","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.NO_BROADCAST_FLAG","false","false","true","true","true","String","""nobroadcast""","","","\android\accounts\AccountManagerService.java"
"android.accounts.GetAccountsByTypeAndFeatureSession.mAccountsOfType","false","false","true","false","false","Account","null","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.AUTHTOKENS_TYPE","false","false","true","true","true","String","""type""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mHashCode","false","false","true","false","true","int","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AuthTokenKey.mAuthTokenType","true","false","false","false","true","String","","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.sThis","false","false","true","true","false","AtomicReference<AccountManagerService>","new AtomicReference<AccountManagerService>()","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.EMPTY_ACCOUNT_ARRAY","false","false","true","true","true","Account","new Account[] {}","","","\android\accounts\AccountManagerService.java"
"android.accounts.Session.mNumErrors","false","false","true","false","false","int","0","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.ACCOUNTS_TYPE","false","false","true","true","true","String","""type""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.TABLE_AUTHTOKENS","false","false","true","true","true","String","""authtokens""","","","\android\accounts\AccountManagerService.java"
"android.accounts.AccountManagerService.mAuthenticatorCache","false","false","true","false","true","AccountAuthenticatorCache","","","","\android\accounts\AccountManagerService.java"
"android.hardware.Camera.KEY_GPS_LONGITUDE","false","false","true","true","true","String","""gps-longitude""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_EXPOSURE_COMPENSATION","false","false","true","true","true","String","""exposure-compensation""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_EFFECT","false","false","true","true","true","String","""effect""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_NIGHT_PORTRAIT","true","false","false","true","true","String","""night-portrait""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.FLASH_MODE_TORCH","true","false","false","true","true","String","""torch""","","/**
 * Constant emission of light during preview, auto-focus and snapshot.
 * This can also be used for video recording.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.ANTIBANDING_AUTO","true","false","false","true","true","String","""auto""","","// Values for antibanding settings.
","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_MONO","true","false","false","true","true","String","""mono""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.ANTIBANDING_OFF","true","false","false","true","true","String","""off""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_MAX_EXPOSURE_COMPENSATION","false","false","true","true","true","String","""max-exposure-compensation""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.WHITE_BALANCE_CLOUDY_DAYLIGHT","true","false","false","true","true","String","""cloudy-daylight""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_AUTO","true","false","false","true","true","String","""auto""","","// Values for scene mode settings.
","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_SUNSET","true","false","false","true","true","String","""sunset""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.WHITE_BALANCE_SHADE","true","false","false","true","true","String","""shade""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_GPS_LONGITUDE","false","false","true","true","true","String","""gps-longitude""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mWithBuffer","false","false","true","false","false","boolean","","","","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_NONE","true","false","false","true","true","String","""none""","","// Values for color effect settings.
","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_NEGATIVE","true","false","false","true","true","String","""negative""","","","\android\hardware\Camera.java"
"android.hardware.Camera.width","true","false","false","false","false","int","","","/**
 * width of the picture
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_FLASH_MODE","false","false","true","true","true","String","""flash-mode""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.ANTIBANDING_AUTO","true","false","false","true","true","String","""auto""","","// Values for antibanding settings.
","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_PREVIEW_FORMAT","false","false","true","true","true","String","""preview-format""","","","\android\hardware\Camera.java"
"android.hardware.Camera.FLASH_MODE_OFF","true","false","false","true","true","String","""off""","","/**
 * Flash will not be fired.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_AQUA","true","false","false","true","true","String","""aqua""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_SMOOTH_ZOOM_SUPPORTED","false","false","true","true","true","String","""smooth-zoom-supported""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.PIXEL_FORMAT_RGB565","false","false","true","true","true","String","""rgb565""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mRawImageCallback","false","false","true","false","false","PictureCallback","","","","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_ERROR_SERVER_DIED","true","false","false","true","true","int","100","","/**
 * Media server died. In this case, the application must release the
 * Camera object and instantiate a new one. @see #ErrorCallback
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.FLASH_MODE_TORCH","true","false","false","true","true","String","""torch""","","/**
 * Constant emission of light during preview, auto-focus and snapshot.
 * This can also be used for video recording.
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_JPEG_THUMBNAIL_HEIGHT","false","false","true","true","true","String","""jpeg-thumbnail-height""","","","\android\hardware\Camera.java"
"android.hardware.Camera.WHITE_BALANCE_DAYLIGHT","true","false","false","true","true","String","""daylight""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_HORIZONTAL_VIEW_ANGLE","false","false","true","true","true","String","""horizontal-view-angle""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.FLASH_MODE_OFF","true","false","false","true","true","String","""off""","","/**
 * Flash will not be fired.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_PREVIEW_FRAME","false","false","true","true","true","int","0x010","","","\android\hardware\Camera.java"
"android.hardware.Camera.mOneShot","false","false","true","false","false","boolean","","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_SNOW","true","false","false","true","true","String","""snow""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.FLASH_MODE_ON","true","false","false","true","true","String","""on""","","/**
 * Flash will always be fired during snapshot. The flash may also be
 * fired during preview or auto-focus depending on the driver.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_GPS_LATITUDE","false","false","true","true","true","String","""gps-latitude""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_LANDSCAPE","true","false","false","true","true","String","""landscape""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_MIN_EXPOSURE_COMPENSATION","false","false","true","true","true","String","""min-exposure-compensation""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_JPEG_THUMBNAIL_WIDTH","false","false","true","true","true","String","""jpeg-thumbnail-width""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_PREVIEW_FORMAT","false","false","true","true","true","String","""preview-format""","","","\android\hardware\Camera.java"
"android.hardware.Camera.FOCUS_MODE_AUTO","true","false","false","true","true","String","""auto""","","/**
 * Auto-focus mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_MAX_EXPOSURE_COMPENSATION","false","false","true","true","true","String","""max-exposure-compensation""","","","\android\hardware\Camera.java"
"android.hardware.Camera.PIXEL_FORMAT_YUV422SP","false","false","true","true","true","String","""yuv422sp""","","// Formats for setPreviewFormat and setPictureFormat.
","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_COMPRESSED_IMAGE","false","false","true","true","true","int","0x100","","","\android\hardware\Camera.java"
"android.hardware.Camera.FOCUS_MODE_MACRO","true","false","false","true","true","String","""macro""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_PREVIEW_SIZE","false","false","true","true","true","String","""preview-size""","","// Parameter keys to communicate with the camera driver.
","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_SCENE_MODE","false","false","true","true","true","String","""scene-mode""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mPreviewCallback","false","false","true","false","false","PreviewCallback","","","","\android\hardware\Camera.java"
"android.hardware.Camera.mZoomListener","false","false","true","false","false","OnZoomChangeListener","","","","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_BLACKBOARD","true","false","false","true","true","String","""blackboard""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_ACTION","true","false","false","true","true","String","""action""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.WHITE_BALANCE_FLUORESCENT","true","false","false","true","true","String","""fluorescent""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_BLACKBOARD","true","false","false","true","true","String","""blackboard""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_ZOOM_SUPPORTED","false","false","true","true","true","String","""zoom-supported""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_AQUA","true","false","false","true","true","String","""aqua""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_PARTY","true","false","false","true","true","String","""party""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mEventHandler","false","false","true","false","false","EventHandler","","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_ZOOM","false","false","true","true","true","String","""zoom""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_GPS_PROCESSING_METHOD","false","false","true","true","true","String","""gps-processing-method""","","","\android\hardware\Camera.java"
"android.hardware.Camera.WHITE_BALANCE_CLOUDY_DAYLIGHT","true","false","false","true","true","String","""cloudy-daylight""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_CANDLELIGHT","true","false","false","true","true","String","""candlelight""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_PREVIEW_FRAME_RATE","false","false","true","true","true","String","""preview-frame-rate""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_EXPOSURE_COMPENSATION_STEP","false","false","true","true","true","String","""exposure-compensation-step""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_ACTION","true","false","false","true","true","String","""action""","","","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_NONE","true","false","false","true","true","String","""none""","","// Values for color effect settings.
","\android\hardware\Camera.java"
"android.hardware.Camera.FLASH_MODE_ON","true","false","false","true","true","String","""on""","","/**
 * Flash will always be fired during snapshot. The flash may also be
 * fired during preview or auto-focus depending on the driver.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_ZOOM_RATIOS","false","false","true","true","true","String","""zoom-ratios""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mAutoFocusCallback","false","false","true","false","false","AutoFocusCallback","","","","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_MONO","true","false","false","true","true","String","""mono""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_WHITE_BALANCE","false","false","true","true","true","String","""whitebalance""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.FOCUS_MODE_FIXED","true","false","false","true","true","String","""fixed""","","/**
 * Focus is fixed. The camera is always in this mode if the focus is not
 * adjustable. If the camera has auto-focus, this mode can fix the
 * focus, which is usually at hyperfocal distance. Applications should
 * not call {@link #autoFocus(AutoFocusCallback)} in this mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_ZOOM_RATIOS","false","false","true","true","true","String","""zoom-ratios""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.PIXEL_FORMAT_YUV422I","false","false","true","true","true","String","""yuv422i-yuyv""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_CANDLELIGHT","true","false","false","true","true","String","""candlelight""","","","\android\hardware\Camera.java"
"android.hardware.Camera.FLASH_MODE_AUTO","true","false","false","true","true","String","""auto""","","/**
 * Flash will be fired automatically when required. The flash may be fired
 * during preview, auto-focus, or snapshot depending on the driver.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_WHITE_BALANCE","false","false","true","true","true","String","""whitebalance""","","","\android\hardware\Camera.java"
"android.hardware.Camera.PIXEL_FORMAT_YUV422I","false","false","true","true","true","String","""yuv422i-yuyv""","","","\android\hardware\Camera.java"
"android.hardware.Camera.FLASH_MODE_RED_EYE","true","false","false","true","true","String","""red-eye""","","/**
 * Flash will be fired in red-eye reduction mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.ANTIBANDING_50HZ","true","false","false","true","true","String","""50hz""","","","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_SOLARIZE","true","false","false","true","true","String","""solarize""","","","\android\hardware\Camera.java"
"android.hardware.Size.height","true","false","false","false","false","int","","","/**
 * height of the picture
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_VERTICAL_VIEW_ANGLE","false","false","true","true","true","String","""vertical-view-angle""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_PORTRAIT","true","false","false","true","true","String","""portrait""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_MIN_EXPOSURE_COMPENSATION","false","false","true","true","true","String","""min-exposure-compensation""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_THEATRE","true","false","false","true","true","String","""theatre""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_GPS_TIMESTAMP","false","false","true","true","true","String","""gps-timestamp""","","","\android\hardware\Camera.java"
"android.hardware.Camera.WHITE_BALANCE_TWILIGHT","true","false","false","true","true","String","""twilight""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_GPS_ALTITUDE","false","false","true","true","true","String","""gps-altitude""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mJpegCallback","false","false","true","false","false","PictureCallback","","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_STEADYPHOTO","true","false","false","true","true","String","""steadyphoto""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.WHITE_BALANCE_DAYLIGHT","true","false","false","true","true","String","""daylight""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_FLASH_MODE","false","false","true","true","true","String","""flash-mode""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.FOCUS_MODE_INFINITY","true","false","false","true","true","String","""infinity""","","/**
 * Focus is set at infinity. Applications should not call
 * {@link #autoFocus(AutoFocusCallback)} in this mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_POSTERIZE","true","false","false","true","true","String","""posterize""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_BEACH","true","false","false","true","true","String","""beach""","","","\android\hardware\Camera.java"
"android.hardware.Camera.ANTIBANDING_60HZ","true","false","false","true","true","String","""60hz""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_SUNSET","true","false","false","true","true","String","""sunset""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.mMap","false","false","true","false","false","HashMap<String,String>","","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_PREVIEW_FRAME_RATE","false","false","true","true","true","String","""preview-frame-rate""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_GPS_TIMESTAMP","false","false","true","true","true","String","""gps-timestamp""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.TRUE","false","false","true","true","true","String","""true""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_LANDSCAPE","true","false","false","true","true","String","""landscape""","","","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_SHUTTER","false","false","true","true","true","int","0x002","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_FOCAL_LENGTH","false","false","true","true","true","String","""focal-length""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.WHITE_BALANCE_TWILIGHT","true","false","false","true","true","String","""twilight""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.WHITE_BALANCE_AUTO","true","false","false","true","true","String","""auto""","","// Values for white balance settings.
","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_ERROR_UNKNOWN","true","false","false","true","true","int","1","","/**
 * Unspecified camerar error.  @see #ErrorCallback
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_JPEG_QUALITY","false","false","true","true","true","String","""jpeg-quality""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.FOCUS_MODE_AUTO","true","false","false","true","true","String","""auto""","","/**
 * Auto-focus mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_PICTURE_SIZE","false","false","true","true","true","String","""picture-size""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_SCENE_MODE","false","false","true","true","true","String","""scene-mode""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_MAX_ZOOM","false","false","true","true","true","String","""max-zoom""","","","\android\hardware\Camera.java"
"android.hardware.Camera.ANTIBANDING_OFF","true","false","false","true","true","String","""off""","","","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_ERROR","false","false","true","true","true","int","0x001","","// These match the enums in frameworks/base/include/ui/Camera.h
","\android\hardware\Camera.java"
"android.hardware.Camera.SUPPORTED_VALUES_SUFFIX","false","false","true","true","true","String","""-values""","","// Parameter key suffix for supported values.
","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_SEPIA","true","false","false","true","true","String","""sepia""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_NIGHT_PORTRAIT","true","false","false","true","true","String","""night-portrait""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_NIGHT","true","false","false","true","true","String","""night""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_FOCUS_MODE","false","false","true","true","true","String","""focus-mode""","","","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_RAW_IMAGE","false","false","true","true","true","int","0x080","","","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_NEGATIVE","true","false","false","true","true","String","""negative""","","","\android\hardware\Camera.java"
"android.hardware.EventHandler.mCamera","false","false","true","false","false","Camera","","","","\android\hardware\Camera.java"
"android.hardware.Camera.height","true","false","false","false","false","int","","","/**
 * height of the picture
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_JPEG_THUMBNAIL_QUALITY","false","false","true","true","true","String","""jpeg-thumbnail-quality""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.WHITE_BALANCE_INCANDESCENT","true","false","false","true","true","String","""incandescent""","","","\android\hardware\Camera.java"
"android.hardware.Camera.WHITE_BALANCE_WARM_FLUORESCENT","true","false","false","true","true","String","""warm-fluorescent""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_EXPOSURE_COMPENSATION_STEP","false","false","true","true","true","String","""exposure-compensation-step""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_EXPOSURE_COMPENSATION","false","false","true","true","true","String","""exposure-compensation""","","","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_POSTVIEW_FRAME","false","false","true","true","true","int","0x040","","","\android\hardware\Camera.java"
"android.hardware.Camera.mErrorCallback","false","false","true","false","false","ErrorCallback","","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_AUTO","true","false","false","true","true","String","""auto""","","// Values for scene mode settings.
","\android\hardware\Camera.java"
"android.hardware.Camera.FOCUS_MODE_INFINITY","true","false","false","true","true","String","""infinity""","","/**
 * Focus is set at infinity. Applications should not call
 * {@link #autoFocus(AutoFocusCallback)} in this mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.mNativeContext","false","false","true","false","false","int","","","// accessed by native methods
","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_ZOOM_SUPPORTED","false","false","true","true","true","String","""zoom-supported""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_SMOOTH_ZOOM_SUPPORTED","false","false","true","true","true","String","""smooth-zoom-supported""","","","\android\hardware\Camera.java"
"android.hardware.Camera.TRUE","false","false","true","true","true","String","""true""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_SOLARIZE","true","false","false","true","true","String","""solarize""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_FIREWORKS","true","false","false","true","true","String","""fireworks""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_NIGHT","true","false","false","true","true","String","""night""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_JPEG_THUMBNAIL_HEIGHT","false","false","true","true","true","String","""jpeg-thumbnail-height""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_JPEG_THUMBNAIL_SIZE","false","false","true","true","true","String","""jpeg-thumbnail-size""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_HORIZONTAL_VIEW_ANGLE","false","false","true","true","true","String","""horizontal-view-angle""","","","\android\hardware\Camera.java"
"android.hardware.Size.width","true","false","false","false","false","int","","","/**
 * width of the picture
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.FOCUS_MODE_EDOF","true","false","false","true","true","String","""edof""","","/**
 * Extended depth of field (EDOF). Focusing is done digitally and
 * continuously. Applications should not call {@link
 * #autoFocus(AutoFocusCallback)} in this mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.mPostviewCallback","false","false","true","false","false","PictureCallback","","","","\android\hardware\Camera.java"
"android.hardware.Parameters.PIXEL_FORMAT_YUV420SP","false","false","true","true","true","String","""yuv420sp""","","","\android\hardware\Camera.java"
"android.hardware.Camera.TAG","false","false","true","true","true","String","""Camera""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_STEADYPHOTO","true","false","false","true","true","String","""steadyphoto""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_SPORTS","true","false","false","true","true","String","""sports""","","","\android\hardware\Camera.java"
"android.hardware.Camera.WHITE_BALANCE_INCANDESCENT","true","false","false","true","true","String","""incandescent""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mMap","false","false","true","false","false","HashMap<String,String>","","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_BARCODE","true","false","false","true","true","String","""barcode""","","/**
 * Applications are looking for a barcode. Camera driver will be
 * optimized for barcode reading.
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.FOCUS_MODE_MACRO","true","false","false","true","true","String","""macro""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_ROTATION","false","false","true","true","true","String","""rotation""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.ANTIBANDING_50HZ","true","false","false","true","true","String","""50hz""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_PICTURE_FORMAT","false","false","true","true","true","String","""picture-format""","","","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_ALL_MSGS","false","false","true","true","true","int","0x1FF","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_JPEG_THUMBNAIL_SIZE","false","false","true","true","true","String","""jpeg-thumbnail-size""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_SPORTS","true","false","false","true","true","String","""sports""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_MAX_ZOOM","false","false","true","true","true","String","""max-zoom""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mCamera","false","false","true","false","false","Camera","","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_PORTRAIT","true","false","false","true","true","String","""portrait""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.ANTIBANDING_60HZ","true","false","false","true","true","String","""60hz""","","","\android\hardware\Camera.java"
"android.hardware.Camera.WHITE_BALANCE_FLUORESCENT","true","false","false","true","true","String","""fluorescent""","","","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_WHITEBOARD","true","false","false","true","true","String","""whiteboard""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SUPPORTED_VALUES_SUFFIX","false","false","true","true","true","String","""-values""","","// Parameter key suffix for supported values.
","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_GPS_PROCESSING_METHOD","false","false","true","true","true","String","""gps-processing-method""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.WHITE_BALANCE_WARM_FLUORESCENT","true","false","false","true","true","String","""warm-fluorescent""","","","\android\hardware\Camera.java"
"android.hardware.Camera.mShutterCallback","false","false","true","false","false","ShutterCallback","","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_PICTURE_FORMAT","false","false","true","true","true","String","""picture-format""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_BARCODE","true","false","false","true","true","String","""barcode""","","/**
 * Applications are looking for a barcode. Camera driver will be
 * optimized for barcode reading.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_PARTY","true","false","false","true","true","String","""party""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_ANTIBANDING","false","false","true","true","true","String","""antibanding""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_PICTURE_SIZE","false","false","true","true","true","String","""picture-size""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_ANTIBANDING","false","false","true","true","true","String","""antibanding""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_JPEG_THUMBNAIL_QUALITY","false","false","true","true","true","String","""jpeg-thumbnail-quality""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_FOCAL_LENGTH","false","false","true","true","true","String","""focal-length""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_GPS_ALTITUDE","false","false","true","true","true","String","""gps-altitude""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_GPS_LATITUDE","false","false","true","true","true","String","""gps-latitude""","","","\android\hardware\Camera.java"
"android.hardware.Camera.WHITE_BALANCE_AUTO","true","false","false","true","true","String","""auto""","","// Values for white balance settings.
","\android\hardware\Camera.java"
"android.hardware.Parameters.FLASH_MODE_AUTO","true","false","false","true","true","String","""auto""","","/**
 * Flash will be fired automatically when required. The flash may be fired
 * during preview, auto-focus, or snapshot depending on the driver.
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_WHITEBOARD","true","false","false","true","true","String","""whiteboard""","","","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_FOCUS","false","false","true","true","true","int","0x004","","","\android\hardware\Camera.java"
"android.hardware.Parameters.PIXEL_FORMAT_YUV422SP","false","false","true","true","true","String","""yuv422sp""","","// Formats for setPreviewFormat and setPictureFormat.
","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_ZOOM","false","false","true","true","true","int","0x008","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_JPEG_QUALITY","false","false","true","true","true","String","""jpeg-quality""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_FOCUS_MODE","false","false","true","true","true","String","""focus-mode""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_ROTATION","false","false","true","true","true","String","""rotation""","","","\android\hardware\Camera.java"
"android.hardware.Camera.PIXEL_FORMAT_JPEG","false","false","true","true","true","String","""jpeg""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.PIXEL_FORMAT_JPEG","false","false","true","true","true","String","""jpeg""","","","\android\hardware\Camera.java"
"android.hardware.Camera.WHITE_BALANCE_SHADE","true","false","false","true","true","String","""shade""","","","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_THEATRE","true","false","false","true","true","String","""theatre""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_FIREWORKS","true","false","false","true","true","String","""fireworks""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.EFFECT_SEPIA","true","false","false","true","true","String","""sepia""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_JPEG_THUMBNAIL_WIDTH","false","false","true","true","true","String","""jpeg-thumbnail-width""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.KEY_EFFECT","false","false","true","true","true","String","""effect""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_ZOOM","false","false","true","true","true","String","""zoom""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.SCENE_MODE_SNOW","true","false","false","true","true","String","""snow""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_VERTICAL_VIEW_ANGLE","false","false","true","true","true","String","""vertical-view-angle""","","","\android\hardware\Camera.java"
"android.hardware.Camera.EFFECT_POSTERIZE","true","false","false","true","true","String","""posterize""","","","\android\hardware\Camera.java"
"android.hardware.Camera.KEY_PREVIEW_SIZE","false","false","true","true","true","String","""preview-size""","","// Parameter keys to communicate with the camera driver.
","\android\hardware\Camera.java"
"android.hardware.Camera.SCENE_MODE_BEACH","true","false","false","true","true","String","""beach""","","","\android\hardware\Camera.java"
"android.hardware.Parameters.FOCUS_MODE_EDOF","true","false","false","true","true","String","""edof""","","/**
 * Extended depth of field (EDOF). Focusing is done digitally and
 * continuously. Applications should not call {@link
 * #autoFocus(AutoFocusCallback)} in this mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Parameters.FLASH_MODE_RED_EYE","true","false","false","true","true","String","""red-eye""","","/**
 * Flash will be fired in red-eye reduction mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.PIXEL_FORMAT_YUV420SP","false","false","true","true","true","String","""yuv420sp""","","","\android\hardware\Camera.java"
"android.hardware.Camera.CAMERA_MSG_VIDEO_FRAME","false","false","true","true","true","int","0x020","","","\android\hardware\Camera.java"
"android.hardware.Camera.FOCUS_MODE_FIXED","true","false","false","true","true","String","""fixed""","","/**
 * Focus is fixed. The camera is always in this mode if the focus is not
 * adjustable. If the camera has auto-focus, this mode can fix the
 * focus, which is usually at hyperfocal distance. Applications should
 * not call {@link #autoFocus(AutoFocusCallback)} in this mode.
 */
","\android\hardware\Camera.java"
"android.hardware.Camera.PIXEL_FORMAT_RGB565","false","false","true","true","true","String","""rgb565""","","","\android\hardware\Camera.java"
"android.net.http.HttpLog.LOGTAG","false","false","true","true","true","String","""http""","","","\android\net\http\HttpLog.java"
"android.net.http.HttpLog.DEBUG","false","false","true","true","true","boolean","false","","","\android\net\http\HttpLog.java"
"android.net.http.HttpLog.LOGV","false","false","false","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\android\net\http\HttpLog.java"
"android.view.ViewConfiguration.ZOOM_CONTROLS_TIMEOUT","false","false","true","true","true","int","3000","","/**
 * Defines the duration in milliseconds we want to display zoom controls in response
 * to a user panning within an application.
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.PAGING_TOUCH_SLOP","false","false","true","true","true","int","TOUCH_SLOP * 2","","/**
 * Distance a touch can wander before we think the user is attempting a paged scroll
 * (in dips)
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.JUMP_TAP_TIMEOUT","false","false","true","true","true","int","500","","/**
 * Defines the duration in milliseconds we will wait to see if a touch event
 * is a jump tap. If the user does not complete the jump tap within this interval, it is
 * considered to be a tap.
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.SCROLL_BAR_DEFAULT_DELAY","false","false","true","true","true","int","300","","/**
 * Default delay before the scrollbars fade in milliseconds
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.SCROLL_BAR_FADE_DURATION","false","false","true","true","true","int","250","","/**
 * Duration of the fade when scrollbars fade away in milliseconds
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mEdgeSlop","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.PRESSED_STATE_DURATION","false","false","true","true","true","int","125","","/**
 * Defines the duration in milliseconds of the pressed state in child
 * components.
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.sConfigurations","false","false","true","true","true","SparseArray<ViewConfiguration>","new SparseArray<ViewConfiguration>(2)","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.TAP_TIMEOUT","false","false","true","true","true","int","115","","/**
 * Defines the duration in milliseconds we will wait to see if a touch event
 * is a tap or a scroll. If the user does not move within this interval, it is
 * considered to be a tap.
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.FADING_EDGE_LENGTH","false","false","true","true","true","int","12","","/**
 * Defines the length of the fading edges in pixels
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mTouchSlop","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mMaximumDrawingCacheSize","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mDoubleTapSlop","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mFadingEdgeLength","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mPagingTouchSlop","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.TOUCH_SLOP","false","false","true","true","true","int","16","","/**
 * Distance a touch can wander before we think the user is scrolling in pixels
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.MAXIMUM_FLING_VELOCITY","false","false","true","true","true","int","4000","","/**
 * Maximum velocity to initiate a fling, as measured in pixels per second
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mScrollbarSize","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.MAXIMUM_DRAWING_CACHE_SIZE","false","false","true","true","true","int","320 * 480 * 4","@Deprecated","/**
 * The maximum size of View's drawing cache, expressed in bytes. This size
 * should be at least equal to the size of the screen in ARGB888 format.
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mMinimumFlingVelocity","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.MINIMUM_FLING_VELOCITY","false","false","true","true","true","int","50","","/**
 * Minimum velocity to initiate a fling, as measured in pixels per second
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mWindowTouchSlop","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.WINDOW_TOUCH_SLOP","false","false","true","true","true","int","16","","/**
 * Distance a touch needs to be outside of a window's bounds for it to
 * count as outside for purposes of dismissing the window.
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.mMaximumFlingVelocity","false","false","true","false","true","int","","","","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.SCROLL_BAR_SIZE","false","false","true","true","true","int","10","","/**
 * Defines the width of the horizontal scrollbar and the height of the vertical scrollbar in
 * pixels
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.DOUBLE_TAP_TIMEOUT","false","false","true","true","true","int","300","","/**
 * Defines the duration in milliseconds between the first tap's up event and
 * the second tap's down event for an interaction to be considered a
 * double-tap.
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.SCROLL_FRICTION","false","false","true","true","false","float","0.015f","","/**
 * The coefficient of friction applied to flings/scrolls.
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.GLOBAL_ACTIONS_KEY_TIMEOUT","false","false","true","true","true","int","500","","/**
 * Defines the duration in milliseconds a user needs to hold down the
 * appropriate button to bring up the global actions dialog (power off,
 * lock screen, etc).
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.DOUBLE_TAP_SLOP","false","false","true","true","true","int","100","","/**
 * Distance between the first touch and second touch to still be considered a double tap
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.LONG_PRESS_TIMEOUT","false","false","true","true","true","int","500","","/**
 * Defines the duration in milliseconds before a press turns into
 * a long press
 */
","\android\view\ViewConfiguration.java"
"android.view.ViewConfiguration.EDGE_SLOP","false","false","true","true","true","int","12","","/**
 * Inset in pixels to look for touchable content when the user touches the edge of the screen
 */
","\android\view\ViewConfiguration.java"
"android.accounts.AuthenticatorDescription.labelId","true","false","false","false","true","int","","","/**
 * A resource id of a label for the authenticator that is suitable for displaying
 */
","\android\accounts\AuthenticatorDescription.java"
"android.accounts.AuthenticatorDescription.type","true","false","false","false","true","String","","","/**
 * The string that uniquely identifies an authenticator
 */
","\android\accounts\AuthenticatorDescription.java"
"android.accounts.AuthenticatorDescription.smallIconId","true","false","false","false","true","int","","","/**
 * A resource id of a smaller icon for the authenticator
 */
","\android\accounts\AuthenticatorDescription.java"
"android.accounts.AuthenticatorDescription.CREATOR","true","false","false","true","true","Creator<AuthenticatorDescription>","new Creator<AuthenticatorDescription>() {

    /**
     * @inheritDoc
     */
    public AuthenticatorDescription createFromParcel(Parcel source) {
        return new AuthenticatorDescription(source);
    }

    /**
     * @inheritDoc
     */
    public AuthenticatorDescription[] newArray(int size) {
        return new AuthenticatorDescription[size];
    }
}","","/**
 * Used to create the object from a parcel.
 */
","\android\accounts\AuthenticatorDescription.java"
"android.accounts.AuthenticatorDescription.accountPreferencesId","true","false","false","false","true","int","","","/**
 * A resource id for a hierarchy of PreferenceScreen to be added to the settings page for the
 * account. See {@link AbstractAccountAuthenticator} for an example.
 */
","\android\accounts\AuthenticatorDescription.java"
"android.accounts.AuthenticatorDescription.iconId","true","false","false","false","true","int","","","/**
 * A resource id of a icon for the authenticator
 */
","\android\accounts\AuthenticatorDescription.java"
"android.accounts.AuthenticatorDescription.packageName","true","false","false","false","true","String","","","/**
 * The package name that can be used to lookup the resources from above.
 */
","\android\accounts\AuthenticatorDescription.java"
"android.webkit.CacheSaveData.mUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mListener","false","false","false","false","false","LoadListener","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_ADD_STREAMLOADER","false","false","false","true","true","int","101","","// message ids
","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_CACHE_TRANSACTION_TICKER","false","false","false","true","true","int","110","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheCreateData.mUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_PAUSE_CACHE_TRANSACTION","false","false","false","true","true","int","111","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheCreateData.mMimeType","false","false","false","false","false","String","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_TRIM_CACHE","false","false","false","true","true","int","108","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheEncoding.mListener","false","false","false","false","false","LoadListener","","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheCreateData.mPostId","false","false","false","false","false","long","","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheSaveData.mListener","false","false","false","false","false","LoadListener","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mPostId","false","false","false","false","false","long","","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheData.mListener","false","false","false","false","false","LoadListener","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mStatusCode","false","false","false","false","false","int","","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheCreateData.mListener","false","false","false","false","false","LoadListener","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_REMOVE_CACHE","false","false","false","true","true","int","107","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheCreateData.mStatusCode","false","false","false","false","false","int","","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheData.mChunk","false","false","false","false","false","ByteArrayBuilder.Chunk","","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheCreateData.mHeaders","false","false","false","false","false","Headers","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_UPDATE_CACHE_ENCODING","false","false","false","true","true","int","104","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mEncoding","false","false","false","false","false","String","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mChunk","false","false","false","false","false","ByteArrayBuilder.Chunk","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_RESUME_CACHE_TRANSACTION","false","false","false","true","true","int","112","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_ADD_HTTPLOADER","false","false","false","true","true","int","102","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheEncoding.mEncoding","false","false","false","false","false","String","","","","\android\webkit\WebViewWorker.java"
"android.webkit.CacheSaveData.mPostId","false","false","false","false","false","long","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_APPEND_CACHE","false","false","false","true","true","int","105","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_CLEAR_CACHE","false","false","false","true","true","int","109","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.sWorkerHandler","false","false","true","true","false","WebViewWorker","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.THREAD_NAME","false","false","true","true","true","String","""WebViewWorkerThread""","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mCacheResultMap","false","false","true","true","false","Map<LoadListener,CacheManager.CacheResult>","new HashMap<LoadListener, CacheManager.CacheResult>()","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mCacheTickersBlocked","false","false","true","true","false","boolean","true","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.CACHE_TRANSACTION_TICKER_INTERVAL","false","false","true","true","true","int","60 * 1000","","// trigger transaction once a minute
","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mHeaders","false","false","false","false","false","Headers","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.mMimeType","false","false","false","false","false","String","","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_CREATE_CACHE","false","false","false","true","true","int","103","","","\android\webkit\WebViewWorker.java"
"android.webkit.WebViewWorker.MSG_SAVE_CACHE","false","false","false","true","true","int","106","","","\android\webkit\WebViewWorker.java"
"android.text.method.DateTimeKeyListener.CHARACTERS","true","false","false","true","true","char","new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'm', 'p', ':', '/', '-', ' ' }","","/**
 * The characters that are used.
 *
 * @see KeyEvent#getMatch
 * @see #getAcceptedChars
 */
","\android\text\method\DateTimeKeyListener.java"
"android.text.method.DateTimeKeyListener.sInstance","false","false","true","true","false","DateTimeKeyListener","","","","\android\text\method\DateTimeKeyListener.java"
"com.android.internal.view.menu.MenuDialogHelper.mAdapter","false","false","true","false","false","ListAdapter","","","","\com\android\internal\view\menu\MenuDialogHelper.java"
"com.android.internal.view.menu.MenuDialogHelper.mDialog","false","false","true","false","false","AlertDialog","","","","\com\android\internal\view\menu\MenuDialogHelper.java"
"com.android.internal.view.menu.MenuDialogHelper.mMenu","false","false","true","false","false","MenuBuilder","","","","\com\android\internal\view\menu\MenuDialogHelper.java"
"android.os.BatteryStats.SIGNAL_SCANNING_TIME_DATA","false","false","true","true","true","String","""sst""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SIGNAL_STRENGTH_GOOD","true","false","false","true","true","int","3","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.STATS_TOTAL","true","false","false","true","true","int","0","","/**
 * Include all of the data in the stats, including previously saved data.
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.WAKE_TYPE_WINDOW","true","false","false","true","true","int","2","","/**
 * A constant indicating a window wake lock timer.
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.BATTERY_DATA","false","false","true","true","true","String","""bt""","","","\android\os\BatteryStats.java"
"android.os.Uid.GPS","true","false","false","true","true","int","-10000","","// Magic sensor number for the GPS.
","\android\os\BatteryStats.java"
"android.os.BatteryStats.SCREEN_BRIGHTNESS_NAMES","false","false","false","true","true","String","{ ""dark"", ""dim"", ""medium"", ""light"", ""bright"" }","","","\android\os\BatteryStats.java"
"android.os.Uid.USER_ACTIVITY_TYPES","false","false","false","true","true","String","{ ""other"", ""cheek"", ""touch"", ""long_touch"", ""touch_up"", ""button"", ""unknown"" }","","/**
 * Note that these must match the constants in android.os.LocalPowerManager.
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.SCREEN_BRIGHTNESS_DATA","false","false","true","true","true","String","""br""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.STATS_UNPLUGGED","true","false","false","true","true","int","3","","/**
 * Include only the run since the last time the device was unplugged in the stats.
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.SCREEN_BRIGHTNESS_LIGHT","true","false","false","true","true","int","3","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.DATA_CONNECTION_COUNT_DATA","false","false","true","true","true","String","""dcc""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.WIFI_MULTICAST_ENABLED","true","false","false","true","true","int","7","","/**
 * A constant indicating a wifi multicast timer
 *
 * {@hide}
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.DATA_CONNECTION_TIME_DATA","false","false","true","true","true","String","""dct""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.WIFI_LOCK_DATA","false","false","true","true","true","String","""wfl""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.DATA_CONNECTION_EDGE","true","false","false","true","true","int","2","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SCREEN_BRIGHTNESS_DIM","true","false","false","true","true","int","1","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.VIDEO_TURNED_ON","true","false","false","true","true","int","8","","/**
 * A constant indicating a video turn on timer
 *
 * {@hide}
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.APK_DATA","false","false","true","true","true","String","""apk""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.NUM_USER_ACTIVITY_TYPES","true","false","false","true","true","int","7","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.USER_ACTIVITY_DATA","false","false","true","true","true","String","""ua""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SIGNAL_STRENGTH_NAMES","false","false","false","true","true","String","{ ""none"", ""poor"", ""moderate"", ""good"", ""great"" }","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SIGNAL_STRENGTH_TIME_DATA","false","false","true","true","true","String","""sgt""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.NUM_SIGNAL_STRENGTH_BINS","true","false","false","true","true","int","5","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.STATS_CURRENT","true","false","false","true","true","int","2","","/**
 * Include only the current run in the stats.
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.SIGNAL_STRENGTH_NONE_OR_UNKNOWN","true","false","false","true","true","int","0","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.USER_ACTIVITY_TYPES","false","false","false","true","true","String","{ ""other"", ""cheek"", ""touch"", ""long_touch"", ""touch_up"", ""button"", ""unknown"" }","","/**
 * Note that these must match the constants in android.os.LocalPowerManager.
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.mFormatter","false","false","true","false","true","Formatter","new Formatter(mFormatBuilder)","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.STATS_LAST","true","false","false","true","true","int","1","","/**
 * Include only the last run in the stats.
 */
","\android\os\BatteryStats.java"
"android.os.Sensor.GPS","true","false","false","true","true","int","-10000","","// Magic sensor number for the GPS.
","\android\os\BatteryStats.java"
"android.os.BatteryStats.DATA_CONNECTION_NONE","true","false","false","true","true","int","0","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.WAKELOCK_DATA","false","false","true","true","true","String","""wl""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.BYTES_PER_MB","false","false","true","true","true","long","1048576","","// 1024^2
","\android\os\BatteryStats.java"
"android.os.BatteryStats.mFormatBuilder","false","false","true","false","true","StringBuilder","new StringBuilder(32)","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.AUDIO_TURNED_ON","true","false","false","true","true","int","7","","/**
 * A constant indicating an audio turn on timer
 *
 * {@hide}
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.FULL_WIFI_LOCK","true","false","false","true","true","int","5","","/**
 * A constant indicating a full wifi lock timer
 *
 * {@hide}
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.DATA_CONNECTION_UMTS","true","false","false","true","true","int","3","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.KERNEL_WAKELOCK_DATA","false","false","true","true","true","String","""kwl""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.WIFI_TURNED_ON","true","false","false","true","true","int","4","","/**
 * A constant indicating a a wifi turn on timer
 *
 * {@hide}
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.SENSOR","true","false","false","true","true","int","3","","/**
 * A constant indicating a sensor timer.
 *
 * {@hide}
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.NUM_SCREEN_BRIGHTNESS_BINS","true","false","false","true","true","int","5","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.BYTES_PER_KB","false","false","true","true","true","long","1024","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.NETWORK_DATA","false","false","true","true","true","String","""nt""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.PROCESS_DATA","false","false","true","true","true","String","""pr""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SIGNAL_STRENGTH_POOR","true","false","false","true","true","int","1","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.NUM_DATA_CONNECTION_TYPES","true","false","false","true","true","int","5","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SCREEN_BRIGHTNESS_MEDIUM","true","false","false","true","true","int","2","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.STAT_NAMES","false","false","true","true","true","String","{ ""t"", ""l"", ""c"", ""u"" }","","// and ""unplugged"". They were shortened for effeciency sake.
","\android\os\BatteryStats.java"
"android.os.BatteryStats.SCAN_WIFI_LOCK","true","false","false","true","true","int","6","","/**
 * A constant indicating a scan wifi lock timer
 *
 * {@hide}
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.SIGNAL_STRENGTH_COUNT_DATA","false","false","true","true","true","String","""sgc""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.MISC_DATA","false","false","true","true","true","String","""m""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SCREEN_BRIGHTNESS_DARK","true","false","false","true","true","int","0","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SENSOR_DATA","false","false","true","true","true","String","""sr""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.BATTERY_STATS_CHECKIN_VERSION","false","false","true","true","true","int","5","","/**
 * Bump the version on this if the checkin format changes.
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.DATA_CONNECTION_OTHER","true","false","false","true","true","int","4","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SIGNAL_STRENGTH_MODERATE","true","false","false","true","true","int","2","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.GPS","true","false","false","true","true","int","-10000","","// Magic sensor number for the GPS.
","\android\os\BatteryStats.java"
"android.os.BatteryStats.SIGNAL_STRENGTH_GREAT","true","false","false","true","true","int","4","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.DATA_CONNECTION_GPRS","true","false","false","true","true","int","1","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.WAKE_TYPE_FULL","true","false","false","true","true","int","1","","/**
 * A constant indicating a full wake lock timer.
 */
","\android\os\BatteryStats.java"
"android.os.Uid.NUM_USER_ACTIVITY_TYPES","true","false","false","true","true","int","7","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.SCREEN_BRIGHTNESS_BRIGHT","true","false","false","true","true","int","4","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.WAKE_TYPE_PARTIAL","true","false","false","true","true","int","0","","/**
 * A constant indicating a partial wake lock timer.
 */
","\android\os\BatteryStats.java"
"android.os.BatteryStats.DATA_CONNECTION_NAMES","false","false","false","true","true","String","{ ""none"", ""gprs"", ""edge"", ""umts"", ""other"" }","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.BATTERY_LEVEL_DATA","false","false","true","true","true","String","""lv""","","","\android\os\BatteryStats.java"
"android.os.BatteryStats.BYTES_PER_GB","false","false","true","true","true","long","1073741824","","// 1024^3
","\android\os\BatteryStats.java"
"android.os.BatteryStats.LOCAL_LOGV","false","false","true","true","true","boolean","false","","","\android\os\BatteryStats.java"
"android.content.res.XmlBlock.mStarted","false","false","true","false","false","boolean","false","","","\android\content\res\XmlBlock.java"
"android.content.res.Parser.mParseState","false","false","false","false","false","int","","","/*package*/
","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mNative","false","false","true","false","true","int","","","","\android\content\res\XmlBlock.java"
"android.content.res.Parser.mDecNextDepth","false","false","true","false","false","boolean","false","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mOpenCount","false","false","true","false","false","int","1","","","\android\content\res\XmlBlock.java"
"android.content.res.Parser.mEventType","false","false","true","false","false","int","START_DOCUMENT","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mDepth","false","false","true","false","false","int","0","","","\android\content\res\XmlBlock.java"
"android.content.res.Parser.mBlock","false","false","true","false","true","XmlBlock","","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mOpen","false","false","true","false","false","boolean","true","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mParseState","false","false","false","false","false","int","","","/*package*/
","\android\content\res\XmlBlock.java"
"android.content.res.Parser.mDepth","false","false","true","false","false","int","0","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mStrings","false","false","true","false","true","StringBlock","","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mEventType","false","false","true","false","false","int","START_DOCUMENT","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.DEBUG","false","false","true","true","true","boolean","false","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mAssets","false","false","true","false","true","AssetManager","","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mBlock","false","false","true","false","true","XmlBlock","","","","\android\content\res\XmlBlock.java"
"android.content.res.XmlBlock.mDecNextDepth","false","false","true","false","false","boolean","false","","","\android\content\res\XmlBlock.java"
"android.content.res.Parser.mStarted","false","false","true","false","false","boolean","false","","","\android\content\res\XmlBlock.java"
"android.os.ParcelFileDescriptor.MODE_WORLD_WRITEABLE","true","false","false","true","true","int","0x00000002","","/**
 * For use with {@link #open}: if {@link #MODE_CREATE} has been supplied
 * and this file doesn't already exist, then create the file with
 * permissions such that any application can write it.
 */
","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.MODE_READ_WRITE","true","false","false","true","true","int","0x30000000","","/**
 * For use with {@link #open}: open the file with read and write access.
 */
","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.mClosed","false","false","true","false","false","boolean","","","","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.MODE_READ_ONLY","true","false","false","true","true","int","0x10000000","","/**
 * For use with {@link #open}: open the file with read-only access.
 */
","\android\os\ParcelFileDescriptor.java"
"android.os.AutoCloseOutputStream.mFd","false","false","true","false","true","ParcelFileDescriptor","","","","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.MODE_APPEND","true","false","false","true","true","int","0x02000000","","/**
 * For use with {@link #open}: append to end of file while writing.
 */
","\android\os\ParcelFileDescriptor.java"
"android.os.AutoCloseInputStream.mFd","false","false","true","false","true","ParcelFileDescriptor","","","","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.mFd","false","false","true","false","true","ParcelFileDescriptor","","","","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.mParcelDescriptor","false","false","true","false","true","ParcelFileDescriptor","","","// in this particular case fd.close might be invoked twice.
","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.MODE_WORLD_READABLE","true","false","false","true","true","int","0x00000001","","/**
 * For use with {@link #open}: if {@link #MODE_CREATE} has been supplied
 * and this file doesn't already exist, then create the file with
 * permissions such that any application can read it.
 */
","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.mFileDescriptor","false","false","true","false","true","FileDescriptor","","","","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.MODE_CREATE","true","false","false","true","true","int","0x08000000","","/**
 * For use with {@link #open}: create the file if it doesn't already exist.
 */
","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.MODE_WRITE_ONLY","true","false","false","true","true","int","0x20000000","","/**
 * For use with {@link #open}: open the file with write-only access.
 */
","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.CREATOR","true","false","false","true","true","Parcelable.Creator<ParcelFileDescriptor>","new Parcelable.Creator<ParcelFileDescriptor>() {

    public ParcelFileDescriptor createFromParcel(Parcel in) {
        return in.readFileDescriptor();
    }

    public ParcelFileDescriptor[] newArray(int size) {
        return new ParcelFileDescriptor[size];
    }
}","","","\android\os\ParcelFileDescriptor.java"
"android.os.ParcelFileDescriptor.MODE_TRUNCATE","true","false","false","true","true","int","0x04000000","","/**
 * For use with {@link #open}: erase contents of file when opening.
 */
","\android\os\ParcelFileDescriptor.java"
"android.text.style.RelativeSizeSpan.mProportion","false","false","true","false","true","float","","","","\android\text\style\RelativeSizeSpan.java"
"android.content.pm.PackageInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<PackageInfo>","new Parcelable.Creator<PackageInfo>() {

    public PackageInfo createFromParcel(Parcel source) {
        return new PackageInfo(source);
    }

    public PackageInfo[] newArray(int size) {
        return new PackageInfo[size];
    }
}","","","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.permissions","true","false","false","false","false","PermissionInfo","","","/**
 * Array of all {@link android.R.styleable#AndroidManifestPermission
 * &lt;permission&gt;} tags included under &lt;manifest&gt;,
 * or null if there were none.  This is only filled in if the flag
 * {@link PackageManager#GET_PERMISSIONS} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.instrumentation","true","false","false","false","false","InstrumentationInfo","","","/**
 * Array of all {@link android.R.styleable#AndroidManifestInstrumentation
 * &lt;instrumentation&gt;} tags included under &lt;manifest&gt;,
 * or null if there were none.  This is only filled in if the flag
 * {@link PackageManager#GET_INSTRUMENTATION} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.applicationInfo","true","false","false","false","false","ApplicationInfo","","","/**
 * Information collected from the &lt;application&gt; tag, or null if
 * there was none.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.configPreferences","true","false","false","false","false","ConfigurationInfo","","","/**
 * Application specified preferred configuration
 * {@link android.R.styleable#AndroidManifestUsesConfiguration
 * &lt;uses-configuration&gt;} tags included under &lt;manifest&gt;,
 * or null if there were none. This is only filled in if the flag
 * {@link PackageManager#GET_CONFIGURATIONS} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.sharedUserId","true","false","false","false","false","String","","","/**
 * The shared user ID name of this package, as specified by the &lt;manifest&gt;
 * tag's {@link android.R.styleable#AndroidManifest_sharedUserId sharedUserId}
 * attribute.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.installLocation","true","false","false","false","false","int","INSTALL_LOCATION_INTERNAL_ONLY","","/**
 * The install location requested by the activity.  From the
 * {@link android.R.attr#installLocation} attribute, one of
 * {@link #INSTALL_LOCATION_AUTO},
 * {@link #INSTALL_LOCATION_INTERNAL_ONLY},
 * {@link #INSTALL_LOCATION_PREFER_EXTERNAL}
 * @hide
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.reqFeatures","true","false","false","false","false","FeatureInfo","","","/**
 * The features that this application has said it requires.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.services","true","false","false","false","false","ServiceInfo","","","/**
 * Array of all {@link android.R.styleable#AndroidManifestService
 * &lt;service&gt;} tags included under &lt;application&gt;,
 * or null if there were none.  This is only filled in if the flag
 * {@link PackageManager#GET_SERVICES} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.versionName","true","false","false","false","false","String","","","/**
 * The version name of this package, as specified by the &lt;manifest&gt;
 * tag's {@link android.R.styleable#AndroidManifest_versionName versionName}
 * attribute.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.INSTALL_LOCATION_AUTO","true","false","false","true","true","int","0","","/**
 * Constant corresponding to <code>auto</code> in
 * the {@link android.R.attr#installLocation} attribute.
 * @hide
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.gids","true","false","false","false","false","int","","","/**
 * All kernel group-IDs that have been assigned to this package.
 * This is only filled in if the flag {@link PackageManager#GET_GIDS} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.INSTALL_LOCATION_PREFER_EXTERNAL","true","false","false","true","true","int","2","","/**
 * Constant corresponding to <code>preferExternal</code> in
 * the {@link android.R.attr#installLocation} attribute.
 * @hide
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.activities","true","false","false","false","false","ActivityInfo","","","/**
 * Array of all {@link android.R.styleable#AndroidManifestActivity
 * &lt;activity&gt;} tags included under &lt;application&gt;,
 * or null if there were none.  This is only filled in if the flag
 * {@link PackageManager#GET_ACTIVITIES} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.requestedPermissions","true","false","false","false","false","String","","","/**
 * Array of all {@link android.R.styleable#AndroidManifestUsesPermission
 * &lt;uses-permission&gt;} tags included under &lt;manifest&gt;,
 * or null if there were none.  This is only filled in if the flag
 * {@link PackageManager#GET_PERMISSIONS} was set.  This list includes
 * all permissions requested, even those that were not granted or known
 * by the system at install time.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.providers","true","false","false","false","false","ProviderInfo","","","/**
 * Array of all {@link android.R.styleable#AndroidManifestProvider
 * &lt;provider&gt;} tags included under &lt;application&gt;,
 * or null if there were none.  This is only filled in if the flag
 * {@link PackageManager#GET_PROVIDERS} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.INSTALL_LOCATION_UNSPECIFIED","true","false","false","true","true","int","-1","","/**
 * Constant corresponding to <code>auto</code> in
 * the {@link android.R.attr#installLocation} attribute.
 * @hide
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.receivers","true","false","false","false","false","ActivityInfo","","","/**
 * Array of all {@link android.R.styleable#AndroidManifestReceiver
 * &lt;receiver&gt;} tags included under &lt;application&gt;,
 * or null if there were none.  This is only filled in if the flag
 * {@link PackageManager#GET_RECEIVERS} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.INSTALL_LOCATION_INTERNAL_ONLY","true","false","false","true","true","int","1","","/**
 * Constant corresponding to <code>internalOnly</code> in
 * the {@link android.R.attr#installLocation} attribute.
 * @hide
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.sharedUserLabel","true","false","false","false","false","int","","","/**
 * The shared user ID label of this package, as specified by the &lt;manifest&gt;
 * tag's {@link android.R.styleable#AndroidManifest_sharedUserLabel sharedUserLabel}
 * attribute.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.signatures","true","false","false","false","false","Signature","","","/**
 * Array of all signatures read from the package file.  This is only filled
 * in if the flag {@link PackageManager#GET_SIGNATURES} was set.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.packageName","true","false","false","false","false","String","","","/**
 * The name of this package.  From the &lt;manifest&gt; tag's ""name""
 * attribute.
 */
","\android\content\pm\PackageInfo.java"
"android.content.pm.PackageInfo.versionCode","true","false","false","false","false","int","","","/**
 * The version number of this package, as specified by the &lt;manifest&gt;
 * tag's {@link android.R.styleable#AndroidManifest_versionCode versionCode}
 * attribute.
 */
","\android\content\pm\PackageInfo.java"
"android.widget.DigitalClock.mFormatChangeObserver","false","false","true","false","false","FormatChangeObserver","","","","\android\widget\DigitalClock.java"
"android.widget.DigitalClock.mTicker","false","false","true","false","false","Runnable","","","","\android\widget\DigitalClock.java"
"android.widget.DigitalClock.mHandler","false","false","true","false","false","Handler","","","","\android\widget\DigitalClock.java"
"android.widget.DigitalClock.m24","false","false","true","true","true","String","""k:mm:ss""","","","\android\widget\DigitalClock.java"
"android.widget.DigitalClock.m12","false","false","true","true","true","String","""h:mm:ss aa""","","","\android\widget\DigitalClock.java"
"android.widget.DigitalClock.mCalendar","false","false","false","false","false","Calendar","","","","\android\widget\DigitalClock.java"
"android.widget.DigitalClock.mFormat","false","false","false","false","false","String","","","","\android\widget\DigitalClock.java"
"android.widget.DigitalClock.mTickerStopped","false","false","true","false","false","boolean","false","","","\android\widget\DigitalClock.java"
"android.content.WorkerArgs.handler","true","false","false","false","false","Handler","","","","\android\content\AsyncQueryHandler.java"
"android.content.WorkerArgs.cookie","true","false","false","false","false","Object","","","","\android\content\AsyncQueryHandler.java"
"android.content.WorkerArgs.projection","true","false","false","false","false","String","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.projection","true","false","false","false","false","String","","","","\android\content\AsyncQueryHandler.java"
"android.content.WorkerArgs.uri","true","false","false","false","false","Uri","","","","\android\content\AsyncQueryHandler.java"
"android.content.WorkerArgs.orderBy","true","false","false","false","false","String","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.cookie","true","false","false","false","false","Object","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.EVENT_ARG_INSERT","false","false","true","true","true","int","2","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.EVENT_ARG_DELETE","false","false","true","true","true","int","4","","","\android\content\AsyncQueryHandler.java"
"android.content.WorkerArgs.selection","true","false","false","false","false","String","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.TAG","false","false","true","true","true","String","""AsyncQuery""","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.uri","true","false","false","false","false","Uri","","","","\android\content\AsyncQueryHandler.java"
"android.content.WorkerArgs.result","true","false","false","false","false","Object","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.mResolver","false","false","false","false","true","WeakReference<ContentResolver>","","","/* package */
","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.EVENT_ARG_UPDATE","false","false","true","true","true","int","3","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.mWorkerThreadHandler","false","false","true","false","false","Handler","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.selectionArgs","true","false","false","false","false","String","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.localLOGV","false","false","true","true","true","boolean","false","","","\android\content\AsyncQueryHandler.java"
"android.content.WorkerArgs.values","true","false","false","false","false","ContentValues","","","","\android\content\AsyncQueryHandler.java"
"android.content.WorkerArgs.selectionArgs","true","false","false","false","false","String","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.EVENT_ARG_QUERY","false","false","true","true","true","int","1","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.result","true","false","false","false","false","Object","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.handler","true","false","false","false","false","Handler","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.sLooper","false","false","true","true","false","Looper","null","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.selection","true","false","false","false","false","String","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.orderBy","true","false","false","false","false","String","","","","\android\content\AsyncQueryHandler.java"
"android.content.AsyncQueryHandler.values","true","false","false","false","false","ContentValues","","","","\android\content\AsyncQueryHandler.java"
"android.accounts.AccountManager.KEY_ERROR_CODE","true","false","false","true","true","String","""errorCode""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.AUTHENTICATOR_META_DATA_NAME","true","false","false","true","true","String","""android.accounts.AccountAuthenticator""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mFeatures","false","false","false","false","true","String","","","","\android\accounts\AccountManager.java"
"android.accounts.BaseFutureTask.mHandler","false","false","false","false","true","Handler","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.ERROR_CODE_BAD_REQUEST","true","false","false","true","true","int","8","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.ERROR_CODE_REMOTE_EXCEPTION","true","false","false","true","true","int","1","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.ERROR_CODE_NETWORK_ERROR","true","false","false","true","true","int","3","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_USERDATA","true","false","false","true","true","String","""userdata""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mNumAccounts","false","false","true","false","false","int","0","","","\android\accounts\AccountManager.java"
"android.accounts.GetAuthTokenByTypeAndFeaturesTask.mNumAccounts","false","false","true","false","false","int","0","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.TAG","false","false","true","true","true","String","""AccountManager""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_ACCOUNT_TYPE","true","false","false","true","true","String","""accountType""","","/**
 * The Bundle key used for the {@link String} account type in results
 * from methods which return information about a particular account.
 */
","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mActivity","false","false","false","false","true","Activity","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.ERROR_CODE_INVALID_RESPONSE","true","false","false","true","true","int","5","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mMyCallback","false","false","false","false","true","AccountManagerCallback<Bundle>","","","","\android\accounts\AccountManager.java"
"android.accounts.AmsTask.mActivity","false","false","false","false","true","Activity","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.ERROR_CODE_CANCELED","true","false","false","true","true","int","4","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_ACCOUNTS","true","false","false","true","true","String","""accounts""","","","\android\accounts\AccountManager.java"
"android.accounts.GetAuthTokenByTypeAndFeaturesTask.mAddAccountOptions","false","false","false","false","true","Bundle","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.ERROR_CODE_BAD_ARGUMENTS","true","false","false","true","true","int","7","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_ACCOUNT_MANAGER_RESPONSE","true","false","false","true","true","String","""accountManagerResponse""","","","\android\accounts\AccountManager.java"
"android.accounts.AmsTask.mResponse","false","false","false","false","true","IAccountManagerResponse","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mLoginOptions","false","false","false","false","true","Bundle","","","","\android\accounts\AccountManager.java"
"android.accounts.AmsTask.mCallback","false","false","false","false","true","AccountManagerCallback<Bundle>","","","","\android\accounts\AccountManager.java"
"android.accounts.GetAuthTokenByTypeAndFeaturesTask.mFeatures","false","false","false","false","true","String","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.ACTION_AUTHENTICATOR_INTENT","true","false","false","true","true","String","""android.accounts.AccountAuthenticator""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mFuture","false","false","false","false","false","AccountManagerFuture<Bundle>","null","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_BOOLEAN_RESULT","true","false","false","true","true","String","""booleanResult""","","","\android\accounts\AccountManager.java"
"android.accounts.BaseFutureTask.mResponse","true","false","false","false","true","IAccountManagerResponse","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_ACCOUNT_NAME","true","false","false","true","true","String","""authAccount""","","/**
 * The Bundle key used for the {@link String} account name in results
 * from methods which return information about a particular account.
 */
","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_ERROR_MESSAGE","true","false","false","true","true","String","""errorMessage""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mContext","false","false","true","false","true","Context","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_AUTH_TOKEN_LABEL","true","false","false","true","true","String","""authTokenLabelKey""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mAccountType","false","false","false","false","true","String","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mCallback","false","false","false","false","true","AccountManagerCallback<T>","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mAccountsChangedBroadcastReceiver","false","false","true","false","true","BroadcastReceiver","new BroadcastReceiver() {

    public void onReceive(final Context context, final Intent intent) {
        final Account[] accounts = getAccounts();
        // send the result to the listeners
        synchronized (mAccountsUpdatedListeners) {
            for (Map.Entry<OnAccountsUpdateListener, Handler> entry : mAccountsUpdatedListeners.entrySet()) {
                postToHandler(entry.getValue(), entry.getKey(), accounts);
            }
        }
    }
}","","/**
 * BroadcastReceiver that listens for the LOGIN_ACCOUNTS_CHANGED_ACTION intent
 * so that it can read the updated list of accounts and send them to the listener
 * in mAccountsUpdatedListeners.
 */
","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mResponse","true","false","false","false","true","IAccountManagerResponse","","","","\android\accounts\AccountManager.java"
"android.accounts.GetAuthTokenByTypeAndFeaturesTask.mFuture","false","false","false","false","false","AccountManagerFuture<Bundle>","null","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_AUTH_FAILED_MESSAGE","true","false","false","true","true","String","""authFailedMessage""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mAccountsUpdatedListeners","false","false","true","false","true","HashMap<OnAccountsUpdateListener,Handler>","Maps.newHashMap()","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.ERROR_CODE_UNSUPPORTED_OPERATION","true","false","false","true","true","int","6","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_AUTHTOKEN","true","false","false","true","true","String","""authtoken""","","/**
 * The Bundle key used for the auth token value in results
 * from {@link #getAuthToken} and friends.
 */
","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE","true","false","false","true","true","String","""accountAuthenticatorResponse""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.LOGIN_ACCOUNTS_CHANGED_ACTION","true","false","false","true","true","String","""android.accounts.LOGIN_ACCOUNTS_CHANGED""","","/**
 * Action sent as a broadcast Intent by the AccountsService
 * when accounts are added, accounts are removed, or an
 * account's credentials (saved password, etc) are changed.
 *
 * @see #addOnAccountsUpdatedListener
 */
","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mService","false","false","true","false","true","IAccountManager","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mMainHandler","false","false","true","false","true","Handler","","","","\android\accounts\AccountManager.java"
"android.accounts.GetAuthTokenByTypeAndFeaturesTask.mMyCallback","false","false","false","false","true","AccountManagerCallback<Bundle>","","","","\android\accounts\AccountManager.java"
"android.accounts.GetAuthTokenByTypeAndFeaturesTask.mAuthTokenType","false","false","false","false","true","String","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_PASSWORD","true","false","false","true","true","String","""password""","","/**
 * The Bundle key used to supply the password directly in options to
 * {@link #confirmCredentials}, rather than prompting the user with
 * the standard password prompt.
 */
","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_AUTHENTICATOR_TYPES","true","false","false","true","true","String","""authenticator_types""","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.AUTHENTICATOR_ATTRIBUTES_NAME","true","false","false","true","true","String","""account-authenticator""","","","\android\accounts\AccountManager.java"
"android.accounts.GetAuthTokenByTypeAndFeaturesTask.mLoginOptions","false","false","false","false","true","Bundle","","","","\android\accounts\AccountManager.java"
"android.accounts.GetAuthTokenByTypeAndFeaturesTask.mAccountType","false","false","false","false","true","String","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.KEY_INTENT","true","false","false","true","true","String","""intent""","","/**
 * The Bundle key used for an {@link Intent} in results from methods that
 * may require the caller to interact with the user.  The Intent can
 * be used to start the corresponding user interface activity.
 */
","\android\accounts\AccountManager.java"
"android.accounts.Future2Task.mCallback","false","false","false","false","true","AccountManagerCallback<T>","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mAuthTokenType","false","false","false","false","true","String","","","","\android\accounts\AccountManager.java"
"android.accounts.AmsTask.mHandler","false","false","false","false","true","Handler","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mAddAccountOptions","false","false","false","false","true","Bundle","","","","\android\accounts\AccountManager.java"
"android.accounts.AccountManager.mHandler","false","false","false","false","true","Handler","","","","\android\accounts\AccountManager.java"
"com.android.internal.view.menu.IconMenuView.mVerticalDividerWidth","false","false","true","false","false","int","","","/**
 * Width of the vertical divider
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mHorizontalDividerHeight","false","false","true","false","false","int","","","/**
 * Height of the horizontal divider
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mLayoutNumRows","false","false","true","false","false","int","","","/**
 * The number of rows in the current layout.
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mMoreIcon","false","false","true","false","false","Drawable","","","/**
 * Icon for the 'More' button
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mHorizontalDividerRects","false","false","true","false","false","ArrayList<Rect>","","","/**
 * Set of horizontal divider positions where the horizontal divider will be drawn
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.LayoutParams.left","false","false","false","false","false","int","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.SavedState.focusedPosition","false","false","false","false","false","int","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mMaxItemsPerRow","false","false","true","false","false","int","","","/**
 * Maximum number of items per row
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mItemBackground","false","false","true","false","false","Drawable","","","/**
 * Background of each item (should contain the selected and focused states)
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mAnimations","false","false","true","false","false","int","","","/**
 * Default animations for this menu
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mMoreItemView","false","false","true","false","false","IconMenuItemView","","","/**
 * Item view for the 'More' button
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.LayoutParams.desiredWidth","false","false","false","false","false","int","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.focusedPosition","false","false","false","false","false","int","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.maxNumItemsOnRow","false","false","false","false","false","int","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.desiredWidth","false","false","false","false","false","int","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.LayoutParams.maxNumItemsOnRow","false","false","false","false","false","int","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mLayout","false","false","true","false","false","int","","","/**
 * The layout to use for menu items. Each index is the row number (0 is the
 * top-most). Each value contains the number of items in that row.
 * <p>
 * The length of this array should not be used to get the number of rows in
 * the current layout, instead use {@link #mLayoutNumRows}.
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mNumActualItemsShown","false","false","true","false","false","int","","","/**
 * Actual number of items (the 'More' view does not count as an item) shown
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mVerticalDividerRects","false","false","true","false","false","ArrayList<Rect>","","","/**
 * Set of vertical divider positions where the vertical divider will be drawn
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mMaxItems","false","false","true","false","false","int","","","/**
 * Maximum number of items to show in the icon menu.
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mHorizontalDivider","false","false","true","false","false","Drawable","","","/**
 * Divider that is drawn between all rows
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mMenuBeingLongpressed","false","false","true","false","false","boolean","false","","/**
 * Longpress on MENU (while this is shown) switches to shortcut caption
 * mode. When the user releases the longpress, we do not want to pass the
 * key-up event up since that will dismiss the menu.
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mMaxRows","false","false","true","false","false","int","","","/**
 * Maximum number of rows to be shown
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mVerticalDivider","false","false","true","false","false","Drawable","","","/**
 * Divider that is drawn between all columns
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.left","false","false","false","false","false","int","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mMenu","false","false","true","false","false","MenuBuilder","","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mLastChildrenCaptionMode","false","false","true","false","false","boolean","","","/**
 * While {@link #mMenuBeingLongpressed}, we toggle the children's caption
 * mode between each's title and its shortcut. This is the last caption mode
 * we broadcasted to children.
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.ITEM_CAPTION_CYCLE_DELAY","false","false","true","true","true","int","1000","","","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mHasStaleChildren","false","false","true","false","false","boolean","","","/**
 * Whether this IconMenuView has stale children and needs to update them.
 * Set true by {@link #markStaleChildren()} and reset to false by
 * {@link #onMeasure(int, int)}
 */
","\com\android\internal\view\menu\IconMenuView.java"
"com.android.internal.view.menu.IconMenuView.mRowHeight","false","false","true","false","false","int","","","/**
 * Height of each row
 */
","\com\android\internal\view\menu\IconMenuView.java"
"android.pim.EventRecurrence.byyeardayCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.SECONDLY","true","false","false","true","true","int","1","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bydayNum","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.wkst","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.YEARLY","true","false","false","true","true","int","7","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.WE","true","false","false","true","true","int","0x00080000","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.FR","true","false","false","true","true","int","0x00200000","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.byhour","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.MONTHLY","true","false","false","true","true","int","6","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.MINUTELY","true","false","false","true","true","int","2","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.freq","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.TH","true","false","false","true","true","int","0x00100000","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.TU","true","false","false","true","true","int","0x00040000","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.byhourCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.byweekno","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.byweeknoCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.byyearday","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.until","true","false","false","false","false","String","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.count","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bysecond","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bysecondCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.SA","true","false","false","true","true","int","0x00400000","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.SU","true","false","false","true","true","int","0x00010000","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bymonth","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bydayCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.WEEKLY","true","false","false","true","true","int","5","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.byminute","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bysetposCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.DAILY","true","false","false","true","true","int","4","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bymonthdayCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.interval","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bymonthday","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.MO","true","false","false","true","true","int","0x00020000","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.startDate","true","false","false","false","false","Time","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bysetpos","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.byminuteCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.bymonthCount","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.HOURLY","true","false","false","true","true","int","3","","","\android\pim\EventRecurrence.java"
"android.pim.EventRecurrence.byday","true","false","false","false","false","int","","","","\android\pim\EventRecurrence.java"
"android.service.wallpaper.WallpaperSettingsActivity.EXTRA_PREVIEW_MODE","true","false","false","true","true","String","""android.service.wallpaper.PREVIEW_MODE""","","/**
 * This boolean extra in the launch intent indicates that the settings
 * are being used while the wallpaper is in preview mode.
 */
","\android\service\wallpaper\WallpaperSettingsActivity.java"
"android.app.backup.BackupDataInputStream.key","false","false","false","false","false","String","","","","\android\app\backup\BackupDataInputStream.java"
"android.app.backup.BackupDataInputStream.dataSize","false","false","false","false","false","int","","","","\android\app\backup\BackupDataInputStream.java"
"android.app.backup.BackupDataInputStream.mOneByte","false","false","false","false","false","byte","","","","\android\app\backup\BackupDataInputStream.java"
"android.app.backup.BackupDataInputStream.mData","false","false","false","false","false","BackupDataInput","","","","\android\app\backup\BackupDataInputStream.java"
"android.view.RawInputEvent.type","true","false","false","false","false","int","","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.when","true","false","false","false","false","long","","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_BRUSH","true","false","false","true","true","int","0x142","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_FF_STATUS","true","false","false","true","true","int","0x17","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_X","true","false","false","true","true","int","0x00","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_Y","true","false","false","true","true","int","0x01","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_Z","true","false","false","true","true","int","0x02","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_GAS","true","false","false","true","true","int","0x09","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_ABS","true","false","false","true","true","int","0x03","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.CLASS_TOUCHSCREEN_MT","true","false","false","true","true","int","0x00000010","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_GEAR_UP","true","false","false","true","true","int","0x151","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_GEAR_DOWN","true","false","false","true","true","int","0x150","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_DISTANCE","true","false","false","true","true","int","0x19","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_GAMEPAD","true","false","false","true","true","int","0x130","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.keycode","true","false","false","false","false","int","","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_DEAD","true","false","false","true","true","int","0x12f","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_REL","true","false","false","true","true","int","0x02","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_ORIENTATION","true","false","false","true","true","int","0x34","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_REP","true","false","false","true","true","int","0x14","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_DEVICE_ADDED","true","false","false","true","true","int","0x10000000","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_FIRST","true","false","false","true","true","int","0x100","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_RUBBER","true","false","false","true","true","int","0x141","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_LAST","true","false","false","true","true","int","0x15f","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_Y","true","false","false","true","true","int","0x134","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_Z","true","false","false","true","true","int","0x135","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOP","true","false","false","true","true","int","0x123","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_X","true","false","false","true","true","int","0x133","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.CLASS_TRACKBALL","true","false","false","true","true","int","0x00000008","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TRIGGER","true","false","false","true","true","int","0x120","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_POSITION_X","true","false","false","true","true","int","0x35","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_POSITION_Y","true","false","false","true","true","int","0x36","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_C","true","false","false","true","true","int","0x132","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.SYN_MT_REPORT","true","false","false","true","true","int","2","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_TOOL_WIDTH","true","false","false","true","true","int","0x1c","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_THUMB","true","false","false","true","true","int","0x121","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_PENCIL","true","false","false","true","true","int","0x143","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_SELECT","true","false","false","true","true","int","0x13a","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.CLASS_KEYBOARD","true","false","false","true","true","int","0x00000001","","// Event class as defined by EventHub.
","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_FF","true","false","false","true","true","int","0x15","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TR2","true","false","false","true","true","int","0x139","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.SYN_REPORT","true","false","false","true","true","int","0","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.scancode","true","false","false","false","false","int","","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_BASE","true","false","false","true","true","int","0x126","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_KEY","true","false","false","true","true","int","0x01","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_PRESSURE","true","false","false","true","true","int","0x18","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_MOUSE","true","false","false","true","true","int","0x110","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_MISC","true","false","false","true","true","int","0x100","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_BACK","true","false","false","true","true","int","0x116","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_PEN","true","false","false","true","true","int","0x140","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.CLASS_TOUCHSCREEN","true","false","false","true","true","int","0x00000004","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_TILT_X","true","false","false","true","true","int","0x1a","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_TILT_Y","true","false","false","true","true","int","0x1b","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_VOLUME","true","false","false","true","true","int","0x20","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_RIGHT","true","false","false","true","true","int","0x111","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MISC","true","false","false","true","true","int","0x28","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.SW_LID","true","false","false","true","true","int","0x00","","// Switch events
","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.CLASS_ALPHAKEY","true","false","false","true","true","int","0x00000002","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_A","true","false","false","true","true","int","0x130","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_B","true","false","false","true","true","int","0x131","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.flags","true","false","false","false","false","int","","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_BRAKE","true","false","false","true","true","int","0x0a","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_9","true","false","false","true","true","int","0x109","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_RUDDER","true","false","false","true","true","int","0x07","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_7","true","false","false","true","true","int","0x107","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_8","true","false","false","true","true","int","0x108","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_5","true","false","false","true","true","int","0x105","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_6","true","false","false","true","true","int","0x106","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_3","true","false","false","true","true","int","0x103","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_4","true","false","false","true","true","int","0x104","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_DOUBLETAP","true","false","false","true","true","int","0x14d","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_1","true","false","false","true","true","int","0x101","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_SYN","true","false","false","true","true","int","0x00","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_2","true","false","false","true","true","int","0x102","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TL","true","false","false","true","true","int","0x136","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_0","true","false","false","true","true","int","0x100","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_WHEEL","true","false","false","true","true","int","0x08","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_BLOB_ID","true","false","false","true","true","int","0x38","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_SIDE","true","false","false","true","true","int","0x113","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_START","true","false","false","true","true","int","0x13b","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_SW","true","false","false","true","true","int","0x05","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TR","true","false","false","true","true","int","0x137","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_MSC","true","false","false","true","true","int","0x04","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TASK","true","false","false","true","true","int","0x117","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.SYN_CONFIG","true","false","false","true","true","int","1","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_BASE3","true","false","false","true","true","int","0x128","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_BASE2","true","false","false","true","true","int","0x127","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_FINGER","true","false","false","true","true","int","0x145","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_DEVICE_REMOVED","true","false","false","true","true","int","0x20000000","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_STYLUS","true","false","false","true","true","int","0x14b","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_MOUSE","true","false","false","true","true","int","0x146","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_PINKIE","true","false","false","true","true","int","0x125","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_WHEEL","true","false","false","true","true","int","0x08","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_HWHEEL","true","false","false","true","true","int","0x06","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_MAX","true","false","false","true","true","int","0x0f","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_MISC","true","false","false","true","true","int","0x09","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_AIRBRUSH","true","false","false","true","true","int","0x144","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_WIDTH_MINOR","true","false","false","true","true","int","0x33","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_WIDTH_MAJOR","true","false","false","true","true","int","0x32","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_JOYSTICK","true","false","false","true","true","int","0x120","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.value","true","false","false","false","false","int","","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_PWR","true","false","false","true","true","int","0x16","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_TOOL_TYPE","true","false","false","true","true","int","0x37","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_MODE","true","false","false","true","true","int","0x13c","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOP2","true","false","false","true","true","int","0x124","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_BASE5","true","false","false","true","true","int","0x12a","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_BASE4","true","false","false","true","true","int","0x129","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_BASE6","true","false","false","true","true","int","0x12b","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_SND","true","false","false","true","true","int","0x12","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_HAT3Y","true","false","false","true","true","int","0x17","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_HAT3X","true","false","false","true","true","int","0x16","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_X","true","false","false","true","true","int","0x00","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_Y","true","false","false","true","true","int","0x01","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_Z","true","false","false","true","true","int","0x02","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_RX","true","false","false","true","true","int","0x03","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_RY","true","false","false","true","true","int","0x04","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_RZ","true","false","false","true","true","int","0x05","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_STYLUS2","true","false","false","true","true","int","0x14c","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_HAT2Y","true","false","false","true","true","int","0x15","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_HAT2X","true","false","false","true","true","int","0x14","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MAX","true","false","false","true","true","int","0x3f","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.EV_LED","true","false","false","true","true","int","0x11","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_THUMBL","true","false","false","true","true","int","0x13d","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_THUMBR","true","false","false","true","true","int","0x13e","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.CLASS_DPAD","true","false","false","true","true","int","0x00000020","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_WHEEL","true","false","false","true","true","int","0x150","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_TRIPLETAP","true","false","false","true","true","int","0x14e","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TL2","true","false","false","true","true","int","0x138","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_DIAL","true","false","false","true","true","int","0x07","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_HAT1Y","true","false","false","true","true","int","0x13","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_HAT1X","true","false","false","true","true","int","0x12","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_LEFT","true","false","false","true","true","int","0x110","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.CLASS_CONFIGURATION_CHANGED","true","false","false","true","true","int","0x10000000","","// More special classes for QueuedEvent below.
","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.deviceId","true","false","false","false","false","int","","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_THUMB2","true","false","false","true","true","int","0x122","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOOL_LENS","true","false","false","true","true","int","0x147","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_RZ","true","false","false","true","true","int","0x05","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_RX","true","false","false","true","true","int","0x03","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_MIDDLE","true","false","false","true","true","int","0x112","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_EXTRA","true","false","false","true","true","int","0x114","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.REL_RY","true","false","false","true","true","int","0x04","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_HAT0Y","true","false","false","true","true","int","0x11","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_DIGI","true","false","false","true","true","int","0x140","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_HAT0X","true","false","false","true","true","int","0x10","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_FORWARD","true","false","false","true","true","int","0x115","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.BTN_TOUCH","true","false","false","true","true","int","0x14a","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_THROTTLE","true","false","false","true","true","int","0x06","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_TOUCH_MAJOR","true","false","false","true","true","int","0x30","","","\android\view\RawInputEvent.java"
"android.view.RawInputEvent.ABS_MT_TOUCH_MINOR","true","false","false","true","true","int","0x31","","","\android\view\RawInputEvent.java"
"android.os.ConditionVariable.mCondition","false","false","true","false","false","boolean","","","","\android\os\ConditionVariable.java"
"android.content.pm.ComponentInfo.exported","true","false","false","false","false","boolean","false","","/**
 * Set to true if this component is available for use by other applications.
 * Comes from {@link android.R.attr#exported android:exported} of the
 * &lt;activity&gt;, &lt;receiver&gt;, &lt;service&gt;, or
 * &lt;provider&gt; tag.
 */
","\android\content\pm\ComponentInfo.java"
"android.content.pm.ComponentInfo.processName","true","false","false","false","false","String","","","/**
 * The name of the process this component should run in.
 * From the ""android:process"" attribute or, if not set, the same
 * as <var>applicationInfo.processName</var>.
 */
","\android\content\pm\ComponentInfo.java"
"android.content.pm.ComponentInfo.applicationInfo","true","false","false","false","false","ApplicationInfo","","","/**
 * Global information about the application/package this component is a
 * part of.
 */
","\android\content\pm\ComponentInfo.java"
"android.content.pm.ComponentInfo.descriptionRes","true","false","false","false","false","int","","","/**
 * A string resource identifier (in the package's resources) containing
 * a user-readable description of the component.  From the ""description""
 * attribute or, if not set, 0.
 */
","\android\content\pm\ComponentInfo.java"
"android.content.pm.ComponentInfo.enabled","true","false","false","false","false","boolean","true","","/**
 * Indicates whether or not this component may be instantiated.  Note that this value can be
 * overriden by the one in its parent {@link ApplicationInfo}.
 */
","\android\content\pm\ComponentInfo.java"
"com.android.internal.util.NotPredicate.predicate","false","false","true","false","true","Predicate<? super T>","","","","\com\android\internal\util\Predicates.java"
"com.android.internal.util.AndPredicate.components","false","false","true","false","true","Iterable<? extends Predicate<? super T>>","","","","\com\android\internal\util\Predicates.java"
"com.android.internal.util.OrPredicate.components","false","false","true","false","true","Iterable<? extends Predicate<? super T>>","","","","\com\android\internal\util\Predicates.java"
"com.android.internal.util.Predicates.components","false","false","true","false","true","Iterable<? extends Predicate<? super T>>","","","","\com\android\internal\util\Predicates.java"
"com.android.internal.util.Predicates.predicate","false","false","true","false","true","Predicate<? super T>","","","","\com\android\internal\util\Predicates.java"
"android.content.res.AssetFileDescriptor.mFile","false","false","true","false","false","MemoryFile","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AssetFileDescriptor.mRemaining","false","false","true","false","false","long","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AssetFileDescriptor.UNKNOWN_LENGTH","true","false","false","true","true","long","-1","","/**
 * Length used with {@link #AssetFileDescriptor(ParcelFileDescriptor, long, long)}
 * and {@link #getDeclaredLength} when a length has not been declared.  This means
 * the data extends to the end of the file.
 */
","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AutoCloseMemoryFileInputStream.mStream","false","false","true","false","false","InputStream","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AutoCloseOutputStream.mRemaining","false","false","true","false","false","long","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AssetFileDescriptor.CREATOR","true","false","false","true","true","Parcelable.Creator<AssetFileDescriptor>","new Parcelable.Creator<AssetFileDescriptor>() {

    public AssetFileDescriptor createFromParcel(Parcel in) {
        return new AssetFileDescriptor(in);
    }

    public AssetFileDescriptor[] newArray(int size) {
        return new AssetFileDescriptor[size];
    }
}","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AssetFileDescriptor.mFd","false","false","true","false","true","ParcelFileDescriptor","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AssetFileDescriptor.mParcelFd","false","false","true","false","false","ParcelFileDescriptor","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AssetFileDescriptor.mLength","false","false","true","false","true","long","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AssetFileDescriptor.mStream","false","false","true","false","false","InputStream","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AutoCloseInputStream.mRemaining","false","false","true","false","false","long","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AutoCloseMemoryFileInputStream.mParcelFd","false","false","true","false","false","ParcelFileDescriptor","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AutoCloseMemoryFileInputStream.mFile","false","false","true","false","false","MemoryFile","","","","\android\content\res\AssetFileDescriptor.java"
"android.content.res.AssetFileDescriptor.mStartOffset","false","false","true","false","true","long","","","","\android\content\res\AssetFileDescriptor.java"
"android.widget.TabWidget.mSelectionChangedListener","false","false","true","false","false","OnTabSelectionChanged","","","","\android\widget\TabWidget.java"
"android.widget.TabClickListener.mTabIndex","false","false","true","false","true","int","","","","\android\widget\TabWidget.java"
"android.widget.TabWidget.mDrawBottomStrips","false","false","true","false","false","boolean","true","","","\android\widget\TabWidget.java"
"android.widget.TabWidget.mLeftStrip","false","false","true","false","false","Drawable","","","","\android\widget\TabWidget.java"
"android.widget.TabWidget.mTabIndex","false","false","true","false","true","int","","","","\android\widget\TabWidget.java"
"android.widget.TabWidget.mRightStrip","false","false","true","false","false","Drawable","","","","\android\widget\TabWidget.java"
"android.widget.TabWidget.mStripMoved","false","false","true","false","false","boolean","","","","\android\widget\TabWidget.java"
"android.widget.TabWidget.mSelectedTab","false","false","true","false","false","int","0","","","\android\widget\TabWidget.java"
"android.widget.TabWidget.mDividerDrawable","false","false","true","false","false","Drawable","","","","\android\widget\TabWidget.java"
"android.widget.TabWidget.mBounds","false","false","true","false","true","Rect","new Rect()","","","\android\widget\TabWidget.java"
"com.android.internal.widget.LockPatternView.mCurrentPath","false","false","true","false","true","Path","new Path()","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mInvalidate","false","false","true","false","true","Rect","new Rect()","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapHeight","false","false","true","false","false","int","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.SavedState.mSerializedPattern","false","false","true","false","true","String","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapArrowGreenUp","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mAnimatingPeriodStart","false","false","true","false","false","long","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mDisplayMode","false","false","true","false","true","int","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mPaint","false","false","true","false","false","Paint","new Paint()","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mInProgressY","false","false","true","false","false","float","-1","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mInProgressX","false","false","true","false","false","float","-1","","/**
 * the in progress point:
 * - during interaction: where the user's finger is
 * - during animation: the current tip of the animating line
 */
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mInputEnabled","false","false","true","false","true","boolean","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.Cell.row","false","false","false","false","false","int","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mSquareHeight","false","false","true","false","false","float","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapCircleGreen","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.SavedState.mInputEnabled","false","false","true","false","true","boolean","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mVibePattern","false","false","true","false","false","long","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mSerializedPattern","false","false","true","false","true","String","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.ASPECT_LOCK_HEIGHT","false","false","true","true","true","int","2","","// Fixed height; width will be minimum of (w,h)
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.PROFILE_DRAWING","false","false","true","true","true","boolean","false","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mPatternDrawLookup","false","false","true","false","false","boolean","new boolean[3][3]","","/**
 * Lookup table for the circles of the pattern we are currently drawing.
 * This will be the cells of the complete pattern unless we are animating,
 * in which case we use this to hold the cells we are drawing for the in
 * progress animation.
 */
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.MILLIS_PER_CIRCLE_ANIMATING","false","false","true","true","true","int","700","","/**
 * How many milliseconds we spend animating each circle of a lock pattern
 * if the animating mode is set.  The entire animation should take this
 * constant * the length of the pattern to complete.
 */
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapArrowRedUp","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapCircleDefault","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mPatternInProgress","false","false","true","false","false","boolean","false","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mTactileFeedbackEnabled","false","false","true","false","true","boolean","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapCircleRed","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.Cell.column","false","false","false","false","false","int","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapBtnDefault","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mPathPaint","false","false","true","false","false","Paint","new Paint()","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.vibe","false","false","true","false","false","Vibrator","","","// Vibrator for creating tactile feedback
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.column","false","false","false","false","false","int","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mHitFactor","false","false","true","false","false","float","0.6f","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mOnPatternListener","false","false","true","false","false","OnPatternListener","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mSquareWidth","false","false","true","false","false","float","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.ASPECT_SQUARE","false","false","true","true","true","int","0","","// View will be the minimum of width/height
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.SavedState.mDisplayMode","false","false","true","false","true","int","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.sCells","false","false","false","true","false","Cell","new Cell[3][3]","","// keep # objects limited to 9
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mInStealthMode","false","false","true","false","true","boolean","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mPatternDisplayMode","false","false","true","false","false","DisplayMode","DisplayMode.Correct","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.STATUS_BAR_HEIGHT","false","false","false","true","true","int","25","","// TODO: make this common with PhoneWindow
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.ASPECT_LOCK_WIDTH","false","false","true","true","true","int","1","","// Fixed width; height will be minimum of (w,h)
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.Cell.sCells","false","false","false","true","false","Cell","new Cell[3][3]","","// keep # objects limited to 9
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mPattern","false","false","true","false","false","ArrayList<Cell>","new ArrayList<Cell>(9)","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.DEFAULT_VIBE_PATTERN","false","false","true","true","true","long","{ 0, 1, 40, 41 }","","// Vibrator pattern for creating a tactile bump
","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapWidth","false","false","true","false","false","int","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mDiameterFactor","false","false","true","false","false","float","0.5f","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.SavedState.mInStealthMode","false","false","true","false","true","boolean","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.row","false","false","false","false","false","int","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mDrawingProfilingStarted","false","false","true","false","false","boolean","false","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.SavedState.mTactileFeedbackEnabled","false","false","true","false","true","boolean","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mBitmapBtnTouched","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\LockPatternView.java"
"com.android.internal.widget.LockPatternView.mAspect","false","false","true","false","false","int","","","","\com\android\internal\widget\LockPatternView.java"
"android.database.sqlite.SQLiteDirectCursorDriver.mDatabase","false","false","true","false","false","SQLiteDatabase","","","","\android\database\sqlite\SQLiteDirectCursorDriver.java"
"android.database.sqlite.SQLiteDirectCursorDriver.mCursor","false","false","true","false","false","Cursor","","","","\android\database\sqlite\SQLiteDirectCursorDriver.java"
"android.database.sqlite.SQLiteDirectCursorDriver.mSql","false","false","true","false","false","String","","","","\android\database\sqlite\SQLiteDirectCursorDriver.java"
"android.database.sqlite.SQLiteDirectCursorDriver.mEditTable","false","false","true","false","false","String","","","","\android\database\sqlite\SQLiteDirectCursorDriver.java"
"android.database.sqlite.SQLiteDirectCursorDriver.mQuery","false","false","true","false","false","SQLiteQuery","","","","\android\database\sqlite\SQLiteDirectCursorDriver.java"
"android.content.ContentQueryMap.mCursor","false","false","true","false","false","Cursor","","","","\android\content\ContentQueryMap.java"
"android.content.ContentQueryMap.mValues","false","false","true","false","false","Map<String,ContentValues>","null","","","\android\content\ContentQueryMap.java"
"android.content.ContentQueryMap.mDirty","false","false","true","false","false","boolean","false","","/**
 * Set when a cursor change notification is received and is cleared on a call to requery().
 */
","\android\content\ContentQueryMap.java"
"android.content.ContentQueryMap.mContentObserver","false","false","true","false","false","ContentObserver","","","","\android\content\ContentQueryMap.java"
"android.content.ContentQueryMap.mColumnNames","false","false","true","false","false","String","","","","\android\content\ContentQueryMap.java"
"android.content.ContentQueryMap.mKeyColumn","false","false","true","false","false","int","","","","\android\content\ContentQueryMap.java"
"android.content.ContentQueryMap.mHandlerForUpdateNotifications","false","false","true","false","false","Handler","null","","","\android\content\ContentQueryMap.java"
"android.content.ContentQueryMap.mKeepUpdated","false","false","true","false","false","boolean","false","","","\android\content\ContentQueryMap.java"
"android.pim.ICalendar.VJOURNAL","true","false","false","true","true","String","""VJOURNAL""","","","\android\pim\ICalendar.java"
"android.pim.Component.VJOURNAL","true","false","false","true","true","String","""VJOURNAL""","","","\android\pim\ICalendar.java"
"android.pim.Property.RRULE","true","false","false","true","true","String","""RRULE""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.mValue","false","false","true","false","false","String","","","// TODO: make this final?
","\android\pim\ICalendar.java"
"android.pim.ICalendar.VTIMEZONE","true","false","false","true","true","String","""VTIMEZONE""","","","\android\pim\ICalendar.java"
"android.pim.Property.mParamsMap","false","false","true","false","false","LinkedHashMap<String,ArrayList<Parameter>>","new LinkedHashMap<String, ArrayList<Parameter>>()","","","\android\pim\ICalendar.java"
"android.pim.Component.mPropsMap","false","false","true","false","true","LinkedHashMap<String,ArrayList<Property>>","new LinkedHashMap<String, ArrayList<Property>>()","","","\android\pim\ICalendar.java"
"android.pim.ParserState.line","true","false","false","false","false","String","","","// TODO: just point to original text
","\android\pim\ICalendar.java"
"android.pim.ICalendar.EXDATE","true","false","false","true","true","String","""EXDATE""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.DTSTART","true","false","false","true","true","String","""DTSTART""","","// TODO: do we want to list these here?  the complete list is long.
","\android\pim\ICalendar.java"
"android.pim.Property.DTSTART","true","false","false","true","true","String","""DTSTART""","","// TODO: do we want to list these here?  the complete list is long.
","\android\pim\ICalendar.java"
"android.pim.Component.mParent","false","false","true","false","true","Component","","","// see if we can get rid of this
","\android\pim\ICalendar.java"
"android.pim.Property.DURATION","true","false","false","true","true","String","""DURATION""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.DTEND","true","false","false","true","true","String","""DTEND""","","","\android\pim\ICalendar.java"
"android.pim.Property.mValue","false","false","true","false","false","String","","","// TODO: make this final?
","\android\pim\ICalendar.java"
"android.pim.ParserState.index","true","false","false","false","false","int","","","","\android\pim\ICalendar.java"
"android.pim.Component.END","false","false","true","true","true","String","""END""","","","\android\pim\ICalendar.java"
"android.pim.Component.mName","false","false","true","false","true","String","","","","\android\pim\ICalendar.java"
"android.pim.Component.VTIMEZONE","true","false","false","true","true","String","""VTIMEZONE""","","","\android\pim\ICalendar.java"
"android.pim.Property.EXDATE","true","false","false","true","true","String","""EXDATE""","","","\android\pim\ICalendar.java"
"android.pim.Component.NEWLINE","false","false","true","true","true","String","""\n""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.TAG","false","false","true","true","true","String","""Sync""","","","\android\pim\ICalendar.java"
"android.pim.Component.VCALENDAR","true","false","false","true","true","String","""VCALENDAR""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.RDATE","true","false","false","true","true","String","""RDATE""","","","\android\pim\ICalendar.java"
"android.pim.Property.mName","false","false","true","false","true","String","","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.mChildren","false","false","true","false","false","LinkedList<Component>","null","","","\android\pim\ICalendar.java"
"android.pim.Component.VTODO","true","false","false","true","true","String","""VTODO""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.mParent","false","false","true","false","true","Component","","","// see if we can get rid of this
","\android\pim\ICalendar.java"
"android.pim.Component.VEVENT","true","false","false","true","true","String","""VEVENT""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.VALARM","true","false","false","true","true","String","""VALARM""","","","\android\pim\ICalendar.java"
"android.pim.Component.VALARM","true","false","false","true","true","String","""VALARM""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.mParamsMap","false","false","true","false","false","LinkedHashMap<String,ArrayList<Parameter>>","new LinkedHashMap<String, ArrayList<Parameter>>()","","","\android\pim\ICalendar.java"
"android.pim.Component.VFREEBUSY","true","false","false","true","true","String","""VFREEBUSY""","","","\android\pim\ICalendar.java"
"android.pim.Parameter.name","true","false","false","false","false","String","","","","\android\pim\ICalendar.java"
"android.pim.Component.BEGIN","false","false","true","true","true","String","""BEGIN""","","// components
","\android\pim\ICalendar.java"
"android.pim.ICalendar.mPropsMap","false","false","true","false","true","LinkedHashMap<String,ArrayList<Property>>","new LinkedHashMap<String, ArrayList<Property>>()","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.name","true","false","false","false","false","String","","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.VEVENT","true","false","false","true","true","String","""VEVENT""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.value","true","false","false","false","false","String","","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.END","false","false","true","true","true","String","""END""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.VTODO","true","false","false","true","true","String","""VTODO""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.DURATION","true","false","false","true","true","String","""DURATION""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.RRULE","true","false","false","true","true","String","""RRULE""","","","\android\pim\ICalendar.java"
"android.pim.Parameter.value","true","false","false","false","false","String","","","","\android\pim\ICalendar.java"
"android.pim.Property.DTEND","true","false","false","true","true","String","""DTEND""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.VFREEBUSY","true","false","false","true","true","String","""VFREEBUSY""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.BEGIN","false","false","true","true","true","String","""BEGIN""","","// components
","\android\pim\ICalendar.java"
"android.pim.ICalendar.EXRULE","true","false","false","true","true","String","""EXRULE""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.index","true","false","false","false","false","int","","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.NEWLINE","false","false","true","true","true","String","""\n""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.VCALENDAR","true","false","false","true","true","String","""VCALENDAR""","","","\android\pim\ICalendar.java"
"android.pim.Property.RDATE","true","false","false","true","true","String","""RDATE""","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.mName","false","false","true","false","true","String","","","","\android\pim\ICalendar.java"
"android.pim.ICalendar.line","true","false","false","false","false","String","","","// TODO: just point to original text
","\android\pim\ICalendar.java"
"android.pim.Component.mChildren","false","false","true","false","false","LinkedList<Component>","null","","","\android\pim\ICalendar.java"
"android.pim.Property.EXRULE","true","false","false","true","true","String","""EXRULE""","","","\android\pim\ICalendar.java"
"android.view.inputmethod.EditorInfo.IME_FLAG_NO_ENTER_ACTION","true","false","false","true","true","int","0x40000000","","/**
 * Flag of {@link #imeOptions}: used in conjunction with
 * {@link #IME_MASK_ACTION}, this indicates that the action should not
 * be available in-line as a replacement for ""enter"" key.  Typically this is
 * because the action has such a significant impact or is not recoverable
 * enough that accidentally hitting it should be avoided, such as sending
 * a message.  Note that {@link android.widget.TextView} will automatically set this
 * flag for you on multi-line text views.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_FLAG_NO_FULLSCREEN","true","false","false","true","true","int","0x80000000","","/**
 * Flag of {@link #imeOptions}: used to request that the IME never go
 * into fullscreen mode.  Applications need to be aware that the flag is not
 * a guarantee, and not all IMEs will respect it.
 * @hide
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.fieldName","true","false","false","false","false","String","","","/**
 * Additional name for the editor's field.  This can supply additional
 * name information for the field.  By default it is null.  The actual
 * contents have no meaning.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.initialSelEnd","true","false","false","false","false","int","-1","","/**
 * The text offset of the end of the selection at the time editing
 * began; -1 if not known.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.hintText","true","false","false","false","false","CharSequence","","","/**
 * The ""hint"" text of the text view, typically shown in-line when the
 * text is empty to tell the user what to enter.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_ACTION_UNSPECIFIED","true","false","false","true","true","int","0x00000000","","/**
 * Bits of {@link #IME_MASK_ACTION}: no specific action has been
 * associated with this editor, let the editor come up with its own if
 * it can.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.imeOptions","true","false","false","false","false","int","IME_NULL","","/**
 * Extended type information for the editor, to help the IME better
 * integrate with it.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.initialCapsMode","true","false","false","false","false","int","0","","/**
 * The capitalization mode of the first character being edited in the
 * text.  Values may be any combination of
 * {@link TextUtils#CAP_MODE_CHARACTERS TextUtils.CAP_MODE_CHARACTERS},
 * {@link TextUtils#CAP_MODE_WORDS TextUtils.CAP_MODE_WORDS}, and
 * {@link TextUtils#CAP_MODE_SENTENCES TextUtils.CAP_MODE_SENTENCES}, though
 * you should generally just take a non-zero value to mean start out in
 * caps mode.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.extras","true","false","false","false","false","Bundle","","","/**
 * Any extra data to supply to the input method.  This is for extended
 * communication with specific input methods; the name fields in the
 * bundle should be scoped (such as ""com.mydomain.im.SOME_FIELD"") so
 * that they don't conflict with others.  This field is can be
 * filled in from the {@link android.R.attr#editorExtras}
 * attribute of a TextView.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_ACTION_NONE","true","false","false","true","true","int","0x00000001","","/**
 * Bits of {@link #IME_MASK_ACTION}: there is no available action.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_FLAG_NO_EXTRACT_UI","true","false","false","true","true","int","0x10000000","","/**
 * Flag of {@link #imeOptions}: used to specify that the IME does not need
 * to show its extracted text UI.  For input methods that may be fullscreen,
 * often when in landscape mode, this allows them to be smaller and let part
 * of the application be shown behind.  Though there will likely be limited
 * access to the application available from the user, it can make the
 * experience of a (mostly) fullscreen IME less jarring.  Note that when
 * this flag is specified the IME may <em>not</em> be set up to be able
 * to display text, so it should only be used in situations where this is
 * not needed.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_MASK_ACTION","true","false","false","true","true","int","0x000000ff","","/**
 * Set of bits in {@link #imeOptions} that provide alternative actions
 * associated with the ""enter"" key.  This both helps the IME provide
 * better feedback about what the enter key will do, and also allows it
 * to provide alternative mechanisms for providing that command.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_FLAG_NO_ACCESSORY_ACTION","true","false","false","true","true","int","0x20000000","","/**
 * Flag of {@link #imeOptions}: used in conjunction with
 * {@link #IME_MASK_ACTION}, this indicates that the action should not
 * be available as an accessory button when the input method is full-screen.
 * Note that by setting this flag, there can be cases where the action
 * is simply never available to the user.  Setting this generally means
 * that you think showing text being edited is more important than the
 * action you have supplied.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_ACTION_NEXT","true","false","false","true","true","int","0x00000005","","/**
 * Bits of {@link #IME_MASK_ACTION}: the action key performs a ""next""
 * operation, taking the user to the next field that will accept text.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_ACTION_DONE","true","false","false","true","true","int","0x00000006","","/**
 * Bits of {@link #IME_MASK_ACTION}: the action key performs a ""done""
 * operation, typically meaning the IME will be closed.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_ACTION_SEND","true","false","false","true","true","int","0x00000004","","/**
 * Bits of {@link #IME_MASK_ACTION}: the action key performs a ""send""
 * operation, delivering the text to its target.  This is typically used
 * when composing a message.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.actionLabel","true","false","false","false","false","CharSequence","null","","/**
 * In some cases an IME may be able to display an arbitrary label for
 * a command the user can perform, which you can specify here.  You can
 * not count on this being used.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH","true","false","false","true","true","int","0x00000003","","/**
 * Bits of {@link #IME_MASK_ACTION}: the action key performs a ""search""
 * operation, taking the user to the results of searching for the text
 * the have typed (in whatever context is appropriate).
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.privateImeOptions","true","false","false","false","false","String","null","","/**
 * A string supplying additional information options that are
 * private to a particular IME implementation.  The string must be
 * scoped to a package owned by the implementation, to ensure there are
 * no conflicts between implementations, but other than that you can put
 * whatever you want in it to communicate with the IME.  For example,
 * you could have a string that supplies an argument like
 * <code>""com.example.myapp.SpecialMode=3""</code>.  This field is can be
 * filled in from the {@link android.R.attr#privateImeOptions}
 * attribute of a TextView.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_ACTION_GO","true","false","false","true","true","int","0x00000002","","/**
 * Bits of {@link #IME_MASK_ACTION}: the action key performs a ""go""
 * operation to take the user to the target of the text they typed.
 * Typically used, for example, when entering a URL.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.IME_NULL","true","false","false","true","true","int","0x00000000","","/**
 * Generic unspecified type for {@link #imeOptions}.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.label","true","false","false","false","false","CharSequence","","","/**
 * A label to show to the user describing the text they are writing.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.packageName","true","false","false","false","false","String","","","/**
 * Name of the package that owns this editor.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.inputType","true","false","false","false","false","int","TYPE_NULL","","/**
 * The content type of the text box, whose bits are defined by
 * {@link InputType}.
 *
 * @see InputType
 * @see #TYPE_MASK_CLASS
 * @see #TYPE_MASK_VARIATION
 * @see #TYPE_MASK_FLAGS
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.initialSelStart","true","false","false","false","false","int","-1","","/**
 * The text offset of the start of the selection at the time editing
 * began; -1 if not known.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.fieldId","true","false","false","false","false","int","","","/**
 * Identifier for the editor's field.  This is optional, and may be
 * 0.  By default it is filled in with the result of
 * {@link android.view.View#getId() View.getId()} on the View that
 * is being edited.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<EditorInfo>","new Parcelable.Creator<EditorInfo>() {

    public EditorInfo createFromParcel(Parcel source) {
        EditorInfo res = new EditorInfo();
        res.inputType = source.readInt();
        res.imeOptions = source.readInt();
        res.privateImeOptions = source.readString();
        res.actionLabel = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(source);
        res.actionId = source.readInt();
        res.initialSelStart = source.readInt();
        res.initialSelEnd = source.readInt();
        res.initialCapsMode = source.readInt();
        res.hintText = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(source);
        res.label = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(source);
        res.packageName = source.readString();
        res.fieldId = source.readInt();
        res.fieldName = source.readString();
        res.extras = source.readBundle();
        return res;
    }

    public EditorInfo[] newArray(int size) {
        return new EditorInfo[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.view.inputmethod.EditorInfo.actionId","true","false","false","false","false","int","0","","/**
 * If {@link #actionLabel} has been given, this is the id for that command
 * when the user presses its button that is delivered back with
 * {@link InputConnection#performEditorAction(int)
 * InputConnection.performEditorAction()}.
 */
","\android\view\inputmethod\EditorInfo.java"
"android.widget.TableLayout.mPassThroughListener","false","false","true","false","false","TableLayout.PassThroughHierarchyChangeListener","","","","\android\widget\TableLayout.java"
"android.widget.TableLayout.mShrinkableColumns","false","false","true","false","false","SparseBooleanArray","","","","\android\widget\TableLayout.java"
"android.widget.PassThroughHierarchyChangeListener.mOnHierarchyChangeListener","false","false","true","false","false","OnHierarchyChangeListener","","","","\android\widget\TableLayout.java"
"android.widget.TableLayout.mOnHierarchyChangeListener","false","false","true","false","false","OnHierarchyChangeListener","","","","\android\widget\TableLayout.java"
"android.widget.TableLayout.mStretchableColumns","false","false","true","false","false","SparseBooleanArray","","","","\android\widget\TableLayout.java"
"android.widget.TableLayout.mShrinkAllColumns","false","false","true","false","false","boolean","","","","\android\widget\TableLayout.java"
"android.widget.TableLayout.mCollapsedColumns","false","false","true","false","false","SparseBooleanArray","","","","\android\widget\TableLayout.java"
"android.widget.TableLayout.mMaxWidths","false","false","true","false","false","int","","","","\android\widget\TableLayout.java"
"android.widget.TableLayout.mStretchAllColumns","false","false","true","false","false","boolean","","","","\android\widget\TableLayout.java"
"android.widget.TableLayout.mInitialized","false","false","true","false","false","boolean","","","","\android\widget\TableLayout.java"
"android.net.NetworkInfo.mIsFailover","false","false","true","false","false","boolean","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mReason","false","false","true","false","false","String","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mIsAvailable","false","false","true","false","false","boolean","","","/**
 * Indicates whether network connectivity is possible:
 */
","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mSubtype","false","false","true","false","false","int","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.stateMap","false","false","true","true","true","EnumMap<DetailedState,State>","new EnumMap<DetailedState, State>(DetailedState.class)","","/**
 * This is the map described in the Javadoc comment above. The positions
 * of the elements of the array must correspond to the ordinal values
 * of <code>DetailedState</code>.
 */
","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mExtraInfo","false","false","true","false","false","String","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mDetailedState","false","false","true","false","false","DetailedState","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mIsRoaming","false","false","true","false","false","boolean","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mState","false","false","true","false","false","State","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.CREATOR","true","false","false","true","true","Creator<NetworkInfo>","new Creator<NetworkInfo>() {

    public NetworkInfo createFromParcel(Parcel in) {
        int netType = in.readInt();
        int subtype = in.readInt();
        String typeName = in.readString();
        String subtypeName = in.readString();
        NetworkInfo netInfo = new NetworkInfo(netType, subtype, typeName, subtypeName);
        netInfo.mState = State.valueOf(in.readString());
        netInfo.mDetailedState = DetailedState.valueOf(in.readString());
        netInfo.mIsFailover = in.readInt() != 0;
        netInfo.mIsAvailable = in.readInt() != 0;
        netInfo.mIsRoaming = in.readInt() != 0;
        netInfo.mReason = in.readString();
        netInfo.mExtraInfo = in.readString();
        return netInfo;
    }

    public NetworkInfo[] newArray(int size) {
        return new NetworkInfo[size];
    }
}","","/**
 * Implement the Parcelable interface.
 * @hide
 */
","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mSubtypeName","false","false","true","false","false","String","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mNetworkType","false","false","true","false","false","int","","","","\android\net\NetworkInfo.java"
"android.net.NetworkInfo.mTypeName","false","false","true","false","false","String","","","","\android\net\NetworkInfo.java"
"android.content.pm.ActivityInfo.theme","true","false","false","false","false","int","","","/**
 * A style resource identifier (in the package's resources) of this
 * activity's theme.  From the ""theme"" attribute or, if not set, 0.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_ORIENTATION","true","false","false","true","true","int","0x0080","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the screen orientation.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<ActivityInfo>","new Parcelable.Creator<ActivityInfo>() {

    public ActivityInfo createFromParcel(Parcel source) {
        return new ActivityInfo(source);
    }

    public ActivityInfo[] newArray(int size) {
        return new ActivityInfo[size];
    }
}","","","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_NAVIGATION","true","false","false","true","true","int","0x0040","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the navigation type.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH","true","false","false","true","true","int","0x0002","","/**
 * Bit in {@link #flags} indicating that, when the activity's task is
 * relaunched from home, this activity should be finished.
 * Set from the
 * {@link android.R.attr#finishOnTaskLaunch} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.LAUNCH_SINGLE_INSTANCE","true","false","false","true","true","int","3","","/**
 * Constant corresponding to <code>singleInstance</code> in
 * the {@link android.R.attr#launchMode} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.LAUNCH_MULTIPLE","true","false","false","true","true","int","0","","/**
 * Constant corresponding to <code>standard</code> in
 * the {@link android.R.attr#launchMode} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.taskAffinity","true","false","false","false","false","String","","","/**
 * The affinity this activity has for another task in the system.  The
 * string here is the name of the task, often the package name of the
 * overall package.  If null, the activity has no affinity.  Set from the
 * {@link android.R.attr#taskAffinity} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.SCREEN_ORIENTATION_USER","true","false","false","true","true","int","2","","/**
 * Constant corresponding to <code>user</code> in
 * the {@link android.R.attr#screenOrientation} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.targetActivity","true","false","false","false","false","String","","","/**
 * If this is an activity alias, this is the real activity class to run
 * for it.  Otherwise, this is null.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.flags","true","false","false","false","false","int","","","/**
 * Options that have been set in the activity declaration in the
 * manifest: {@link #FLAG_MULTIPROCESS},
 * {@link #FLAG_FINISH_ON_TASK_LAUNCH}, {@link #FLAG_CLEAR_TASK_ON_LAUNCH},
 * {@link #FLAG_ALWAYS_RETAIN_TASK_STATE},
 * {@link #FLAG_STATE_NOT_NEEDED}, {@link #FLAG_EXCLUDE_FROM_RECENTS},
 * {@link #FLAG_ALLOW_TASK_REPARENTING}, {@link #FLAG_NO_HISTORY},
 * {@link #FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS}.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_MULTIPROCESS","true","false","false","true","true","int","0x0001","","/**
 * Bit in {@link #flags} indicating whether this activity is able to
 * run in multiple processes.  If
 * true, the system may instantiate it in the some process as the
 * process starting it in order to conserve resources.  If false, the
 * default, it always runs in {@link #processName}.  Set from the
 * {@link android.R.attr#multiprocess} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_MNC","true","false","false","true","true","int","0x0002","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the IMSI MNC.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.permission","true","false","false","false","false","String","","","/**
 * Optional name of a permission required to be able to access this
 * Activity.  From the ""permission"" attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE","true","false","false","true","true","int","0","","/**
 * Constant corresponding to <code>landscape</code> in
 * the {@link android.R.attr#screenOrientation} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_NO_HISTORY","true","false","false","true","true","int","0x0080","","/**
 * Bit in {@link #flags} indicating that, when the user navigates away
 * from an activity, it should be finished.
 * Set from the
 * {@link android.R.attr#noHistory} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.SCREEN_ORIENTATION_SENSOR","true","false","false","true","true","int","4","","/**
 * Constant corresponding to <code>sensor</code> in
 * the {@link android.R.attr#screenOrientation} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.launchMode","true","false","false","false","false","int","","","/**
 * The launch mode style requested by the activity.  From the
 * {@link android.R.attr#launchMode} attribute, one of
 * {@link #LAUNCH_MULTIPLE},
 * {@link #LAUNCH_SINGLE_TOP}, {@link #LAUNCH_SINGLE_TASK}, or
 * {@link #LAUNCH_SINGLE_INSTANCE}.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH","true","false","false","true","true","int","0x0004","","/**
 * Bit in {@link #flags} indicating that, when the activity is the root
 * of a task, that task's stack should be cleared each time the user
 * re-launches it from home.  As a result, the user will always
 * return to the original activity at the top of the task.
 * This flag only applies to activities that
 * are used to start the root of a new task.  Set from the
 * {@link android.R.attr#clearTaskOnLaunch} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_STATE_NOT_NEEDED","true","false","false","true","true","int","0x0010","","/**
 * Bit in {@link #flags} indicating that the activity's state
 * is not required to be saved, so that if there is a failure the
 * activity will not be removed from the activity stack.  Set from the
 * {@link android.R.attr#stateNotNeeded} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED","true","false","false","true","true","int","-1","","/**
 * Constant corresponding to <code>unspecified</code> in
 * the {@link android.R.attr#screenOrientation} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.LAUNCH_SINGLE_TASK","true","false","false","true","true","int","2","","/**
 * Constant corresponding to <code>singleTask</code> in
 * the {@link android.R.attr#launchMode} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_FONT_SCALE","true","false","false","true","true","int","0x40000000","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the font scaling factor.  Set from the
 * {@link android.R.attr#configChanges} attribute.  This is
 * not a core resource configutation, but a higher-level value, so its
 * constant starts at the high bits.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE","true","false","false","true","true","int","0x0008","","/**
 * Bit in {@link #flags} indicating that, when the activity is the root
 * of a task, that task's stack should never be cleared when it is
 * relaunched from home.  Set from the
 * {@link android.R.attr#alwaysRetainTaskState} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.SCREEN_ORIENTATION_NOSENSOR","true","false","false","true","true","int","5","","/**
 * Constant corresponding to <code>sensor</code> in
 * the {@link android.R.attr#screenOrientation} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.SCREEN_ORIENTATION_BEHIND","true","false","false","true","true","int","3","","/**
 * Constant corresponding to <code>behind</code> in
 * the {@link android.R.attr#screenOrientation} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_KEYBOARD_HIDDEN","true","false","false","true","true","int","0x0020","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the keyboard or navigation being hidden/exposed.
 * Note that inspite of the name, this applies to the changes to any
 * hidden states: keyboard or navigation.
 * Set from the {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT","true","false","false","true","true","int","1","","/**
 * Constant corresponding to <code>portrait</code> in
 * the {@link android.R.attr#screenOrientation} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.softInputMode","true","false","false","false","false","int","","","/**
 * The desired soft input mode for this activity's main window.
 * Set from the {@link android.R.attr#windowSoftInputMode} attribute
 * in the activity's manifest.  May be any of the same values allowed
 * for {@link android.view.WindowManager.LayoutParams#softInputMode
 * WindowManager.LayoutParams.softInputMode}.  If 0 (unspecified),
 * the mode from the theme will be used.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.screenOrientation","true","false","false","false","false","int","SCREEN_ORIENTATION_UNSPECIFIED","","/**
 * The preferred screen orientation this activity would like to run in.
 * From the {@link android.R.attr#screenOrientation} attribute, one of
 * {@link #SCREEN_ORIENTATION_UNSPECIFIED},
 * {@link #SCREEN_ORIENTATION_LANDSCAPE},
 * {@link #SCREEN_ORIENTATION_PORTRAIT},
 * {@link #SCREEN_ORIENTATION_USER},
 * {@link #SCREEN_ORIENTATION_BEHIND},
 * {@link #SCREEN_ORIENTATION_SENSOR},
 * {@link #SCREEN_ORIENTATION_NOSENSOR}.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_SCREEN_LAYOUT","true","false","false","true","true","int","0x0100","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the screen layout.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_ALLOW_TASK_REPARENTING","true","false","false","true","true","int","0x0040","","/**
 * Bit in {@link #flags} that indicates that the activity can be moved
 * between tasks based on its task affinity.  Set from the
 * {@link android.R.attr#allowTaskReparenting} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.LAUNCH_SINGLE_TOP","true","false","false","true","true","int","1","","/**
 * Constant corresponding to <code>singleTop</code> in
 * the {@link android.R.attr#launchMode} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_TOUCHSCREEN","true","false","false","true","true","int","0x0008","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the touchscreen type.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_UI_MODE","true","false","false","true","true","int","0x0200","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle the ui mode. Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS","true","false","false","true","true","int","0x0020","","/**
 * Bit in {@link #flags} that indicates that the activity should not
 * appear in the list of recently launched activities.  Set from the
 * {@link android.R.attr#excludeFromRecents} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.configChanges","true","false","false","false","false","int","","","/**
 * Bit mask of kinds of configuration changes that this activity
 * can handle itself (without being restarted by the system).
 * Contains any combination of {@link #CONFIG_FONT_SCALE},
 * {@link #CONFIG_MCC}, {@link #CONFIG_MNC},
 * {@link #CONFIG_LOCALE}, {@link #CONFIG_TOUCHSCREEN},
 * {@link #CONFIG_KEYBOARD}, {@link #CONFIG_NAVIGATION},
 * {@link #CONFIG_ORIENTATION}, and {@link #CONFIG_SCREEN_LAYOUT}.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS","true","false","false","true","true","int","0x0100","","/**
 * Bit in {@link #flags} indicating that, when a request to close system
 * windows happens, this activity is finished.
 * Set from the
 * {@link android.R.attr#finishOnCloseSystemDialogs} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_MCC","true","false","false","true","true","int","0x0001","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the IMSI MCC.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_KEYBOARD","true","false","false","true","true","int","0x0010","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the keyboard type.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.content.pm.ActivityInfo.CONFIG_LOCALE","true","false","false","true","true","int","0x0004","","/**
 * Bit in {@link #configChanges} that indicates that the activity
 * can itself handle changes to the locale.  Set from the
 * {@link android.R.attr#configChanges} attribute.
 */
","\android\content\pm\ActivityInfo.java"
"android.text.LengthFilter.mMax","false","false","true","false","false","int","","","","\android\text\InputFilter.java"
"android.text.InputFilter.mMax","false","false","true","false","false","int","","","","\android\text\InputFilter.java"
"android.content.pm.ServiceInfo.permission","true","false","false","false","false","String","","","/**
 * Optional name of a permission required to be able to access this
 * Service.  From the ""permission"" attribute.
 */
","\android\content\pm\ServiceInfo.java"
"android.content.pm.ServiceInfo.CREATOR","true","false","false","true","true","Creator<ServiceInfo>","new Creator<ServiceInfo>() {

    public ServiceInfo createFromParcel(Parcel source) {
        return new ServiceInfo(source);
    }

    public ServiceInfo[] newArray(int size) {
        return new ServiceInfo[size];
    }
}","","","\android\content\pm\ServiceInfo.java"
"android.content.SyncStats.numDeletes","true","false","false","false","false","long","","","/**
 * Counter for tracking how many deletes were performed by the sync operation, as defined
 * by the SyncAdapter.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.numSkippedEntries","true","false","false","false","false","long","","","/**
 * Counter for tracking how many entries, either from the server or the local store, were
 * ignored during the sync operation. This could happen if the SyncAdapter detected some
 * unparsable data but decided to skip it and move on rather than failing immediately.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.numEntries","true","false","false","false","false","long","","","/**
 * Counter for tracking how many entries were affected by the sync operation, as defined
 * by the SyncAdapter.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.numInserts","true","false","false","false","false","long","","","/**
 * Counter for tracking how many inserts were performed by the sync operation, as defined
 * by the SyncAdapter.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.numParseExceptions","true","false","false","false","false","long","","","/**
 * The SyncAdapter had a problem with the data it received from the server or the storage
 * later. This problem will likely repeat if the request is tried again. The problem
 * will need to be cleared up by either the server or the storage layer (likely with help
 * from the user). If the SyncAdapter cleans up the data itself then it typically won't
 * increment this value although it may still do so in order to record that it had to
 * perform some cleanup. E.g., if the SyncAdapter received a bad entry from the server
 * when processing a feed of entries, it may choose to drop the entry and thus make
 * progress and still increment this value just so the SyncAdapter can record that an
 * error occurred. This is considered a hard error.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.numIoExceptions","true","false","false","false","false","long","","","/**
 * The SyncAdapter had a problem, most likely with the network connectivity or a timeout
 * while waiting for a network response. The request may succeed if it is tried again
 * later. This is considered a soft error.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.numUpdates","true","false","false","false","false","long","","","/**
 * Counter for tracking how many updates were performed by the sync operation, as defined
 * by the SyncAdapter.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.numConflictDetectedExceptions","true","false","false","false","false","long","","","/**
 * The SyncAdapter detected that there was an unrecoverable version conflict when it
 * attempted to update or delete a version of a resource on the server. This is expected
 * to clear itself automatically once the new state is retrieved from the server,
 * though it may remain until the user intervenes manually, perhaps by clearing the
 * local storage and starting over frmo scratch. This is considered a hard error.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.numAuthExceptions","true","false","false","false","false","long","","","/**
 * The SyncAdapter was unable to authenticate the {@link android.accounts.Account}
 * that was specified in the request. The user needs to take some action to resolve
 * before a future request can expect to succeed. This is considered a hard error.
 */
","\android\content\SyncStats.java"
"android.content.SyncStats.CREATOR","true","false","false","true","true","Creator<SyncStats>","new Creator<SyncStats>() {

    public SyncStats createFromParcel(Parcel in) {
        return new SyncStats(in);
    }

    public SyncStats[] newArray(int size) {
        return new SyncStats[size];
    }
}","","","\android\content\SyncStats.java"
"android.view.Menu.CATEGORY_CONTAINER","false","false","false","true","true","int","0x00010000","","/**
 * Category code for the order integer for items/groups that are part of a
 * container -- or/add this with your base value.
 */
","\android\view\Menu.java"
"android.view.Menu.CATEGORY_SHIFT","false","false","false","true","true","int","16","","/**
 * Bit shift of the category portion of the order integer.
 * @hide
 */
","\android\view\Menu.java"
"android.view.Menu.FLAG_APPEND_TO_GROUP","false","false","false","true","true","int","0x0001","","/**
 * Flag for {@link #addIntentOptions}: if set, do not automatically remove
 * any existing menu items in the same group.
 */
","\android\view\Menu.java"
"android.view.Menu.CATEGORY_ALTERNATIVE","false","false","false","true","true","int","0x00040000","","/**
 * Category code for the order integer for items/groups that are
 * alternative actions on the data that is currently displayed -- or/add
 * this with your base value.
 */
","\android\view\Menu.java"
"android.view.Menu.FLAG_ALWAYS_PERFORM_CLOSE","false","false","false","true","true","int","0x0002","","/**
 * Flag for {@link #performShortcut(int, KeyEvent, int)}: if set, always
 * close the menu after executing the shortcut. Closing the menu also resets
 * the prepared state.
 */
","\android\view\Menu.java"
"android.view.Menu.NONE","false","false","false","true","true","int","0","","/**
 * Value to use for group and item identifier integers when you don't care
 * about them.
 */
","\android\view\Menu.java"
"android.view.Menu.FIRST","false","false","false","true","true","int","1","","/**
 * First value for group and item identifier integers.
 */
","\android\view\Menu.java"
"android.view.Menu.FLAG_PERFORM_NO_CLOSE","false","false","false","true","true","int","0x0001","","/**
 * Flag for {@link #performShortcut}: if set, do not close the menu after
 * executing the shortcut.
 */
","\android\view\Menu.java"
"android.view.Menu.USER_SHIFT","false","false","false","true","true","int","0","","/**
 * Bit shift of the user portion of the order integer.
 * @hide
 */
","\android\view\Menu.java"
"android.view.Menu.CATEGORY_SECONDARY","false","false","false","true","true","int","0x00030000","","/**
 * Category code for the order integer for items/groups that are
 * user-supplied secondary (infrequently used) options -- or/add this with
 * your base value.
 */
","\android\view\Menu.java"
"android.view.Menu.USER_MASK","false","false","false","true","true","int","0x0000ffff","","/**
 * This is the part of an order integer that the user can provide.
 * @hide
 */
","\android\view\Menu.java"
"android.view.Menu.CATEGORY_MASK","false","false","false","true","true","int","0xffff0000","","/**
 * This is the part of an order integer that supplies the category of the
 * item.
 * @hide
 */
","\android\view\Menu.java"
"android.view.Menu.CATEGORY_SYSTEM","false","false","false","true","true","int","0x00020000","","/**
 * Category code for the order integer for items/groups that are provided by
 * the system -- or/add this with your base value.
 */
","\android\view\Menu.java"
"android.webkit.GeolocationService.TAG","false","false","true","true","true","String","""geolocationService""","","// Log tag
","\android\webkit\GeolocationService.java"
"android.webkit.GeolocationService.mIsNetworkProviderAvailable","false","false","true","false","false","boolean","","","","\android\webkit\GeolocationService.java"
"android.webkit.GeolocationService.mNativeObject","false","false","true","false","false","long","","","","\android\webkit\GeolocationService.java"
"android.webkit.GeolocationService.mIsRunning","false","false","true","false","false","boolean","","","","\android\webkit\GeolocationService.java"
"android.webkit.GeolocationService.mIsGpsProviderAvailable","false","false","true","false","false","boolean","","","","\android\webkit\GeolocationService.java"
"android.webkit.GeolocationService.mIsGpsEnabled","false","false","true","false","false","boolean","","","","\android\webkit\GeolocationService.java"
"android.webkit.GeolocationService.mLocationManager","false","false","true","false","false","LocationManager","","","","\android\webkit\GeolocationService.java"
"android.widget.SimpleCursorTreeAdapter.mGroupTo","false","false","true","false","false","int","","","/**
 * The View IDs that will display a group's data fetched from the
 * corresponding column.
 */
","\android\widget\SimpleCursorTreeAdapter.java"
"android.widget.SimpleCursorTreeAdapter.mGroupFrom","false","false","true","false","false","int","","","/**
 * The indices of columns that contain data to display for a group.
 */
","\android\widget\SimpleCursorTreeAdapter.java"
"android.widget.SimpleCursorTreeAdapter.mChildTo","false","false","true","false","false","int","","","/**
 * The View IDs that will display a child's data fetched from the
 * corresponding column.
 */
","\android\widget\SimpleCursorTreeAdapter.java"
"android.widget.SimpleCursorTreeAdapter.mViewBinder","false","false","true","false","false","ViewBinder","","","/**
 * View binder, if supplied
 */
","\android\widget\SimpleCursorTreeAdapter.java"
"android.widget.SimpleCursorTreeAdapter.mChildFrom","false","false","true","false","false","int","","","/**
 * The indices of columns that contain data to display for a child.
 */
","\android\widget\SimpleCursorTreeAdapter.java"
"android.preference.PreferenceLayout.name","false","false","true","false","false","String","","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.mSyncRunnable","false","false","true","false","false","Runnable","new Runnable() {

    public void run() {
        syncMyPreferences();
    }
}","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.mTempPreferenceLayout","false","false","true","false","false","PreferenceLayout","new PreferenceLayout()","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.mPreferenceList","false","false","true","false","false","List<Preference>","","","/**
 * Maps a position into this adapter -> {@link Preference}. These
 * {@link Preference}s don't have to be direct children of this
 * {@link PreferenceGroup}, they can be grand children or younger)
 */
","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.mHasReturnedViewTypeCount","false","false","true","false","false","boolean","false","","/**
 * Blocks the mPreferenceClassNames from being changed anymore.
 */
","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.resId","false","false","true","false","false","int","","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.mPreferenceGroup","false","false","true","false","false","PreferenceGroup","","","/**
 * The group that we are providing data from.
 */
","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceLayout.widgetResId","false","false","true","false","false","int","","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.name","false","false","true","false","false","String","","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.mHandler","false","false","true","false","false","Handler","new Handler()","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceLayout.resId","false","false","true","false","false","int","","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.mPreferenceLayouts","false","false","true","false","false","ArrayList<PreferenceLayout>","","","/**
 * List of unique Preference and its subclasses' names. This is used to find
 * out how many types of views this adapter can return. Once the count is
 * returned, this cannot be modified (since the ListView only checks the
 * count once--when the adapter is being set). We will not recycle views for
 * Preference subclasses seen after the count has been returned.
 */
","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.mIsSyncing","false","false","true","false","false","boolean","false","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.TAG","false","false","true","true","true","String","""PreferenceGroupAdapter""","","","\android\preference\PreferenceGroupAdapter.java"
"android.preference.PreferenceGroupAdapter.widgetResId","false","false","true","false","false","int","","","","\android\preference\PreferenceGroupAdapter.java"
"android.view.WindowOrientationListener.SAMPLING_PERIOD_MS","false","false","true","true","true","int","200","","// that's not enough to significantly skew our results.
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.MAX_DEVIATION_FROM_GRAVITY","false","false","true","true","true","int","1","","// high time constant.
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.ACCELERATING_LOWPASS_ALPHA","false","false","true","true","true","float","(float) SAMPLING_PERIOD_MS / (ACCELERATING_TIME_CONSTANT_MS + SAMPLING_PERIOD_MS)","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.TILTED_TIME_CONSTANT_MS","false","false","true","true","true","int","600","","// When device is partially tilted towards the sky or ground
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.mEnabled","false","false","true","false","false","boolean","false","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.MAX_TRANSITION_TILT","false","false","true","false","true","int","new int[] { MAX_TILT, MAX_TILT, MAX_TILT }","","// particular orientation here.
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.mFilteredVector","false","false","true","false","false","float","new float[] { 0, 0, 0 }","","// The low-pass filtered accelerometer data
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.MAX_TRANSITION_TILT","false","false","true","false","true","int","new int[] { MAX_TILT, MAX_TILT, MAX_TILT }","","// particular orientation here.
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl._DATA_Z","false","false","true","true","true","int","2","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.ROTATION_0","false","false","true","true","true","int","0","","// ROTATION_90 = right side of device facing the sky, etc.
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.THRESHOLDS","false","false","true","false","true","int","new int[][][] { { { 60, 180 }, { 180, 300 } }, { { 0, 45 }, { 45, 165 }, { 330, 360 } }, { { 0, 30 }, { 195, 315 }, { 315, 360 } } }","","// however, we enforce stricter thresholds, pushing the thresholds 15 degrees closer to 180.
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.mRotation","false","false","true","false","false","int","ROTATION_0","","// Current orientation state
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener._DATA_X","false","false","true","true","true","int","0","","// Indices into SensorEvent.values
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener._DATA_Y","false","false","true","true","true","int","1","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.ROTATION_270","false","false","true","true","true","int","2","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.DEFAULT_LOWPASS_ALPHA","false","false","true","true","true","float","(float) SAMPLING_PERIOD_MS / (DEFAULT_TIME_CONSTANT_MS + SAMPLING_PERIOD_MS)","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.ACCELERATING_TIME_CONSTANT_MS","false","false","true","true","true","int","5000","","// such readings.
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.SURFACE_ROTATIONS","false","false","true","false","true","int","new int[] { Surface.ROTATION_0, Surface.ROTATION_90, Surface.ROTATION_270 }","","// Mapping our internal aliases into actual Surface rotation values
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.ROTATE_TO","false","false","true","false","true","int","new int[][] { { ROTATION_270, ROTATION_90 }, { ROTATION_0, ROTATION_270, ROTATION_0 }, { ROTATION_0, ROTATION_90, ROTATION_0 } }","","// See THRESHOLDS
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.MAX_TILT","false","false","true","true","true","int","65","","// when screen is facing the sky or ground), we refuse to make any orientation changes.
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.TILTED_TIME_CONSTANT_MS","false","false","true","true","true","int","600","","// When device is partially tilted towards the sky or ground
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.localLOGV","false","false","true","true","true","boolean","DEBUG || Config.DEBUG","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.ROTATION_90","false","false","true","true","true","int","1","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.RADIANS_TO_DEGREES","false","false","true","true","true","float","(float) (180 / Math.PI)","","// We work with all angles in degrees in this class.
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.ROTATION_90","false","false","true","true","true","int","1","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.mRotation","false","false","true","false","false","int","ROTATION_0","","// Current orientation state
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.mFilteredVector","false","false","true","false","false","float","new float[] { 0, 0, 0 }","","// The low-pass filtered accelerometer data
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.mRate","false","false","true","false","false","int","","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.ROTATION_270","false","false","true","true","true","int","2","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.ROTATE_TO","false","false","true","false","true","int","new int[][] { { ROTATION_270, ROTATION_90 }, { ROTATION_0, ROTATION_270, ROTATION_0 }, { ROTATION_0, ROTATION_90, ROTATION_0 } }","","// See THRESHOLDS
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.PARTIAL_TILT","false","false","true","true","true","int","45","","// picking one up).
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener._DATA_Z","false","false","true","true","true","int","2","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.RADIANS_TO_DEGREES","false","false","true","true","true","float","(float) (180 / Math.PI)","","// We work with all angles in degrees in this class.
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl._DATA_X","false","false","true","true","true","int","0","","// Indices into SensorEvent.values
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl._DATA_Y","false","false","true","true","true","int","1","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.TILTED_LOWPASS_ALPHA","false","false","true","true","true","float","(float) SAMPLING_PERIOD_MS / (TILTED_TIME_CONSTANT_MS + SAMPLING_PERIOD_MS)","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.TILTED_LOWPASS_ALPHA","false","false","true","true","true","float","(float) SAMPLING_PERIOD_MS / (TILTED_TIME_CONSTANT_MS + SAMPLING_PERIOD_MS)","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.ROTATION_0","false","false","true","true","true","int","0","","// ROTATION_90 = right side of device facing the sky, etc.
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.DEFAULT_LOWPASS_ALPHA","false","false","true","true","true","float","(float) SAMPLING_PERIOD_MS / (DEFAULT_TIME_CONSTANT_MS + SAMPLING_PERIOD_MS)","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.DEFAULT_TIME_CONSTANT_MS","false","false","true","true","true","int","200","","// When device is near-vertical (screen approximately facing the horizon)
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.TAG","false","false","true","true","true","String","""WindowOrientationListener""","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.mSensorManager","false","false","true","false","false","SensorManager","","","","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.mSensorEventListener","false","false","true","false","false","SensorEventListenerImpl","","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.THRESHOLDS","false","false","true","false","true","int","new int[][][] { { { 60, 180 }, { 180, 300 } }, { { 0, 45 }, { 45, 165 }, { 330, 360 } }, { { 0, 30 }, { 195, 315 }, { 315, 360 } } }","","// however, we enforce stricter thresholds, pushing the thresholds 15 degrees closer to 180.
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.PARTIAL_TILT","false","false","true","true","true","int","45","","// picking one up).
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.DEBUG","false","false","true","true","true","boolean","false","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.SURFACE_ROTATIONS","false","false","true","false","true","int","new int[] { Surface.ROTATION_0, Surface.ROTATION_90, Surface.ROTATION_270 }","","// Mapping our internal aliases into actual Surface rotation values
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.DEFAULT_TIME_CONSTANT_MS","false","false","true","true","true","int","200","","// When device is near-vertical (screen approximately facing the horizon)
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.ACCELERATING_TIME_CONSTANT_MS","false","false","true","true","true","int","5000","","// such readings.
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.MAX_DEVIATION_FROM_GRAVITY","false","false","true","true","true","int","1","","// high time constant.
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.SAMPLING_PERIOD_MS","false","false","true","true","true","int","200","","// that's not enough to significantly skew our results.
","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.MAX_TILT","false","false","true","true","true","int","65","","// when screen is facing the sky or ground), we refuse to make any orientation changes.
","\android\view\WindowOrientationListener.java"
"android.view.WindowOrientationListener.mSensor","false","false","true","false","false","Sensor","","","","\android\view\WindowOrientationListener.java"
"android.view.SensorEventListenerImpl.ACCELERATING_LOWPASS_ALPHA","false","false","true","true","true","float","(float) SAMPLING_PERIOD_MS / (ACCELERATING_TIME_CONSTANT_MS + SAMPLING_PERIOD_MS)","","","\android\view\WindowOrientationListener.java"
"android.widget.HorizontalScrollView.mVelocityTracker","false","false","true","false","false","VelocityTracker","","","/**
 * Determines speed during touch scrolling
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.INVALID_POINTER","false","false","true","true","true","int","-1","","/**
 * Sentinel value for no current active pointer.
 * Used by {@link #mActivePointerId}.
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mFillViewport","false","false","true","false","false","boolean","","","/**
 * When set to true, the scroll view measure its child to make it fill the currently
 * visible area.
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mTempRect","false","false","true","false","true","Rect","new Rect()","","","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mSmoothScrollingEnabled","false","false","true","false","false","boolean","true","","/**
 * Whether arrow scrolling is animated.
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mIsBeingDragged","false","false","true","false","false","boolean","false","","/**
 * True if the user is currently dragging this ScrollView around. This is
 * not the same as 'is being flinged', which can be checked by
 * mScroller.isFinished() (flinging begins when the user lifts his finger).
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.MAX_SCROLL_FACTOR","false","false","true","true","true","float","ScrollView.MAX_SCROLL_FACTOR","","","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mMinimumVelocity","false","false","true","false","false","int","","","","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mLastScroll","false","false","true","false","false","long","","","","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mLastMotionX","false","false","true","false","false","float","","","/**
 * Position of the last motion event.
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mIsLayoutDirty","false","false","true","false","false","boolean","true","","/**
 * True when the layout has changed but the traversal has not come through yet.
 * Ideally the view hierarchy would keep track of this for us.
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mMaximumVelocity","false","false","true","false","false","int","","","","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mScroller","false","false","true","false","false","Scroller","","","","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mActivePointerId","false","false","true","false","false","int","INVALID_POINTER","","/**
 * ID of the active pointer. This is used to retain consistency during
 * drags/flings if multiple pointers are used.
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.ANIMATED_SCROLL_GAP","false","false","true","true","true","int","ScrollView.ANIMATED_SCROLL_GAP","","","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mScrollViewMovedFocus","false","false","true","false","false","boolean","","","/**
 * Flag to indicate that we are moving focus ourselves. This is so the
 * code that watches for focus changes initiated outside this ScrollView
 * knows that it does not have to do anything.
 */
","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mTouchSlop","false","false","true","false","false","int","","","","\android\widget\HorizontalScrollView.java"
"android.widget.HorizontalScrollView.mChildToScrollTo","false","false","true","false","false","View","null","","/**
 * The child to give focus to in the event that a child has requested focus while the
 * layout is dirty. This prevents the scroll from being wrong if the child has not been
 * laid out before requesting focus.
 */
","\android\widget\HorizontalScrollView.java"
"android.content.pm.ParsePackageItemArgs.labelRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.owner","true","false","false","false","true","Package","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.usesOptionalLibraries","true","false","false","false","false","ArrayList<String>","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mExtras","true","false","false","false","false","Object","","","// Additional data supplied by callers.
","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mVersionCode","true","false","false","false","false","int","","","// The version code declared for this package.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageLite.mScanPath","true","false","false","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.processRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.intents","true","false","false","false","true","ArrayList<II>","","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParsePackageItemArgs.tag","false","false","false","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mOriginalPackages","true","false","false","false","false","ArrayList<String>","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.protectedBroadcasts","true","false","false","false","false","ArrayList<String>","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Component.componentName","false","false","false","false","false","ComponentName","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.icon","true","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.sdkVersion","true","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.usesLibraries","true","false","false","false","false","ArrayList<String>","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mSync","false","false","true","true","true","Object","new Object()","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.PARSE_IGNORE_PROCESSES","true","false","false","true","true","int","1 << 3","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mAppMetaData","true","false","false","false","false","Bundle","null","","// We store the application meta-data independently to avoid multiple unwanted references
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageLite.packageName","true","false","false","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParsePackageItemArgs.iconRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mAdoptPermissions","true","false","false","false","false","ArrayList<String>","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mRealPackage","true","false","false","false","false","String","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.Instrumentation.info","true","false","false","false","true","InstrumentationInfo","","","","\android\content\pm\PackageParser.java"
"android.content.pm.NewPermissionInfo.name","true","false","false","false","true","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mReadBuffer","false","false","true","true","false","WeakReference<byte[]>","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mScanPath","true","false","false","false","false","String","","","// file an app came from.
","\android\content\pm\PackageParser.java"
"android.content.pm.Package.usesLibraries","true","false","false","false","false","ArrayList<String>","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.packageName","true","false","false","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.IntentInfo.hasDefault","true","false","false","false","false","boolean","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.reqFeatures","true","false","false","false","false","ArrayList<FeatureInfo>","null","","/*
         *  Applications requested features
         */
","\android\content\pm\PackageParser.java"
"android.content.pm.ServiceIntentInfo.service","true","false","false","false","true","Service","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.NEW_PERMISSIONS","true","false","false","true","true","PackageParser.NewPermissionInfo","new PackageParser.NewPermissionInfo[] { new PackageParser.NewPermissionInfo(android.Manifest.permission.WRITE_EXTERNAL_STORAGE, android.os.Build.VERSION_CODES.DONUT, 0), new PackageParser.NewPermissionInfo(android.Manifest.permission.READ_PHONE_STATE, android.os.Build.VERSION_CODES.DONUT, 0) }","","/**
 * List of new permissions that have been added since 1.0.
 * NOTE: These must be declared in SDK version order, with permissions
 * added to older SDKs appearing before those added to newer SDKs.
 * @hide
 */
","\android\content\pm\PackageParser.java"
"android.content.pm.ActivityIntentInfo.activity","true","false","false","false","true","Activity","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mDidDexOpt","true","false","false","false","false","boolean","","","// For use by package manager to keep track of where it has done dexopt.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.TAG","false","false","true","true","true","String","""PackageParser""","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mOriginalPackages","true","false","false","false","false","ArrayList<String>","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.permissionGroups","true","false","false","false","true","ArrayList<PermissionGroup>","new ArrayList<PermissionGroup>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.packageName","true","false","false","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.configPreferences","true","false","false","false","true","ArrayList<ConfigurationInfo>","new ArrayList<ConfigurationInfo>()","","/*
         *  Applications hardware preferences
         */
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.PARSE_IS_SYSTEM","true","false","false","true","true","int","1 << 0","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mVersionName","true","false","false","false","false","String","","","// The version name declared for this package.
","\android\content\pm\PackageParser.java"
"android.content.pm.Package.permissions","true","false","false","false","true","ArrayList<Permission>","new ArrayList<Permission>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.requestedPermissions","true","false","false","false","true","ArrayList<String>","new ArrayList<String>()","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParseComponentArgs.processRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PermissionGroup.info","true","false","false","false","true","PermissionGroupInfo","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.sa","false","false","false","false","false","TypedArray","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mPreferredOrder","true","false","false","false","false","int","0","","// preferred up order.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.className","true","false","false","false","true","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParsePackageItemArgs.nameRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.applicationInfo","true","false","false","false","true","ApplicationInfo","new ApplicationInfo()","","// For now we only support one application per package.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.ANDROID_RESOURCES","false","false","true","true","true","String","""http://schemas.android.com/apk/res/android""","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mRealPackage","true","false","false","false","false","String","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.PARSE_DEFAULT_INSTALL_LOCATION","false","false","true","true","true","int","PackageInfo.INSTALL_LOCATION_UNSPECIFIED","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mSharedUserLabel","true","false","false","false","false","int","","","// The shared user label that this package wants to use.
","\android\content\pm\PackageParser.java"
"android.content.pm.Component.intents","true","false","false","false","true","ArrayList<II>","","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParsePackageItemArgs.outError","false","false","false","false","true","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.name","true","false","false","false","true","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Provider.syncable","true","false","false","false","false","boolean","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.receivers","true","false","false","false","true","ArrayList<Activity>","new ArrayList<Activity>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParsePackageItemArgs.owner","false","false","false","false","true","Package","","","","\android\content\pm\PackageParser.java"
"android.content.pm.IntentInfo.icon","true","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.sCompatibilityModeEnabled","false","false","true","true","false","boolean","true","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.usesLibraryFiles","true","false","false","false","false","String","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.NewPermissionInfo.sdkVersion","true","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.providers","true","false","false","false","true","ArrayList<Provider>","new ArrayList<Provider>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.tag","false","false","false","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.hasDefault","true","false","false","false","false","boolean","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.info","true","false","false","false","true","InstrumentationInfo","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Permission.tree","true","false","false","false","false","boolean","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.providers","true","false","false","false","true","ArrayList<Provider>","new ArrayList<Provider>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mParseServiceArgs","false","false","true","false","false","ParseComponentArgs","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.permissions","true","false","false","false","true","ArrayList<Permission>","new ArrayList<Permission>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mSharedUserId","true","false","false","false","false","String","","","// The shared user id that this package wants to use.
","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mAppMetaData","true","false","false","false","false","Bundle","null","","// We store the application meta-data independently to avoid multiple unwanted references
","\android\content\pm\PackageParser.java"
"android.content.pm.Component.metaData","true","false","false","false","false","Bundle","","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParseComponentArgs.sepProcesses","false","false","false","false","true","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Provider.info","true","false","false","false","true","ProviderInfo","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mAdoptPermissions","true","false","false","false","false","ArrayList<String>","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.PARSE_ON_SDCARD","true","false","false","true","true","int","1 << 5","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParsePackageItemArgs.sa","false","false","false","false","false","TypedArray","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.PARSE_IS_SYSTEM_DIR","true","false","false","true","true","int","1 << 6","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.instrumentation","true","false","false","false","true","ArrayList<Instrumentation>","new ArrayList<Instrumentation>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mPreferredOrder","true","false","false","false","false","int","0","","// preferred up order.
","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mDidDexOpt","true","false","false","false","false","boolean","","","// For use by package manager to keep track of where it has done dexopt.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.iconRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.installLocation","true","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.reqFeatures","true","false","false","false","false","ArrayList<FeatureInfo>","null","","/*
         *  Applications requested features
         */
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.applicationInfo","true","false","false","false","true","ApplicationInfo","new ApplicationInfo()","","// For now we only support one application per package.
","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mExtras","true","false","false","false","false","Object","","","// Additional data supplied by callers.
","\android\content\pm\PackageParser.java"
"android.content.pm.Package.activities","true","false","false","false","true","ArrayList<Activity>","new ArrayList<Activity>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.Component.componentShortName","false","false","false","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.activity","true","false","false","false","true","Activity","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mSignatures","true","false","false","false","false","Signature","","","// Signatures that were read from the package.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mVersionCode","true","false","false","false","false","int","","","// The version code declared for this package.
","\android\content\pm\PackageParser.java"
"android.content.pm.Service.info","true","false","false","false","true","ServiceInfo","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.labelRes","true","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.nameRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mScanPath","true","false","false","false","false","String","","","// file an app came from.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mParseActivityAliasArgs","false","false","true","false","false","ParseComponentArgs","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.services","true","false","false","false","true","ArrayList<Service>","new ArrayList<Service>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.syncable","true","false","false","false","false","boolean","","","","\android\content\pm\PackageParser.java"
"android.content.pm.IntentInfo.nonLocalizedLabel","true","false","false","false","false","CharSequence","","","","\android\content\pm\PackageParser.java"
"android.content.pm.NewPermissionInfo.fileVersion","true","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mSignatures","true","false","false","false","false","Signature","","","// Signatures that were read from the package.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mParseProviderArgs","false","false","true","false","false","ParseComponentArgs","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.metaData","true","false","false","false","false","Bundle","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Component.owner","true","false","false","false","true","Package","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Component.className","true","false","false","false","true","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.PARSE_MUST_BE_APK","true","false","false","true","true","int","1 << 2","","","\android\content\pm\PackageParser.java"
"android.content.pm.Permission.group","true","false","false","false","false","PermissionGroup","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.activities","true","false","false","false","true","ArrayList<Activity>","new ArrayList<Activity>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mParseActivityArgs","false","false","true","false","false","ParseComponentArgs","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.nonLocalizedLabel","true","false","false","false","false","CharSequence","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.configPreferences","true","false","false","false","true","ArrayList<ConfigurationInfo>","new ArrayList<ConfigurationInfo>()","","/*
         *  Applications hardware preferences
         */
","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mPath","true","false","false","false","false","String","","","// If this is a 3rd party app, this is the path of the zip file.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.descriptionRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mSharedUserId","true","false","false","false","false","String","","","// The shared user id that this package wants to use.
","\android\content\pm\PackageParser.java"
"android.content.pm.ParseComponentArgs.enabledRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.componentName","false","false","false","false","false","ComponentName","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageLite.installLocation","true","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.installLocation","true","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mArchiveSourcePath","false","false","true","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.flags","false","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.ParseComponentArgs.flags","false","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.RIGID_PARSER","false","false","true","true","true","boolean","false","","/**
 * If set to true, we will only allow package files that exactly match
 * the DTD.  Otherwise, we try to get as much from the package as we
 * can without failing.  This should normally be set to false, to
 * support extensions to the DTD in future versions.
 */
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.SDK_CODENAME","false","false","true","true","true","String","""REL"".equals(Build.VERSION.CODENAME) ? null : Build.VERSION.CODENAME","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.receivers","true","false","false","false","true","ArrayList<Activity>","new ArrayList<Activity>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.permissionGroups","true","false","false","false","true","ArrayList<PermissionGroup>","new ArrayList<PermissionGroup>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.requestedPermissions","true","false","false","false","true","ArrayList<String>","new ArrayList<String>()","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.fileVersion","true","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.componentShortName","false","false","false","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.PARSE_CHATTY","true","false","false","true","true","int","1 << 1","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.services","true","false","false","false","true","ArrayList<Service>","new ArrayList<Service>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.protectedBroadcasts","true","false","false","false","false","ArrayList<String>","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mParseInstrumentationArgs","false","false","true","false","false","ParsePackageItemArgs","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Activity.info","true","false","false","false","true","ActivityInfo","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.group","true","false","false","false","false","PermissionGroup","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.PARSE_FORWARD_LOCK","true","false","false","true","true","int","1 << 4","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mVersionName","true","false","false","false","false","String","","","// The version name declared for this package.
","\android\content\pm\PackageParser.java"
"android.content.pm.ParseComponentArgs.descriptionRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mPath","true","false","false","false","false","String","","","// If this is a 3rd party app, this is the path of the zip file.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.outError","false","false","false","false","true","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.SDK_VERSION","false","false","true","true","true","int","Build.VERSION.SDK_INT","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mParseError","false","false","true","false","false","int","PackageManager.INSTALL_SUCCEEDED","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.mSeparateProcesses","false","false","true","false","false","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.instrumentation","true","false","false","false","true","ArrayList<Instrumentation>","new ArrayList<Instrumentation>(0)","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.usesLibraryFiles","true","false","false","false","false","String","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.IntentInfo.labelRes","true","false","false","false","false","int","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Permission.info","true","false","false","false","true","PermissionInfo","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.tree","true","false","false","false","false","boolean","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.usesOptionalLibraries","true","false","false","false","false","ArrayList<String>","null","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.sepProcesses","false","false","false","false","true","String","","","","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.service","true","false","false","false","true","Service","","","","\android\content\pm\PackageParser.java"
"android.content.pm.Package.mSharedUserLabel","true","false","false","false","false","int","","","// The shared user label that this package wants to use.
","\android\content\pm\PackageParser.java"
"android.content.pm.PackageParser.enabledRes","false","false","false","false","true","int","","","","\android\content\pm\PackageParser.java"
"android.widget.CursorAdapter.mContext","false","true","false","false","false","Context","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"android.widget.CursorAdapter.mCursorFilter","false","true","false","false","false","CursorFilter","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"android.widget.CursorAdapter.mFilterQueryProvider","false","true","false","false","false","FilterQueryProvider","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"android.widget.CursorAdapter.mDataSetObserver","false","true","false","false","false","DataSetObserver","new MyDataSetObserver()","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"android.widget.CursorAdapter.mDataValid","false","true","false","false","false","boolean","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"android.widget.CursorAdapter.mRowIDColumn","false","true","false","false","false","int","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"android.widget.CursorAdapter.mChangeObserver","false","true","false","false","false","ChangeObserver","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"android.widget.CursorAdapter.mCursor","false","true","false","false","false","Cursor","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"android.widget.CursorAdapter.mAutoRequery","false","true","false","false","false","boolean","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\CursorAdapter.java"
"com.android.internal.widget.TextProgressBar.mChronometerFollow","false","false","false","false","false","boolean","false","","","\com\android\internal\widget\TextProgressBar.java"
"com.android.internal.widget.TextProgressBar.CHRONOMETER_ID","false","false","false","true","true","int","android.R.id.text1","","","\com\android\internal\widget\TextProgressBar.java"
"com.android.internal.widget.TextProgressBar.mDurationBase","false","false","false","false","false","long","-1","","","\com\android\internal\widget\TextProgressBar.java"
"com.android.internal.widget.TextProgressBar.mChronometer","false","false","false","false","false","Chronometer","null","","","\com\android\internal\widget\TextProgressBar.java"
"com.android.internal.widget.TextProgressBar.TAG","true","false","false","true","true","String","""TextProgressBar""","","","\com\android\internal\widget\TextProgressBar.java"
"com.android.internal.widget.TextProgressBar.mProgressBar","false","false","false","false","false","ProgressBar","null","","","\com\android\internal\widget\TextProgressBar.java"
"com.android.internal.widget.TextProgressBar.mDuration","false","false","false","false","false","int","-1","","","\com\android\internal\widget\TextProgressBar.java"
"com.android.internal.widget.TextProgressBar.PROGRESSBAR_ID","false","false","false","true","true","int","android.R.id.progress","","","\com\android\internal\widget\TextProgressBar.java"
"com.android.internal.widget.TextProgressBar.mChronometerGravity","false","false","false","false","false","int","Gravity.NO_GRAVITY","","","\com\android\internal\widget\TextProgressBar.java"
"android.app.ResultInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<ResultInfo>","new Parcelable.Creator<ResultInfo>() {

    public ResultInfo createFromParcel(Parcel in) {
        return new ResultInfo(in);
    }

    public ResultInfo[] newArray(int size) {
        return new ResultInfo[size];
    }
}","","","\android\app\ResultInfo.java"
"android.app.ResultInfo.mData","true","false","false","false","true","Intent","","","","\android\app\ResultInfo.java"
"android.app.ResultInfo.mResultWho","true","false","false","false","true","String","","","","\android\app\ResultInfo.java"
"android.app.ResultInfo.mResultCode","true","false","false","false","true","int","","","","\android\app\ResultInfo.java"
"android.app.ResultInfo.mRequestCode","true","false","false","false","true","int","","","","\android\app\ResultInfo.java"
"android.os.storage.ListenerDelegate.mHandler","false","false","true","false","true","Handler","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.mMessage","false","false","true","false","false","Message","","","","\android\os\storage\StorageManager.java"
"android.os.storage.UmsConnectionChangedStorageEvent.available","true","false","false","false","false","boolean","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageEvent.EVENT_UMS_CONNECTION_CHANGED","true","false","false","true","true","int","1","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageEvent.EVENT_STORAGE_STATE_CHANGED","true","false","false","true","true","int","2","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.path","true","false","false","false","false","String","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageEvent.mMessage","false","false","true","false","false","Message","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.mStorageEventListener","false","false","false","false","true","StorageEventListener","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.EVENT_UMS_CONNECTION_CHANGED","true","false","false","true","true","int","1","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.mMountService","false","false","true","false","false","IMountService","","","/*
     * Our internal MountService binder reference
     */
","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.available","true","false","false","false","false","boolean","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.mListeners","false","false","true","false","false","ArrayList<ListenerDelegate>","new ArrayList<ListenerDelegate>()","","/*
     * List of our listeners
     */
","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.TAG","false","false","true","true","true","String","""StorageManager""","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageStateChangedStorageEvent.path","true","false","false","false","false","String","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.mHandler","false","false","true","false","true","Handler","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageStateChangedStorageEvent.oldState","true","false","false","false","false","String","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.EVENT_STORAGE_STATE_CHANGED","true","false","false","true","true","int","2","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.mBinderListener","false","false","true","false","false","MountServiceBinderListener","","","/*
     * Target listener for binder callbacks
     */
","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.oldState","true","false","false","false","false","String","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.newState","true","false","false","false","false","String","","","","\android\os\storage\StorageManager.java"
"android.os.storage.StorageManager.mTgtLooper","false","false","false","false","false","Looper","","","/*
     * The looper target for callbacks
     */
","\android\os\storage\StorageManager.java"
"android.os.storage.StorageStateChangedStorageEvent.newState","true","false","false","false","false","String","","","","\android\os\storage\StorageManager.java"
"android.os.storage.ListenerDelegate.mStorageEventListener","false","false","false","false","true","StorageEventListener","","","","\android\os\storage\StorageManager.java"
"android.webkit.WebView.TOUCH_SHORTPRESS_START_MODE","false","false","true","true","true","int","4","","","\android\webkit\WebView.java"
"android.webkit.ViewSizeData.mScale","false","false","false","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mMinZoomScaleFixed","false","false","true","false","false","boolean","true","","","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.DRAGGING_STATE","false","false","true","true","true","int","0","","// inner (non-state) classes can't have enums :(
","\android\webkit\WebView.java"
"android.webkit.WebView.NEW_PICTURE_MSG_ID","false","false","false","true","true","int","105","","","\android\webkit\WebView.java"
"android.webkit.WebView.CENTER_FIT_RECT","false","false","false","true","true","int","127","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastWidthSent","false","false","false","false","false","int","","","// sending the same dimensions more than once.
","\android\webkit\WebView.java"
"android.webkit.ViewSizeData.mHeight","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.PREVENT_DEFAULT_YES","false","false","true","true","true","int","3","","","\android\webkit\WebView.java"
"android.webkit.WebView.UPDATE_TEXTFIELD_TEXT_MSG_ID","false","false","false","true","true","int","108","","","\android\webkit\WebView.java"
"android.webkit.WebView.DEFAULT_VIEWPORT_WIDTH","false","false","false","true","true","int","800","","// use DEFAULT_VIEWPORT_WIDTH as the default viewport width
","\android\webkit\WebView.java"
"android.webkit.WebView.TRACKBALL_MOVE_COUNT","false","false","true","true","true","int","10","","","\android\webkit\WebView.java"
"android.webkit.WebView.mOverlayVerticalScrollbar","false","false","true","false","false","boolean","false","","","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomButtonsController","false","false","true","false","false","ZoomButtonsController","","","// getZoomButtonsController() to get better performance.
","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mXY","false","false","true","false","false","float","new float[2]","","","\android\webkit\WebView.java"
"android.webkit.WebView.mId","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mPictureListener","false","false","true","false","false","PictureListener","","","// Used to notify listeners of a new picture.
","\android\webkit\WebView.java"
"android.webkit.WebView.mMaxZoomScale","false","false","true","false","false","float","","","// scale limit, which can be set through viewport meta tag in the web page
","\android\webkit\WebView.java"
"android.webkit.WebView.mLastVisibleRectSent","false","false","true","false","false","Rect","","","// Used to avoid sending many visible rect messages.
","\android\webkit\WebView.java"
"android.webkit.WebView.mDrawHistory","false","false","true","false","false","boolean","false","","// draw history
","\android\webkit\WebView.java"
"android.webkit.WebView.mMinLockSnapReverseDistance","false","false","true","false","false","int","","","// adjustable parameters
","\android\webkit\WebView.java"
"android.webkit.HitTestResult.EMAIL_TYPE","true","false","false","true","true","int","4","","/**
 * HitTestResult for hitting an email address
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.SNAP_X","false","false","true","true","true","int","2","","// may be combined with SNAP_LOCK
","\android\webkit\WebView.java"
"android.webkit.WebView.DRAW_EXTRAS_SELECTION","false","false","true","true","true","int","2","","","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mAdapter","false","false","true","false","false","Adapter","","","","\android\webkit\WebView.java"
"android.webkit.WebView.SNAP_Y","false","false","true","true","true","int","4","","// may be combined with SNAP_LOCK
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mListView","false","false","true","false","false","ListView","","","","\android\webkit\WebView.java"
"android.webkit.WebView.LAST_PRIVATE_MSG_ID","false","false","true","true","true","int","PREVENT_DEFAULT_TIMEOUT","","","\android\webkit\WebView.java"
"android.webkit.WebView.mInvFinalZoomScale","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mHistoryPicture","false","false","true","false","false","Picture","null","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDefaultScale","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mPageThatNeedsToSlideTitleBarOffScreen","false","false","true","false","false","String","","","/**
 * The URL of a page that sent a message to scroll the title bar off screen.
 *
 * Many mobile sites tell the page to scroll to (0,1) in order to scroll the
 * title bar off the screen.  Sometimes, the scroll position is set before
 * the page finishes loading.  Rather than scrolling while the page is still
 * loading, keep track of the URL and new scroll position so we can perform
 * the scroll once the page finishes loading.
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mHistoryWidth","false","false","true","false","false","int","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.mNativeClass","false","false","true","false","false","int","","","// created.
","\android\webkit\WebView.java"
"android.webkit.WebView.SRC_ANCHOR_TYPE","true","false","false","true","true","int","7","","/**
 * HitTestResult for hitting a HTML::a tag with src=http
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mTrackballYMove","false","false","true","false","false","int","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.DRAGGING_STATE","false","false","true","true","true","int","0","","// inner (non-state) classes can't have enums :(
","\android\webkit\WebView.java"
"android.webkit.WebView.CLEAR_TEXT_ENTRY","false","false","false","true","true","int","111","","","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mProxy","false","false","true","false","true","DragTracker","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mAutoRedraw","false","false","true","false","false","boolean","","","// true means redraw the screen all-the-time. Only with AUTO_REDRAW_HACK
","\android\webkit\WebView.java"
"android.webkit.WebView.mWebViewCore","false","false","true","false","false","WebViewCore","","","// destroyed.
","\android\webkit\WebView.java"
"android.webkit.WebView.FIRST_PRIVATE_MSG_ID","false","false","true","true","true","int","REMEMBER_PASSWORD","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastTouchY","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomStart","false","false","true","false","false","long","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mYDistanceToSlideTitleOffScreen","false","false","true","false","false","int","","","/**
 * The destination Y scroll position to be used when the page finishes
 * loading.  See mPageThatNeedsToSlideTitleBarOffScreen.
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mLastTouchX","false","false","true","false","false","float","","","/**
 * Position of the last touch event.
 */
","\android\webkit\WebView.java"
"android.webkit.HitTestResult.UNKNOWN_TYPE","true","false","false","true","true","int","0","","/**
 * Default HitTestResult, where the target is unknown
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.PHONE_TYPE","true","false","false","true","true","int","2","","/**
 * HitTestResult for hitting a phone number
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mMaximumFling","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mUpdateTextWrap","false","false","false","false","true","boolean","","","","\android\webkit\WebView.java"
"android.webkit.HitTestResult.IMAGE_TYPE","true","false","false","true","true","int","5","","/**
 * HitTestResult for hitting an HTML::img tag
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.PAGE_SCROLL_OVERLAP","false","false","true","true","true","int","24","","// pages with the space bar, in pixels.
","\android\webkit\WebView.java"
"android.webkit.ViewSizeData.mTextWrapWidth","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.WEBCORE_NEED_TOUCH_EVENTS","false","false","false","true","true","int","116","","","\android\webkit\WebView.java"
"android.webkit.WebView.mProxy","false","false","true","false","true","DragTracker","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastVelocity","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mSupportMultiTouch","false","false","true","false","false","boolean","","","// whether support multi-touch
","\android\webkit\WebView.java"
"android.webkit.ViewSizeData.mWidth","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.PREVENT_DEFAULT_TIMEOUT","false","false","true","true","true","int","10","","","\android\webkit\WebView.java"
"android.webkit.WebView.SELECT_CURSOR_OFFSET","false","false","true","true","true","int","16","","","\android\webkit\WebView.java"
"android.webkit.WebView.PREVENT_DEFAULT_MAYBE_YES","false","false","true","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastHeightSent","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.MOTIONLESS_FALSE","false","false","true","true","true","int","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.FIND_AGAIN","false","false","false","true","true","int","126","","","\android\webkit\WebView.java"
"android.webkit.WebView.mHorizontalScrollBarMode","false","false","true","false","false","int","SCROLLBAR_AUTO","","","\android\webkit\WebView.java"
"android.webkit.WebView.mState","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDragTrackerHandler","false","false","true","false","false","DragTrackerHandler","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mUrl","false","false","true","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mIgnoreHeight","false","false","false","false","false","boolean","","","","\android\webkit\WebView.java"
"android.webkit.WebView.DRAW_EXTRAS_FIND","false","false","true","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.WebView.mInitialScaleInPercent","false","false","true","false","false","int","0","","// initial scale in percent. 0 means using default.
","\android\webkit\WebView.java"
"android.webkit.WebView.MINIMUM_SCALE_INCREMENT","false","false","true","true","false","float","0.01f","","","\android\webkit\WebView.java"
"android.webkit.WebView.mXY","false","false","true","false","false","float","new float[2]","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDrawCursorRing","false","false","true","false","false","boolean","true","","// Whether or not to draw the cursor ring.
","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomCenterX","false","false","true","false","false","float","","","// determine the point around which we should zoom.
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mContainers","false","false","true","false","false","Container","","","","\android\webkit\WebView.java"
"android.webkit.WebView.AUTO_REDRAW_HACK","false","false","true","true","true","boolean","false","","// the screen all-the-time. Good for profiling our drawing code
","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomCenterY","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mState","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.SCROLLBAR_AUTO","false","false","true","true","true","int","0","","// keep this in sync with WebCore:ScrollbarMode in WebKit
","\android\webkit\WebView.java"
"android.webkit.WebView.HandlerPrivateDebugString","false","false","false","true","true","String","{ // = 1;
""REMEMBER_PASSWORD"", // = 2;
""NEVER_REMEMBER_PASSWORD"", // = 3;
""SWITCH_TO_SHORTPRESS"", // = 4;
""SWITCH_TO_LONGPRESS"", // = 5;
""RELEASE_SINGLE_TAP"", // = 6;
""REQUEST_FORM_DATA"", // = 7;
""RESUME_WEBCORE_PRIORITY"", // = 8;
""DRAG_HELD_MOTIONLESS"", // = 9;
""AWAKEN_SCROLL_BARS"", // = 10;
""PREVENT_DEFAULT_TIMEOUT"" }","","","\android\webkit\WebView.java"
"android.webkit.Container.OPTGROUP","false","false","false","true","true","int","-1","","/**
 * Possible values for mEnabled.  Keep in sync with OptionStatus in
 * WebViewCore.cpp
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.LAST_PACKAGE_MSG_ID","false","false","true","true","true","int","SET_SCROLLBAR_MODES","","","\android\webkit\WebView.java"
"android.webkit.SingleDataSetObserver.mCheckedId","false","false","true","false","false","long","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mFindHeight","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.Container.mString","false","false","false","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.WebView.PREVENT_DEFAULT_NO_FROM_TOUCH_DOWN","false","false","true","true","true","int","2","","","\android\webkit\WebView.java"
"android.webkit.WebView.FIRST_PACKAGE_MSG_ID","false","false","true","true","true","int","SCROLL_TO_MSG_ID","","","\android\webkit\WebView.java"
"android.webkit.WebView.DEFAULT_SCALE_PERCENT","false","false","false","true","false","int","","","// default scale. Depending on the display density.
","\android\webkit\WebView.java"
"android.webkit.WebView.mHistoryHeight","false","false","true","false","false","int","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.PREVENT_TOUCH_ID","false","false","false","true","true","int","115","","","\android\webkit\WebView.java"
"android.webkit.Container.OPTION_ENABLED","false","false","false","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.WebView.REQUEST_KEYBOARD","false","false","false","true","true","int","118","","","\android\webkit\WebView.java"
"android.webkit.WebView.AWAKEN_SCROLL_BARS","false","false","true","true","true","int","9","","","\android\webkit\WebView.java"
"android.webkit.WebView.SCROLLBAR_ALWAYSOFF","false","false","true","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.PostScale.mWebView","false","false","false","false","true","WebView","","","","\android\webkit\WebView.java"
"android.webkit.WebView.LOGTAG","false","false","false","true","true","String","""webview""","","","\android\webkit\WebView.java"
"android.webkit.WebView.mConfirmMove","false","false","true","false","false","boolean","","","// true when the touch movement exceeds the slop
","\android\webkit\WebView.java"
"android.webkit.WebView.TRACKBALL_SCROLL_COUNT","false","false","true","true","true","int","5","","","\android\webkit\WebView.java"
"android.webkit.WebView.mContentHeight","false","false","true","false","false","int","","","// cache of value from WebViewCore
","\android\webkit\WebView.java"
"android.webkit.WebView.MOTIONLESS_PENDING","false","false","true","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.ViewSizeData.mAnchorX","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.MOVE_OUT_OF_PLUGIN","false","false","false","true","true","int","110","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDelayedDeleteRootLayer","false","false","true","false","false","boolean","","","// deleting a root layer until there's something to draw of the new page.
","\android\webkit\WebView.java"
"android.webkit.WebView.SET_SCROLLBAR_MODES","false","false","false","true","true","int","129","","","\android\webkit\WebView.java"
"android.webkit.ViewSizeData.mAnchorY","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.RESUME_WEBCORE_PRIORITY","false","false","true","true","true","int","7","","","\android\webkit\WebView.java"
"android.webkit.WebView.LONG_PRESS_CENTER","false","false","false","true","true","int","114","","","\android\webkit\WebView.java"
"android.webkit.WebView.mSelection","false","false","true","false","false","int","","","// where the initial selection is.
","\android\webkit\WebView.java"
"android.webkit.WebView.MOTIONLESS_IGNORE","false","false","true","true","true","int","3","","","\android\webkit\WebView.java"
"android.webkit.PostScale.mUpdateTextWrap","false","false","false","false","true","boolean","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastTouchTime","false","false","true","false","false","long","","","/**
 * Time of the last touch event.
 */
","\android\webkit\WebView.java"
"android.webkit.SingleDataSetObserver.mListView","false","false","true","false","false","ListView","","","","\android\webkit\WebView.java"
"android.webkit.WebView.ZOOM_CONTROLS_TIMEOUT","false","false","true","true","true","long","ViewConfiguration.getZoomControlsTimeout()","","// The time that the Zoom Controls are visible before fading away
","\android\webkit\WebView.java"
"android.webkit.WebView.PREVENT_DEFAULT_IGNORE","false","false","true","true","true","int","4","","","\android\webkit\WebView.java"
"android.webkit.WebView.mContentWidth","false","false","true","false","false","int","","","// cache of value from WebViewCore
","\android\webkit\WebView.java"
"android.webkit.WebView.SCHEME_GEO","true","false","false","true","true","String","""geo:0,0?q=""","","/**
 * URI scheme for map address
 */
","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.FINISHED_STATE","false","false","true","true","true","int","2","","","\android\webkit\WebView.java"
"android.webkit.WebView.mMapTrackballToArrowKeys","false","false","true","false","false","boolean","true","","// arrow key events, not trackball events, from one child to the next
","\android\webkit\WebView.java"
"android.webkit.WebView.mAdapter","false","false","true","false","false","Adapter","","","","\android\webkit\WebView.java"
"android.webkit.RequestFormData.mUrl","false","false","true","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mOverlayHorizontalScrollbar","false","false","true","false","false","boolean","true","","// style than the View's single scrollbar style
","\android\webkit\WebView.java"
"android.webkit.ExtendedZoomControls.mPlusMinusZoomControls","false","false","false","false","false","ZoomControls","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mAnchorY","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mSnapScrollMode","false","false","true","false","false","int","SNAP_NONE","","","\android\webkit\WebView.java"
"android.webkit.WebView.TRACKBALL_TIMEOUT","false","false","true","true","true","int","200","","","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.ANIMATING_STATE","false","false","true","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.WebView.mAnchorX","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.DEFAULT_MAX_ZOOM_SCALE","false","false","true","true","false","float","","","// default scale limit. Depending on the display density
","\android\webkit\WebView.java"
"android.webkit.WebView.mTouchMode","false","false","true","false","false","int","TOUCH_DONE_MODE","","/**
 * Touch mode
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.SYNC_SCROLL_TO_MSG_ID","false","false","false","true","true","int","104","","// ! arg1=x, arg2=y
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mString","false","false","false","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.WebView.ZOOM_ANIMATION_LENGTH","false","false","true","true","true","int","500","","","\android\webkit\WebView.java"
"android.webkit.WebView.mType","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.HitTestResult.ANCHOR_TYPE","true","false","false","true","true","int","1","","/**
 * HitTestResult for hitting a HTML::a tag
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.RELEASE_SINGLE_TAP","false","false","true","true","true","int","5","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTextWrapScale","false","false","false","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mInvInitialZoomScale","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mListView","false","false","true","false","false","ListView","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mNavSlop","false","false","true","false","false","int","","","// pre-computed density adjusted navigation slop
","\android\webkit\WebView.java"
"android.webkit.WebView.HandlerPackageDebugString","false","false","false","true","true","String","{ // = 101;
""SCROLL_TO_MSG_ID"", // = 102;
""SCROLL_BY_MSG_ID"", // = 103;
""SPAWN_SCROLL_TO_MSG_ID"", // = 104;
""SYNC_SCROLL_TO_MSG_ID"", // = 105;
""NEW_PICTURE_MSG_ID"", // = 106;
""UPDATE_TEXT_ENTRY_MSG_ID"", // = 107;
""WEBCORE_INITIALIZED_MSG_ID"", // = 108;
""UPDATE_TEXTFIELD_TEXT_MSG_ID"", // = 109;
""UPDATE_ZOOM_RANGE"", // = 110;
""MOVE_OUT_OF_PLUGIN"", // = 111;
""CLEAR_TEXT_ENTRY"", // = 112;
""UPDATE_TEXT_SELECTION_MSG_ID"", // = 113;
""SHOW_RECT_MSG_ID"", // = 114;
""LONG_PRESS_CENTER"", // = 115;
""PREVENT_TOUCH_ID"", // = 116;
""WEBCORE_NEED_TOUCH_EVENTS"", // = 117;
""INVAL_RECT_MSG_ID"", // = 118;
""REQUEST_KEYBOARD"", // = 119;
""DO_MOTION_UP"", // = 120;
""SHOW_FULLSCREEN"", // = 121;
""HIDE_FULLSCREEN"", // = 122;
""DOM_FOCUS_CHANGED"", // = 123;
""IMMEDIATE_REPAINT_MSG_ID"", // = 124;
""SET_ROOT_LAYER_MSG_ID"", // = 125;
""RETURN_LABEL"", // = 126;
""FIND_AGAIN"", // = 127;
""CENTER_FIT_RECT"", // = 128;
""REQUEST_KEYBOARD_WITH_SELECTION_MSG_ID"", // = 129;
""SET_SCROLLBAR_MODES"" }","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDoubleTapSlopSquare","false","false","true","false","false","int","","","// pre-computed square of ViewConfiguration.getScaledDoubleTapSlop()
","\android\webkit\WebView.java"
"android.webkit.WebView.STD_SPEED","false","false","true","true","true","int","480","","// pixels per second
","\android\webkit\WebView.java"
"android.webkit.WebView.mDatabase","false","false","true","false","true","WebViewDatabase","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTrackballLastTime","false","false","true","false","false","long","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.mSelectY","false","false","true","false","false","int","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.SRC_IMAGE_ANCHOR_TYPE","true","false","false","true","true","int","8","","/**
 * HitTestResult for hitting a HTML::a tag with src=http + HTML::img
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mSelectX","false","false","true","false","false","int","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.TRACKBALL_KEY_TIMEOUT","false","false","true","true","true","int","1000","","","\android\webkit\WebView.java"
"android.webkit.WebView.mInvActualScale","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastDeferTouchX","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.DRAW_EXTRAS_NONE","false","false","true","true","true","int","0","","// keep these in sync with their counterparts in WebView.cpp
","\android\webkit\WebView.java"
"android.webkit.WebView.mFindIsUp","false","false","true","false","false","boolean","","","// or not we draw the highlights for matches.
","\android\webkit\WebView.java"
"android.webkit.Container.mId","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastDeferTouchY","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mGotKeyDown","false","false","true","false","false","boolean","","","// Used to match key downs and key ups
","\android\webkit\WebView.java"
"android.webkit.Container.mEnabled","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.HitTestResult.SRC_IMAGE_ANCHOR_TYPE","true","false","false","true","true","int","8","","/**
 * HitTestResult for hitting a HTML::a tag with src=http + HTML::img
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.SPAWN_SCROLL_TO_MSG_ID","false","false","false","true","true","int","103","","// ! arg1=x, arg2=y
","\android\webkit\WebView.java"
"android.webkit.WebView.mSelectedArray","false","false","true","false","false","int","","","// which items are selected.
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mMultiple","false","false","true","false","false","boolean","","","// Whether the listbox allows multiple selection.
","\android\webkit\WebView.java"
"android.webkit.WebView.mSX","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDeferTouchProcess","false","false","true","false","false","boolean","","","// default is not set, the UI will continue handle them.
","\android\webkit\WebView.java"
"android.webkit.WebView.REMEMBER_PASSWORD","false","false","true","true","true","int","1","","/*
     * Private message ids
     */
","\android\webkit\WebView.java"
"android.webkit.HitTestResult.GEO_TYPE","true","false","false","true","true","int","3","","/**
 * HitTestResult for hitting a map address
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.NO_LEFTEDGE","false","false","true","true","true","int","-1","","// return NO_LEFTEDGE means failure.
","\android\webkit\WebView.java"
"android.webkit.WebView.mScroller","false","false","true","false","false","Scroller","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mMinDY","false","false","true","false","true","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDeferTouchMode","false","false","true","false","false","int","TOUCH_DONE_MODE","","// separately. Currently no snapping or fling in the deferred process mode
","\android\webkit\WebView.java"
"android.webkit.WebView.mLastFind","false","false","true","false","false","String","","","// orientation change or the dismissal of the soft keyboard.
","\android\webkit\WebView.java"
"android.webkit.WebView.mShiftIsPressed","false","false","true","false","false","boolean","false","","","\android\webkit\WebView.java"
"android.webkit.WebView.mHeldMotionless","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLogEvent","false","false","false","true","false","boolean","true","","/* package */
","\android\webkit\WebView.java"
"android.webkit.WebView.mWidthCanMeasure","false","false","false","false","false","boolean","","","/**
 * These prevent calling requestLayout if either dimension is fixed. This
 * depends on the layout parameters and the measure specs.
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mWidth","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mSX","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.OPTGROUP","false","false","false","true","true","int","-1","","/**
 * Possible values for mEnabled.  Keep in sync with OptionStatus in
 * WebViewCore.cpp
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mCheckedId","false","false","true","false","false","long","","","","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_SENT_INTERVAL","false","false","true","true","true","int","50","","/**
 * The minimum elapsed time before sending another ACTION_MOVE event to
 * WebViewCore. This really should be tuned for each type of the devices.
 * For example in Google Map api test case, it takes Dream device at least
 * 150ms to do a full cycle in the WebViewCore by processing a touch event,
 * triggering the layout and drawing the picture. While the same process
 * takes 60+ms on the current high speed device. If we make
 * TOUCH_SENT_INTERVAL too small, there will be multiple touch events sent
 * to WebViewCore queue and the real layout and draw events will be pushed
 * to further, which slows down the refresh rate. Choose 50 to favor the
 * current high speed devices. For Dream like devices, 100 is a better
 * choice. Maybe make this in the buildspec later.
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.MAX_SLOPE_FOR_DIAG","false","false","true","true","true","float","1.5f","","","\android\webkit\WebView.java"
"android.webkit.WebView.INVAL_RECT_MSG_ID","false","false","false","true","true","int","117","","// obj=Rect in doc coordinates
","\android\webkit\WebView.java"
"android.webkit.WebView.OPTGROUP","false","false","false","true","true","int","-1","","/**
 * Possible values for mEnabled.  Keep in sync with OptionStatus in
 * WebViewCore.cpp
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomControlRunnable","false","false","true","false","false","Runnable","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTouchSelection","false","false","true","false","false","boolean","false","","","\android\webkit\WebView.java"
"android.webkit.WebView.OPTION_DISABLED","false","false","false","true","true","int","0","","","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mSelection","false","false","true","false","false","int","","","// where the initial selection is.
","\android\webkit\WebView.java"
"android.webkit.WebView.TRACKBALL_SCALE","false","false","true","true","true","int","400","","","\android\webkit\WebView.java"
"android.webkit.WebView.RETURN_LABEL","false","false","false","true","true","int","125","","","\android\webkit\WebView.java"
"android.webkit.WebView.UNKNOWN_TYPE","true","false","false","true","true","int","0","","/**
 * Default HitTestResult, where the target is unknown
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mLastGlobalRect","false","false","true","false","false","Rect","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomScale","false","false","true","false","false","float","","","// if this is non-zero, it is used on drawing rather than mActualScale
","\android\webkit\WebView.java"
"android.webkit.WebView.SCROLLBAR_ALWAYSON","false","false","true","true","true","int","2","","// as we auto fade scrollbar, this is ignored.
","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mInterp","false","false","true","false","false","Interpolator","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastSentTouchTime","false","false","true","false","false","long","","","/**
 * Time of the last time sending touch event to WebViewCore
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mMaxDY","false","false","true","false","true","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.EMAIL_TYPE","true","false","false","true","true","int","4","","/**
 * HitTestResult for hitting an email address
 */
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mSelectedArray","false","false","true","false","false","int","","","// which items are selected.
","\android\webkit\WebView.java"
"android.webkit.WebView.mTrackballFirstTime","false","false","true","false","false","long","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.GEO_TYPE","true","false","false","true","true","int","3","","/**
 * HitTestResult for hitting a map address
 */
","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mMaxDY","false","false","true","false","true","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mPlusMinusZoomControls","false","false","false","false","false","ZoomControls","","","","\android\webkit\WebView.java"
"android.webkit.WebView.MIN_SCROLL_AMOUNT_TO_DISABLE_DRAG_TRACKER","false","false","true","true","true","int","4","","// to have any effect.
","\android\webkit\WebView.java"
"android.webkit.HitTestResult.mType","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_DRAG_MODE","false","false","true","true","true","int","3","","","\android\webkit\WebView.java"
"android.webkit.WebView.SCROLL_TO_MSG_ID","false","false","false","true","true","int","101","","// ! arg1=x, arg2=y
","\android\webkit\WebView.java"
"android.webkit.WebView.mHeight","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_DRAG_START_MODE","false","false","true","true","true","int","2","","","\android\webkit\WebView.java"
"android.webkit.WebView.mScale","false","false","false","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTrackballDown","false","false","true","false","false","boolean","false","","","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_SELECT_MODE","false","false","true","true","true","int","8","","","\android\webkit\WebView.java"
"android.webkit.WebView.IMAGE_ANCHOR_TYPE","true","false","false","true","true","int","6","","/**
 * HitTestResult for hitting a HTML::a tag which contains HTML::img
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mEnabled","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.MAX_DURATION","false","false","true","true","true","int","750","","// milliseconds
","\android\webkit\WebView.java"
"android.webkit.WebView.SCHEME_MAILTO","true","false","false","true","true","String","""mailto:""","","/**
 * URI scheme for email address
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.DEFAULT_MIN_ZOOM_SCALE","false","false","true","true","false","float","","","","\android\webkit\WebView.java"
"android.webkit.HitTestResult.PHONE_TYPE","true","false","false","true","true","int","2","","/**
 * HitTestResult for hitting a phone number
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_DONE_MODE","false","false","true","true","true","int","7","","","\android\webkit\WebView.java"
"android.webkit.WebView.NEVER_REMEMBER_PASSWORD","false","false","true","true","true","int","2","","","\android\webkit\WebView.java"
"android.webkit.WebView.mExtendSelection","false","false","true","false","false","boolean","false","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastCursorBounds","false","false","true","false","false","Rect","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mWebview","false","false","true","false","false","WebView","","","","\android\webkit\WebView.java"
"android.webkit.WebView.SNAP_LOCK","false","false","true","true","true","int","1","","// not a separate state
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mEnabled","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_DOUBLE_TAP_MODE","false","false","true","true","true","int","6","","","\android\webkit\WebView.java"
"android.webkit.WebView.mFocusSizeChanged","false","false","true","false","false","boolean","false","","","\android\webkit\WebView.java"
"android.webkit.SingleDataSetObserver.mAdapter","false","false","true","false","false","Adapter","","","","\android\webkit\WebView.java"
"android.webkit.WebView.sMaxViewportWidth","false","false","false","true","false","int","DEFAULT_VIEWPORT_WIDTH","","// the minimum preferred width is huge, an upper limit is needed.
","\android\webkit\WebView.java"
"android.webkit.WebView.SET_ROOT_LAYER_MSG_ID","false","false","false","true","true","int","124","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTitleShadow","false","false","true","false","false","Drawable","","","/**
 * Since we draw the title bar ourselves, we removed the shadow from the
 * browser's activity.  We do want a shadow at the bottom of the title bar,
 * or at the top of the screen if the title bar is not visible.  This
 * drawable serves that purpose.
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.MOTIONLESS_TIME","false","false","true","true","true","int","100","","// draw unfiltered after drag is held without movement
","\android\webkit\WebView.java"
"android.webkit.WebView.mTrackballRemainsY","false","false","true","false","false","float","0.0f","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTrackballRemainsX","false","false","true","false","false","float","0.0f","","","\android\webkit\WebView.java"
"android.webkit.WebView.REQUEST_FORM_DATA","false","false","true","true","true","int","6","","","\android\webkit\WebView.java"
"android.webkit.WebView.MIN_BREAK_SNAP_CROSS_DISTANCE","false","false","true","true","true","int","80","","","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mStartY","false","false","true","false","true","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastTouchUpTime","false","false","true","false","false","long","0","","// for event log
","\android\webkit\WebView.java"
"android.webkit.WebView.mCurrStretchY","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.WEBCORE_INITIALIZED_MSG_ID","false","false","false","true","true","int","107","","","\android\webkit\WebView.java"
"android.webkit.HitTestResult.IMAGE_ANCHOR_TYPE","true","false","false","true","true","int","6","","/**
 * HitTestResult for hitting a HTML::a tag which contains HTML::img
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mCallbackProxy","false","false","true","false","true","CallbackProxy","","","// A final CallbackProxy shared by WebViewCore and BrowserFrame.
","\android\webkit\WebView.java"
"android.webkit.WebView.mPreventDefault","false","false","true","false","false","int","PREVENT_DEFAULT_IGNORE","","","\android\webkit\WebView.java"
"android.webkit.WebView.SHOW_RECT_MSG_ID","false","false","false","true","true","int","113","","","\android\webkit\WebView.java"
"android.webkit.WebView.ANIMATING_STATE","false","false","true","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.WebView.mHeightCanMeasure","false","false","false","false","false","boolean","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mName","false","false","true","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mWebView","false","false","false","false","true","WebView","","","","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mCurrStretchY","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mStartY","false","false","true","false","true","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mActualScale","false","false","true","false","false","float","","","// computed scale and inverse, from mZoomWidth.
","\android\webkit\WebView.java"
"android.webkit.WebView.mIsPaused","false","false","true","false","false","boolean","","","// true if onPause has been called (and not onResume)
","\android\webkit\WebView.java"
"android.webkit.WebView.mMinZoomScale","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastVelX","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTitleBar","false","false","true","false","false","View","","","/**
 * A title bar which is embedded in this WebView, and scrolls along with it
 * vertically, but not horizontally.
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mLastVelY","false","false","true","false","false","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mSnapPositive","false","false","true","false","false","boolean","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mMultiple","false","false","true","false","false","boolean","","","// Whether the listbox allows multiple selection.
","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_SHORTPRESS_MODE","false","false","true","true","true","int","5","","","\android\webkit\WebView.java"
"android.webkit.WebView.mCertificate","false","false","true","false","false","SslCertificate","","","// SSL certificate for the main top-level page (if secure)
","\android\webkit\WebView.java"
"android.webkit.WebView.mFullScreenHolder","false","false","false","false","false","PluginFullScreenHolder","","","// Used to display in full screen mode
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mCheckedId","false","false","true","false","false","long","","","","\android\webkit\WebView.java"
"android.webkit.WebView.SWITCH_TO_SHORTPRESS","false","false","true","true","true","int","3","","","\android\webkit\WebView.java"
"android.webkit.WebView.mForwardTouchEvents","false","false","true","false","false","boolean","false","","// Whether to forward the touch events to WebCore
","\android\webkit\WebView.java"
"android.webkit.WebView.MOTIONLESS_TRUE","false","false","true","true","true","int","2","","","\android\webkit\WebView.java"
"android.webkit.WebView.mExtra","false","false","true","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDragTracker","false","false","true","false","false","DragTracker","","","","\android\webkit\WebView.java"
"android.webkit.WebView.ANCHOR_TYPE","true","false","false","true","true","int","1","","/**
 * HitTestResult for hitting a HTML::a tag
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.PREVENT_DEFAULT_NO","false","false","true","true","true","int","0","","// confirmed move before taking over the control.
","\android\webkit\WebView.java"
"android.webkit.WebView.mString","false","false","false","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mViewManager","false","false","false","false","true","ViewManager","","","/* package */
","\android\webkit\WebView.java"
"android.webkit.WebView.TAP_TIMEOUT","false","false","true","true","true","int","200","","// In the browser, if it switches out of tap too soon, jump tap won't work.
","\android\webkit\WebView.java"
"android.webkit.WebView.mTrackballXMove","false","false","true","false","false","int","0","","","\android\webkit\WebView.java"
"android.webkit.Container.OPTION_DISABLED","false","false","false","true","true","int","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.SCROLL_BY_MSG_ID","false","false","false","true","true","int","102","","","\android\webkit\WebView.java"
"android.webkit.WebView.IMAGE_TYPE","true","false","false","true","true","int","5","","/**
 * HitTestResult for hitting an HTML::img tag
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_PINCH_DRAG","false","false","true","true","true","int","9","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTrackballUpTime","false","false","true","false","false","long","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.SWITCH_TO_LONGPRESS","false","false","true","true","true","int","4","","","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomControls","false","false","true","false","false","ExtendedZoomControls","","","// The View containing the zoom controls
","\android\webkit\WebView.java"
"android.webkit.WebViewTransport.mWebview","false","false","true","false","false","WebView","","","","\android\webkit\WebView.java"
"android.webkit.WebView.DO_MOTION_UP","false","false","false","true","true","int","119","","","\android\webkit\WebView.java"
"android.webkit.WebView.mContainers","false","false","true","false","false","Container","","","","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.OPTION_DISABLED","false","false","false","true","true","int","0","","","\android\webkit\WebView.java"
"android.webkit.HitTestResult.SRC_ANCHOR_TYPE","true","false","false","true","true","int","7","","/**
 * HitTestResult for hitting a HTML::a tag with src=http
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.EDIT_TEXT_TYPE","true","false","false","true","true","int","9","","/**
 * HitTestResult for hitting an edit text area
 */
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.OPTION_ENABLED","false","false","false","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.WebView.mVelocityTracker","false","false","false","false","false","VelocityTracker","","","/**
 * Helper class to get velocity for fling
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mWebTextView","false","false","true","false","false","WebTextView","","","","\android\webkit\WebView.java"
"android.webkit.WebView.OPTION_ENABLED","false","false","false","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomListener","false","false","true","false","false","ZoomButtonsController.OnZoomListener","new ZoomButtonsController.OnZoomListener() {

    public void onVisibilityChanged(boolean visible) {
        if (visible) {
            switchOutDrawHistory();
            // Bring back the hidden zoom controls.
            mZoomButtonsController.getZoomControls().setVisibility(View.VISIBLE);
            updateZoomButtonsEnabled();
        }
    }

    public void onZoom(boolean zoomIn) {
        if (zoomIn) {
            zoomIn();
        } else {
            zoomOut();
        }
        updateZoomButtonsEnabled();
    }
}","","","\android\webkit\WebView.java"
"android.webkit.WebView.mInZoomOverview","false","false","false","false","false","boolean","false","","// the last zoom scale.
","\android\webkit\WebView.java"
"android.webkit.InvokeListBox.mId","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.DRAG_HELD_MOTIONLESS","false","false","true","true","true","int","8","","","\android\webkit\WebView.java"
"android.webkit.WebView.mCurrentTouchInterval","false","false","true","false","false","int","TOUCH_SENT_INTERVAL","","","\android\webkit\WebView.java"
"android.webkit.WebView.REQUEST_KEYBOARD_WITH_SELECTION_MSG_ID","false","false","false","true","true","int","128","","","\android\webkit\WebView.java"
"android.webkit.WebView.IMMEDIATE_REPAINT_MSG_ID","false","false","false","true","true","int","123","","","\android\webkit\WebView.java"
"android.webkit.WebView.UPDATE_TEXT_SELECTION_MSG_ID","false","false","false","true","true","int","112","","","\android\webkit\WebView.java"
"android.webkit.WebView.SNAP_NONE","false","false","true","true","true","int","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.mInterp","false","false","true","false","false","Interpolator","","","","\android\webkit\WebView.java"
"android.webkit.WebView.DEBUG_DRAG_TRACKER","false","false","true","true","true","boolean","false","","// enable debug output for drag trackers
","\android\webkit\WebView.java"
"android.webkit.WebView.mWrapContent","false","false","true","false","false","boolean","","","","\android\webkit\WebView.java"
"android.webkit.WebView.FINISHED_STATE","false","false","true","true","true","int","2","","","\android\webkit\WebView.java"
"android.webkit.WebView.DOM_FOCUS_CHANGED","false","false","false","true","true","int","122","","","\android\webkit\WebView.java"
"android.webkit.HitTestResult.mExtra","false","false","true","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.DragTrackerHandler.mMinDY","false","false","true","false","true","float","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mPrivateHandler","false","false","false","false","true","Handler","new PrivateHandler()","","/* package */
","\android\webkit\WebView.java"
"android.webkit.WebView.mBackgroundColor","false","false","true","false","false","int","Color.WHITE","","","\android\webkit\WebView.java"
"android.webkit.WebView.mLastCursorTime","false","false","true","false","false","long","0","","","\android\webkit\WebView.java"
"android.webkit.WebView.UPDATE_ZOOM_RANGE","false","false","false","true","true","int","109","","","\android\webkit\WebView.java"
"android.webkit.WebView.SLIDE_TITLE_DURATION","false","false","true","true","true","int","500","","// milliseconds
","\android\webkit\WebView.java"
"android.webkit.WebView.TRACKBALL_MULTIPLIER","false","false","true","true","true","int","3","","","\android\webkit\WebView.java"
"android.webkit.WebView.mInitialScrollY","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mGotCenterDown","false","false","true","false","false","boolean","false","","// affect long press with the trackball/touch.
","\android\webkit\WebView.java"
"android.webkit.RequestFormData.mName","false","false","true","false","false","String","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mInitialScrollX","false","false","true","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mZoomOverviewWidth","false","false","false","false","false","int","DEFAULT_VIEWPORT_WIDTH","","// engadget always have wider mContentWidth no matter what viewport size is.
","\android\webkit\WebView.java"
"android.webkit.WebView.SCHEME_TEL","true","false","false","true","true","String","""tel:""","","/**
 * URI scheme for telephone number
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mTouchSlopSquare","false","false","true","false","false","int","","","// pre-computed square of ViewConfiguration.getScaledTouchSlop()
","\android\webkit\WebView.java"
"android.webkit.WebView.UPDATE_TEXT_ENTRY_MSG_ID","false","false","false","true","true","int","106","","","\android\webkit\WebView.java"
"android.webkit.WebView.LONG_PRESS_TIMEOUT","false","false","true","true","true","int","1000","","// With a short timeout, it's difficult to treat trigger a short press.
","\android\webkit\WebView.java"
"android.webkit.WebView.TOUCH_INIT_MODE","false","false","true","true","true","int","1","","","\android\webkit\WebView.java"
"android.webkit.WebView.SHOW_FULLSCREEN","false","false","false","true","true","int","120","","","\android\webkit\WebView.java"
"android.webkit.WebView.mPreviewZoomOnly","false","false","true","false","false","boolean","false","","// set to true temporarily during ScaleGesture triggered zoom
","\android\webkit\WebView.java"
"android.webkit.WebView.TRACKBALL_WAIT","false","false","true","true","true","int","100","","","\android\webkit\WebView.java"
"android.webkit.ViewSizeData.mIgnoreHeight","false","false","false","false","false","boolean","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mDragFromTextInput","false","false","false","false","false","boolean","","","// so that we know not to hide the cursor
","\android\webkit\WebView.java"
"android.webkit.WebView.mScaleDetector","false","false","true","false","false","ScaleGestureDetector","","","// use the framework's ScaleGestureDetector to handle multi-touch
","\android\webkit\WebView.java"
"android.webkit.WebView.MIN_FLING_TIME","false","false","true","true","true","int","250","","// needed to avoid flinging after a pause of no movement
","\android\webkit\WebView.java"
"android.webkit.WebView.DRAW_EXTRAS_CURSOR_RING","false","false","true","true","true","int","3","","","\android\webkit\WebView.java"
"android.webkit.WebView.mNeedToAdjustWebTextView","false","false","true","false","false","boolean","","","/**
 * Need to adjust the WebTextView after a change in zoom, since mActualScale
 * has changed.  This is especially important for password fields, which are
 * drawn by the WebTextView, since it conveys more information than what
 * webkit draws.  Thus we need to reposition it to show in the correct
 * place.
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mUpdateMessage","false","false","true","false","false","Message","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mTextWrapWidth","false","false","false","false","false","int","","","","\android\webkit\WebView.java"
"android.webkit.WebView.mUserScroll","false","false","true","false","false","boolean","false","","","\android\webkit\WebView.java"
"android.webkit.HitTestResult.EDIT_TEXT_TYPE","true","false","false","true","true","int","9","","/**
 * HitTestResult for hitting an edit text area
 */
","\android\webkit\WebView.java"
"android.webkit.WebView.mTextGeneration","false","false","true","false","false","int","","","// more key events.
","\android\webkit\WebView.java"
"android.webkit.WebView.HIDE_FULLSCREEN","false","false","false","true","true","int","121","","","\android\webkit\WebView.java"
"android.webkit.WebView.mVerticalScrollBarMode","false","false","true","false","false","int","SCROLLBAR_AUTO","","","\android\webkit\WebView.java"
"android.webkit.RequestFormData.mUpdateMessage","false","false","true","false","false","Message","","","","\android\webkit\WebView.java"
"android.ddm.DdmHandleHello.mInstance","false","false","true","true","false","DdmHandleHello","new DdmHandleHello()","","","\android\ddm\DdmHandleHello.java"
"android.ddm.DdmHandleHello.CHUNK_HELO","true","false","false","true","true","int","type(""HELO"")","","","\android\ddm\DdmHandleHello.java"
"android.ddm.DdmHandleHello.CHUNK_WAIT","true","false","false","true","true","int","type(""WAIT"")","","","\android\ddm\DdmHandleHello.java"
"android.ddm.DdmHandleHello.CHUNK_FEAT","true","false","false","true","true","int","type(""FEAT"")","","","\android\ddm\DdmHandleHello.java"
"android.text.method.QwertyKeyListener.sInstance","false","false","true","true","false","QwertyKeyListener","new QwertyKeyListener[Capitalize.values().length * 2]","","","\android\text\method\QwertyKeyListener.java"
"android.text.method.QwertyKeyListener.mAutoCap","false","false","true","false","false","Capitalize","","","","\android\text\method\QwertyKeyListener.java"
"android.text.method.QwertyKeyListener.mAutoText","false","false","true","false","false","boolean","","","","\android\text\method\QwertyKeyListener.java"
"android.text.method.QwertyKeyListener.PICKER_SETS","false","false","true","true","false","SparseArray<String>","new SparseArray<String>()","","","\android\text\method\QwertyKeyListener.java"
"android.text.method.Replaced.mText","false","false","true","false","false","char","","","","\android\text\method\QwertyKeyListener.java"
"android.text.method.QwertyKeyListener.mText","false","false","true","false","false","char","","","","\android\text\method\QwertyKeyListener.java"
"android.content.ContentProviderClient.mContentResolver","false","false","true","false","true","ContentResolver","","","","\android\content\ContentProviderClient.java"
"android.content.ContentProviderClient.mContentProvider","false","false","true","false","true","IContentProvider","","","","\android\content\ContentProviderClient.java"
"android.app.backup.RestoreSet.CREATOR","true","false","false","true","true","Parcelable.Creator<RestoreSet>","new Parcelable.Creator<RestoreSet>() {

    public RestoreSet createFromParcel(Parcel in) {
        return new RestoreSet(in);
    }

    public RestoreSet[] newArray(int size) {
        return new RestoreSet[size];
    }
}","","","\android\app\backup\RestoreSet.java"
"android.app.backup.RestoreSet.token","true","false","false","false","false","long","","","/**
 * Token that identifies this backup set unambiguously to the backup/restore
 * transport.  This is guaranteed to be valid for the duration of a restore
 * session, but is meaningless once the session has ended.
 */
","\android\app\backup\RestoreSet.java"
"android.app.backup.RestoreSet.device","true","false","false","false","false","String","","","/**
 * Identifier of the device whose data this is.  This will be as unique as
 * is practically possible; for example, it might be an IMEI.
 */
","\android\app\backup\RestoreSet.java"
"android.app.backup.RestoreSet.name","true","false","false","false","false","String","","","/**
 * Name of this restore set.  May be user generated, may simply be the name
 * of the handset model, e.g. ""T-Mobile G1"".
 */
","\android\app\backup\RestoreSet.java"
"android.util.SparseArray.DELETED","false","false","true","true","true","Object","new Object()","","","\android\util\SparseArray.java"
"android.util.SparseArray.mKeys","false","false","true","false","false","int","","","","\android\util\SparseArray.java"
"android.util.SparseArray.mGarbage","false","false","true","false","false","boolean","false","","","\android\util\SparseArray.java"
"android.util.SparseArray.mValues","false","false","true","false","false","Object","","","","\android\util\SparseArray.java"
"android.util.SparseArray.mSize","false","false","true","false","false","int","","","","\android\util\SparseArray.java"
"android.view.SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS","true","false","false","true","true","int","MEMORY_TYPE_PUSH_BUFFERS","","/**
 * Surface type: creates a ""push"" surface, that is a surface that
 * doesn't owns its buffers. With such a surface lockCanvas will fail.
 */
","\android\view\SurfaceHolder.java"
"android.view.SurfaceHolder.SURFACE_TYPE_GPU","true","false","false","true","true","int","MEMORY_TYPE_GPU","@Deprecated","/**
 * Surface type: creates a surface suited to be used with the GPU
 * @deprecated this is ignored, this value is set automatically when needed.
 */
","\android\view\SurfaceHolder.java"
"android.view.SurfaceHolder.SURFACE_TYPE_HARDWARE","true","false","false","true","true","int","MEMORY_TYPE_HARDWARE","@Deprecated","/**
 * Surface type: creates a suited to be used with DMA engines and
 * hardware accelerators.
 * @deprecated this is ignored, this value is set automatically when needed.
 */
","\android\view\SurfaceHolder.java"
"android.view.SurfaceHolder.SURFACE_TYPE_NORMAL","true","false","false","true","true","int","MEMORY_TYPE_NORMAL","","/**
 * Surface type: creates a regular surface, usually in main, non
 * contiguous, cached/buffered RAM.
 */
","\android\view\SurfaceHolder.java"
"android.widget.CompoundButton.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\CompoundButton.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\CompoundButton.java"
"android.widget.CompoundButton.mButtonResource","false","false","true","false","false","int","","","","\android\widget\CompoundButton.java"
"android.widget.SavedState.checked","false","false","false","false","false","boolean","","","","\android\widget\CompoundButton.java"
"android.widget.CompoundButton.mButtonDrawable","false","false","true","false","false","Drawable","","","","\android\widget\CompoundButton.java"
"android.widget.CompoundButton.checked","false","false","false","false","false","boolean","","","","\android\widget\CompoundButton.java"
"android.widget.CompoundButton.CHECKED_STATE_SET","false","false","true","true","true","int","{ R.attr.state_checked }","","","\android\widget\CompoundButton.java"
"android.widget.CompoundButton.mBroadcasting","false","false","true","false","false","boolean","","","","\android\widget\CompoundButton.java"
"android.widget.CompoundButton.mChecked","false","false","true","false","false","boolean","","","","\android\widget\CompoundButton.java"
"android.widget.CompoundButton.mOnCheckedChangeWidgetListener","false","false","true","false","false","OnCheckedChangeListener","","","","\android\widget\CompoundButton.java"
"android.widget.CompoundButton.mOnCheckedChangeListener","false","false","true","false","false","OnCheckedChangeListener","","","","\android\widget\CompoundButton.java"
"com.android.internal.util.JournaledFile.mWriting","false","false","false","false","false","boolean","","","","\com\android\internal\util\JournaledFile.java"
"com.android.internal.util.JournaledFile.mTemp","false","false","false","false","false","File","","","","\com\android\internal\util\JournaledFile.java"
"com.android.internal.util.JournaledFile.mReal","false","false","false","false","false","File","","","","\com\android\internal\util\JournaledFile.java"
"android.view.MotionEvent.mEventTimeNano","false","false","true","false","false","long","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.gRecyclerTop","false","false","true","true","false","MotionEvent","null","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_MOVE","true","false","false","true","true","int","2","","/**
 * Constant for {@link #getAction}: A change has happened during a
 * press gesture (between {@link #ACTION_DOWN} and {@link #ACTION_UP}).
 * The motion contains the most recent point, as well as any intermediate
 * points since the last down or move event.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_1_UP","true","false","false","true","true","int","ACTION_POINTER_UP | 0x0000","@Deprecated","/**
 * @deprecated Use {@link #ACTION_POINTER_INDEX_MASK} to retrieve the
 * data index associated with {@link #ACTION_POINTER_UP}.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_2_DOWN","true","false","false","true","true","int","ACTION_POINTER_DOWN | 0x0100","@Deprecated","/**
 * @deprecated Use {@link #ACTION_POINTER_INDEX_MASK} to retrieve the
 * data index associated with {@link #ACTION_POINTER_DOWN}.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_INDEX_SHIFT","true","false","false","true","true","int","8","","/**
 * Bit shift for the action bits holding the pointer index as
 * defined by {@link #ACTION_POINTER_INDEX_MASK}.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.mNumSamples","false","false","true","false","false","int","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_CANCEL","true","false","false","true","true","int","3","","/**
 * Constant for {@link #getAction}: The current gesture has been aborted.
 * You will not receive any more points in it.  You should treat this as
 * an up event, but not perform any action that you normally would.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.EDGE_RIGHT","true","false","false","true","true","int","0x00000008","","/**
 * Flag indicating the motion event intersected the right edge of the screen.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_2_UP","true","false","false","true","true","int","ACTION_POINTER_UP | 0x0100","@Deprecated","/**
 * @deprecated Use {@link #ACTION_POINTER_INDEX_MASK} to retrieve the
 * data index associated with {@link #ACTION_POINTER_UP}.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.EDGE_TOP","true","false","false","true","true","int","0x00000001","","/**
 * Flag indicating the motion event intersected the top edge of the screen.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_3_UP","true","false","false","true","true","int","ACTION_POINTER_UP | 0x0200","@Deprecated","/**
 * @deprecated Use {@link #ACTION_POINTER_INDEX_MASK} to retrieve the
 * data index associated with {@link #ACTION_POINTER_UP}.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.SAMPLE_SIZE","true","false","false","true","true","int","3","","/**
 * Offset for the sample's X coordinate.
 * @hide
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.BASE_AVAIL_POINTERS","true","false","false","true","true","int","5","","/**
 * Number of possible pointers.
 * @hide
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.mMetaState","false","false","true","false","false","int","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_INDEX_MASK","true","false","false","true","true","int","0xff00","","/**
 * Bits in the action code that represent a pointer index, used with
 * {@link #ACTION_POINTER_DOWN} and {@link #ACTION_POINTER_UP}.  Shifting
 * down by {@link #ACTION_POINTER_INDEX_SHIFT} provides the actual pointer
 * index where the data for the pointer going up or down can be found; you can
 * get its identifier with {@link #getPointerId(int)} and the actual
 * data with {@link #getX(int)} etc.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_UP","true","false","false","true","true","int","6","","/**
 * A non-primary pointer has gone up.  The bits in
 * {@link #ACTION_POINTER_ID_MASK} indicate which pointer changed.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.mAction","false","false","true","false","false","int","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mEdgeFlags","false","false","true","false","false","int","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mYPrecision","false","false","true","false","false","float","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.SAMPLE_Y","true","false","false","true","true","int","1","","/**
 * Offset for the sample's Y coordinate.
 * @hide
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_UP","true","false","false","true","true","int","1","","/**
 * Constant for {@link #getAction}: A pressed gesture has finished, the
 * motion contains the final release location as well as any intermediate
 * points since the last down or move event.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.SAMPLE_X","true","false","false","true","true","int","0","","/**
 * Offset for the sample's X coordinate.
 * @hide
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_3_DOWN","true","false","false","true","true","int","ACTION_POINTER_DOWN | 0x0200","@Deprecated","/**
 * @deprecated Use {@link #ACTION_POINTER_INDEX_MASK} to retrieve the
 * data index associated with {@link #ACTION_POINTER_DOWN}.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_MASK","true","false","false","true","true","int","0xff","","/**
 * Bit mask of the parts of the action code that are the action itself.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.mRecycledLocation","false","false","true","false","false","RuntimeException","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_DOWN","true","false","false","true","true","int","5","","/**
 * A non-primary pointer has gone down.  The bits in
 * {@link #ACTION_POINTER_ID_MASK} indicate which pointer changed.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.mRawX","false","false","true","false","false","float","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mRawY","false","false","true","false","false","float","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mXPrecision","false","false","true","false","false","float","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mDeviceId","false","false","true","false","false","int","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.CREATOR","true","false","false","true","true","Parcelable.Creator<MotionEvent>","new Parcelable.Creator<MotionEvent>() {

    public MotionEvent createFromParcel(Parcel in) {
        MotionEvent ev = obtain();
        ev.readFromParcel(in);
        return ev;
    }

    public MotionEvent[] newArray(int size) {
        return new MotionEvent[size];
    }
}","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_1_DOWN","true","false","false","true","true","int","ACTION_POINTER_DOWN | 0x0000","@Deprecated","/**
 * @deprecated Use {@link #ACTION_POINTER_INDEX_MASK} to retrieve the
 * data index associated with {@link #ACTION_POINTER_DOWN}.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.EDGE_LEFT","true","false","false","true","true","int","0x00000004","","/**
 * Flag indicating the motion event intersected the left edge of the screen.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.SAMPLE_PRESSURE","true","false","false","true","true","int","2","","/**
 * Offset for the sample's X coordinate.
 * @hide
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.gRecyclerLock","false","false","true","true","false","Object","new Object()","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mRecycled","false","false","true","false","false","boolean","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mTimeSamples","false","false","true","false","false","long","","","// Array of mNumSamples size of time stamps.
","\android\view\MotionEvent.java"
"android.view.MotionEvent.mNext","false","false","true","false","false","MotionEvent","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.BASE_AVAIL_SAMPLES","false","false","true","true","true","int","8","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mPointerIdentifiers","false","false","true","false","false","int","","","// Array of mNumPointers size of identifiers for each pointer of data.
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_OUTSIDE","true","false","false","true","true","int","4","","/**
 * Constant for {@link #getAction}: A movement has happened outside of the
 * normal bounds of the UI element.  This does not provide a full gesture,
 * but only the initial location of the movement/touch.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.TRACK_RECYCLED_LOCATION","false","false","true","true","true","boolean","false","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mDataSamples","false","false","true","false","false","float","","","// Array of (mNumSamples * mNumPointers * NUM_SAMPLE_DATA) size of event data.
","\android\view\MotionEvent.java"
"android.view.MotionEvent.EDGE_BOTTOM","true","false","false","true","true","int","0x00000002","","/**
 * Flag indicating the motion event intersected the bottom edge of the screen.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_ID_SHIFT","true","false","false","true","true","int","8","@Deprecated","/**
 * @deprecated Renamed to {@link #ACTION_POINTER_INDEX_SHIFT} to match
 * the actual data contained in these bits.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.NUM_SAMPLE_DATA","true","false","false","true","true","int","4","","/**
 * Number of data items for each sample.
 * @hide
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.DEBUG_POINTERS","false","false","false","true","true","boolean","false","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_POINTER_ID_MASK","true","false","false","true","true","int","0xff00","@Deprecated","/**
 * @deprecated Renamed to {@link #ACTION_POINTER_INDEX_MASK} to match
 * the actual data contained in these bits.
 */
","\android\view\MotionEvent.java"
"android.view.MotionEvent.gRecyclerUsed","false","false","true","true","false","int","0","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mDownTime","false","false","true","false","false","long","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.mNumPointers","false","false","true","false","false","int","","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.MAX_RECYCLED","false","false","true","true","true","int","10","","","\android\view\MotionEvent.java"
"android.view.MotionEvent.ACTION_DOWN","true","false","false","true","true","int","0","","/**
 * Constant for {@link #getAction}: A pressed gesture has started, the
 * motion contains the initial starting location.
 */
","\android\view\MotionEvent.java"
"android.appwidget.AppWidgetProviderInfo.configure","true","false","false","false","false","ComponentName","","","/**
 * The activity to launch that will configure the AppWidget.
 *
 * <p>This class name of field corresponds to the <code>android:configure</code> attribute in
 * the AppWidget meta-data file.  The package name always corresponds to the package containing
 * the AppWidget provider.
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.initialLayout","true","false","false","false","false","int","","","/**
 * The resource id of the initial layout for this AppWidget.  This should be
 * displayed until the RemoteViews for the AppWidget is available.
 *
 * <p>This field corresponds to the <code>android:initialLayout</code> attribute in
 * the AppWidget meta-data file.
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<AppWidgetProviderInfo>","new Parcelable.Creator<AppWidgetProviderInfo>() {

    public AppWidgetProviderInfo createFromParcel(Parcel parcel) {
        return new AppWidgetProviderInfo(parcel);
    }

    public AppWidgetProviderInfo[] newArray(int size) {
        return new AppWidgetProviderInfo[size];
    }
}","","/**
 * Parcelable.Creator that instantiates AppWidgetProviderInfo objects
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.minHeight","true","false","false","false","false","int","","","/**
 * Minimum height of the AppWidget, in dp.
 *
 * <p>This field corresponds to the <code>android:minHeight</code> attribute in
 * the AppWidget meta-data file.
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.provider","true","false","false","false","false","ComponentName","","","/**
 * Identity of this AppWidget component.  This component should be a {@link
 * android.content.BroadcastReceiver}, and it will be sent the AppWidget intents
 * {@link android.appwidget as described in the AppWidget package documentation}.
 *
 * <p>This field corresponds to the <code>android:name</code> attribute in
 * the <code>&lt;receiver&gt;</code> element in the AndroidManifest.xml file.
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.minWidth","true","false","false","false","false","int","","","/**
 * Minimum width of the AppWidget, in dp.
 *
 * <p>This field corresponds to the <code>android:minWidth</code> attribute in
 * the AppWidget meta-data file.
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.oldName","true","false","false","false","false","String","","","/**
 * The previous name, if any, of the app widget receiver. If not supplied, it will be
 * ignored.
 *
 * <p>This field corresponds to the <code>&lt;meta-data /&gt;</code> with the name
 * <code>android.appwidget.oldName</code>.
 *
 * @hide Pending API approval
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.icon","true","false","false","false","false","int","","","/**
 * The icon to display for this AppWidget in the AppWidget picker.  If not supplied in the
 * xml, the application icon will be used.
 *
 * <p>This field corresponds to the <code>android:icon</code> attribute in
 * the <code>&lt;receiver&gt;</code> element in the AndroidManifest.xml file.
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.label","true","false","false","false","false","String","","","/**
 * The label to display to the user in the AppWidget picker.  If not supplied in the
 * xml, the application label will be used.
 *
 * <p>This field corresponds to the <code>android:label</code> attribute in
 * the <code>&lt;receiver&gt;</code> element in the AndroidManifest.xml file.
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.appwidget.AppWidgetProviderInfo.updatePeriodMillis","true","false","false","false","false","int","","","/**
 * How often, in milliseconds, that this AppWidget wants to be updated.
 * The AppWidget manager may place a limit on how often a AppWidget is updated.
 *
 * <p>This field corresponds to the <code>android:updatePeriodMillis</code> attribute in
 * the AppWidget meta-data file.
 *
 * <p class=""note""><b>Note:</b> Updates requested with <code>updatePeriodMillis</code>
 * will not be delivered more than once every 30 minutes.</p>
 */
","\android\appwidget\AppWidgetProviderInfo.java"
"android.pim.vcard.VCardEntryCounter.mCount","false","false","true","false","false","int","","","","\android\pim\vcard\VCardEntryCounter.java"
"com.android.internal.widget.Smileys.WTF","true","false","false","true","false","int","16","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.FOOT_IN_MOUTH","true","false","false","true","false","int","9","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.sIconIds","false","false","true","true","true","int","{ R.drawable.emo_im_happy, R.drawable.emo_im_sad, R.drawable.emo_im_winking, R.drawable.emo_im_tongue_sticking_out, R.drawable.emo_im_surprised, R.drawable.emo_im_kissing, R.drawable.emo_im_yelling, R.drawable.emo_im_cool, R.drawable.emo_im_money_mouth, R.drawable.emo_im_foot_in_mouth, R.drawable.emo_im_embarrassed, R.drawable.emo_im_angel, R.drawable.emo_im_undecided, R.drawable.emo_im_crying, R.drawable.emo_im_lips_are_sealed, R.drawable.emo_im_laughing, R.drawable.emo_im_wtf }","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.LIPS_ARE_SEALED","true","false","false","true","false","int","14","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.ANGEL","true","false","false","true","false","int","11","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.YELLING","true","false","false","true","false","int","6","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.LAUGHING","true","false","false","true","false","int","15","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.KISSING","true","false","false","true","false","int","5","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.CRYING","true","false","false","true","false","int","13","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.WINKING","true","false","false","true","false","int","2","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.TONGUE_STICKING_OUT","true","false","false","true","false","int","3","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.SAD","true","false","false","true","false","int","1","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.COOL","true","false","false","true","false","int","7","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.UNDECIDED","true","false","false","true","false","int","12","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.SURPRISED","true","false","false","true","false","int","4","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.EMBARRASSED","true","false","false","true","false","int","10","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.HAPPY","true","false","false","true","false","int","0","","","\com\android\internal\widget\Smileys.java"
"com.android.internal.widget.Smileys.MONEY_MOUTH","true","false","false","true","false","int","8","","","\com\android\internal\widget\Smileys.java"
"android.speech.srec.Recognizer.EVENT_INVALID","true","false","false","true","true","int","0","","/**
 * Reserved value.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.mPutAudioBuffer","false","false","true","false","false","byte","null","","// audio buffer for putAudio(InputStream)
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_RECOGNITION_TIMEOUT","true","false","false","true","true","int","10","","/**
 * Timeout occured before speech recognition could complete.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Grammar.mGrammar","false","false","true","false","false","int","0","","","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.mActiveGrammar","false","false","true","false","false","Grammar","null","","// Grammar currently associated with Recognizer via SR_GrammarSetupRecognizer
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_NO_MATCH","true","false","false","true","true","int","1","","/**
 * <code>Recognizer</code> could not find a match for the utterance.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.TAG","false","false","true","true","false","String","""Recognizer""","","","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.mRecognizer","false","false","true","false","false","int","0","","// handle to SR_Recognizer object
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.KEY_CONFIDENCE","true","false","false","true","true","String","""conf""","","/**
 * Result key corresponding to confidence score.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_STARTED","true","false","false","true","true","int","3","","/**
 * <code>Recognizer</code> has just been started.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_SPOKE_TOO_SOON","true","false","false","true","true","int","7","","/**
 * Beginning of utterance occured too soon.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.KEY_LITERAL","true","false","false","true","true","String","""literal""","","/**
 * Result key corresponding to literal text.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_START_OF_VOICING","true","false","false","true","true","int","5","","/**
 * Beginning of speech detected.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_STOPPED","true","false","false","true","true","int","4","","/**
 * <code>Recognizer</code> is stopped.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.KEY_MEANING","true","false","false","true","true","String","""meaning""","","/**
 * Result key corresponding to semantic meaning text.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_INCOMPLETE","true","false","false","true","true","int","2","","/**
 * <code>Recognizer</code> processed one frame of audio.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_START_OF_UTTERANCE_TIMEOUT","true","false","false","true","true","int","9","","/**
 * Timeout occured before beginning of utterance.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.mGrammar","false","false","true","false","false","int","0","","","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_NEED_MORE_AUDIO","true","false","false","true","true","int","11","","/**
 * Not enough samples to process one frame.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.mVocabulary","false","false","true","false","false","int","0","","// handle to SR_Vocabulary object
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_END_OF_VOICING","true","false","false","true","true","int","6","","/**
 * End of speech detected.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_RECOGNITION_RESULT","true","false","false","true","true","int","8","","/**
 * Recognition match detected.
 */
","\android\speech\srec\Recognizer.java"
"android.speech.srec.Recognizer.EVENT_MAX_SPEECH","true","false","false","true","true","int","12","","/**
 * More audio encountered than is allowed by 'swirec_max_speech_duration'.
 */
","\android\speech\srec\Recognizer.java"
"android.net.http.AndroidHttpClientConnection.entityserializer","false","false","true","false","true","EntitySerializer","","","","\android\net\http\AndroidHttpClientConnection.java"
"android.net.http.AndroidHttpClientConnection.inbuffer","false","false","true","false","false","SessionInputBuffer","null","","","\android\net\http\AndroidHttpClientConnection.java"
"android.net.http.AndroidHttpClientConnection.socket","false","false","true","false","false","Socket","null","","","\android\net\http\AndroidHttpClientConnection.java"
"android.net.http.AndroidHttpClientConnection.requestWriter","false","false","true","false","false","HttpMessageWriter","null","","","\android\net\http\AndroidHttpClientConnection.java"
"android.net.http.AndroidHttpClientConnection.open","false","false","true","false","false","boolean","","","","\android\net\http\AndroidHttpClientConnection.java"
"android.net.http.AndroidHttpClientConnection.outbuffer","false","false","true","false","false","SessionOutputBuffer","null","","","\android\net\http\AndroidHttpClientConnection.java"
"android.net.http.AndroidHttpClientConnection.maxHeaderCount","false","false","true","false","false","int","","","","\android\net\http\AndroidHttpClientConnection.java"
"android.net.http.AndroidHttpClientConnection.maxLineLength","false","false","true","false","false","int","","","// store CoreConnectionPNames.MAX_LINE_LENGTH for performance
","\android\net\http\AndroidHttpClientConnection.java"
"android.net.http.AndroidHttpClientConnection.metrics","false","false","true","false","false","HttpConnectionMetricsImpl","null","","","\android\net\http\AndroidHttpClientConnection.java"
"android.preference.PreferenceInflater.INTENT_TAG_NAME","false","false","true","true","true","String","""intent""","","","\android\preference\PreferenceInflater.java"
"android.preference.PreferenceInflater.mPreferenceManager","false","false","true","false","false","PreferenceManager","","","","\android\preference\PreferenceInflater.java"
"android.preference.PreferenceInflater.TAG","false","false","true","true","true","String","""PreferenceInflater""","","","\android\preference\PreferenceInflater.java"
"android.database.sqlite.SQLiteDatabase.mLock","false","false","true","false","true","ReentrantLock","new ReentrantLock(true)","","/**
 * Synchronize on this when accessing the database
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mLastLockMessageTime","false","false","true","false","false","long","0L","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mMaxSqlCacheSize","false","false","true","false","false","int","MAX_SQL_CACHE_SIZE","","// max cache size per Database instance
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mNumCacheHits","false","false","true","false","false","int","","","/**
 * maintain stats about number of cache hits and misses
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.CONFLICT_VALUES","false","false","true","true","true","String","new String[] { """", "" OR ROLLBACK "", "" OR ABORT "", "" OR FAIL "", "" OR IGNORE "", "" OR REPLACE "" }","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.LOG_SLOW_QUERIES_PROPERTY","false","false","true","true","true","String","""db.log.slow_query_threshold""","","// System property that enables logging of slow queries. Specify the threshold in ms.
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.masterTable","false","false","false","false","false","String","","","/**
 * The table containing the _sync_time column
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.ActiveDatabases.mActiveDatabases","false","false","true","false","false","HashSet<WeakReference<SQLiteDatabase>>","new HashSet<WeakReference<SQLiteDatabase>>()","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.MAX_SQL_CACHE_SIZE","true","false","false","true","true","int","250","","/**
 * @hide
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.QUERY_LOG_SQL_LENGTH","false","false","true","true","true","int","64","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mTempTableSequence","false","false","false","false","false","int","0","","/* package */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.OPEN_READONLY","true","false","false","true","true","int","0x00000001","","// update native code if changing
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.NO_LOCALIZED_COLLATORS","true","false","false","true","true","int","0x00000010","","// update native code if changing
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mLockingEnabled","false","false","true","false","false","boolean","true","","/**
 * If set then the SQLiteDatabase is made thread-safe by using locks
 * around critical sections
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.CREATE_IF_NECESSARY","true","false","false","true","true","int","0x10000000","","// update native code if changing
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mInnerTransactionIsSuccessful","false","false","true","false","false","boolean","","","/**
 * Indicates whether the most-recently started transaction has been marked as successful.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mNumCacheMisses","false","false","true","false","false","int","","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.CONFLICT_ABORT","true","false","false","true","true","int","2","","/**
 * When a constraint violation occurs,no ROLLBACK is executed
 * so changes from prior commands within the same transaction
 * are preserved. This is the default behavior.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.EVENT_DB_CORRUPT","false","false","true","true","true","int","75004","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SyncUpdateInfo.foreignKey","false","false","false","false","false","String","","","/**
 * The key in the local table the row in table. It may be _id, if table
 * is the local table.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mSyncUpdateInfo","false","false","true","false","true","Map<String,SyncUpdateInfo>","new HashMap<String, SyncUpdateInfo>()","","/**
 * Maps table names to info about what to which _sync_time column to set
 * to NULL on an update. This is used to support syncing.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mPathForLogs","false","false","true","false","false","String","null","","// lazily populated
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.deletedTable","false","false","false","false","false","String","","","/**
 * The deleted table that corresponds to the master table
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.LOCK_WARNING_WINDOW_IN_MS","false","false","true","true","true","int","20000","","// unless run command adb shell setprop log.tag.Database VERBOSE
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mPrograms","false","false","true","false","false","WeakHashMap<SQLiteClosable,Object>","","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.TAG","false","false","true","true","true","String","""Database""","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.foreignKey","false","false","false","false","false","String","","","/**
 * The key in the local table the row in table. It may be _id, if table
 * is the local table.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mNativeHandle","false","false","false","false","false","int","0","","/* package */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mTransactionIsSuccessful","false","false","true","false","false","boolean","","","/**
 * Valid during the life of a transaction, and indicates whether the entire transaction (the
 * outer one and all of the inner ones) so far has been successful.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.GET_LOCK_LOG_PREFIX","false","false","false","true","true","String","""GETLOCK:""","","/* package */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.EVENT_DB_OPERATION","false","false","true","true","true","int","52000","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mRandom","false","false","true","false","true","Random","new Random()","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.ActiveDatabases.activeDatabases","false","false","true","true","true","ActiveDatabases","new ActiveDatabases()","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.LOCK_ACQUIRED_WARNING_TIME_IN_MS_ALWAYS_PRINT","false","false","true","true","true","int","2000","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mCompiledQueries","false","false","false","false","false","Map<String,SQLiteCompiledSql>","Maps.newHashMap()","","/* package */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mLastSqlStatement","false","false","true","false","false","String","null","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mPath","false","false","true","false","false","String","","","/**
 * The path for the database file
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SyncUpdateInfo.deletedTable","false","false","false","false","false","String","","","/**
 * The deleted table that corresponds to the master table
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mLockAcquiredWallTime","false","false","true","false","false","long","0L","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mFlags","false","false","true","false","false","int","","","/**
 * The flags passed to open/create
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.SQLITE_MAX_LIKE_PATTERN_LENGTH","true","false","false","true","true","int","50000","","/**
 * Maximum Length Of A LIKE Or GLOB Pattern
 * The pattern matching algorithm used in the default LIKE and GLOB implementation
 * of SQLite can exhibit O(N^2) performance (where N is the number of characters in
 * the pattern) for certain pathological cases. To avoid denial-of-service attacks
 * the length of the LIKE or GLOB pattern is limited to SQLITE_MAX_LIKE_PATTERN_LENGTH bytes.
 * The default value of this limit is 50000. A modern workstation can evaluate
 * even a pathological LIKE or GLOB pattern of 50000 bytes relatively quickly.
 * The denial of service problem only comes into play when the pattern length gets
 * into millions of bytes. Nevertheless, since most useful LIKE or GLOB patterns
 * are at most a few dozen bytes in length, paranoid application developers may
 * want to reduce this parameter to something in the range of a few hundred
 * if they know that external users are able to generate arbitrary patterns.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mTimeClosed","false","false","true","false","false","String","null","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.COMMIT_SQL","false","false","true","true","true","String","""COMMIT;""","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.CONFLICT_NONE","true","false","false","true","true","int","0","","/**
 * use the following when no conflict action is specified.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mActiveDatabases","false","false","true","false","false","HashSet<WeakReference<SQLiteDatabase>>","new HashSet<WeakReference<SQLiteDatabase>>()","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.CONFLICT_FAIL","true","false","false","true","true","int","3","","/**
 * When a constraint violation occurs, the command aborts with a return
 * code SQLITE_CONSTRAINT. But any changes to the database that
 * the command made prior to encountering the constraint violation
 * are preserved and are not backed out.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.sQueryLogTimeInMillis","false","false","true","true","false","int","0","","// lazily initialized
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.CONFLICT_REPLACE","true","false","false","true","true","int","5","","/**
 * When a UNIQUE constraint violation occurs, the pre-existing rows that
 * are causing the constraint violation are removed prior to inserting
 * or updating the current row. Thus the insert or update always occurs.
 * The command continues executing normally. No error is returned.
 * If a NOT NULL constraint violation occurs, the NULL value is replaced
 * by the default value for that column. If the column has no default
 * value, then the ABORT algorithm is used. If a CHECK constraint
 * violation occurs then the IGNORE algorithm is used. When this conflict
 * resolution strategy deletes rows in order to satisfy a constraint,
 * it does not invoke delete triggers on those rows.
 * This behavior might change in a future release.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mTransactionListener","false","false","true","false","false","SQLiteTransactionListener","","","/**
 * Valid during the life of a transaction.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mStackTrace","false","false","true","false","false","Throwable","null","","/**
 * Used to find out where this object was created in case it never got closed.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.OPEN_READWRITE","true","false","false","true","true","int","0x00000000","","// update native code if changing
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.EMAIL_IN_DB_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""[\\w\\.\\-]+@[\\w\\.\\-]+"")","","// potentially logging them.
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.MAX_WARNINGS_ON_CACHESIZE_CONDITION","false","false","true","true","true","int","1","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.CONFLICT_IGNORE","true","false","false","true","true","int","4","","/**
 * When a constraint violation occurs, the one row that contains
 * the constraint violation is not inserted or changed.
 * But the command continues executing normally. Other rows before and
 * after the row that contained the constraint violation continue to be
 * inserted or updated normally. No error is returned.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.LOCK_ACQUIRED_WARNING_THREAD_TIME_IN_MS","false","false","true","true","true","int","100","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mLockAcquiredThreadTime","false","false","true","false","false","long","0L","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.CONFLICT_ROLLBACK","true","false","false","true","true","int","1","","/**
 * When a constraint violation occurs, an immediate ROLLBACK occurs,
 * thus ending the current transaction, and the command aborts with a
 * return code of SQLITE_CONSTRAINT. If no transaction is active
 * (other than the implied transaction that is created on every command)
 * then this algorithm works the same as ABORT.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mSlowQueryThreshold","false","false","true","false","true","int","","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mCacheFullWarnings","false","false","true","false","false","int","","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SyncUpdateInfo.masterTable","false","false","false","false","false","String","","","/**
 * The table containing the _sync_time column
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.SLEEP_AFTER_YIELD_QUANTUM","false","false","true","true","true","int","1000","","","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mFactory","false","false","true","false","false","CursorFactory","","","/**
 * The optional factory to use when creating new Cursors
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.LOCK_ACQUIRED_WARNING_TIME_IN_MS","false","false","true","true","true","int","300","","/**
 * If the lock is held this long then a warning will be printed when it is released.
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.mTimeOpened","false","false","true","false","false","String","null","","/**
 * the following 2 members maintain the time when a database is opened and closed
 */
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.OPEN_READ_MASK","false","false","true","true","true","int","0x00000001","","// update native code if changing
","\android\database\sqlite\SQLiteDatabase.java"
"android.database.sqlite.SQLiteDatabase.activeDatabases","false","false","true","true","true","ActiveDatabases","new ActiveDatabases()","","","\android\database\sqlite\SQLiteDatabase.java"
"android.text.style.DrawableMarginSpan.mDrawable","false","false","true","false","false","Drawable","","","","\android\text\style\DrawableMarginSpan.java"
"android.text.style.DrawableMarginSpan.mPad","false","false","true","false","false","int","","","","\android\text\style\DrawableMarginSpan.java"
"com.android.internal.widget.EditableInputConnection.TAG","false","false","true","true","true","String","""EditableInputConnection""","","","\com\android\internal\widget\EditableInputConnection.java"
"com.android.internal.widget.EditableInputConnection.DEBUG","false","false","true","true","true","boolean","false","","","\com\android\internal\widget\EditableInputConnection.java"
"com.android.internal.widget.EditableInputConnection.mTextView","false","false","true","false","true","TextView","","","","\com\android\internal\widget\EditableInputConnection.java"
"android.content.res.TypedArray.mData","false","false","false","false","false","int","","","/*package*/
","\android\content\res\TypedArray.java"
"android.content.res.TypedArray.mLength","false","false","false","false","false","int","","","/*package*/
","\android\content\res\TypedArray.java"
"android.content.res.TypedArray.mResources","false","false","true","false","true","Resources","","","","\android\content\res\TypedArray.java"
"android.content.res.TypedArray.mXml","false","false","false","false","false","XmlBlock.Parser","","","/*package*/
","\android\content\res\TypedArray.java"
"android.content.res.TypedArray.mRsrcs","false","false","false","false","false","int","","","/*package*/
","\android\content\res\TypedArray.java"
"android.content.res.TypedArray.mIndices","false","false","false","false","false","int","","","/*package*/
","\android\content\res\TypedArray.java"
"android.content.res.TypedArray.mValue","false","false","true","false","false","TypedValue","new TypedValue()","","","\android\content\res\TypedArray.java"
"android.text.format.Time.Y_M_D_T_H_M_S_000_Z","false","false","true","true","true","String","""%Y-%m-%dT%H:%M:%S.000Z""","","","\android\text\format\Time.java"
"android.text.format.Time.THURSDAY","true","false","false","true","true","int","4","","","\android\text\format\Time.java"
"android.text.format.Time.SUNDAY","true","false","false","true","true","int","0","","","\android\text\format\Time.java"
"android.text.format.Time.EPOCH_JULIAN_DAY","true","false","false","true","true","int","2440588","","/**
 * The Julian day of the epoch, that is, January 1, 1970 on the Gregorian
 * calendar.
 */
","\android\text\format\Time.java"
"android.text.format.Time.MONTH_DAY","true","false","false","true","true","int","4","","","\android\text\format\Time.java"
"android.text.format.Time.YEAR","true","false","false","true","true","int","6","","","\android\text\format\Time.java"
"android.text.format.Time.sLongWeekdays","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.TIMEZONE_UTC","true","false","false","true","true","String","""UTC""","","","\android\text\format\Time.java"
"android.text.format.Time.MONDAY","true","false","false","true","true","int","1","","","\android\text\format\Time.java"
"android.text.format.Time.HOUR","true","false","false","true","true","int","3","","","\android\text\format\Time.java"
"android.text.format.Time.sDateCommand","false","false","true","true","false","String","""%a %b %e %H:%M:%S %Z %Y""","","","\android\text\format\Time.java"
"android.text.format.Time.SECOND","true","false","false","true","true","int","1","","/*
     * Define symbolic constants for accessing the fields in this class. Used in
     * getActualMaximum().
     */
","\android\text\format\Time.java"
"android.text.format.Time.WEEK_NUM","true","false","false","true","true","int","9","","","\android\text\format\Time.java"
"android.text.format.Time.timezone","true","false","false","false","false","String","","","/**
 * The timezone for this Time.  Should not be null.
 */
","\android\text\format\Time.java"
"android.text.format.Time.DAYS_PER_MONTH","false","false","true","true","true","int","{ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }","","","\android\text\format\Time.java"
"android.text.format.Time.WEEK_DAY","true","false","false","true","true","int","7","","","\android\text\format\Time.java"
"android.text.format.Time.WEDNESDAY","true","false","false","true","true","int","3","","","\android\text\format\Time.java"
"android.text.format.Time.SATURDAY","true","false","false","true","true","int","6","","","\android\text\format\Time.java"
"android.text.format.Time.sLocale","false","false","true","true","false","Locale","","","/*
     * The Locale for which date formatting strings have been loaded.
     */
","\android\text\format\Time.java"
"android.text.format.Time.sPm","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.weekDay","true","false","false","false","false","int","","","/**
 * Day of week [0-6]
 */
","\android\text\format\Time.java"
"android.text.format.Time.isDst","true","false","false","false","false","int","","","/**
 * This time is in daylight savings time. One of:
 * <ul>
 * <li><b>positive</b> - in dst</li>
 * <li><b>0</b> - not in dst</li>
 * <li><b>negative</b> - unknown</li>
 * </ul>
 */
","\android\text\format\Time.java"
"android.text.format.Time.sAm","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.second","true","false","false","false","false","int","","","/**
 * Seconds [0-61] (2 leap seconds allowed)
 */
","\android\text\format\Time.java"
"android.text.format.Time.sShortWeekdays","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.sLongStandaloneMonths","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.MONTH","true","false","false","true","true","int","5","","","\android\text\format\Time.java"
"android.text.format.Time.gmtoff","true","false","false","false","false","long","","","/**
 * Offset from UTC (in seconds).
 */
","\android\text\format\Time.java"
"android.text.format.Time.MINUTE","true","false","false","true","true","int","2","","","\android\text\format\Time.java"
"android.text.format.Time.sDateOnlyFormat","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.Y_M_D_T_H_M_S_000","false","false","true","true","true","String","""%Y-%m-%dT%H:%M:%S.000""","","","\android\text\format\Time.java"
"android.text.format.Time.minute","true","false","false","false","false","int","","","/**
 * Minute [0-59]
 */
","\android\text\format\Time.java"
"android.text.format.Time.month","true","false","false","false","false","int","","","/**
 * Month [0-11]
 */
","\android\text\format\Time.java"
"android.text.format.Time.allDay","true","false","false","false","false","boolean","","","/**
 * True if this is an allDay event. The hour, minute, second fields are
 * all zero, and the date is displayed the same in all time zones.
 */
","\android\text\format\Time.java"
"android.text.format.Time.monthDay","true","false","false","false","false","int","","","/**
 * Day of month [1-31]
 */
","\android\text\format\Time.java"
"android.text.format.Time.hour","true","false","false","false","false","int","","","/**
 * Hour of day [0-23]
 */
","\android\text\format\Time.java"
"android.text.format.Time.sTimeOnlyFormat","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.yearDay","true","false","false","false","false","int","","","/**
 * Day of year [0-365]
 */
","\android\text\format\Time.java"
"android.text.format.Time.sShortMonths","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.TUESDAY","true","false","false","true","true","int","2","","","\android\text\format\Time.java"
"android.text.format.Time.sDateTimeFormat","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.text.format.Time.year","true","false","false","false","false","int","","","/**
 * Year. TBD. Is this years since 1900 like in struct tm?
 */
","\android\text\format\Time.java"
"android.text.format.Time.YEAR_DAY","true","false","false","true","true","int","8","","","\android\text\format\Time.java"
"android.text.format.Time.Y_M_D","false","false","true","true","true","String","""%Y-%m-%d""","","","\android\text\format\Time.java"
"android.text.format.Time.FRIDAY","true","false","false","true","true","int","5","","","\android\text\format\Time.java"
"android.text.format.Time.sThursdayOffset","false","false","true","true","true","int","{ -3, 3, 2, 1, 0, -1, -2 }","","/**
 * This array is indexed by the weekDay field (SUNDAY=0, MONDAY=1, etc.)
 * and gives a number that can be added to the yearDay to give the
 * closest Thursday yearDay.
 */
","\android\text\format\Time.java"
"android.text.format.Time.sLongMonths","false","false","true","true","false","String","","","","\android\text\format\Time.java"
"android.preference.PreferenceActivity.mHandler","false","false","true","false","false","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        switch(msg.what) {
            case MSG_BIND_PREFERENCES:
                bindPreferences();
                break;
        }
    }
}","","","\android\preference\PreferenceActivity.java"
"android.preference.PreferenceActivity.mPreferenceManager","false","false","true","false","false","PreferenceManager","","","","\android\preference\PreferenceActivity.java"
"android.preference.PreferenceActivity.MSG_BIND_PREFERENCES","false","false","true","true","true","int","0","","","\android\preference\PreferenceActivity.java"
"android.preference.PreferenceActivity.FIRST_REQUEST_CODE","false","false","true","true","true","int","100","","/**
 * The starting request code given out to preference framework.
 */
","\android\preference\PreferenceActivity.java"
"android.preference.PreferenceActivity.mSavedInstanceState","false","false","true","false","false","Bundle","","","","\android\preference\PreferenceActivity.java"
"android.preference.PreferenceActivity.PREFERENCES_TAG","false","false","true","true","true","String","""android:preferences""","","","\android\preference\PreferenceActivity.java"
"android.widget.DoubleDigitManager.timeoutInMillis","false","false","true","false","true","long","","","","\android\widget\DoubleDigitManager.java"
"android.widget.DoubleDigitManager.intermediateDigit","false","false","true","false","false","Integer","","","","\android\widget\DoubleDigitManager.java"
"android.widget.DoubleDigitManager.mCallBack","false","false","true","false","true","CallBack","","","","\android\widget\DoubleDigitManager.java"
"android.app.ActivityGroup.STATES_KEY","false","false","true","true","true","String","""android:states""","","","\android\app\ActivityGroup.java"
"android.app.ActivityGroup.PARENT_NON_CONFIG_INSTANCE_KEY","false","false","false","true","true","String","""android:parent_non_config_instance""","","","\android\app\ActivityGroup.java"
"android.app.ActivityGroup.mLocalActivityManager","false","true","false","false","false","LocalActivityManager","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\app\ActivityGroup.java"
"android.app.ActivityGroup.TAG","false","false","true","true","true","String","""ActivityGroup""","","","\android\app\ActivityGroup.java"
"android.preference.Preference.mId","false","false","true","false","false","long","","","/**
 * Set when added to hierarchy since we need a unique ID within that
 * hierarchy.
 */
","\android\preference\Preference.java"
"android.preference.Preference.mEnabled","false","false","true","false","false","boolean","true","","","\android\preference\Preference.java"
"android.preference.Preference.mDependencyKey","false","false","true","false","false","String","","","","\android\preference\Preference.java"
"android.preference.Preference.mPersistent","false","false","true","false","false","boolean","true","","","\android\preference\Preference.java"
"android.preference.Preference.mDefaultValue","false","false","true","false","false","Object","","","","\android\preference\Preference.java"
"android.preference.Preference.mShouldDisableView","false","false","true","false","false","boolean","true","","/**
 * @see #setShouldDisableView(boolean)
 */
","\android\preference\Preference.java"
"android.preference.BaseSavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<BaseSavedState>","new Parcelable.Creator<BaseSavedState>() {

    public BaseSavedState createFromParcel(Parcel in) {
        return new BaseSavedState(in);
    }

    public BaseSavedState[] newArray(int size) {
        return new BaseSavedState[size];
    }
}","","","\android\preference\Preference.java"
"android.preference.Preference.mTitle","false","false","true","false","false","CharSequence","","","","\android\preference\Preference.java"
"android.preference.Preference.mDependents","false","false","true","false","false","List<Preference>","","","","\android\preference\Preference.java"
"android.preference.Preference.mListener","false","false","true","false","false","OnPreferenceChangeInternalListener","","","","\android\preference\Preference.java"
"android.preference.Preference.mKey","false","false","true","false","false","String","","","","\android\preference\Preference.java"
"android.preference.Preference.mDependencyMet","false","false","true","false","false","boolean","true","","","\android\preference\Preference.java"
"android.preference.Preference.mOnClickListener","false","false","true","false","false","OnPreferenceClickListener","","","","\android\preference\Preference.java"
"android.preference.Preference.mSelectable","false","false","true","false","false","boolean","true","","","\android\preference\Preference.java"
"android.preference.Preference.DEFAULT_ORDER","true","false","false","true","true","int","Integer.MAX_VALUE","","/**
 * Specify for {@link #setOrder(int)} if a specific order is not required.
 */
","\android\preference\Preference.java"
"android.preference.Preference.mRequiresKey","false","false","true","false","false","boolean","","","","\android\preference\Preference.java"
"android.preference.Preference.mOrder","false","false","true","false","false","int","DEFAULT_ORDER","","","\android\preference\Preference.java"
"android.preference.Preference.mWidgetLayoutResId","false","false","true","false","false","int","","","","\android\preference\Preference.java"
"android.preference.Preference.mSummary","false","false","true","false","false","CharSequence","","","","\android\preference\Preference.java"
"android.preference.Preference.mBaseMethodCalled","false","false","true","false","false","boolean","","","","\android\preference\Preference.java"
"android.preference.Preference.mHasSpecifiedLayout","false","false","true","false","false","boolean","false","","","\android\preference\Preference.java"
"android.preference.Preference.mPreferenceManager","false","false","true","false","false","PreferenceManager","","","","\android\preference\Preference.java"
"android.preference.Preference.mLayoutResId","false","false","true","false","false","int","com.android.internal.R.layout.preference","","","\android\preference\Preference.java"
"android.preference.Preference.mOnChangeListener","false","false","true","false","false","OnPreferenceChangeListener","","","","\android\preference\Preference.java"
"android.preference.Preference.mIntent","false","false","true","false","false","Intent","","","","\android\preference\Preference.java"
"android.preference.Preference.mContext","false","false","true","false","false","Context","","","","\android\preference\Preference.java"
"android.preference.Preference.CREATOR","true","false","false","true","true","Parcelable.Creator<BaseSavedState>","new Parcelable.Creator<BaseSavedState>() {

    public BaseSavedState createFromParcel(Parcel in) {
        return new BaseSavedState(in);
    }

    public BaseSavedState[] newArray(int size) {
        return new BaseSavedState[size];
    }
}","","","\android\preference\Preference.java"
"android.view.VolumePanel.mSmallStreamIcon","false","false","true","false","true","ImageView","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.MSG_VIBRATE","false","false","true","true","true","int","4","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mMessage","false","false","true","false","true","TextView","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.MSG_FREE_RESOURCES","false","false","true","true","true","int","1","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.MSG_PLAY_SOUND","false","false","true","true","true","int","2","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.TAG","false","false","true","true","true","String","""VolumePanel""","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.MSG_STOP_SOUNDS","false","false","true","true","true","int","3","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.MAX_VOLUME","false","false","true","true","true","int","100","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.BLUETOOTH_INCALL_VOLUME_TEXT","false","false","true","true","true","int","com.android.internal.R.string.volume_bluetooth_call","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mAudioService","false","true","false","false","false","AudioService","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mLargeStreamIcon","false","false","true","false","true","ImageView","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.PLAY_SOUND_DELAY","true","false","false","true","true","int","300","","/**
 * The delay before playing a sound. This small period exists so the user
 * can press another key (non-volume keys, too) to have it NOT be audible.
 * <p>
 * PhoneWindow will implement this part.
 */
","\android\view\VolumePanel.java"
"android.view.VolumePanel.mAdditionalMessage","false","false","true","false","true","TextView","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mAudioManager","false","false","true","false","false","AudioManager","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.ALARM_VOLUME_TEXT","false","false","true","true","true","int","com.android.internal.R.string.volume_alarm","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.RINGTONE_VOLUME_TEXT","false","false","true","true","true","int","com.android.internal.R.string.volume_ringtone","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mLevel","false","false","true","false","true","ProgressBar","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mView","false","false","true","false","true","View","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mToast","false","false","true","false","true","Toast","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mToneGenerators","false","false","true","false","false","ToneGenerator","","","// Synchronize when accessing this
","\android\view\VolumePanel.java"
"android.view.VolumePanel.VIBRATE_DELAY","true","false","false","true","true","int","300","","/**
 * The delay before vibrating. This small period exists so if the user is
 * moving to silent mode, it will not emit a short vibrate (it normally
 * would since vibrate is between normal mode and silent mode using hardware
 * keys).
 */
","\android\view\VolumePanel.java"
"android.view.VolumePanel.MUSIC_VOLUME_TEXT","false","false","true","true","true","int","com.android.internal.R.string.volume_music","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.MSG_VOLUME_CHANGED","false","false","true","true","true","int","0","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.UNKNOWN_VOLUME_TEXT","false","false","true","true","true","int","com.android.internal.R.string.volume_unknown","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.VIBRATE_DURATION","false","false","true","true","true","int","300","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mRingIsSilent","false","false","true","false","false","boolean","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mVibrator","false","false","true","false","false","Vibrator","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.BEEP_DURATION","false","false","true","true","true","int","150","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.mContext","false","true","false","false","false","Context","","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.LOGD","false","false","true","true","false","boolean","false","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.INCALL_VOLUME_TEXT","false","false","true","true","true","int","com.android.internal.R.string.volume_call","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.NOTIFICATION_VOLUME_TEXT","false","false","true","true","true","int","com.android.internal.R.string.volume_notification","","","\android\view\VolumePanel.java"
"android.view.VolumePanel.FREE_DELAY","false","false","true","true","true","int","10000","","","\android\view\VolumePanel.java"
"android.view.animation.LayoutAnimationController.mRandomizer","false","true","false","false","false","Random","","","/**
 * The randomizer used when the order is set to random. Subclasses should
 * use this object to avoid creating their own.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.mInterpolator","false","true","false","false","false","Interpolator","","","/**
 * The interpolator used to interpolate the delays.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.mOrder","false","false","true","false","false","int","","","","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.mDelay","false","false","true","false","false","float","","","","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.index","true","false","false","false","false","int","","","/**
 * The index of the view to which these parameters are attached in its
 * containing view group.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.count","true","false","false","false","false","int","","","/**
 * The number of children in the view group containing the view to which
 * these parameters are attached.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.ORDER_NORMAL","true","false","false","true","true","int","0","","/**
 * Distributes the animation delays in the order in which view were added
 * to their view group.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.mMaxDelay","false","false","true","false","false","long","","","","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.ORDER_RANDOM","true","false","false","true","true","int","2","","/**
 * Randomly distributes the animation delays.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.ORDER_REVERSE","true","false","false","true","true","int","1","","/**
 * Distributes the animation delays in the reverse order in which view were
 * added to their view group.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.mDuration","false","false","true","false","false","long","","","","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.LayoutAnimationController.mAnimation","false","true","false","false","false","Animation","","","/**
 * The animation applied on each child of the view group on which this
 * layout animation controller is set.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.AnimationParameters.index","true","false","false","false","false","int","","","/**
 * The index of the view to which these parameters are attached in its
 * containing view group.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.view.animation.AnimationParameters.count","true","false","false","false","false","int","","","/**
 * The number of children in the view group containing the view to which
 * these parameters are attached.
 */
","\android\view\animation\LayoutAnimationController.java"
"android.app.ExpandableListActivity.mList","false","false","false","false","false","ExpandableListView","","","","\android\app\ExpandableListActivity.java"
"android.app.ExpandableListActivity.mAdapter","false","false","false","false","false","ExpandableListAdapter","","","","\android\app\ExpandableListActivity.java"
"android.app.ExpandableListActivity.mFinishedStart","false","false","false","false","false","boolean","false","","","\android\app\ExpandableListActivity.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_FAX","true","false","false","true","true","String","""FAX""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_MSN","true","false","false","true","true","String","""X-MSN""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_YAHOO","true","false","false","true","true","String","""X-YAHOO""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_N","true","false","false","true","true","String","""N""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_TLX","true","false","false","true","true","String","""TLX""","","// Telex
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_FN","true","false","false","true","true","String","""FN""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_VOICE","true","false","false","true","true","String","""VOICE""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_BDAY","true","false","false","true","true","String","""BDAY""","","// Birthday
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_PHONE_EXTRA_TYPE_RADIO","true","false","false","true","true","String","""RADIO""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.MAX_DATA_COLUMN","false","false","false","true","true","int","15","","/* package */
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_NOTE","true","false","false","true","true","String","""NOTE""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_REV","true","false","false","true","true","String","""REV""","","// Valid property names not supported (not appropriately handled) by our vCard importer now.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_GOOGLE_TALK","true","false","false","true","true","String","""X-GOOGLE-TALK""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_EXTRA_TYPE_COMPANY","true","false","false","true","true","String","""COMPANY""","","// Do not use in composer side.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_PHONE_EXTRA_TYPE_COMPANY_MAIN","true","false","false","true","true","String","""COMPANY-MAIN""","","// vCard composer translates this type to ""WORK"" + ""PREF"". Just for parsing.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_AIM","true","false","false","true","true","String","""X-AIM""","","// shown in http://en.wikipedia.org/wiki/VCard support are defined here.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.ImportOnly.PROPERTY_X_GOOGLE_TALK_WITH_SPACE","true","false","false","true","true","String","""X-GOOGLE TALK""","","// in some special case (for that device/application).
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_VERSION","true","false","false","true","true","String","""VERSION""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_PHOTO","true","false","false","true","true","String","""PHOTO""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_SOUND","true","false","false","true","true","String","""SOUND""","","// Not fully supported.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_PHONE_EXTRA_TYPE_CALLBACK","true","false","false","true","true","String","""CALLBACK""","","// Parser passes these when ""X-"" is added to the parameter or not.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_LOGO","true","false","false","true","true","String","""LOGO""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_PREF","true","false","false","true","true","String","""PREF""","","// one ""PREF""s in one property name, while Android accepts them.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_TITLE","true","false","false","true","true","String","""TITLE""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_GOOGLE_TALK_WITH_SPACE","true","false","false","true","true","String","""X-GOOGLE TALK""","","// in some special case (for that device/application).
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_PHONE_EXTRA_TYPE_ASSISTANT","true","false","false","true","true","String","""ASSISTANT""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_ADR_TYPE_INTL","true","false","false","true","true","String","""INTL""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.MAX_CHARACTER_NUMS_BASE64_V30","false","false","false","true","true","int","75","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_EMAIL","true","false","false","true","true","String","""EMAIL""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_MODEM","true","false","false","true","true","String","""MODEM""","","// Phone types existing in vCard 2.1 but not known to ContactsContract.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_PHONETIC_LAST_NAME","true","false","false","true","true","String","""X-PHONETIC-LAST-NAME""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_QQ","true","false","false","true","true","String","""X-QQ""","","// Properties only ContactsStruct has. We alse use this.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_TEL","true","false","false","true","true","String","""TEL""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_VIDEO","true","false","false","true","true","String","""VIDEO""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_JABBER","true","false","false","true","true","String","""X-JABBER""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_ICQ","true","false","false","true","true","String","""X-ICQ""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_NICKNAME","true","false","false","true","true","String","""NICKNAME""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_BBS","true","false","false","true","true","String","""BBS""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_SKYPE_USERNAME","true","false","false","true","true","String","""X-SKYPE-USERNAME""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_X_IRMC_N","true","false","false","true","true","String","""X-IRMC-N""","","// vCard 3.0.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.MAX_CHARACTER_NUMS_QP","false","false","false","true","true","int","76","","/* package */
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_BEGIN","true","false","false","true","true","String","""BEGIN""","","// The property names valid both in vCard 2.1 and 3.0.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_NETMEETING","true","false","false","true","true","String","""X-NETMEETING""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_DCM_HMN_MODE","true","false","false","true","true","String","""X-DCM-HMN-MODE""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_SORT_STRING","true","false","false","true","true","String","""SORT-STRING""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_NO","true","false","false","true","true","String","""X-NO""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_PHONE_EXTRA_TYPE_OTHER","true","false","false","true","true","String","""OTHER""","","// vCard composer translates this type to ""VOICE"" Just for parsing.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_CELL","true","false","false","true","true","String","""CELL""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_INTERNET","true","false","false","true","true","String","""INTERNET""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_AGENT","true","false","false","true","true","String","""AGENT""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_NICKNAME","true","false","false","true","true","String","""X-NICKNAME""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_CAR","true","false","false","true","true","String","""CAR""","","// Phone type parameters valid in vCard and known to ContactsContract, but not so common.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_URL","true","false","false","true","true","String","""URL""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_ADR_TYPE_DOM","true","false","false","true","true","String","""DOM""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_ANDROID_CUSTOM","true","false","false","true","true","String","""X-ANDROID-CUSTOM""","","// Property for Android-specific fields.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_CLASS","true","false","false","true","true","String","""X-CLASS""","","// Properties for DoCoMo vCard.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_ORG","true","false","false","true","true","String","""ORG""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_END","true","false","false","true","true","String","""END""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_WORK","true","false","false","true","true","String","""WORK""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_PHONE_EXTRA_TYPE_TTY_TDD","true","false","false","true","true","String","""TTY-TDD""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_ADR","true","false","false","true","true","String","""ADR""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_PHONETIC_MIDDLE_NAME","true","false","false","true","true","String","""X-PHONETIC-MIDDLE-NAME""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_NAME","true","false","false","true","true","String","""NAME""","","// Available in vCard 3.0. Shoud not use when composing vCard 2.1 file.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_MSG","true","false","false","true","true","String","""MSG""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.VERSION_V30","true","false","false","true","true","String","""3.0""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_ISDN","true","false","false","true","true","String","""ISDN""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_ROLE","true","false","false","true","true","String","""ROLE""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_PAGER","true","false","false","true","true","String","""PAGER""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.ImportOnly.PROPERTY_X_NICKNAME","true","false","false","true","true","String","""X-NICKNAME""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.VERSION_V21","true","false","false","true","true","String","""2.1""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_REDUCTION","true","false","false","true","true","String","""X-REDUCTION""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_ADR_TYPE_PARCEL","true","false","false","true","true","String","""PARCEL""","","// TYPE parameters for postal addresses.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE_HOME","true","false","false","true","true","String","""HOME""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PARAM_TYPE","true","false","false","true","true","String","""TYPE""","","","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_PHONETIC_FIRST_NAME","true","false","false","true","true","String","""X-PHONETIC-FIRST-NAME""","","// De-fact property values expressing phonetic names.
","\android\pim\vcard\VCardConstants.java"
"android.pim.vcard.VCardConstants.PROPERTY_X_SKYPE_PSTNNUMBER","true","false","false","true","true","String","""X-SKYPE-PSTNNUMBER""","","// Phone number for Skype, available as usual phone.
","\android\pim\vcard\VCardConstants.java"
"android.security.Sha1MessageDigest.mNativeSha1Context","false","false","true","false","false","int","","","// ptr to native context
","\android\security\Sha1MessageDigest.java"
"android.content.SyncResult.CREATOR","true","false","false","true","true","Creator<SyncResult>","new Creator<SyncResult>() {

    public SyncResult createFromParcel(Parcel in) {
        return new SyncResult(in);
    }

    public SyncResult[] newArray(int size) {
        return new SyncResult[size];
    }
}","","","\android\content\SyncResult.java"
"android.content.SyncResult.tooManyRetries","true","false","false","false","false","boolean","","","/**
 * Used to indicate that the SyncAdapter experienced a hard error due to trying the same
 * operation too many times (as defined by the SyncAdapter). The SyncManager will record
 * that the sync request failed and it will not reschedule the request.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.moreRecordsToGet","true","false","false","false","false","boolean","","","/**
 * This field is ignored by the SyncManager.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.partialSyncUnavailable","true","false","false","false","false","boolean","","","/**
 * This field is ignored by the SyncManager.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.tooManyDeletions","true","false","false","false","false","boolean","","","/**
 * Used to indicate that the SyncAdapter determined that it would need to issue
 * too many delete operations to the server in order to satisfy the request
 * (as defined by the SyncAdapter). The SyncManager will record
 * that the sync request failed and will cause a System Notification to be created
 * asking the user what they want to do about this. It will give the user a chance to
 * choose between (1) go ahead even with those deletes, (2) revert the deletes,
 * or (3) take no action. If the user decides (1) or (2) the SyncManager will issue another
 * sync request with either {@link ContentResolver#SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS}
 * or {@link ContentResolver#SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS} set in the extras.
 * It is then up to the SyncAdapter to decide how to honor that request.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.delayUntil","true","false","false","false","false","long","","","/**
 * Used to indicate to the SyncManager that future sync requests that match the request's
 * Account and authority should be delayed at least this many seconds.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.stats","true","false","false","false","true","SyncStats","","","/**
 * Used to hold extras statistics about the sync operation. Some of these indicate that
 * the sync request resulted in a hard or soft error, others are for purely informational
 * purposes.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.databaseError","true","false","false","false","false","boolean","","","/**
 * Used to indicate that the SyncAdapter experienced a hard error due to an error it
 * received from interacting with the storage later. The SyncManager will record that
 * the sync request failed and it will not reschedule the request.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.syncAlreadyInProgress","true","false","false","false","true","boolean","","","/**
 * Used to indicate that the SyncAdapter is already performing a sync operation, though
 * not necessarily for the requested account and authority and that it wasn't able to
 * process this request. The SyncManager will reschedule the request to run later.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.fullSyncRequested","true","false","false","false","false","boolean","","","/**
 * If set the SyncManager will request an immediate sync with the same Account and authority
 * (but empty extras Bundle) as was used in the sync request.
 */
","\android\content\SyncResult.java"
"android.content.SyncResult.ALREADY_IN_PROGRESS","true","false","false","true","true","SyncResult","","","/**
 * This instance of a SyncResult is returned by the SyncAdapter in response to a
 * sync request when a sync is already underway. The SyncManager will reschedule the
 * sync request to try again later.
 */
","\android\content\SyncResult.java"
"com.android.internal.app.DisableCarModeActivity.TAG","false","false","true","true","true","String","""DisableCarModeActivity""","","","\com\android\internal\app\DisableCarModeActivity.java"
"android.os.Entry.mFileDescriptor","false","false","true","false","true","ParcelFileDescriptor","","","","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.IS_GZIPPED","true","false","false","true","true","int","4","","/**
 * Flag value: Content can be decompressed with {@link java.util.zip.GZIPOutputStream}.
 */
","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.mTimeMillis","false","false","true","false","true","long","","","","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.IS_EMPTY","true","false","false","true","true","int","1","","/**
 * Flag value: Entry's content was deleted to save space.
 */
","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.IS_TEXT","true","false","false","true","true","int","2","","/**
 * Flag value: Content is human-readable UTF-8 text (can be combined with IS_GZIPPED).
 */
","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.CREATOR","true","false","false","true","true","Parcelable.Creator<Entry>","new Parcelable.Creator() {

    public Entry[] newArray(int size) {
        return new Entry[size];
    }

    public Entry createFromParcel(Parcel in) {
        return new Entry(in.readString(), in.readLong(), in.readValue(null), in.readInt());
    }
}","","","\android\os\DropBoxManager.java"
"android.os.Entry.mFlags","false","false","true","false","true","int","","","","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.mData","false","false","true","false","true","byte","","","","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.mService","false","false","true","false","true","IDropBoxManagerService","","","","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.mFlags","false","false","true","false","true","int","","","","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.TAG","false","false","true","true","true","String","""DropBoxManager""","","","\android\os\DropBoxManager.java"
"android.os.Entry.mTimeMillis","false","false","true","false","true","long","","","","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.mFileDescriptor","false","false","true","false","true","ParcelFileDescriptor","","","","\android\os\DropBoxManager.java"
"android.os.Entry.mTag","false","false","true","false","true","String","","","","\android\os\DropBoxManager.java"
"android.os.DropBoxManager.mTag","false","false","true","false","true","String","","","","\android\os\DropBoxManager.java"
"android.os.Entry.CREATOR","true","false","false","true","true","Parcelable.Creator<Entry>","new Parcelable.Creator() {

    public Entry[] newArray(int size) {
        return new Entry[size];
    }

    public Entry createFromParcel(Parcel in) {
        return new Entry(in.readString(), in.readLong(), in.readValue(null), in.readInt());
    }
}","","","\android\os\DropBoxManager.java"
"android.os.Entry.mData","false","false","true","false","true","byte","","","","\android\os\DropBoxManager.java"
"android.app.backup.BackupDataOutput.mBackupWriter","false","false","false","false","false","int","","","","\android\app\backup\BackupDataOutput.java"
"android.content.AbstractThreadedSyncAdapter.mSyncContext","false","false","true","false","true","SyncContext","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mSyncThread","false","false","true","false","false","SyncThread","","","// all accesses to this member variable must be synchronized on mSyncThreadLock
","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mExtras","false","false","true","false","true","Bundle","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mNumSyncStarts","false","false","true","false","true","AtomicInteger","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mISyncAdapterImpl","false","false","true","false","true","ISyncAdapterImpl","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.SyncThread.mExtras","false","false","true","false","true","Bundle","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.SyncThread.mAuthority","false","false","true","false","true","String","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.SyncThread.mAccount","false","false","true","false","true","Account","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mAuthority","false","false","true","false","true","String","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mAccount","false","false","true","false","true","Account","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mAutoInitialize","false","false","true","false","true","boolean","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mSyncThreadLock","false","false","true","false","true","Object","new Object()","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.SyncThread.mSyncContext","false","false","true","false","true","SyncContext","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.mContext","false","false","true","false","true","Context","","","","\android\content\AbstractThreadedSyncAdapter.java"
"android.content.AbstractThreadedSyncAdapter.LOG_SYNC_DETAILS","true","false","false","true","true","int","2743","","/**
 * Kernel event log tag.  Also listed in data/etc/event-log-tags.
 * @Deprecated
 */
","\android\content\AbstractThreadedSyncAdapter.java"
"android.preference.PreferenceCategory.TAG","false","false","true","true","true","String","""PreferenceCategory""","","","\android\preference\PreferenceCategory.java"
"com.android.internal.http.multipart.ByteArrayPartSource.fileName","false","false","true","false","false","String","","","/**
 * Name of the source file.
 */
","\com\android\internal\http\multipart\ByteArrayPartSource.java"
"com.android.internal.http.multipart.ByteArrayPartSource.bytes","false","false","true","false","false","byte","","","/**
 * Byte array of the source file.
 */
","\com\android\internal\http\multipart\ByteArrayPartSource.java"
"com.google.android.mms.pdu.SendReq.TAG","false","false","true","true","true","String","""SendReq""","","","\com\google\android\mms\pdu\SendReq.java"
"android.preference.DialogPreference.mBuilder","false","false","true","false","false","AlertDialog.Builder","","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.mWhichButtonClicked","false","false","true","false","false","int","","","/**
 * Which button was clicked.
 */
","\android\preference\DialogPreference.java"
"android.preference.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.mDialogTitle","false","false","true","false","false","CharSequence","","","","\android\preference\DialogPreference.java"
"android.preference.SavedState.dialogBundle","false","false","false","false","false","Bundle","","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.mNegativeButtonText","false","false","true","false","false","CharSequence","","","","\android\preference\DialogPreference.java"
"android.preference.SavedState.isDialogShowing","false","false","false","false","false","boolean","","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.mDialog","false","false","true","false","false","Dialog","","","/**
 * The dialog, if it is showing.
 */
","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.dialogBundle","false","false","false","false","false","Bundle","","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.mPositiveButtonText","false","false","true","false","false","CharSequence","","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.mDialogIcon","false","false","true","false","false","Drawable","","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.isDialogShowing","false","false","false","false","false","boolean","","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.mDialogMessage","false","false","true","false","false","CharSequence","","","","\android\preference\DialogPreference.java"
"android.preference.DialogPreference.mDialogLayoutResId","false","false","true","false","false","int","","","","\android\preference\DialogPreference.java"
"android.os.Environment.DIRECTORY_MUSIC","true","false","false","true","false","String","""Music""","","/**
 * Standard directory in which to place any audio files that should be
 * in the regular list of music for the user.
 * This may be combined with
 * {@link #DIRECTORY_PODCASTS}, {@link #DIRECTORY_NOTIFICATIONS},
 * {@link #DIRECTORY_ALARMS}, and {@link #DIRECTORY_RINGTONES} as a series
 * of directories to categories a particular audio file as more than one
 * type.
 */
","\android\os\Environment.java"
"android.os.Environment.EXTERNAL_STORAGE_ANDROID_DATA_DIRECTORY","false","false","true","true","true","File","new File(new File(getDirectory(""EXTERNAL_STORAGE"", ""/sdcard""), ""Android""), ""data"")","","","\android\os\Environment.java"
"android.os.Environment.ROOT_DIRECTORY","false","false","true","true","true","File","getDirectory(""ANDROID_ROOT"", ""/system"")","","","\android\os\Environment.java"
"android.os.Environment.EXTERNAL_STORAGE_DIRECTORY","false","false","true","true","true","File","getDirectory(""EXTERNAL_STORAGE"", ""/sdcard"")","","","\android\os\Environment.java"
"android.os.Environment.DOWNLOAD_CACHE_DIRECTORY","false","false","true","true","true","File","getDirectory(""DOWNLOAD_CACHE"", ""/cache"")","","","\android\os\Environment.java"
"android.os.Environment.MEDIA_REMOVED","true","false","false","true","true","String","""removed""","","/**
 * getExternalStorageState() returns MEDIA_REMOVED if the media is not present.
 */
","\android\os\Environment.java"
"android.os.Environment.DIRECTORY_DOWNLOADS","true","false","false","true","false","String","""Download""","","/**
 * Standard directory in which to place files that have been downloaded by
 * the user.  Note that this is primarily a convention for the top-level
 * public directory, you are free to download files anywhere in your own
 * private directories.  Also note that though the constant here is
 * named DIRECTORY_DOWNLOADS (plural), the actual file name is non-plural for
 * backwards compatibility reasons.
 */
","\android\os\Environment.java"
"android.os.Environment.DIRECTORY_PODCASTS","true","false","false","true","false","String","""Podcasts""","","/**
 * Standard directory in which to place any audio files that should be
 * in the list of podcasts that the user can select (not as regular
 * music).
 * This may be combined with {@link #DIRECTORY_MUSIC},
 * {@link #DIRECTORY_NOTIFICATIONS},
 * {@link #DIRECTORY_ALARMS}, and {@link #DIRECTORY_RINGTONES} as a series
 * of directories to categories a particular audio file as more than one
 * type.
 */
","\android\os\Environment.java"
"android.os.Environment.MEDIA_MOUNTED_READ_ONLY","true","false","false","true","true","String","""mounted_ro""","","/**
 * getExternalStorageState() returns MEDIA_MOUNTED_READ_ONLY if the media is present
 * and mounted at its mount point with read only access.
 */
","\android\os\Environment.java"
"android.os.Environment.mMntSvc","false","false","true","true","false","IMountService","null","","","\android\os\Environment.java"
"android.os.Environment.MEDIA_NOFS","true","false","false","true","true","String","""nofs""","","/**
 * getExternalStorageState() returns MEDIA_NOFS if the media is present
 * but is blank or is using an unsupported filesystem
 */
","\android\os\Environment.java"
"android.os.Environment.MEDIA_BAD_REMOVAL","true","false","false","true","true","String","""bad_removal""","","/**
 * getExternalStorageState() returns MEDIA_BAD_REMOVAL if the media was
 * removed before it was unmounted.
 */
","\android\os\Environment.java"
"android.os.Environment.MEDIA_UNMOUNTABLE","true","false","false","true","true","String","""unmountable""","","/**
 * getExternalStorageState() returns MEDIA_UNMOUNTABLE if the media is present
 * but cannot be mounted.  Typically this happens if the file system on the
 * media is corrupted.
 */
","\android\os\Environment.java"
"android.os.Environment.MEDIA_MOUNTED","true","false","false","true","true","String","""mounted""","","/**
 * getExternalStorageState() returns MEDIA_MOUNTED if the media is present
 * and mounted at its mount point with read/write access.
 */
","\android\os\Environment.java"
"android.os.Environment.DIRECTORY_MOVIES","true","false","false","true","false","String","""Movies""","","/**
 * Standard directory in which to place movies that are available to
 * the user.  Note that this is primarily a convention for the top-level
 * public directory, as the media scanner will find and collect movies
 * in any directory.
 */
","\android\os\Environment.java"
"android.os.Environment.DIRECTORY_PICTURES","true","false","false","true","false","String","""Pictures""","","/**
 * Standard directory in which to place pictures that are available to
 * the user.  Note that this is primarily a convention for the top-level
 * public directory, as the media scanner will find and collect pictures
 * in any directory.
 */
","\android\os\Environment.java"
"android.os.Environment.MEDIA_CHECKING","true","false","false","true","true","String","""checking""","","/**
 * getExternalStorageState() returns MEDIA_CHECKING if the media is present
 * and being disk-checked
 */
","\android\os\Environment.java"
"android.os.Environment.DIRECTORY_RINGTONES","true","false","false","true","false","String","""Ringtones""","","/**
 * Standard directory in which to place any audio files that should be
 * in the list of ringtones that the user can select (not as regular
 * music).
 * This may be combined with {@link #DIRECTORY_MUSIC},
 * {@link #DIRECTORY_PODCASTS}, {@link #DIRECTORY_NOTIFICATIONS}, and
 * {@link #DIRECTORY_ALARMS} as a series
 * of directories to categories a particular audio file as more than one
 * type.
 */
","\android\os\Environment.java"
"android.os.Environment.MEDIA_UNMOUNTED","true","false","false","true","true","String","""unmounted""","","/**
 * getExternalStorageState() returns MEDIA_UNMOUNTED if the media is present
 * but not mounted.
 */
","\android\os\Environment.java"
"android.os.Environment.DIRECTORY_DCIM","true","false","false","true","false","String","""DCIM""","","/**
 * The traditional location for pictures and videos when mounting the
 * device as a camera.  Note that this is primarily a convention for the
 * top-level public directory, as this convention makes no sense elsewhere.
 */
","\android\os\Environment.java"
"android.os.Environment.DATA_DIRECTORY","false","false","true","true","true","File","getDirectory(""ANDROID_DATA"", ""/data"")","","","\android\os\Environment.java"
"android.os.Environment.EXTERNAL_STORAGE_ANDROID_MEDIA_DIRECTORY","false","false","true","true","true","File","new File(new File(getDirectory(""EXTERNAL_STORAGE"", ""/sdcard""), ""Android""), ""media"")","","","\android\os\Environment.java"
"android.os.Environment.DIRECTORY_ALARMS","true","false","false","true","false","String","""Alarms""","","/**
 * Standard directory in which to place any audio files that should be
 * in the list of alarms that the user can select (not as regular
 * music).
 * This may be combined with {@link #DIRECTORY_MUSIC},
 * {@link #DIRECTORY_PODCASTS}, {@link #DIRECTORY_NOTIFICATIONS},
 * and {@link #DIRECTORY_RINGTONES} as a series
 * of directories to categories a particular audio file as more than one
 * type.
 */
","\android\os\Environment.java"
"android.os.Environment.DIRECTORY_NOTIFICATIONS","true","false","false","true","false","String","""Notifications""","","/**
 * Standard directory in which to place any audio files that should be
 * in the list of notifications that the user can select (not as regular
 * music).
 * This may be combined with {@link #DIRECTORY_MUSIC},
 * {@link #DIRECTORY_PODCASTS},
 * {@link #DIRECTORY_ALARMS}, and {@link #DIRECTORY_RINGTONES} as a series
 * of directories to categories a particular audio file as more than one
 * type.
 */
","\android\os\Environment.java"
"android.os.Environment.MEDIA_SHARED","true","false","false","true","true","String","""shared""","","/**
 * getExternalStorageState() returns MEDIA_SHARED if the media is present
 * not mounted, and shared via USB mass storage.
 */
","\android\os\Environment.java"
"android.content.SyncManager.MAX_TIME_PER_SYNC","false","false","true","true","true","long","","","/**
 * If a sync takes longer than this and the sync queue is not empty then we will
 * cancel it and add it back to the end of the sync queue. In milliseconds.
 */
","\android\content\SyncManager.java"
"android.content.InitializerServiceConnection.mAuthority","false","false","true","false","true","String","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mDataConnectionIsConnected","false","false","true","false","false","boolean","false","","","\android\content\SyncManager.java"
"android.content.SyncManager.mContext","false","false","true","false","false","Context","","","","\android\content\SyncManager.java"
"android.content.SyncManager.MESSAGE_SERVICE_CONNECTED","false","false","true","true","true","int","4","","","\android\content\SyncManager.java"
"android.content.SyncManager.mTimeoutStartTime","false","false","false","false","false","long","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mBootCompleted","false","false","true","false","false","boolean","false","","","\android\content\SyncManager.java"
"android.content.SyncManager.TAG","false","false","true","true","true","String","""SyncManager""","","","\android\content\SyncManager.java"
"android.content.SyncManager.mBackgroundDataSettingChanged","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    public void onReceive(Context context, Intent intent) {
        if (getConnectivityManager().getBackgroundDataSetting()) {
            scheduleSync(null, /* account */
            null, /* authority */
            new Bundle(), 0, /* delay */
            false);
        }
    }
}","","","\android\content\SyncManager.java"
"android.content.SyncHandler.MESSAGE_SERVICE_CONNECTED","false","false","true","true","true","int","4","","","\android\content\SyncManager.java"
"android.content.SyncManager.mInitialized","false","false","true","false","false","boolean","","","","\android\content\SyncManager.java"
"android.content.SyncManager.SYNC_WAKE_LOCK","false","false","true","true","true","String","""SyncManagerSyncWakeLock""","","","\android\content\SyncManager.java"
"android.content.InitializerServiceConnection.mInitialized","false","false","true","false","false","boolean","","","","\android\content\SyncManager.java"
"android.content.ServiceConnectionData.activeSyncContext","true","false","false","false","true","ActiveSyncContext","","","","\android\content\SyncManager.java"
"android.content.SyncManager.isActive","true","false","false","false","false","boolean","false","","// true iff the notification manager has been asked to send the notification
","\android\content\SyncManager.java"
"android.content.ActiveSyncContext.mTimeoutStartTime","false","false","false","false","false","long","","","","\android\content\SyncManager.java"
"android.content.SyncManager.account","true","false","false","false","false","Account","","","// only valid if isActive is true
","\android\content\SyncManager.java"
"android.content.SyncManager.LOCAL_SYNC_DELAY","false","false","true","true","true","long","","","/**
 * Delay a sync due to local changes this long. In milliseconds
 */
","\android\content\SyncManager.java"
"android.content.ServiceConnectionData.syncAdapter","true","false","false","false","true","ISyncAdapter","","","","\android\content\SyncManager.java"
"android.content.SyncTimeTracker.mLastWasSyncing","false","false","false","false","false","boolean","false","","/**
 * True if a sync was in progress on the most recent call to update()
 */
","\android\content\SyncManager.java"
"android.content.SyncManager.mAuthority","false","false","true","false","true","String","","","","\android\content\SyncManager.java"
"android.content.InitializerServiceConnection.mAccount","false","false","true","false","true","Account","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mBootCompletedReceiver","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    public void onReceive(Context context, Intent intent) {
        mSyncHandler.onBootCompleted();
    }
}","","","\android\content\SyncManager.java"
"android.content.SyncManager.mStartTime","false","false","false","false","true","long","","","","\android\content\SyncManager.java"
"android.content.SyncTimeTracker.mWhenSyncStarted","false","false","false","false","false","long","0","","/**
 * Used to track when lastWasSyncing was last set
 */
","\android\content\SyncManager.java"
"android.content.SyncManager.MESSAGE_SERVICE_DISCONNECTED","false","false","true","true","true","int","5","","","\android\content\SyncManager.java"
"android.content.SyncManager.mConnectivityIntentReceiver","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    public void onReceive(Context context, Intent intent) {
        NetworkInfo networkInfo = intent.getParcelableExtra(ConnectivityManager.EXTRA_NETWORK_INFO);
        NetworkInfo.State state = (networkInfo == null ? NetworkInfo.State.UNKNOWN : networkInfo.getState());
        if (Log.isLoggable(TAG, Log.VERBOSE)) {
            Log.v(TAG, ""received connectivity action.  network info: "" + networkInfo);
        }
        // since we still have a WiFi connection.
        switch(state) {
            case CONNECTED:
                mDataConnectionIsConnected = true;
                break;
            case DISCONNECTED:
                if (intent.getBooleanExtra(ConnectivityManager.EXTRA_NO_CONNECTIVITY, false)) {
                    mDataConnectionIsConnected = false;
                } else {
                    mDataConnectionIsConnected = true;
                }
                break;
            default:
        }
        if (mDataConnectionIsConnected) {
            sendCheckAlarmsMessage();
        }
    }
}","","","\android\content\SyncManager.java"
"android.content.SyncHandler.mSyncNotificationInfo","true","false","false","false","true","SyncNotificationInfo","new SyncNotificationInfo()","","","\android\content\SyncManager.java"
"android.content.SyncManager.mConnManagerDoNotUseDirectly","false","false","true","false","false","ConnectivityManager","","","// its accessor, getConnManager().
","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncWakeLock","false","false","true","false","false","PowerManager.WakeLock","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncNotificationInfo","true","false","false","false","true","SyncNotificationInfo","new SyncNotificationInfo()","","","\android\content\SyncManager.java"
"android.content.SyncManager.mAlarmService","false","false","true","false","false","AlarmManager","null","","","\android\content\SyncManager.java"
"android.content.SyncManager.mAccount","false","false","true","false","true","Account","","","","\android\content\SyncManager.java"
"android.content.ActiveSyncContext.mHistoryRowId","false","false","false","false","true","long","","","","\android\content\SyncManager.java"
"android.content.SyncManager.SYNC_NOTIFICATION_DELAY","false","false","true","true","true","long","30 * 1000","","// 30 seconds
","\android\content\SyncManager.java"
"android.content.ActiveSyncContext.mSyncAdapter","false","false","false","false","false","ISyncAdapter","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mMainHandler","false","false","true","false","true","Handler","","","","\android\content\SyncManager.java"
"android.content.SyncManager.DEFAULT_MAX_SYNC_RETRY_TIME_IN_SECONDS","false","false","true","true","true","long","60 * 60","","// one hour
","\android\content\SyncManager.java"
"android.content.SyncManager.MESSAGE_SYNC_ALARM","false","false","true","true","true","int","2","","","\android\content\SyncManager.java"
"android.content.SyncHandler.MESSAGE_SERVICE_DISCONNECTED","false","false","true","true","true","int","5","","","\android\content\SyncManager.java"
"android.content.SyncManager.syncResult","true","false","false","false","true","SyncResult","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mStorageIsLow","false","false","true","false","false","boolean","false","","","\android\content\SyncManager.java"
"android.content.SyncManager.mAccounts","false","false","true","false","false","Account","INITIAL_ACCOUNTS_ARRAY","","","\android\content\SyncManager.java"
"android.content.SyncHandler.authority","true","false","false","false","false","String","","","// only valid if isActive is true
","\android\content\SyncManager.java"
"android.content.SyncNotificationInfo.startTime","true","false","false","false","false","Long","null","","// the opposite transition.
","\android\content\SyncManager.java"
"android.content.SyncManager.mAlarmScheduleTime","false","false","true","false","false","Long","null","","","\android\content\SyncManager.java"
"android.content.SyncManager.DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS","false","false","true","true","true","int","10","","/**
 * How long to wait before retrying a sync that failed due to one already being in progress.
 */
","\android\content\SyncManager.java"
"android.content.SyncManager.mNeedSyncErrorNotification","false","false","true","false","false","boolean","false","","// set if the sync error indicator should be reported.
","\android\content\SyncManager.java"
"android.content.SyncManager.authority","true","false","false","false","false","String","","","// only valid if isActive is true
","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncStorageEngine","false","false","true","false","true","SyncStorageEngine","","","","\android\content\SyncManager.java"
"android.content.SyncNotificationInfo.authority","true","false","false","false","false","String","","","// only valid if isActive is true
","\android\content\SyncManager.java"
"android.content.SyncManager.mLastWasSyncing","false","false","false","false","false","boolean","false","","/**
 * True if a sync was in progress on the most recent call to update()
 */
","\android\content\SyncManager.java"
"android.content.SyncManager.mHistoryRowId","false","false","false","false","true","long","","","","\android\content\SyncManager.java"
"android.content.SyncManager.startTime","true","false","false","false","false","Long","null","","// the opposite transition.
","\android\content\SyncManager.java"
"android.content.SyncManager.MESSAGE_CHECK_ALARMS","false","false","true","true","true","int","3","","","\android\content\SyncManager.java"
"android.content.SyncManager.mReadyToRunLatch","false","false","true","false","false","CountDownLatch","new CountDownLatch(1)","","","\android\content\SyncManager.java"
"android.content.SyncNotificationInfo.isActive","true","false","false","false","false","boolean","false","","// true iff the notification manager has been asked to send the notification
","\android\content\SyncManager.java"
"android.content.SyncNotificationInfo.account","true","false","false","false","false","Account","","","// only valid if isActive is true
","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncOperation","false","false","false","false","true","SyncOperation","","","","\android\content\SyncManager.java"
"android.content.SyncHandler.mErrorNotificationInstalled","false","false","true","false","false","boolean","false","","// it if sync is still failing
","\android\content\SyncManager.java"
"android.content.SyncHandler.mReadyToRunLatch","false","false","true","false","false","CountDownLatch","new CountDownLatch(1)","","","\android\content\SyncManager.java"
"android.content.SyncManager.HANDLE_SYNC_ALARM_WAKE_LOCK","false","false","true","true","true","String","""SyncManagerHandleSyncAlarmWakeLock""","","","\android\content\SyncManager.java"
"android.content.SyncHandler.mAlarmScheduleTime","false","false","true","false","false","Long","null","","","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncTimeTracker","true","false","false","false","true","SyncTimeTracker","new SyncTimeTracker()","","","\android\content\SyncManager.java"
"android.content.ActiveSyncContext.mStartTime","false","false","false","false","true","long","","","","\android\content\SyncManager.java"
"android.content.SyncHandler.startTime","true","false","false","false","false","Long","null","","// the opposite transition.
","\android\content\SyncManager.java"
"android.content.SyncManager.MESSAGE_SYNC_FINISHED","false","false","true","true","true","int","1","","// Messages that can be sent on mHandler
","\android\content\SyncManager.java"
"android.content.SyncManager.mActiveSyncContext","false","false","true","false","false","ActiveSyncContext","null","","","\android\content\SyncManager.java"
"android.content.ActiveSyncContext.mBound","false","false","false","false","false","boolean","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncAlarmIntent","false","false","true","false","true","PendingIntent","","","","\android\content\SyncManager.java"
"android.content.SyncHandler.MESSAGE_SYNC_FINISHED","false","false","true","true","true","int","1","","// Messages that can be sent on mHandler
","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncAdapter","false","false","false","false","false","ISyncAdapter","","","","\android\content\SyncManager.java"
"android.content.SyncManager.activeSyncContext","true","false","false","false","true","ActiveSyncContext","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncHandler","false","false","true","false","true","SyncHandler","","","","\android\content\SyncManager.java"
"android.content.SyncHandler.MESSAGE_SYNC_ALARM","false","false","true","true","true","int","2","","","\android\content\SyncManager.java"
"android.content.SyncHandler.mSyncTimeTracker","true","false","false","false","true","SyncTimeTracker","new SyncTimeTracker()","","","\android\content\SyncManager.java"
"android.content.SyncManager.ACTION_SYNC_ALARM","false","false","true","true","true","String","""android.content.syncmanager.SYNC_ALARM""","","","\android\content\SyncManager.java"
"android.content.SyncManager.mShutdownIntentReceiver","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    public void onReceive(Context context, Intent intent) {
        Log.w(TAG, ""Writing sync state before shutdown..."");
        getSyncStorageEngine().writeAllState();
    }
}","","","\android\content\SyncManager.java"
"android.content.SyncManager.mTimeSpentSyncing","false","false","true","false","false","long","","","/**
 * The cumulative time we have spent syncing
 */
","\android\content\SyncManager.java"
"android.content.SyncHandlerMessagePayload.activeSyncContext","true","false","false","false","true","ActiveSyncContext","","","","\android\content\SyncManager.java"
"android.content.SyncManager.ERROR_NOTIFICATION_DELAY_MS","false","false","true","true","true","long","1000 * 60 * 10","","// 10 minutes
","\android\content\SyncManager.java"
"android.content.SyncHandler.account","true","false","false","false","false","Account","","","// only valid if isActive is true
","\android\content\SyncManager.java"
"android.content.SyncHandlerMessagePayload.syncResult","true","false","false","false","true","SyncResult","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mBound","false","false","false","false","false","boolean","","","","\android\content\SyncManager.java"
"android.content.SyncTimeTracker.mTimeSpentSyncing","false","false","true","false","false","long","","","/**
 * The cumulative time we have spent syncing
 */
","\android\content\SyncManager.java"
"android.content.SyncManager.mNeedSyncActiveNotification","false","false","true","false","false","boolean","false","","// set if the sync active indicator should be reported
","\android\content\SyncManager.java"
"android.content.InitializerServiceConnection.mContext","false","false","true","false","false","Context","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mStorageIntentReceiver","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    public void onReceive(Context context, Intent intent) {
        String action = intent.getAction();
        if (Intent.ACTION_DEVICE_STORAGE_LOW.equals(action)) {
            if (Log.isLoggable(TAG, Log.VERBOSE)) {
                Log.v(TAG, ""Internal storage is low."");
            }
            mStorageIsLow = true;
            cancelActiveSync(null, /* any account */
            null);
        } else if (Intent.ACTION_DEVICE_STORAGE_OK.equals(action)) {
            if (Log.isLoggable(TAG, Log.VERBOSE)) {
                Log.v(TAG, ""Internal storage is ok."");
            }
            mStorageIsLow = false;
            sendCheckAlarmsMessage();
        }
    }
}","","","\android\content\SyncManager.java"
"android.content.SyncManager.INITIALIZATION_UNBIND_DELAY_MS","false","false","true","true","true","int","5000","","","\android\content\SyncManager.java"
"android.content.SyncManager.mNotificationMgr","false","false","true","false","true","NotificationManager","","","","\android\content\SyncManager.java"
"android.content.SyncManager.syncAdapter","true","false","false","false","true","ISyncAdapter","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mWhenSyncStarted","false","false","false","false","false","long","0","","/**
 * Used to track when lastWasSyncing was last set
 */
","\android\content\SyncManager.java"
"android.content.SyncManager.INITIAL_SYNC_RETRY_TIME_IN_MS","false","false","true","true","true","long","30 * 1000","","// 30 seconds
","\android\content\SyncManager.java"
"android.content.SyncHandler.isActive","true","false","false","false","false","boolean","false","","// true iff the notification manager has been asked to send the notification
","\android\content\SyncManager.java"
"android.content.SyncManager.INITIAL_ACCOUNTS_ARRAY","false","false","true","true","true","Account","new Account[0]","","","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncAdapters","false","false","true","false","true","SyncAdaptersCache","","","","\android\content\SyncManager.java"
"android.content.SyncHandler.MESSAGE_CHECK_ALARMS","false","false","true","true","true","int","3","","","\android\content\SyncManager.java"
"android.content.SyncManager.mSyncQueue","true","false","false","false","true","SyncQueue","","","","\android\content\SyncManager.java"
"android.content.ActiveSyncContext.mSyncOperation","false","false","false","false","true","SyncOperation","","","","\android\content\SyncManager.java"
"android.content.InitializerServiceConnection.mHandler","false","false","true","false","true","Handler","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mHandler","false","false","true","false","true","Handler","","","","\android\content\SyncManager.java"
"android.content.SyncManager.mErrorNotificationInstalled","false","false","true","false","false","boolean","false","","// it if sync is still failing
","\android\content\SyncManager.java"
"android.content.SyncManager.mHandleAlarmWakeLock","false","false","true","false","false","PowerManager.WakeLock","","","","\android\content\SyncManager.java"
"android.widget.QuickContactBadge.TOKEN_PHONE_LOOKUP_AND_TRIGGER","false","false","true","true","true","int","3","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.CONTACT_LOOKUP_PROJECTION","false","false","false","true","true","String","new String[] { Contacts._ID, Contacts.LOOKUP_KEY }","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.EMAIL_LOOKUP_PROJECTION","false","false","false","true","true","String","new String[] { RawContacts.CONTACT_ID, Contacts.LOOKUP_KEY }","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.mContactPhone","false","false","true","false","false","String","","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.TOKEN_PHONE_LOOKUP","false","false","true","true","true","int","1","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.mNoBadgeBackground","false","false","true","false","false","Drawable","","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.mQueryHandler","false","false","true","false","false","QueryHandler","","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.TOKEN_CONTACT_LOOKUP_AND_TRIGGER","false","false","true","true","true","int","4","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.PHONE_LOOKUP_STRING_COLUMN_INDEX","false","false","false","true","true","int","1","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.PHONE_LOOKUP_PROJECTION","false","false","false","true","true","String","new String[] { PhoneLookup._ID, PhoneLookup.LOOKUP_KEY }","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.mContactEmail","false","false","true","false","false","String","","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.TOKEN_EMAIL_LOOKUP_AND_TRIGGER","false","false","true","true","true","int","2","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.mMode","false","false","true","false","false","int","","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.TOKEN_EMAIL_LOOKUP","false","false","true","true","true","int","0","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.mExcludeMimes","false","true","false","false","false","String","null","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.CONTACT_ID_COLUMN_INDEX","false","false","false","true","true","int","0","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.EMAIL_ID_COLUMN_INDEX","false","false","false","true","true","int","0","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.mBadgeBackground","false","false","true","false","false","Drawable","","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.mContactUri","false","false","true","false","false","Uri","","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.PHONE_ID_COLUMN_INDEX","false","false","false","true","true","int","0","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.CONTACT_LOOKUPKEY_COLUMN_INDEX","false","false","false","true","true","int","1","","","\android\widget\QuickContactBadge.java"
"android.widget.QuickContactBadge.EMAIL_LOOKUP_STRING_COLUMN_INDEX","false","false","false","true","true","int","1","","","\android\widget\QuickContactBadge.java"
"android.os.Message.arg1","true","false","false","false","false","int","","","/**
 * arg1 and arg2 are lower-cost alternatives to using
 * {@link #setData(Bundle) setData()} if you only need to store a
 * few integer values.
 */
","\android\os\Message.java"
"android.os.Message.arg2","true","false","false","false","false","int","","","/**
 * arg1 and arg2 are lower-cost alternatives to using
 * {@link #setData(Bundle) setData()} if you only need to store a
 * few integer values.
 */
","\android\os\Message.java"
"android.os.Message.what","true","false","false","false","false","int","","","/**
 * User-defined message code so that the recipient can identify
 * what this message is about. Each {@link Handler} has its own name-space
 * for message codes, so you do not need to worry about yours conflicting
 * with other handlers.
 */
","\android\os\Message.java"
"android.os.Message.mPool","false","false","true","true","false","Message","","","","\android\os\Message.java"
"android.os.Message.obj","true","false","false","false","false","Object","","","/**
 * An arbitrary object to send to the recipient.  When using
 * {@link Messenger} to send the message across processes this can only
 * be non-null if it contains a Parcelable of a framework class (not one
 * implemented by the application).   For other data transfer use
 * {@link #setData}.
 *
 * <p>Note that Parcelable objects here are not supported prior to
 * the {@link android.os.Build.VERSION_CODES#FROYO} release.
 */
","\android\os\Message.java"
"android.os.Message.CREATOR","true","false","false","true","true","Parcelable.Creator<Message>","new Parcelable.Creator<Message>() {

    public Message createFromParcel(Parcel source) {
        Message msg = Message.obtain();
        msg.readFromParcel(source);
        return msg;
    }

    public Message[] newArray(int size) {
        return new Message[size];
    }
}","","","\android\os\Message.java"
"android.os.Message.MAX_POOL_SIZE","false","false","true","true","true","int","10","","","\android\os\Message.java"
"android.os.Message.next","false","false","false","false","false","Message","","","/*package*/
","\android\os\Message.java"
"android.os.Message.replyTo","true","false","false","false","false","Messenger","","","/**
 * Optional Messenger where replies to this message can be sent.  The
 * semantics of exactly how this is used are up to the sender and
 * receiver.
 */
","\android\os\Message.java"
"android.os.Message.when","false","false","false","false","false","long","","","/*package*/
","\android\os\Message.java"
"android.os.Message.callback","false","false","false","false","false","Runnable","","","/*package*/
","\android\os\Message.java"
"android.os.Message.mPoolSize","false","false","true","true","false","int","0","","","\android\os\Message.java"
"android.os.Message.data","false","false","false","false","false","Bundle","","","/*package*/
","\android\os\Message.java"
"android.os.Message.mPoolSync","false","false","true","true","false","Object","new Object()","","","\android\os\Message.java"
"android.os.Message.target","false","false","false","false","false","Handler","","","/*package*/
","\android\os\Message.java"
"android.text.DynamicLayout.TAB_MASK","false","false","true","true","true","int","0x20000000","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.START_MASK","false","false","true","true","true","int","0x1FFFFFFF","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mEllipsizedWidth","false","false","true","false","false","int","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.TOP","false","false","true","true","true","int","1","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.sLock","false","false","true","true","false","Object","new Object()","","","\android\text\DynamicLayout.java"
"android.text.ChangeWatcher.mLayout","false","false","true","false","false","WeakReference","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.DIR_MASK","false","false","true","true","true","int","0xC0000000","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.START","false","false","true","true","true","int","0","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mInts","false","false","true","false","false","PackedIntVector","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mTopPadding","false","false","true","false","false","int","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.sStaticLayout","false","false","true","true","false","StaticLayout","new StaticLayout(true)","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.ELLIPSIS_START","false","false","true","true","true","int","3","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mWatcher","false","false","true","false","false","ChangeWatcher","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.ELLIPSIS_UNDEFINED","false","false","true","true","true","int","0x80000000","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.DIR","false","false","true","true","true","int","START","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.ELLIPSIS_COUNT","false","false","true","true","true","int","4","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.COLUMNS_ELLIPSIZE","false","false","true","true","true","int","5","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mIncludePad","false","false","true","false","false","boolean","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.DESCENT","false","false","true","true","true","int","2","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mEllipsizeAt","false","false","true","false","false","TextUtils.TruncateAt","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.COLUMNS_NORMAL","false","false","true","true","true","int","3","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mDisplay","false","false","true","false","false","CharSequence","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mLayout","false","false","true","false","false","WeakReference","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mBase","false","false","true","false","false","CharSequence","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mEllipsize","false","false","true","false","false","boolean","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.mObjects","false","false","true","false","false","PackedObjectVector<Directions>","","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.DIR_SHIFT","false","false","true","true","true","int","30","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.TAB","false","false","true","true","true","int","START","","","\android\text\DynamicLayout.java"
"android.text.DynamicLayout.PRIORITY","false","false","true","true","true","int","128","","","\android\text\DynamicLayout.java"
"android.net.Proxy.DEBUG","false","false","true","true","true","boolean","false","","// Set to true to enable extra debugging.
","\android\net\Proxy.java"
"android.net.Proxy.PROXY_CHANGE_ACTION","true","false","false","true","true","String","""android.intent.action.PROXY_CHANGE""","","","\android\net\Proxy.java"
"android.net.SSLCertificateSocketFactory.mSecure","false","false","true","false","true","boolean","","","","\android\net\SSLCertificateSocketFactory.java"
"android.net.SSLCertificateSocketFactory.mSessionCache","false","false","true","false","true","SSLClientSessionCache","","","","\android\net\SSLCertificateSocketFactory.java"
"android.net.SSLCertificateSocketFactory.mHandshakeTimeoutMillis","false","false","true","false","true","int","","","","\android\net\SSLCertificateSocketFactory.java"
"android.net.SSLCertificateSocketFactory.INSECURE_TRUST_MANAGER","false","false","true","true","true","TrustManager","new TrustManager[] { new X509TrustManager() {

    public X509Certificate[] getAcceptedIssuers() {
        return null;
    }

    public void checkClientTrusted(X509Certificate[] certs, String authType) {
    }

    public void checkServerTrusted(X509Certificate[] certs, String authType) {
    }
} }","","","\android\net\SSLCertificateSocketFactory.java"
"android.net.SSLCertificateSocketFactory.mInsecureFactory","false","false","true","false","false","SSLSocketFactory","null","","","\android\net\SSLCertificateSocketFactory.java"
"android.net.SSLCertificateSocketFactory.mSecureFactory","false","false","true","false","false","SSLSocketFactory","null","","","\android\net\SSLCertificateSocketFactory.java"
"android.net.SSLCertificateSocketFactory.TAG","false","false","true","true","true","String","""SSLCertificateSocketFactory""","","","\android\net\SSLCertificateSocketFactory.java"
"android.ddm.DdmHandleExit.mInstance","false","false","true","true","false","DdmHandleExit","new DdmHandleExit()","","","\android\ddm\DdmHandleExit.java"
"android.ddm.DdmHandleExit.CHUNK_EXIT","true","false","false","true","true","int","type(""EXIT"")","","","\android\ddm\DdmHandleExit.java"
"android.net.http.CertificateChainValidator.sInstance","false","false","true","true","true","CertificateChainValidator","new CertificateChainValidator()","","/**
 * The singleton instance of the certificate chain validator
 */
","\android\net\http\CertificateChainValidator.java"
"android.widget.DateTimeView.mAttachedToWindow","false","false","true","false","false","boolean","","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.TAG","false","false","true","true","true","String","""DateTimeView""","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.mLastFormat","false","false","false","false","false","DateFormat","","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.SHOW_MONTH_DAY_YEAR","false","false","true","true","true","int","1","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.SHOW_TIME","false","false","true","true","true","int","0","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.mLastDisplay","false","false","false","false","false","int","-1","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.TWELVE_HOURS_IN_MINUTES","false","false","true","true","true","long","12 * 60","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.TWENTY_FOUR_HOURS_IN_MILLIS","false","false","true","true","true","long","24 * 60 * 60 * 1000","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.mBroadcastReceiver","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        String action = intent.getAction();
        if (Intent.ACTION_TIME_TICK.equals(action)) {
            if (System.currentTimeMillis() < mUpdateTimeMillis) {
                // every minute.
                return;
            }
        }
        // ACTION_TIME_CHANGED can also signal a change of 12/24 hr. format.
        mLastFormat = null;
        update();
    }
}","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.mUpdateTimeMillis","false","false","true","false","false","long","","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.mContentObserver","false","false","true","false","false","ContentObserver","new ContentObserver(new Handler()) {

    @Override
    public void onChange(boolean selfChange) {
        mLastFormat = null;
        update();
    }
}","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.mTimeMillis","false","false","false","false","false","long","","","","\android\widget\DateTimeView.java"
"android.widget.DateTimeView.mTime","false","false","false","false","false","Date","","","","\android\widget\DateTimeView.java"
"android.app.ListActivity.mHandler","false","false","true","false","false","Handler","new Handler()","","","\android\app\ListActivity.java"
"android.app.ListActivity.mRequestFocus","false","false","true","false","false","Runnable","new Runnable() {

    public void run() {
        mList.focusableViewAvailable(mList);
    }
}","","","\android\app\ListActivity.java"
"android.app.ListActivity.mAdapter","false","true","false","false","false","ListAdapter","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\app\ListActivity.java"
"android.app.ListActivity.mList","false","true","false","false","false","ListView","","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\app\ListActivity.java"
"android.app.ListActivity.mOnClickListener","false","false","true","false","false","AdapterView.OnItemClickListener","new AdapterView.OnItemClickListener() {

    public void onItemClick(AdapterView parent, View v, int position, long id) {
        onListItemClick((ListView) parent, v, position, id);
    }
}","","","\android\app\ListActivity.java"
"android.app.ListActivity.mFinishedStart","false","false","true","false","false","boolean","false","","","\android\app\ListActivity.java"
"android.os.LocalPowerManager.TOUCH_EVENT","true","false","false","true","true","int","2","","// touch events are TOUCH for 300ms, and then either
","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.POKE_LOCK_SHORT_TIMEOUT","true","false","false","true","true","int","0x2","","","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.POKE_LOCK_TIMEOUT_MASK","true","false","false","true","true","int","0x6","","","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.POKE_LOCK_IGNORE_CHEEK_EVENTS","true","false","false","true","true","int","0x1","","","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.LONG_TOUCH_EVENT","true","false","false","true","true","int","3","","// up events or LONG_TOUCH events.
","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.CHEEK_EVENT","true","false","false","true","true","int","1","","","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.BUTTON_EVENT","true","false","false","true","true","int","5","","// Button and trackball events.
","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.POKE_LOCK_MEDIUM_TIMEOUT","true","false","false","true","true","int","0x4","","","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.OTHER_EVENT","true","false","false","true","true","int","0","","","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.TOUCH_UP_EVENT","true","false","false","true","true","int","4","","","\android\os\LocalPowerManager.java"
"android.os.LocalPowerManager.POKE_LOCK_IGNORE_TOUCH_AND_CHEEK_EVENTS","true","false","false","true","true","int","0x8","","","\android\os\LocalPowerManager.java"
"android.app.backup.Header.chunkSize","false","false","false","false","false","int","","","// not including the header
","\android\app\backup\BackupHelperDispatcher.java"
"android.app.backup.BackupHelperDispatcher.TAG","false","false","true","true","true","String","""BackupHelperDispatcher""","","","\android\app\backup\BackupHelperDispatcher.java"
"android.app.backup.BackupHelperDispatcher.keyPrefix","false","false","false","false","false","String","","","","\android\app\backup\BackupHelperDispatcher.java"
"android.app.backup.BackupHelperDispatcher.chunkSize","false","false","false","false","false","int","","","// not including the header
","\android\app\backup\BackupHelperDispatcher.java"
"android.app.backup.Header.keyPrefix","false","false","false","false","false","String","","","","\android\app\backup\BackupHelperDispatcher.java"
"android.app.backup.BackupHelperDispatcher.mHelpers","false","false","false","false","false","TreeMap<String,BackupHelper>","new TreeMap<String, BackupHelper>()","","","\android\app\backup\BackupHelperDispatcher.java"
"android.provider.GroupMembership.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The row id of the person.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.XMPP","false","false","false","false","false","String","""XMPP""","","","\android\provider\Contacts.java"
"android.provider.Contacts.PROTOCOL_YAHOO","true","false","false","true","true","int","2","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupMembership.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""group_id ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.SKYPE","false","false","false","false","false","String","""SKYPE""","","","\android\provider\Contacts.java"
"android.provider.GroupsColumns.SYSTEM_ID","true","false","false","true","true","String","""system_id""","@Deprecated","/**
 * The ID of this group if it is a System Group, null otherwise.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.SettingsColumns.KEY","true","false","false","true","true","String","""key""","@Deprecated","/**
 * The key of this setting.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupMembership.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/contactsgroupmembership""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * person group.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.KIND_ORGANIZATION","true","false","false","true","true","int","4","@Deprecated","/**
 * Signifies an Organization row that is stored in the Organizations table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE_FAX_WORK","true","false","false","true","true","int","4","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.YAHOO","false","false","false","false","false","String","""Yahoo""","","// 
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.AVAILABLE","false","false","false","false","false","int","ContactsContract.StatusUpdates.AVAILABLE","","","\android\provider\Contacts.java"
"android.provider.Contacts.SYNC_ERROR","true","false","false","true","true","String","""sync_error""","@Deprecated","/**
 * Contains the description of the upload or download error from
 * the previous attempt. If null then the previous attempt succeeded.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.POSTAL","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL","@Deprecated","/**
 * The extra field for the contact postal address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.TYPE_CUSTOM","true","false","false","true","true","int","0","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Organizations.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""company, title, isprimary ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.FULL_MODE","true","false","false","true","true","String","ContactsContract.Intents.Insert.FULL_MODE","@Deprecated","/**
 * If present, forces a bypass of quick insert mode.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Phones.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The ID of the person this phone number is assigned to.
 * <P>Type: INTEGER (long)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE_TYPE","@Deprecated","/**
 * The extra field for the contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.AUTHORITY","true","false","false","true","true","String","""contacts""","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LIST_STARRED_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_STARRED_ACTION","@Deprecated","/**
 * The action for the starred contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.TERTIARY_PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_PHONE_TYPE","@Deprecated","/**
 * The extra field for an optional third contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The ID of the person this phone number is assigned to.
 * <P>Type: INTEGER (long)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.NOTES","true","false","false","true","true","String","""notes""","@Deprecated","/**
 * Notes about the person.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.ACTION","true","false","false","true","true","String","ContactsContract.Intents.Insert.ACTION","@Deprecated","/**
 * The action code to use when adding a contact
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.JOB_TITLE","true","false","false","true","true","String","ContactsContract.Intents.Insert.JOB_TITLE","@Deprecated","/**
 * The extra field for the contact job title.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Presence.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/presence"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Photos.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/photos"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.POSTAL_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL_ISPRIMARY","@Deprecated","/**
 * The extra field for the postal isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.DATA","true","false","false","true","true","String","""data""","@Deprecated","/**
 * The data for the contact method.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.PRIMARY_PHONE_ID","true","false","false","true","true","String","""primary_phone""","@Deprecated","/**
 * The ID of the persons preferred phone number.
 * <P>Type: INTEGER (foreign key to phones table on the _ID field)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Extensions.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/extensions"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The person this organization is tied to.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.LIST_STREQUENT_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_STREQUENT_ACTION","@Deprecated","/**
 * The action for the ""strequent"" contacts list tab. It first lists the starred
 * contacts in alphabetical order and then the frequent contacts in descending
 * order of the number of times they have been contacted.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/person""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * person.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.TERTIARY_PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_PHONE_TYPE","@Deprecated","/**
 * The extra field for an optional third contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.IM_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_ISPRIMARY","@Deprecated","/**
 * The extra field for the IM isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE_OTHER","true","false","false","true","true","int","2","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.SettingsColumns._SYNC_ACCOUNT","true","false","false","true","true","String","""_sync_account""","@Deprecated","/**
 * The _SYNC_ACCOUNT to which this setting corresponds. This may be null.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PHONE_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE_ISPRIMARY","@Deprecated","/**
 * The extra field for the phone isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Organizations.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/organizations"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.NOTES","true","false","false","true","true","String","ContactsContract.Intents.Insert.NOTES","@Deprecated","/**
 * The extra field for the contact notes.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupMembership.GROUP_ID","true","false","false","true","true","String","""group_id""","@Deprecated","/**
 * The row id of the accounts group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.TITLE_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.TITLE_EXTRA_KEY","@Deprecated","/**
 * A key for to be used as an intent extra to set the activity
 * title to a custom String value.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ExtensionsColumns.NAME","true","false","false","true","true","String","""name""","@Deprecated","/**
 * The name of this extension. May not be null. There may be at most one row for each name.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.IM_ACCOUNT","true","false","false","true","true","String","""im_account""","@Deprecated","/**
 * The IM account for the local user that the presence data came from.
 * <P>Type: STRING</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.QQ","false","false","false","false","false","String","""QQ""","","","\android\provider\Contacts.java"
"android.provider.Contacts.MOBILE_EMAIL_TYPE_INDEX","true","false","false","true","true","int","2","@Deprecated","/**
 * @hide This is temporal. TYPE_MOBILE should be added to TYPE in the future.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.JOB_TITLE","true","false","false","true","true","String","ContactsContract.Intents.Insert.JOB_TITLE","@Deprecated","/**
 * The extra field for the contact job title.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.EXTRA_TARGET_RECT","true","false","false","true","true","String","ContactsContract.Intents.EXTRA_TARGET_RECT","@Deprecated","/**
 * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to specify a
 * dialog location using screen coordinates. When not specified, the
 * dialog will be centered.
 *
 * @hide pending API council review
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupMembership.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/groupmembership"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.KIND","true","false","false","true","true","String","""kind""","@Deprecated","/**
 * The kind of the the contact method. For example, email address,
 * postal address, etc.
 * <P>Type: INTEGER (one of the values below)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE_CUSTOM","true","false","false","true","true","int","0","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_IM_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/jabber-im""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single
 * {@link Contacts#KIND_IM} entry.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.NOTES","true","false","false","true","true","String","ContactsContract.Intents.Insert.NOTES","@Deprecated","/**
 * The extra field for the contact notes.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SORT_STRING","true","false","false","true","true","String","""sort_string""","@Deprecated","/**
 * The field for sorting list phonetically. The content of this field
 * may not be human readable but phonetically sortable.
 * <P>Type: TEXT</p>
 * @hide Used only in Contacts application for now.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.NUMBER","true","false","false","true","true","String","""number""","@Deprecated","/**
 * The phone number as the user entered it.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE_MOBILE","true","false","false","true","true","int","2","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.LIST_DEFAULT","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_DEFAULT","@Deprecated","/**
 * The action for the default contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.POSTAL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL_TYPE","@Deprecated","/**
 * The extra field for the contact postal address type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupsColumns.NAME","true","false","false","true","true","String","""name""","@Deprecated","/**
 * The group name.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.EXTRA_CREATE_DESCRIPTION","true","false","false","true","true","String","ContactsContract.Intents.EXTRA_CREATE_DESCRIPTION","@Deprecated","/**
 * Used with {@link #SHOW_OR_CREATE_CONTACT} to specify an exact
 * description to be shown when prompting user about creating a new
 * contact.
 * <p>
 * Type: STRING
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE_CUSTOM","true","false","false","true","true","int","0","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.TYPE_WORK","true","false","false","true","true","int","2","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE_TYPE","@Deprecated","/**
 * The extra field for the contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.SORT_STRING","true","false","false","true","true","String","""sort_string""","@Deprecated","/**
 * The field for sorting list phonetically. The content of this field
 * may not be human readable but phonetically sortable.
 * <P>Type: TEXT</p>
 * @hide Used only in Contacts application for now.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.MOBILE_EMAIL_TYPE_NAME","true","false","false","true","true","String","""_AUTO_CELL""","@Deprecated","/**
 * @hide This is temporal. TYPE_MOBILE should be added to TYPE in the future.
 * This is not ""mobile"" but ""CELL"" since vCard uses it for identifying mobile phone.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PROTOCOL_AIM","true","false","false","true","true","int","0","@Deprecated","/**
 * The predefined IM protocol types. The protocol can either be non-present, one
 * of these types, or a free-form string. These cases are encoded in the AUX_DATA
 * column as:
 * - null
 * - pre:<an integer, one of the protocols below>
 * - custom:<a string>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LIST_ALL_CONTACTS_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_ALL_CONTACTS_ACTION","@Deprecated","/**
 * The action for the all contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.YAHOO","false","false","false","false","false","String","""Yahoo""","","// 
","\android\provider\Contacts.java"
"android.provider.Contacts.CUSTOM_RINGTONE","true","false","false","true","true","String","""custom_ringtone""","@Deprecated","/**
 * A custom ringtone associated with a person. Not always present.
 * <P>Type: TEXT (URI to the ringtone)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ExtensionsColumns.VALUE","true","false","false","true","true","String","""value""","@Deprecated","/**
 * The value of this extension. May not be null.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GROUP_ANDROID_STARRED","true","false","false","true","true","String","""Starred in Android""","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""name ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.NUMBER_KEY","true","false","false","true","true","String","""number_key""","@Deprecated","/**
 * The normalized phone number
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PROTOCOL_JABBER","true","false","false","true","true","int","7","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.EXTRA_TARGET_RECT","true","false","false","true","true","String","ContactsContract.Intents.EXTRA_TARGET_RECT","@Deprecated","/**
 * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to specify a
 * dialog location using screen coordinates. When not specified, the
 * dialog will be centered.
 *
 * @hide pending API council review
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.AWAY","false","false","false","false","false","int","ContactsContract.StatusUpdates.AWAY","","","\android\provider\Contacts.java"
"android.provider.Contacts.EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL","@Deprecated","/**
 * The extra field for the contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TERTIARY_PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_PHONE_TYPE","@Deprecated","/**
 * The extra field for an optional third contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_IM_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/jabber-im""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single
 * {@link Contacts#KIND_IM} entry.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SEND_TO_VOICEMAIL","true","false","false","true","true","String","""send_to_voicemail""","@Deprecated","/**
 * Whether the person should always be sent to voicemail. Not always
 * present.
 * <P>Type: INTEGER (0 for false, 1 for true)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.TYPE","true","false","false","true","true","String","""type""","@Deprecated","/**
 * The type of the contact method, must be one of the types below.
 * <P>Type: INTEGER (one of the values below)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.GTALK","false","false","false","false","false","String","""GTalk""","","","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/contact_extensions""","@Deprecated","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * phones.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.AIM","false","false","false","false","false","String","""AIM""","","","\android\provider\Contacts.java"
"android.provider.Contacts.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED","true","false","false","true","true","String","ContactsContract.Intents.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED","@Deprecated","/**
 * This is the intent that is fired when a search suggestion for dialing a number
 * is clicked on.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.TYPE","true","false","false","true","true","String","""type""","@Deprecated","/**
 * The type of the organizations.
 * <P>Type: INTEGER (one of the constants below)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.LABEL","true","false","false","true","true","String","""label""","@Deprecated","/**
 * The user provided label, only used if TYPE is TYPE_CUSTOM.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.ICQ","false","false","false","false","false","String","""ICQ""","","","\android\provider\Contacts.java"
"android.provider.GroupMembership.CONTENT_DIRECTORY","true","false","false","true","true","String","""groupmembership""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.EXISTS_ON_SERVER","true","false","false","true","true","String","""exists_on_server""","@Deprecated","/**
 * non-zero if this photo is known to exist on the server
 * <P>Type: INTEGER(boolean)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Settings.CONTENT_DIRECTORY","true","false","false","true","true","String","""settings""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.DO_NOT_DISTURB","false","false","false","false","false","int","ContactsContract.StatusUpdates.DO_NOT_DISTURB","","","\android\provider\Contacts.java"
"android.provider.Contacts.AVAILABLE","false","false","false","false","false","int","ContactsContract.StatusUpdates.AVAILABLE","","","\android\provider\Contacts.java"
"android.provider.Intents.LIST_STARRED_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_STARRED_ACTION","@Deprecated","/**
 * The action for the starred contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.STARRED","true","false","false","true","true","String","""starred""","@Deprecated","/**
 * Is the contact starred?
 * <P>Type: INTEGER (boolean)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL_TYPE","@Deprecated","/**
 * The extra field for the contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.SettingsColumns._SYNC_ACCOUNT_TYPE","true","false","false","true","true","String","""_sync_account_type""","@Deprecated","/**
 * The _SYNC_ACCOUNT_TYPE to which this setting corresponds. This may be null.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.SEND_TO_VOICEMAIL","true","false","false","true","true","String","""send_to_voicemail""","@Deprecated","/**
 * Whether the person should always be sent to voicemail. Not always
 * present.
 * <P>Type: INTEGER (0 for false, 1 for true)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Settings.SYNC_EVERYTHING","true","false","false","true","true","String","""syncEverything""","@Deprecated","/**
 * A setting that is used to indicate if we should sync down all groups for the
 * specified account. For this setting the _SYNC_ACCOUNT column must be set.
 * If this isn't set then we will only sync the groups whose SHOULD_SYNC column
 * is set to true.
 * <p>
 * This is a boolean setting. It is true if it is set and it is anything other than the
 * emptry string or ""0"".
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PRIMARY_EMAIL_ID","true","false","false","true","true","String","""primary_email""","@Deprecated","/**
 * The ID of the persons preferred email.
 * <P>Type: INTEGER (foreign key to contact_methods table on the
 * _ID field)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/contact_methods"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.RAW_CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/groupmembershipraw"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.IM_HANDLE","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_HANDLE","@Deprecated","/**
 * The extra field for an IM handle.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.AUX_DATA","true","false","false","true","true","String","""aux_data""","@Deprecated","/**
 * Auxiliary data for the contact method.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LIST_STREQUENT_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_STREQUENT_ACTION","@Deprecated","/**
 * The action for the ""strequent"" contacts list tab. It first lists the starred
 * contacts in alphabetical order and then the frequent contacts in descending
 * order of the number of times they have been contacted.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TAG","false","false","true","true","true","String","""Contacts""","","","\android\provider\Contacts.java"
"android.provider.Extensions.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/contact_extensions""","@Deprecated","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * phones.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.POSTAL_LOCATION_LONGITUDE","true","false","false","true","true","String","AUX_DATA","@Deprecated","/**
 * The column with longitude data for postal locations
 * <P>Type: REAL</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.LIST_GROUP_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_GROUP_ACTION","@Deprecated","/**
 * The action for the contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.FULL_MODE","true","false","false","true","true","String","ContactsContract.Intents.Insert.FULL_MODE","@Deprecated","/**
 * If present, forces a bypass of quick insert mode.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE","@Deprecated","/**
 * The extra field for the contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PROTOCOL_AIM","true","false","false","true","true","int","0","@Deprecated","/**
 * The predefined IM protocol types. The protocol can either be non-present, one
 * of these types, or a free-form string. These cases are encoded in the AUX_DATA
 * column as:
 * - null
 * - pre:<an integer, one of the protocols below>
 * - custom:<a string>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.MSN","false","false","false","false","false","String","""MSN""","","","\android\provider\Contacts.java"
"android.provider.Contacts.EXTRA_CREATE_DESCRIPTION","true","false","false","true","true","String","ContactsContract.Intents.EXTRA_CREATE_DESCRIPTION","@Deprecated","/**
 * Used with {@link #SHOW_OR_CREATE_CONTACT} to specify an exact
 * description to be shown when prompting user about creating a new
 * contact.
 * <p>
 * Type: STRING
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_DIRECTORY","true","false","false","true","true","String","""contact_methods""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupMembership.GROUP_SYNC_ACCOUNT","true","false","false","true","true","String","""group_sync_account""","@Deprecated","/**
 * The account of the group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Phones.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""name ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE","@Deprecated","/**
 * The extra field for the contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.CUSTOM_RINGTONE","true","false","false","true","true","String","""custom_ringtone""","@Deprecated","/**
 * A custom ringtone associated with a person. Not always present.
 * <P>Type: TEXT (URI to the ringtone)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.SECONDARY_PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_PHONE","@Deprecated","/**
 * The extra field for an optional second contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.WITH_EMAIL_OR_IM_FILTER_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/people/with_email_or_im_filter"")","@Deprecated","/**
 * The content:// style URL for filtering people that have a specific
 * E-mail or IM address. The filter argument should be passed as an
 * additional path segment after this URI. This matches any people with
 * at least one E-mail or IM {@link ContactMethods} that match the
 * filter.
 *
 * Not exposed because we expect significant changes in the contacts
 * schema and do not want to have to support this.
 * @hide
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GROUP_NAME_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.GROUP_NAME_EXTRA_KEY","@Deprecated","/**
 * When in LIST_GROUP_ACTION mode, this is the group to display.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.OFFLINE","false","false","false","false","false","int","ContactsContract.StatusUpdates.OFFLINE","","/**
 * Presence Status definition
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE_WORK","true","false","false","true","true","int","1","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.IM_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_ISPRIMARY","@Deprecated","/**
 * The extra field for the IM isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.COMPANY","true","false","false","true","true","String","ContactsContract.Intents.Insert.COMPANY","@Deprecated","/**
 * The extra field for the contact company.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.NAME","true","false","false","true","true","String","""name""","@Deprecated","/**
 * The person's name.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.PHONETIC_NAME","true","false","false","true","true","String","""phonetic_name""","@Deprecated","/**
 * Phonetic equivalent of the person's name, in a locale-dependent
 * character set (e.g. hiragana for Japanese).
 * Used for pronunciation and/or collation in some languages.
 * <p>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.TITLE_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.TITLE_EXTRA_KEY","@Deprecated","/**
 * A key for to be used as an intent extra to set the activity
 * title to a custom String value.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.TERTIARY_EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_EMAIL_TYPE","@Deprecated","/**
 * The extra field for an optional third contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.PRESENCE_CUSTOM_STATUS","false","false","false","false","false","String","ContactsContract.StatusUpdates.STATUS","","/**
 * The user defined status line.
 * <P>Type: TEXT</P>
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE_OTHER","true","false","false","true","true","int","7","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.VALUE","true","false","false","true","true","String","""value""","@Deprecated","/**
 * The value of this extension. May not be null.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.FILTER_CONTACTS_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.FILTER_CONTACTS_ACTION","@Deprecated","/**
 * Activity Action: Display a filtered list of contacts
 * <p>
 * Input: Extra field {@link #FILTER_TEXT_EXTRA_KEY} is the text to use for
 * filtering
 * <p>
 * Output: Nothing.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Photos.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""person ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PROTOCOL_GOOGLE_TALK","true","false","false","true","true","int","5","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhotosColumns.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The person this photo is associated with.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LABEL","true","false","false","true","true","String","""label""","@Deprecated","/**
 * The user provided label, only used if TYPE is TYPE_CUSTOM.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Phones.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/phone""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * phone.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.JOB_TITLE","true","false","false","true","true","String","ContactsContract.Intents.Insert.JOB_TITLE","@Deprecated","/**
 * The extra field for the contact job title.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PROTOCOL_JABBER","true","false","false","true","true","int","7","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.ISPRIMARY","true","false","false","true","true","String","""isprimary""","@Deprecated","/**
 * Whether this is the primary organization
 * <P>Type: INTEGER (if set, non-0 means true)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.POSTAL_LOCATION_LATITUDE","true","false","false","true","true","String","DATA","@Deprecated","/**
 * The column with latitude data for postal locations
 * <P>Type: REAL</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.POSTAL_LOCATION_LONGITUDE","true","false","false","true","true","String","AUX_DATA","@Deprecated","/**
 * The column with longitude data for postal locations
 * <P>Type: REAL</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL_TYPE","@Deprecated","/**
 * The extra field for the contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PRESENCE_STATUS","false","false","false","false","false","String","ContactsContract.StatusUpdates.PRESENCE","","/**
 * The server defined status.
 * <P>Type: INTEGER (one of the values below)</P>
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.OFFLINE","false","false","false","false","false","int","ContactsContract.StatusUpdates.OFFLINE","","/**
 * Presence Status definition
 */
","\android\provider\Contacts.java"
"android.provider.Intents.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED","true","false","false","true","true","String","ContactsContract.Intents.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED","@Deprecated","/**
 * This is the intent that is fired when a search suggestion for creating a contact
 * is clicked on.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL","@Deprecated","/**
 * The extra field for the contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GROUP_ID","true","false","false","true","true","String","""group_id""","@Deprecated","/**
 * The row id of the accounts group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.JABBER","false","false","false","false","false","String","""JABBER""","","","\android\provider\Contacts.java"
"android.provider.Contacts.JABBER","false","false","false","false","false","String","""JABBER""","","","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_POSTAL_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/postal-address""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_EMAIL_URI} sub-directory of
 * multiple {@link Contacts#KIND_POSTAL} entries.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE_MOBILE","true","false","false","true","true","int","2","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.NUMBER","true","false","false","true","true","String","""number""","@Deprecated","/**
 * The phone number as the user entered it.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.INVISIBLE","false","false","false","false","false","int","ContactsContract.StatusUpdates.INVISIBLE","","","\android\provider\Contacts.java"
"android.provider.Contacts.EMAIL_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL_ISPRIMARY","@Deprecated","/**
 * The extra field for the email isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.DOWNLOAD_REQUIRED","true","false","false","true","true","String","""download_required""","@Deprecated","/**
 * non-zero if a download is required and the photo isn't marked as a bad resource.
 * You must specify this in the columns in order to use it in the where clause.
 * <P>Type: INTEGER(boolean)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SECONDARY_EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_EMAIL","@Deprecated","/**
 * The extra field for an optional second contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.ATTACH_IMAGE","true","false","false","true","true","String","ContactsContract.Intents.ATTACH_IMAGE","@Deprecated","/**
 * Starts an Activity that lets the user pick a contact to attach an image to.
 * After picking the contact it launches the image cropper in face detection mode.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.EXTRA_FORCE_CREATE","true","false","false","true","true","String","ContactsContract.Intents.EXTRA_FORCE_CREATE","@Deprecated","/**
 * Used with {@link #SHOW_OR_CREATE_CONTACT} to force creating a new
 * contact if no matching contact found. Otherwise, default behavior is
 * to prompt user with dialog before creating.
 * <p>
 * Type: BOOLEAN
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The ID of the person this phone number is assigned to.
 * <P>Type: INTEGER (long)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.AUX_DATA","true","false","false","true","true","String","""aux_data""","@Deprecated","/**
 * Auxiliary data for the contact method.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE_HOME","true","false","false","true","true","int","1","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.STARRED","true","false","false","true","true","String","""starred""","@Deprecated","/**
 * Is the contact starred?
 * <P>Type: INTEGER (boolean)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupMembership.RAW_CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/groupmembershipraw"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PROTOCOL_QQ","true","false","false","true","true","int","4","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.ACTION","true","false","false","true","true","String","ContactsContract.Intents.Insert.ACTION","@Deprecated","/**
 * The action code to use when adding a contact
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SHOULD_SYNC","true","false","false","true","true","String","""should_sync""","@Deprecated","/**
 * Whether this group should be synced if the SYNC_EVERYTHING settings is false
 * for this group's account.
 * <P>Type: INTEGER (boolean)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SEARCH_SUGGESTION_CLICKED","true","false","false","true","true","String","ContactsContract.Intents.SEARCH_SUGGESTION_CLICKED","@Deprecated","/**
 * This is the intent that is fired when a search suggestion is clicked on.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Phones.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/phone""","@Deprecated","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * phones.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_FILTER_URL","true","false","false","true","true","Uri","Uri.parse(""content://contacts/phones/filter"")","@Deprecated","/**
 * The content:// style URL for filtering phone numbers
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.SECONDARY_PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_PHONE_TYPE","@Deprecated","/**
 * The extra field for an optional second contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.PHONETIC_NAME","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONETIC_NAME","@Deprecated","/**
 * The extra field for the contact phonetic name.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/people/filter"")","@Deprecated","/**
 * The content:// style URL for filtering people by name. The filter
 * argument should be passed as an additional path segment after this URI.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.TIMES_CONTACTED","true","false","false","true","true","String","""times_contacted""","@Deprecated","/**
 * The number of times a person has been contacted
 * <P>Type: INTEGER</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PHONETIC_NAME","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONETIC_NAME","@Deprecated","/**
 * The extra field for the contact phonetic name.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GROUPS_PROJECTION","false","false","true","true","true","String","new String[] { Groups._ID }","","","\android\provider\Contacts.java"
"android.provider.Phones.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/phones"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The ID of the person this contact method is assigned to.
 * <P>Type: INTEGER (long)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE_FAX_WORK","true","false","false","true","true","int","4","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/contact_extensions""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * phone.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.PRIORITY","false","false","false","false","false","String","""priority""","","/**
 * The priority, an integer, used by XMPP presence
 * <P>Type: INTEGER</P>
 */
","\android\provider\Contacts.java"
"android.provider.Intents.NAME","true","false","false","true","true","String","ContactsContract.Intents.Insert.NAME","@Deprecated","/**
 * The extra field for the contact name.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_POSTAL_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/postal-address""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single
 * {@link Contacts#KIND_POSTAL} entry.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED","true","false","false","true","true","String","ContactsContract.Intents.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED","@Deprecated","/**
 * This is the intent that is fired when a search suggestion for dialing a number
 * is clicked on.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts._SYNC_ACCOUNT","true","false","false","true","true","String","""_sync_account""","@Deprecated","/**
 * The _SYNC_ACCOUNT to which this setting corresponds. This may be null.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.MSN","false","false","false","false","false","String","""MSN""","","","\android\provider\Contacts.java"
"android.provider.Contacts.IM_HANDLE","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_HANDLE","@Deprecated","/**
 * The extra field for an IM handle.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_EMAIL_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/email""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single
 * {@link Contacts#KIND_EMAIL} entry.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.SECONDARY_EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_EMAIL_TYPE","@Deprecated","/**
 * The extra field for an optional second contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Extensions.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/contact_extensions""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * phone.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts._SYNC_ACCOUNT_TYPE","true","false","false","true","true","String","""_sync_account_type""","@Deprecated","/**
 * The _SYNC_ACCOUNT_TYPE to which this setting corresponds. This may be null.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.TERTIARY_PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_PHONE","@Deprecated","/**
 * The extra field for an optional third contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GROUP_SYNC_ID","true","false","false","true","true","String","""group_sync_id""","@Deprecated","/**
 * The sync id of the group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TERTIARY_EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_EMAIL","@Deprecated","/**
 * The extra field for an optional third contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.GROUP_NAME_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.GROUP_NAME_EXTRA_KEY","@Deprecated","/**
 * When in LIST_GROUP_ACTION mode, this is the group to display.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.MSN","false","false","false","false","false","String","""MSN""","","","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.COMPANY","true","false","false","true","true","String","""company""","@Deprecated","/**
 * The name of the company for this organization.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.POSTAL_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL_ISPRIMARY","@Deprecated","/**
 * The extra field for the postal isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.TERTIARY_PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_PHONE","@Deprecated","/**
 * The extra field for an optional third contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SECONDARY_PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_PHONE_TYPE","@Deprecated","/**
 * The extra field for an optional second contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.IM_PROTOCOL","true","false","false","true","true","String","""im_protocol""","@Deprecated","/**
 * The IM service the presence is coming from. Formatted using either
 * {@link Contacts.ContactMethods#encodePredefinedImProtocol} or
 * {@link Contacts.ContactMethods#encodeCustomImProtocol}.
 * <P>Type: STRING</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TIMES_CONTACTED","true","false","false","true","true","String","""times_contacted""","@Deprecated","/**
 * The number of times a person has been contacted
 * <P>Type: INTEGER</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.FILTER_CONTACTS_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.FILTER_CONTACTS_ACTION","@Deprecated","/**
 * Activity Action: Display a filtered list of contacts
 * <p>
 * Input: Extra field {@link #FILTER_TEXT_EXTRA_KEY} is the text to use for
 * filtering
 * <p>
 * Output: Nothing.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupMembership.GROUP_SYNC_ID","true","false","false","true","true","String","""group_sync_id""","@Deprecated","/**
 * The sync id of the group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.DELETED_CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/deleted_people"")","@Deprecated","/**
 * The content:// style URL for the table that holds the deleted
 * contacts.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.LIST_CONTACTS_WITH_PHONES_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_CONTACTS_WITH_PHONES_ACTION","@Deprecated","/**
 * The action for the contacts with phone numbers list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SYNC_EVERYTHING","true","false","false","true","true","String","""syncEverything""","@Deprecated","/**
 * A setting that is used to indicate if we should sync down all groups for the
 * specified account. For this setting the _SYNC_ACCOUNT column must be set.
 * If this isn't set then we will only sync the groups whose SHOULD_SYNC column
 * is set to true.
 * <p>
 * This is a boolean setting. It is true if it is set and it is anything other than the
 * emptry string or ""0"".
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.LIST_ALL_CONTACTS_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_ALL_CONTACTS_ACTION","@Deprecated","/**
 * The action for the all contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.LABEL","true","false","false","true","true","String","""label""","@Deprecated","/**
 * The user provided label for the phone number, only used if TYPE is TYPE_CUSTOM.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.ICQ","false","false","false","false","false","String","""ICQ""","","","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.TITLE","true","false","false","true","true","String","""title""","@Deprecated","/**
 * The title within this organization.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PROTOCOL_ICQ","true","false","false","true","true","int","6","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LAST_TIME_CONTACTED","true","false","false","true","true","String","""last_time_contacted""","@Deprecated","/**
 * The last time a person was contacted.
 * <P>Type: INTEGER</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/people/filter"")","@Deprecated","/**
 * The content:// style URL for filtering people by name. The filter
 * argument should be passed as an additional path segment after this URI.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE","@Deprecated","/**
 * The extra field for the contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhotosColumns.EXISTS_ON_SERVER","true","false","false","true","true","String","""exists_on_server""","@Deprecated","/**
 * non-zero if this photo is known to exist on the server
 * <P>Type: INTEGER(boolean)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.PHOTO_VERSION","true","false","false","true","true","String","""photo_version""","@Deprecated","/**
 * The server version of the photo
 * <P>Type: TEXT (the version number portion of the photo URI)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_POSTAL_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/postal-address""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single
 * {@link Contacts#KIND_POSTAL} entry.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL_TYPE","@Deprecated","/**
 * The extra field for the contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Phones.CONTENT_DIRECTORY","true","false","false","true","true","String","""phones""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.POSTAL_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL_ISPRIMARY","@Deprecated","/**
 * The extra field for the postal isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED","true","false","false","true","true","String","ContactsContract.Intents.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED","@Deprecated","/**
 * This is the intent that is fired when a search suggestion for creating a contact
 * is clicked on.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SHOW_OR_CREATE_CONTACT","true","false","false","true","true","String","ContactsContract.Intents.SHOW_OR_CREATE_CONTACT","@Deprecated","/**
 * Takes as input a data URI with a mailto: or tel: scheme. If a single
 * contact exists with the given data it will be shown. If no contact
 * exists, a dialog will ask the user if they want to create a new
 * contact with the provided details filled in. If multiple contacts
 * share the data the user will be prompted to pick which contact they
 * want to view.
 * <p>
 * For <code>mailto:</code> URIs, the scheme specific portion must be a
 * raw email address, such as one built using
 * {@link Uri#fromParts(String, String, String)}.
 * <p>
 * For <code>tel:</code> URIs, the scheme specific portion is compared
 * to existing numbers using the standard caller ID lookup algorithm.
 * The number must be properly encoded, for example using
 * {@link Uri#fromParts(String, String, String)}.
 * <p>
 * Any extras from the {@link Insert} class will be passed along to the
 * create activity if there are no contacts to show.
 * <p>
 * Passing true for the {@link #EXTRA_FORCE_CREATE} extra will skip
 * prompting the user when the contact doesn't exist.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.IM_PROTOCOL","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_PROTOCOL","@Deprecated","/**
 * The extra field for the IM protocol
 * <P>Type: the result of {@link Contacts.ContactMethods#encodePredefinedImProtocol}
 * or {@link Contacts.ContactMethods#encodeCustomImProtocol}.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.PHONE_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE_ISPRIMARY","@Deprecated","/**
 * The extra field for the phone isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.AIM","false","false","false","false","false","String","""AIM""","","","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.MOBILE_EMAIL_TYPE_INDEX","true","false","false","true","true","int","2","@Deprecated","/**
 * @hide This is temporal. TYPE_MOBILE should be added to TYPE in the future.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.POSTAL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL_TYPE","@Deprecated","/**
 * The extra field for the contact postal address type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Groups.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/contactsgroup""","@Deprecated","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * groups.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Groups.GROUP_MY_CONTACTS","true","false","false","true","true","String","""Contacts""","@Deprecated","/**
 * The ""My Contacts"" system group.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupMembership.GROUP_SYNC_ACCOUNT_TYPE","true","false","false","true","true","String","""group_sync_account_type""","@Deprecated","/**
 * The account type of the group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.IM_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_ISPRIMARY","@Deprecated","/**
 * The extra field for the IM isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.TYPE_CUSTOM","true","false","false","true","true","int","0","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.POSTAL","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL","@Deprecated","/**
 * The extra field for the contact postal address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.IDLE","false","false","false","false","false","int","ContactsContract.StatusUpdates.IDLE","","","\android\provider\Contacts.java"
"android.provider.PeopleColumns.LAST_TIME_CONTACTED","true","false","false","true","true","String","""last_time_contacted""","@Deprecated","/**
 * The last time a person was contacted.
 * <P>Type: INTEGER</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhotosColumns.DOWNLOAD_REQUIRED","true","false","false","true","true","String","""download_required""","@Deprecated","/**
 * non-zero if a download is required and the photo isn't marked as a bad resource.
 * You must specify this in the columns in order to use it in the where clause.
 * <P>Type: INTEGER(boolean)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Phones.CONTENT_FILTER_URL","true","false","false","true","true","Uri","Uri.parse(""content://contacts/phones/filter"")","@Deprecated","/**
 * The content:// style URL for filtering phone numbers
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhotosColumns.SYNC_ERROR","true","false","false","true","true","String","""sync_error""","@Deprecated","/**
 * Contains the description of the upload or download error from
 * the previous attempt. If null then the previous attempt succeeded.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LIST_CONTACTS_WITH_PHONES_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_CONTACTS_WITH_PHONES_ACTION","@Deprecated","/**
 * The action for the contacts with phone numbers list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE_FAX_HOME","true","false","false","true","true","int","5","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.GROUPS_PROJECTION","false","false","true","true","true","String","new String[] { Groups._ID }","","","\android\provider\Contacts.java"
"android.provider.Contacts.TITLE","true","false","false","true","true","String","""title""","@Deprecated","/**
 * The title within this organization.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.PHONE_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE_ISPRIMARY","@Deprecated","/**
 * The extra field for the phone isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.WITH_EMAIL_OR_IM_FILTER_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/people/with_email_or_im_filter"")","@Deprecated","/**
 * The content:// style URL for filtering people that have a specific
 * E-mail or IM address. The filter argument should be passed as an
 * additional path segment after this URI. This matches any people with
 * at least one E-mail or IM {@link ContactMethods} that match the
 * filter.
 *
 * Not exposed because we expect significant changes in the contacts
 * schema and do not want to have to support this.
 * @hide
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PROTOCOL_SKYPE","true","false","false","true","true","int","3","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.GROUP_NAME_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.GROUP_NAME_EXTRA_KEY","@Deprecated","/**
 * When in LIST_GROUP_ACTION mode, this is the group to display.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SYSTEM_ID","true","false","false","true","true","String","""system_id""","@Deprecated","/**
 * The ID of this group if it is a System Group, null otherwise.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.TYPE_OTHER","true","false","false","true","true","int","3","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.NOTES","true","false","false","true","true","String","ContactsContract.Intents.Insert.NOTES","@Deprecated","/**
 * The extra field for the contact notes.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Presence.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The ID of the person this presence item is assigned to.
 * <P>Type: INTEGER (long)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.KIND","true","false","false","true","true","String","""kind""","@Deprecated","/**
 * The kind of the the contact method. For example, email address,
 * postal address, etc.
 * <P>Type: INTEGER (one of the values below)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.SHOW_OR_CREATE_CONTACT","true","false","false","true","true","String","ContactsContract.Intents.SHOW_OR_CREATE_CONTACT","@Deprecated","/**
 * Takes as input a data URI with a mailto: or tel: scheme. If a single
 * contact exists with the given data it will be shown. If no contact
 * exists, a dialog will ask the user if they want to create a new
 * contact with the provided details filled in. If multiple contacts
 * share the data the user will be prompted to pick which contact they
 * want to view.
 * <p>
 * For <code>mailto:</code> URIs, the scheme specific portion must be a
 * raw email address, such as one built using
 * {@link Uri#fromParts(String, String, String)}.
 * <p>
 * For <code>tel:</code> URIs, the scheme specific portion is compared
 * to existing numbers using the standard caller ID lookup algorithm.
 * The number must be properly encoded, for example using
 * {@link Uri#fromParts(String, String, String)}.
 * <p>
 * Any extras from the {@link Insert} class will be passed along to the
 * create activity if there are no contacts to show.
 * <p>
 * Passing true for the {@link #EXTRA_FORCE_CREATE} extra will skip
 * prompting the user when the contact doesn't exist.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.XMPP","false","false","false","false","false","String","""XMPP""","","","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_EMAIL_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/email""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single
 * {@link Contacts#KIND_EMAIL} entry.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.XMPP","false","false","false","false","false","String","""XMPP""","","","\android\provider\Contacts.java"
"android.provider.Intents.COMPANY","true","false","false","true","true","String","ContactsContract.Intents.Insert.COMPANY","@Deprecated","/**
 * The extra field for the contact company.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PROTOCOL_YAHOO","true","false","false","true","true","int","2","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PROTOCOL_ICQ","true","false","false","true","true","int","6","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.PRIMARY_EMAIL_ID","true","false","false","true","true","String","""primary_email""","@Deprecated","/**
 * The ID of the persons preferred email.
 * <P>Type: INTEGER (foreign key to contact_methods table on the
 * _ID field)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.DATA","true","false","false","true","true","String","""data""","@Deprecated","/**
 * The image data, or null if there is no image.
 * <P>Type: BLOB</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.FILTER_CONTACTS_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.FILTER_CONTACTS_ACTION","@Deprecated","/**
 * Activity Action: Display a filtered list of contacts
 * <p>
 * Input: Extra field {@link #FILTER_TEXT_EXTRA_KEY} is the text to use for
 * filtering
 * <p>
 * Output: Nothing.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Groups.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/contactsgroup""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * group.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.ISPRIMARY","true","false","false","true","true","String","""isprimary""","@Deprecated","/**
 * Whether this is the primary phone number
 * <P>Type: INTEGER (if set, non-0 means true)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.ACTION","true","false","false","true","true","String","ContactsContract.Intents.Insert.ACTION","@Deprecated","/**
 * The action code to use when adding a contact
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.KIND_PHONE","true","false","false","true","true","int","5","@Deprecated","/**
 * Signifies an Phone row that is stored in the Phones table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/extensions"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.KIND_EMAIL","true","false","false","true","true","int","1","@Deprecated","/**
 * Signifies an email address row that is stored in the ContactMethods table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LIST_FREQUENT_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_FREQUENT_ACTION","@Deprecated","/**
 * The action for the frequent contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Groups.GROUP_ANDROID_STARRED","true","false","false","true","true","String","""Starred in Android""","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.DO_NOT_DISTURB","false","false","false","false","false","int","ContactsContract.StatusUpdates.DO_NOT_DISTURB","","","\android\provider\Contacts.java"
"android.provider.Insert.POSTAL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL_TYPE","@Deprecated","/**
 * The extra field for the contact postal address type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GROUP_MY_CONTACTS","true","false","false","true","true","String","""Contacts""","@Deprecated","/**
 * The ""My Contacts"" system group.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/person""","@Deprecated","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * people.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LIST_DEFAULT","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_DEFAULT","@Deprecated","/**
 * The action for the default contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SKYPE","false","false","false","false","false","String","""SKYPE""","","","\android\provider\Contacts.java"
"android.provider.Insert.SECONDARY_PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_PHONE","@Deprecated","/**
 * The extra field for an optional second contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.LIST_DEFAULT","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_DEFAULT","@Deprecated","/**
 * The action for the default contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PRESENCE_CUSTOM_STATUS","false","false","false","false","false","String","ContactsContract.StatusUpdates.STATUS","","/**
 * The user defined status line.
 * <P>Type: TEXT</P>
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.ICQ","false","false","false","false","false","String","""ICQ""","","","\android\provider\Contacts.java"
"android.provider.Contacts.LOCAL_VERSION","true","false","false","true","true","String","""local_version""","@Deprecated","/**
 * The _SYNC_VERSION of the photo that was last downloaded
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.FILTER_TEXT_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.FILTER_TEXT_EXTRA_KEY","@Deprecated","/**
 * Used as an int extra field in {@link #FILTER_CONTACTS_ACTION}
 * intents to supply the text on which to filter.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.PHONETIC_NAME","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONETIC_NAME","@Deprecated","/**
 * The extra field for the contact phonetic name.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.EMAIL_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL_ISPRIMARY","@Deprecated","/**
 * The extra field for the email isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.MOBILE_EMAIL_TYPE_NAME","true","false","false","true","true","String","""_AUTO_CELL""","@Deprecated","/**
 * @hide This is temporal. TYPE_MOBILE should be added to TYPE in the future.
 * This is not ""mobile"" but ""CELL"" since vCard uses it for identifying mobile phone.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.ISPRIMARY","true","false","false","true","true","String","""isprimary""","@Deprecated","/**
 * Whether this is the primary organization
 * <P>Type: INTEGER (if set, non-0 means true)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.FILTER_TEXT_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.FILTER_TEXT_EXTRA_KEY","@Deprecated","/**
 * Used as an int extra field in {@link #FILTER_CONTACTS_ACTION}
 * intents to supply the text on which to filter.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.QQ","false","false","false","false","false","String","""QQ""","","","\android\provider\Contacts.java"
"android.provider.Intents.SEARCH_SUGGESTION_CLICKED","true","false","false","true","true","String","ContactsContract.Intents.SEARCH_SUGGESTION_CLICKED","@Deprecated","/**
 * This is the intent that is fired when a search suggestion is clicked on.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PROTOCOL_MSN","true","false","false","true","true","int","1","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.GTALK","false","false","false","false","false","String","""GTalk""","","","\android\provider\Contacts.java"
"android.provider.Contacts.ISPRIMARY","true","false","false","true","true","String","""isprimary""","@Deprecated","/**
 * Whether this is the primary organization
 * <P>Type: INTEGER (if set, non-0 means true)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_EMAIL_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/contact_methods/email"")","@Deprecated","/**
 * The content:// style URL for sub-directory of e-mail addresses.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.TYPE_HOME","true","false","false","true","true","int","1","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Groups.DELETED_CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/deleted_groups"")","@Deprecated","/**
 * The content:// style URL for the table that holds the deleted
 * groups.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TERTIARY_EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_EMAIL_TYPE","@Deprecated","/**
 * The extra field for an optional third contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GTALK","false","false","false","false","false","String","""GTalk""","","","\android\provider\Contacts.java"
"android.provider.GroupMembership.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/contactsgroupmembership""","@Deprecated","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of all
 * person groups.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhotosColumns.DATA","true","false","false","true","true","String","""data""","@Deprecated","/**
 * The image data, or null if there is no image.
 * <P>Type: BLOB</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.PRESENCE_STATUS","false","false","false","false","false","String","ContactsContract.StatusUpdates.PRESENCE","","/**
 * The server defined status.
 * <P>Type: INTEGER (one of the values below)</P>
 */
","\android\provider\Contacts.java"
"android.provider.Insert.IM_HANDLE","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_HANDLE","@Deprecated","/**
 * The extra field for an IM handle.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/people"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.EMAIL_ISPRIMARY","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL_ISPRIMARY","@Deprecated","/**
 * The extra field for the email isprimary flag.
 * <P>Type: boolean</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Photos.CONTENT_DIRECTORY","true","false","false","true","true","String","""photo""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.SKYPE","false","false","false","false","false","String","""SKYPE""","","","\android\provider\Contacts.java"
"android.provider.Insert.SECONDARY_EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_EMAIL","@Deprecated","/**
 * The extra field for an optional second contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.LIST_STREQUENT_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_STREQUENT_ACTION","@Deprecated","/**
 * The action for the ""strequent"" contacts list tab. It first lists the starred
 * contacts in alphabetical order and then the frequent contacts in descending
 * order of the number of times they have been contacted.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.FULL_MODE","true","false","false","true","true","String","ContactsContract.Intents.Insert.FULL_MODE","@Deprecated","/**
 * If present, forces a bypass of quick insert mode.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.NAME","true","false","false","true","true","String","ContactsContract.Intents.Insert.NAME","@Deprecated","/**
 * The extra field for the contact name.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.POSTAL_LOCATION_LATITUDE","true","false","false","true","true","String","DATA","@Deprecated","/**
 * The column with latitude data for postal locations
 * <P>Type: REAL</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.IM_PROTOCOL","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_PROTOCOL","@Deprecated","/**
 * The extra field for the IM protocol
 * <P>Type: the result of {@link Contacts.ContactMethods#encodePredefinedImProtocol}
 * or {@link Contacts.ContactMethods#encodeCustomImProtocol}.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GROUP_SYNC_ACCOUNT_TYPE","true","false","false","true","true","String","""group_sync_account_type""","@Deprecated","/**
 * The account type of the group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PROTOCOL_SKYPE","true","false","false","true","true","int","3","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.LIST_FREQUENT_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_FREQUENT_ACTION","@Deprecated","/**
 * The action for the frequent contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.ATTACH_IMAGE","true","false","false","true","true","String","ContactsContract.Intents.ATTACH_IMAGE","@Deprecated","/**
 * Starts an Activity that lets the user pick a contact to attach an image to.
 * After picking the contact it launches the image cropper in face detection mode.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TERTIARY_PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_PHONE","@Deprecated","/**
 * The extra field for an optional third contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE","true","false","false","true","true","String","""type""","@Deprecated","/**
 * The type of the organizations.
 * <P>Type: INTEGER (one of the constants below)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Extensions.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""person, name ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_EMAIL_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/email""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_EMAIL_URI} sub-directory of
 * multiple {@link Contacts#KIND_EMAIL} entries.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PROTOCOL_QQ","true","false","false","true","true","int","4","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PRIMARY_PHONE_ID","true","false","false","true","true","String","""primary_phone""","@Deprecated","/**
 * The ID of the persons preferred phone number.
 * <P>Type: INTEGER (foreign key to phones table on the _ID field)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethodsColumns.LABEL","true","false","false","true","true","String","""label""","@Deprecated","/**
 * The user defined label for the the contact method.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.IM_HANDLE","true","false","false","true","true","String","""im_handle""","@Deprecated","/**
 * The IM handle the presence item is for. The handle is scoped to
 * the {@link #IM_PROTOCOL}.
 * <P>Type: STRING</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SECONDARY_PHONE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_PHONE","@Deprecated","/**
 * The extra field for an optional second contact phone number.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.GroupsColumns.SHOULD_SYNC","true","false","false","true","true","String","""should_sync""","@Deprecated","/**
 * Whether this group should be synced if the SYNC_EVERYTHING settings is false
 * for this group's account.
 * <P>Type: INTEGER (boolean)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.GROUP_SYNC_ACCOUNT","true","false","false","true","true","String","""group_sync_account""","@Deprecated","/**
 * The account of the group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.CONTENT_DIRECTORY","true","false","false","true","true","String","""extensions""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE_HOME","true","false","false","true","true","int","1","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PRIORITY","false","false","false","false","false","String","""priority""","","/**
 * The priority, an integer, used by XMPP presence
 * <P>Type: INTEGER</P>
 */
","\android\provider\Contacts.java"
"android.provider.Insert.TERTIARY_EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_EMAIL","@Deprecated","/**
 * The extra field for an optional third contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.People.PRIMARY_ORGANIZATION_ID","true","false","false","true","true","String","""primary_organization""","@Deprecated","/**
 * The ID of the persons preferred organization.
 * <P>Type: INTEGER (foreign key to organizations table on the
 * _ID field)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.PHONE_TYPE","@Deprecated","/**
 * The extra field for the contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Settings.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""key ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.LIST_GROUP_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_GROUP_ACTION","@Deprecated","/**
 * The action for the contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.AWAY","false","false","false","false","false","int","ContactsContract.StatusUpdates.AWAY","","","\android\provider\Contacts.java"
"android.provider.PhotosColumns.LOCAL_VERSION","true","false","false","true","true","String","""local_version""","@Deprecated","/**
 * The _SYNC_VERSION of the photo that was last downloaded
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.POSTAL","true","false","false","true","true","String","ContactsContract.Intents.Insert.POSTAL","@Deprecated","/**
 * The extra field for the contact postal address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.IM_PROTOCOL","true","false","false","true","true","String","ContactsContract.Intents.Insert.IM_PROTOCOL","@Deprecated","/**
 * The extra field for the IM protocol
 * <P>Type: the result of {@link Contacts.ContactMethods#encodePredefinedImProtocol}
 * or {@link Contacts.ContactMethods#encodeCustomImProtocol}.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.FILTER_TEXT_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.FILTER_TEXT_EXTRA_KEY","@Deprecated","/**
 * Used as an int extra field in {@link #FILTER_CONTACTS_ACTION}
 * intents to supply the text on which to filter.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE_PAGER","true","false","false","true","true","int","6","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Organizations.CONTENT_DIRECTORY","true","false","false","true","true","String","""organizations""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.YAHOO","false","false","false","false","false","String","""Yahoo""","","// 
","\android\provider\Contacts.java"
"android.provider.Intents.LIST_FREQUENT_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_FREQUENT_ACTION","@Deprecated","/**
 * The action for the frequent contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.KIND_IM","true","false","false","true","true","int","3","@Deprecated","/**
 * Signifies an IM address row that is stored in the ContactMethods table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""name ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.QQ","false","false","false","false","false","String","""QQ""","","","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_EMAIL_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/contact_methods/email"")","@Deprecated","/**
 * The content:// style URL for sub-directory of e-mail addresses.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.NAME","true","false","false","true","true","String","ContactsContract.Intents.Insert.NAME","@Deprecated","/**
 * The extra field for the contact name.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PROTOCOL_GOOGLE_TALK","true","false","false","true","true","int","5","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE_PAGER","true","false","false","true","true","int","6","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Settings.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/settings"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.TYPE_OTHER","true","false","false","true","true","int","2","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.OrganizationColumns.TYPE_WORK","true","false","false","true","true","int","1","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.SECONDARY_EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_EMAIL_TYPE","@Deprecated","/**
 * The extra field for an optional second contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.SECONDARY_EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_EMAIL_TYPE","@Deprecated","/**
 * The extra field for an optional second contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PeopleColumns.DISPLAY_NAME","true","false","false","true","true","String","""display_name""","@Deprecated","/**
 * The display name. If name is not null name, else if number is not null number,
 * else if email is not null email.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.INVISIBLE","false","false","false","false","false","int","ContactsContract.StatusUpdates.INVISIBLE","","","\android\provider\Contacts.java"
"android.provider.Intents.TERTIARY_EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_EMAIL","@Deprecated","/**
 * The extra field for an optional third contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.SECONDARY_PHONE_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_PHONE_TYPE","@Deprecated","/**
 * The extra field for an optional second contact phone number type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.PhonesColumns PhonesColumns},
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ProviderNames.AIM","false","false","false","false","false","String","""AIM""","","","\android\provider\Contacts.java"
"android.provider.Insert.COMPANY","true","false","false","true","true","String","ContactsContract.Intents.Insert.COMPANY","@Deprecated","/**
 * The extra field for the contact company.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.JABBER","false","false","false","false","false","String","""JABBER""","","","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_POSTAL_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/postal-address""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_EMAIL_URI} sub-directory of
 * multiple {@link Contacts#KIND_POSTAL} entries.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.DISPLAY_NAME","true","false","false","true","true","String","""display_name""","@Deprecated","/**
 * The display name. If name is not null name, else if number is not null number,
 * else if email is not null email.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.LIST_GROUP_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_GROUP_ACTION","@Deprecated","/**
 * The action for the contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.SECONDARY_EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.SECONDARY_EMAIL","@Deprecated","/**
 * The extra field for an optional second contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Groups.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/groups"")","@Deprecated","/**
 * The content:// style URL for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PRIMARY_ORGANIZATION_ID","true","false","false","true","true","String","""primary_organization""","@Deprecated","/**
 * The ID of the persons preferred organization.
 * <P>Type: INTEGER (foreign key to organizations table on the
 * _ID field)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_EMAIL_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/email""","@Deprecated","/**
 * The MIME type of a {@link #CONTENT_EMAIL_URI} sub-directory of
 * multiple {@link Contacts#KIND_EMAIL} entries.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TYPE_FAX_HOME","true","false","false","true","true","int","5","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Extensions.PERSON_ID","true","false","false","true","true","String","""person""","@Deprecated","/**
 * The ID of the person this phone number is assigned to.
 * <P>Type: INTEGER (long)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.DELETED_CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://contacts/deleted_groups"")","@Deprecated","/**
 * The content:// style URL for the table that holds the deleted
 * groups.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Extensions.CONTENT_DIRECTORY","true","false","false","true","true","String","""extensions""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.TERTIARY_EMAIL_TYPE","true","false","false","true","true","String","ContactsContract.Intents.Insert.TERTIARY_EMAIL_TYPE","@Deprecated","/**
 * The extra field for an optional third contact email type.
 * <P>Type: Either an integer value from {@link android.provider.Contacts.ContactMethodsColumns ContactMethodsColumns}
 * or a string specifying a custom label.</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.EXTRA_FORCE_CREATE","true","false","false","true","true","String","ContactsContract.Intents.EXTRA_FORCE_CREATE","@Deprecated","/**
 * Used with {@link #SHOW_OR_CREATE_CONTACT} to force creating a new
 * contact if no matching contact found. Otherwise, default behavior is
 * to prompt user with dialog before creating.
 * <p>
 * Type: BOOLEAN
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.TITLE_EXTRA_KEY","true","false","false","true","true","String","ContactsContract.Intents.UI.TITLE_EXTRA_KEY","@Deprecated","/**
 * A key for to be used as an intent extra to set the activity
 * title to a custom String value.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/contact-methods""","@Deprecated","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * @deprecated see {@link android.provider.ContactsContract}
 * phones.
 */
","\android\provider\Contacts.java"
"android.provider.GroupsColumns.NOTES","true","false","false","true","true","String","""notes""","@Deprecated","/**
 * Notes about the group.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.LIST_ALL_CONTACTS_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_ALL_CONTACTS_ACTION","@Deprecated","/**
 * The action for the all contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.ContactMethods.PROTOCOL_MSN","true","false","false","true","true","int","1","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Insert.EMAIL","true","false","false","true","true","String","ContactsContract.Intents.Insert.EMAIL","@Deprecated","/**
 * The extra field for the contact email address.
 * <P>Type: String</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.IM_ACCOUNT","true","false","false","true","true","String","""im_account""","@Deprecated","/**
 * The IM account for the local user that the presence data came from.
 * <P>Type: STRING</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.CONTENT_DIRECTORY","true","false","false","true","true","String","""photo""","@Deprecated","/**
 * The directory twig for this sub-table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""person, name ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Intents.LIST_CONTACTS_WITH_PHONES_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_CONTACTS_WITH_PHONES_ACTION","@Deprecated","/**
 * The action for the contacts with phone numbers list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.SettingsColumns.VALUE","true","false","false","true","true","String","""value""","@Deprecated","/**
 * The value of this setting.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PresenceColumns.IDLE","false","false","false","false","false","int","ContactsContract.StatusUpdates.IDLE","","","\android\provider\Contacts.java"
"android.provider.Contacts.KIND_POSTAL","true","false","false","true","true","int","2","@Deprecated","/**
 * Signifies a postal address row that is stored in the ContactMethods table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Groups.DEFAULT_SORT_ORDER","true","false","false","true","true","String","NAME + "" ASC""","@Deprecated","/**
 * The default sort order for this table
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.NUMBER_KEY","true","false","false","true","true","String","""number_key""","@Deprecated","/**
 * The normalized phone number
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.PHOTO_VERSION","true","false","false","true","true","String","""photo_version""","@Deprecated","/**
 * The server version of the photo
 * <P>Type: TEXT (the version number portion of the photo URI)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.UI.LIST_STARRED_ACTION","true","false","false","true","true","String","ContactsContract.Intents.UI.LIST_STARRED_ACTION","@Deprecated","/**
 * The action for the starred contacts list tab.
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.Contacts.KEY","true","false","false","true","true","String","""key""","@Deprecated","/**
 * The key of this setting.
 * <P>Type: TEXT</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE_WORK","true","false","false","true","true","int","3","@Deprecated","/**
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.provider.PhonesColumns.TYPE","true","false","false","true","true","String","""type""","@Deprecated","/**
 * The type of the the phone number.
 * <P>Type: INTEGER (one of the constants below)</P>
 * @deprecated see {@link android.provider.ContactsContract}
 */
","\android\provider\Contacts.java"
"android.widget.Filter.FILTER_TOKEN","false","false","true","true","true","int","0xD0D0F00D","","","\android\widget\Filter.java"
"android.widget.Filter.values","true","false","false","false","false","Object","","","/**
 * <p>Contains all the values computed by the filtering operation.</p>
 */
","\android\widget\Filter.java"
"android.widget.Filter.mResultHandler","false","false","true","false","false","Handler","","","","\android\widget\Filter.java"
"android.widget.Filter.count","true","false","false","false","false","int","","","/**
 * <p>Contains the number of values computed by the filtering
 * operation.</p>
 */
","\android\widget\Filter.java"
"android.widget.Filter.LOG_TAG","false","false","true","true","true","String","""Filter""","","","\android\widget\Filter.java"
"android.widget.Filter.listener","false","false","false","false","false","FilterListener","","","/**
 * <p>The listener to notify upon completion. Can be null.</p>
 */
","\android\widget\Filter.java"
"android.widget.Filter.mThreadHandler","false","false","true","false","false","Handler","","","","\android\widget\Filter.java"
"android.widget.RequestArguments.results","false","false","false","false","false","FilterResults","","","/**
 * <p>The results of the filtering operation.</p>
 */
","\android\widget\Filter.java"
"android.widget.Filter.FINISH_TOKEN","false","false","true","true","true","int","0xDEADBEEF","","","\android\widget\Filter.java"
"android.widget.Filter.mLock","false","false","true","false","true","Object","new Object()","","","\android\widget\Filter.java"
"android.widget.FilterResults.values","true","false","false","false","false","Object","","","/**
 * <p>Contains all the values computed by the filtering operation.</p>
 */
","\android\widget\Filter.java"
"android.widget.FilterResults.count","true","false","false","false","false","int","","","/**
 * <p>Contains the number of values computed by the filtering
 * operation.</p>
 */
","\android\widget\Filter.java"
"android.widget.Filter.constraint","false","false","false","false","false","CharSequence","","","/**
 * <p>The constraint used to filter the data.</p>
 */
","\android\widget\Filter.java"
"android.widget.RequestArguments.listener","false","false","false","false","false","FilterListener","","","/**
 * <p>The listener to notify upon completion. Can be null.</p>
 */
","\android\widget\Filter.java"
"android.widget.Filter.THREAD_NAME","false","false","true","true","true","String","""Filter""","","","\android\widget\Filter.java"
"android.widget.Filter.results","false","false","false","false","false","FilterResults","","","/**
 * <p>The results of the filtering operation.</p>
 */
","\android\widget\Filter.java"
"android.widget.Filter.mDelayer","false","false","true","false","false","Delayer","","","","\android\widget\Filter.java"
"android.widget.RequestArguments.constraint","false","false","false","false","false","CharSequence","","","/**
 * <p>The constraint used to filter the data.</p>
 */
","\android\widget\Filter.java"
"android.content.SyncContext.mLastHeartbeatSendTime","false","false","true","false","false","long","","","","\android\content\SyncContext.java"
"android.content.SyncContext.mSyncContext","false","false","true","false","false","ISyncContext","","","","\android\content\SyncContext.java"
"android.content.SyncContext.HEARTBEAT_SEND_INTERVAL_IN_MS","false","false","true","true","true","long","1000","","","\android\content\SyncContext.java"
"android.widget.ResourceCursorTreeAdapter.mChildLayout","false","false","true","false","false","int","","","","\android\widget\ResourceCursorTreeAdapter.java"
"android.widget.ResourceCursorTreeAdapter.mLastChildLayout","false","false","true","false","false","int","","","","\android\widget\ResourceCursorTreeAdapter.java"
"android.widget.ResourceCursorTreeAdapter.mInflater","false","false","true","false","false","LayoutInflater","","","","\android\widget\ResourceCursorTreeAdapter.java"
"android.widget.ResourceCursorTreeAdapter.mExpandedGroupLayout","false","false","true","false","false","int","","","","\android\widget\ResourceCursorTreeAdapter.java"
"android.widget.ResourceCursorTreeAdapter.mCollapsedGroupLayout","false","false","true","false","false","int","","","","\android\widget\ResourceCursorTreeAdapter.java"
"android.app.Service.START_FLAG_RETRY","true","false","false","true","true","int","0x0002","","/**
 * This flag is set in {@link #onStartCommand} if the Intent is a
 * a retry because the original attempt never got to or returned from
 * {@link #onStartCommand(Intent, int, int)}.
 */
","\android\app\Service.java"
"android.app.Service.START_STICKY","true","false","false","true","true","int","1","","/**
 * Constant to return from {@link #onStartCommand}: if this service's
 * process is killed while it is started (after returning from
 * {@link #onStartCommand}), then leave it in the started state but
 * don't retain this delivered intent.  Later the system will try to
 * re-create the service.  Because it is in the started state, it will
 * guarantee to call {@link #onStartCommand} after creating the new
 * service instance; if there are not any pending start commands to be
 * delivered to the service, it will be called with a null intent
 * object, so you must take care to check for this.
 *
 * <p>This mode makes sense for things that will be explicitly started
 * and stopped to run for arbitrary periods of time, such as a service
 * performing background music playback.
 */
","\android\app\Service.java"
"android.app.Service.START_STICKY_COMPATIBILITY","true","false","false","true","true","int","0","","/**
 * Constant to return from {@link #onStartCommand}: compatibility
 * version of {@link #START_STICKY} that does not guarantee that
 * {@link #onStartCommand} will be called again after being killed.
 */
","\android\app\Service.java"
"android.app.Service.mActivityManager","false","false","true","false","false","IActivityManager","null","","","\android\app\Service.java"
"android.app.Service.START_REDELIVER_INTENT","true","false","false","true","true","int","3","","/**
 * Constant to return from {@link #onStartCommand}: if this service's
 * process is killed while it is started (after returning from
 * {@link #onStartCommand}), then it will be scheduled for a restart
 * and the last delivered Intent re-delivered to it again via
 * {@link #onStartCommand}.  This Intent will remain scheduled for
 * redelivery until the service calls {@link #stopSelf(int)} with the
 * start ID provided to {@link #onStartCommand}.  The
 * service will not receive a {@link #onStartCommand(Intent, int, int)}
 * call with a null Intent because it will will only be re-started if
 * it is not finished processing all Intents sent to it (and any such
 * pending events will be delivered at the point of restart).
 */
","\android\app\Service.java"
"android.app.Service.START_FLAG_REDELIVERY","true","false","false","true","true","int","0x0001","","/**
 * This flag is set in {@link #onStartCommand} if the Intent is a
 * re-delivery of a previously delivered intent, because the service
 * had previously returned {@link #START_REDELIVER_INTENT} but had been
 * killed before calling {@link #stopSelf(int)} for that Intent.
 */
","\android\app\Service.java"
"android.app.Service.mClassName","false","false","true","false","false","String","null","","","\android\app\Service.java"
"android.app.Service.START_CONTINUATION_MASK","true","false","false","true","true","int","0xf","","/**
 * Bits returned by {@link #onStartCommand} describing how to continue
 * the service if it is killed.  May be {@link #START_STICKY},
 * {@link #START_NOT_STICKY}, {@link #START_REDELIVER_INTENT},
 * or {@link #START_STICKY_COMPATIBILITY}.
 */
","\android\app\Service.java"
"android.app.Service.TAG","false","false","true","true","true","String","""Service""","","","\android\app\Service.java"
"android.app.Service.START_NOT_STICKY","true","false","false","true","true","int","2","","/**
 * Constant to return from {@link #onStartCommand}: if this service's
 * process is killed while it is started (after returning from
 * {@link #onStartCommand}), and there are no new start intents to
 * deliver to it, then take the service out of the started state and
 * don't recreate until a future explicit call to
 * {@link Context#startService Context.startService(Intent)}.  The
 * service will not receive a {@link #onStartCommand(Intent, int, int)}
 * call with a null Intent because it will not be re-started if there
 * are no pending Intents to deliver.
 *
 * <p>This mode makes sense for things that want to do some work as a
 * result of being started, but can be stopped when under memory pressure
 * and will explicit start themselves again later to do more work.  An
 * example of such a service would be one that polls for data from
 * a server: it could schedule an alarm to poll every N minutes by having
 * the alarm start its service.  When its {@link #onStartCommand} is
 * called from the alarm, it schedules a new alarm for N minutes later,
 * and spawns a thread to do its networking.  If its process is killed
 * while doing that check, the service will not be restarted until the
 * alarm goes off.
 */
","\android\app\Service.java"
"android.app.Service.mThread","false","false","true","false","false","ActivityThread","null","","// set by the thread after the constructor and before onCreate(Bundle icicle) is called.
","\android\app\Service.java"
"android.app.Service.mToken","false","false","true","false","false","IBinder","null","","","\android\app\Service.java"
"android.app.Service.mApplication","false","false","true","false","false","Application","null","","","\android\app\Service.java"
"android.app.Service.mStartCompatibility","false","false","true","false","false","boolean","false","","","\android\app\Service.java"
"android.ddm.DdmHandleAppName.mAppName","false","false","true","true","false","String","""""","","","\android\ddm\DdmHandleAppName.java"
"android.ddm.DdmHandleAppName.mInstance","false","false","true","true","false","DdmHandleAppName","new DdmHandleAppName()","","","\android\ddm\DdmHandleAppName.java"
"android.ddm.DdmHandleAppName.CHUNK_APNM","true","false","false","true","true","int","type(""APNM"")","","","\android\ddm\DdmHandleAppName.java"
"android.net.SSLSessionCache.TAG","false","false","true","true","true","String","""SSLSessionCache""","","","\android\net\SSLSessionCache.java"
"android.net.SSLSessionCache.mSessionCache","false","false","false","false","true","SSLClientSessionCache","","","/* package */
","\android\net\SSLSessionCache.java"
"android.widget.AlphabetIndexer.mAlphabetArray","false","false","true","false","false","String","","","/**
 * The section array converted from the alphabet string.
 */
","\android\widget\AlphabetIndexer.java"
"android.widget.AlphabetIndexer.mAlphabetLength","false","false","true","false","false","int","","","/**
 * Cached length of the alphabet array.
 */
","\android\widget\AlphabetIndexer.java"
"android.widget.AlphabetIndexer.mAlphaMap","false","false","true","false","false","SparseIntArray","","","/**
 * This contains a cache of the computed indices so far. It will get reset whenever
 * the dataset changes or the cursor changes.
 */
","\android\widget\AlphabetIndexer.java"
"android.widget.AlphabetIndexer.mDataCursor","false","true","false","false","false","Cursor","","","/**
 * Cursor that is used by the adapter of the list view.
 */
","\android\widget\AlphabetIndexer.java"
"android.widget.AlphabetIndexer.mAlphabet","false","true","false","false","false","CharSequence","","","/**
 * The string of characters that make up the indexing sections.
 */
","\android\widget\AlphabetIndexer.java"
"android.widget.AlphabetIndexer.mCollator","false","false","true","false","false","java.text.Collator","","","/**
 * Use a collator to compare strings in a localized manner.
 */
","\android\widget\AlphabetIndexer.java"
"android.widget.AlphabetIndexer.mColumnIndex","false","true","false","false","false","int","","","/**
 * The index of the cursor column that this list is sorted on.
 */
","\android\widget\AlphabetIndexer.java"
"android.app.admin.DeviceAdminInfo.tag","true","false","false","false","true","String","","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.PolicyInfo.tag","true","false","false","false","true","String","","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.mUsesPolicies","false","false","false","false","false","int","","","/**
 * The policies this administrator needs access to.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.description","true","false","false","false","true","int","","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.ident","true","false","false","false","true","int","","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.label","true","false","false","false","true","int","","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.mVisible","false","false","false","false","false","boolean","","","/**
 * Whether this should be visible to the user.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.PolicyInfo.ident","true","false","false","false","true","int","","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.sKnownPolicies","false","false","false","true","false","HashMap<String,Integer>","new HashMap<String, Integer>()","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.mReceiver","false","false","false","false","true","ResolveInfo","","","/**
 * The BroadcastReceiver that implements this device admin component.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.USES_POLICY_WATCH_LOGIN","true","false","false","true","true","int","1","","/**
 * A type of policy that this device admin can use: able to watch login
 * attempts from the user, via {@link DeviceAdminReceiver#ACTION_PASSWORD_FAILED},
 * {@link DeviceAdminReceiver#ACTION_PASSWORD_SUCCEEDED}, and
 * {@link DevicePolicyManager#getCurrentFailedPasswordAttempts}.
 *
 * <p>To control this policy, the device admin must have a ""watch-login""
 * tag in the ""uses-policies"" section of its meta-data.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.USES_POLICY_FORCE_LOCK","true","false","false","true","true","int","3","","/**
 * A type of policy that this device admin can use: able to force the device
 * to lock via{@link DevicePolicyManager#lockNow} or limit the
 * maximum lock timeout for the device via
 * {@link DevicePolicyManager#setMaximumTimeToLock}.
 *
 * <p>To control this policy, the device admin must have a ""force-lock""
 * tag in the ""uses-policies"" section of its meta-data.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.PolicyInfo.label","true","false","false","false","true","int","","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.sRevKnownPolicies","false","false","false","true","false","SparseArray<PolicyInfo>","new SparseArray<PolicyInfo>()","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.USES_POLICY_LIMIT_PASSWORD","true","false","false","true","true","int","0","","/**
 * A type of policy that this device admin can use: limit the passwords
 * that the user can select, via {@link DevicePolicyManager#setPasswordQuality}
 * and {@link DevicePolicyManager#setPasswordMinimumLength}.
 *
 * <p>To control this policy, the device admin must have a ""limit-password""
 * tag in the ""uses-policies"" section of its meta-data.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.USES_POLICY_WIPE_DATA","true","false","false","true","true","int","4","","/**
 * A type of policy that this device admin can use: able to factory
 * reset the device, erasing all of the user's data, via
 * {@link DevicePolicyManager#wipeData}.
 *
 * <p>To control this policy, the device admin must have a ""wipe-data""
 * tag in the ""uses-policies"" section of its meta-data.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.USES_POLICY_RESET_PASSWORD","true","false","false","true","true","int","2","","/**
 * A type of policy that this device admin can use: able to reset the
 * user's password via
 * {@link DevicePolicyManager#resetPassword}.
 *
 * <p>To control this policy, the device admin must have a ""reset-password""
 * tag in the ""uses-policies"" section of its meta-data.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<DeviceAdminInfo>","new Parcelable.Creator<DeviceAdminInfo>() {

    public DeviceAdminInfo createFromParcel(Parcel source) {
        return new DeviceAdminInfo(source);
    }

    public DeviceAdminInfo[] newArray(int size) {
        return new DeviceAdminInfo[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.sPoliciesDisplayOrder","false","false","false","true","false","ArrayList<PolicyInfo>","new ArrayList<PolicyInfo>()","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.PolicyInfo.description","true","false","false","false","true","int","","","","\android\app\admin\DeviceAdminInfo.java"
"android.app.admin.DeviceAdminInfo.TAG","false","false","false","true","true","String","""DeviceAdminInfo""","","","\android\app\admin\DeviceAdminInfo.java"
"com.android.internal.view.menu.ListMenuItemView.mMenuType","false","false","true","false","false","int","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mBackground","false","false","true","false","false","Drawable","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mTextAppearance","false","false","true","false","false","int","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mIconView","false","false","true","false","false","ImageView","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mShortcutView","false","false","true","false","false","TextView","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mItemData","false","false","true","false","false","MenuItemImpl","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mCheckBox","false","false","true","false","false","CheckBox","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mTitleView","false","false","true","false","false","TextView","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mRadioButton","false","false","true","false","false","RadioButton","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"com.android.internal.view.menu.ListMenuItemView.mTextAppearanceContext","false","false","true","false","false","Context","","","","\com\android\internal\view\menu\ListMenuItemView.java"
"android.view.animation.ScaleAnimation.mFromX","false","false","true","false","false","float","","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mFromY","false","false","true","false","false","float","","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mPivotYValue","false","false","true","false","false","float","0.0f","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mPivotXType","false","false","true","false","false","int","ABSOLUTE","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mPivotYType","false","false","true","false","false","int","ABSOLUTE","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mToY","false","false","true","false","false","float","","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mToX","false","false","true","false","false","float","","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mPivotXValue","false","false","true","false","false","float","0.0f","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mPivotY","false","false","true","false","false","float","","","","\android\view\animation\ScaleAnimation.java"
"android.view.animation.ScaleAnimation.mPivotX","false","false","true","false","false","float","","","","\android\view\animation\ScaleAnimation.java"
"android.inputmethodservice.KeyboardView.mXVelocity","false","false","false","false","false","float","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mBackgroundDimAmount","false","false","true","false","false","float","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastSentIndex","false","false","true","false","false","int","","","// For multi-tap
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPopupParent","false","false","true","false","false","View","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mBuffer","false","false","true","false","false","Bitmap","","","/**
 * The keyboard bitmap for faster updates
 */
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mOldPointerCount","false","false","true","false","false","int","1","","// Variables for dealing with multiple pointers
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mShadowRadius","false","false","true","false","false","float","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPreviewText","false","false","true","false","false","TextView","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mVerticalCorrection","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.DELAY_AFTER_PREVIEW","false","false","true","true","true","int","70","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastKey","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.MSG_REMOVE_PREVIEW","false","false","true","true","true","int","2","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mKeyTextColor","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mKeyboardActionListener","false","false","true","false","false","OnKeyboardActionListener","","","/**
 * Listener for {@link OnKeyboardActionListener}.
 */
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mShowPreview","false","false","true","false","false","boolean","true","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.SwipeTracker.mPastTime","false","false","false","false","true","long","new long[NUM_PAST]","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPossiblePoly","false","false","true","false","false","boolean","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPreviewHeight","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastX","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastY","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mDistances","false","false","true","false","false","int","new int[MAX_NEARBY_KEYS]","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mWindowY","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mHandler","false","false","false","false","false","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        switch(msg.what) {
            case MSG_SHOW_PREVIEW:
                showKey(msg.arg1);
                break;
            case MSG_REMOVE_PREVIEW:
                mPreviewText.setVisibility(INVISIBLE);
                break;
            case MSG_REPEAT:
                if (repeatKey()) {
                    Message repeat = Message.obtain(this, MSG_REPEAT);
                    sendMessageDelayed(repeat, REPEAT_INTERVAL);
                }
                break;
            case MSG_LONGPRESS:
                openPopupIfRequired((MotionEvent) msg.obj);
                break;
        }
    }
}","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPastTime","false","false","false","false","true","long","new long[NUM_PAST]","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mCurrentKeyTime","false","false","true","false","false","long","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mCurrentKey","false","false","true","false","false","int","NOT_A_KEY","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.LONGEST_PAST_TIME","false","false","false","true","true","int","200","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.SwipeTracker.mXVelocity","false","false","false","false","false","float","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mMiniKeyboardCache","false","false","true","false","false","Map<Key,View>","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mWindowOffset","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mClipRegion","false","false","true","false","false","Rect","new Rect(0, 0, 0, 0)","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mMiniKeyboardOffsetY","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mOldEventTime","false","false","true","false","false","long","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mMiniKeyboardOffsetX","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.SwipeTracker.LONGEST_PAST_TIME","false","false","false","true","true","int","200","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mShowTouchPoints","false","false","true","false","false","boolean","true","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mStartY","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mStartX","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mProximityCorrectOn","false","false","true","false","false","boolean","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mKeyboardChanged","false","false","true","false","false","boolean","","","/**
 * Notes if the keyboard just changed, so that we could possibly reallocate the mBuffer.
 */
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mKeyboard","false","false","true","false","false","Keyboard","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPreviewPopup","false","false","true","false","false","PopupWindow","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.DEBUG","false","false","true","true","true","boolean","false","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mCurrentKeyIndex","false","false","true","false","false","int","NOT_A_KEY","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mYVelocity","false","false","false","false","false","float","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mKeyTextSize","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPaint","false","false","true","false","false","Paint","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mShadowColor","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.REPEAT_INTERVAL","false","false","true","true","true","int","50","","// ~20 keys per second
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mDrawPending","false","false","true","false","false","boolean","","","/**
 * Whether the keyboard bitmap needs to be redrawn before it's blitted. *
 */
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mSwipeThreshold","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mMiniKeyboardOnScreen","false","false","true","false","false","boolean","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLabelTextSize","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mProximityThreshold","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.NOT_A_KEY","false","false","true","true","true","int","-1","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPreviewCentered","false","false","true","false","false","boolean","false","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mInvalidatedKey","false","false","true","false","false","Key","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mAbortKey","false","false","true","false","false","boolean","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.MULTITAP_INTERVAL","false","false","true","true","true","int","800","","// milliseconds
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mMiniKeyboard","false","false","true","false","false","KeyboardView","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.LONGPRESS_TIMEOUT","false","false","true","true","true","int","ViewConfiguration.getLongPressTimeout()","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.SwipeTracker.mPastY","false","false","false","false","true","float","new float[NUM_PAST]","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.SwipeTracker.mPastX","false","false","false","false","true","float","new float[NUM_PAST]","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPreviewOffset","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mKeyIndices","false","false","true","false","false","int","new int[12]","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mCanvas","false","false","true","false","false","Canvas","","","/**
 * The canvas for the above mutable keyboard bitmap
 */
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mInMultiTap","false","false","true","false","false","boolean","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPopupPreviewX","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mTapCount","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPopupPreviewY","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mKeyBackground","false","false","true","false","false","Drawable","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPadding","false","false","true","false","false","Rect","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mOffsetInWindow","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.MAX_NEARBY_KEYS","false","false","true","true","false","int","12","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.MSG_REPEAT","false","false","true","true","true","int","3","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mKeys","false","false","true","false","false","Key","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.REPEAT_START_DELAY","false","false","true","true","true","int","400","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPopupY","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPopupX","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.LONG_PRESSABLE_STATE_SET","false","false","true","true","true","int","{ R.attr.state_long_pressable }","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mDownKey","false","false","true","false","false","int","NOT_A_KEY","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPopupLayout","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.NUM_PAST","false","false","false","true","true","int","4","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.DEBOUNCE_TIME","false","false","true","true","true","int","70","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.SwipeTracker.NUM_PAST","false","false","false","true","true","int","4","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mMiniKeyboardContainer","false","false","true","false","false","View","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPopupKeyboard","false","false","true","false","false","PopupWindow","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.MSG_LONGPRESS","false","false","true","true","true","int","4","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.MSG_SHOW_PREVIEW","false","false","true","true","true","int","1","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastTapTime","false","false","true","false","false","long","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastMoveTime","false","false","true","false","false","long","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPreviewTextSizeLarge","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mDirtyRect","false","false","true","false","false","Rect","new Rect()","","/**
 * The dirty region in the keyboard bitmap
 */
","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mDisambiguateSwipe","false","false","true","false","false","boolean","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.SwipeTracker.mYVelocity","false","false","false","false","false","float","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mDownTime","false","false","true","false","false","long","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mOldPointerX","false","false","true","false","false","float","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mOldPointerY","false","false","true","false","false","float","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.DELAY_BEFORE_PREVIEW","false","false","true","true","true","int","0","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mSwipeTracker","false","false","true","false","false","SwipeTracker","new SwipeTracker()","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPastX","false","false","false","false","true","float","new float[NUM_PAST]","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPastY","false","false","false","false","true","float","new float[NUM_PAST]","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastKeyTime","false","false","true","false","false","long","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mPreviewLabel","false","false","true","false","false","StringBuilder","new StringBuilder(1)","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mRepeatKeyIndex","false","false","true","false","false","int","NOT_A_KEY","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mUsedVelocity","false","false","true","false","false","boolean","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mGestureDetector","false","false","true","false","false","GestureDetector","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastCodeY","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.mLastCodeX","false","false","true","false","false","int","","","","\android\inputmethodservice\KeyboardView.java"
"android.inputmethodservice.KeyboardView.KEY_DELETE","false","false","true","true","true","int","{ Keyboard.KEYCODE_DELETE }","","","\android\inputmethodservice\KeyboardView.java"
"android.view.View.mTreeObserver","false","false","false","false","true","ViewTreeObserver","new ViewTreeObserver()","","/**
 * The view tree observer used to dispatch global events like
 * layout, pre-draw, touch mode change, etc.
 */
","\android\view\View.java"
"android.view.View.CLICKABLE","false","false","false","true","true","int","0x00004000","","/**
 * <p>Indicates this view can be clicked. When clickable, a View reacts
 * to clicks by notifying the OnClickListener.<p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.ENABLED_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(ENABLED_STATE_SET, FOCUSED_STATE_SET)","","/**
 * Indicates the view is enabled and has the focus.
 *
 * @see #ENABLED_STATE_SET
 * @see #FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.ONLY_DRAWS_BACKGROUND","false","false","false","true","true","int","0x00000100","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.VISIBILITY_FLAGS","false","false","true","true","true","int","{ VISIBLE, INVISIBLE, GONE }","","","\android\view\View.java"
"android.view.View.MIDDLE_STATE_SET","false","true","false","true","true","int","{ R.attr.state_middle }","","/**
 * Used by views that contain lists of items. This state indicates that
 * the view is showing the middle item.
 * @hide
 */
","\android\view\View.java"
"android.view.View.DRAWING_CACHE_QUALITY_HIGH","true","false","false","true","true","int","0x00100000","","/**
 * <p>Enables high quality mode for the drawing cache.</p>
 */
","\android\view\View.java"
"android.view.View.paint","true","false","false","false","true","Paint","","","","\android\view\View.java"
"android.view.View.mOnCreateContextMenuListener","false","true","false","false","false","OnCreateContextMenuListener","","","/**
 * Listener used to build the context menu.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.SELECTED","false","false","false","true","true","int","0x00000004","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_MASK","false","false","false","true","true","int","0x00000300","","/**
 * <p>Mask for use with setFlags indicating bits used for indicating which
 * scrollbars are enabled.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mResources","false","false","true","false","false","Resources","null","","","\android\view\View.java"
"android.view.View.SOUND_EFFECTS_ENABLED","true","false","false","true","true","int","0x08000000","","/**
 * View flag indicating whether this view should have sound effects enabled
 * for events such as clicking and touching.
 */
","\android\view\View.java"
"android.view.View.EXACTLY","true","false","false","true","true","int","1 << MODE_SHIFT","","/**
 * Measure specification mode: The parent has determined an exact size
 * for the child. The child is going to be given those bounds regardless
 * of how big it wants to be.
 */
","\android\view\View.java"
"android.view.AttachInfo.mDrawingTime","false","false","false","false","false","long","","","/**
 * Indicates the time at which drawing started to occur.
 */
","\android\view\View.java"
"android.view.InvalidateInfo.target","false","false","false","false","false","View","","","","\android\view\View.java"
"android.view.View.mAttachInfo","false","false","false","false","false","AttachInfo","","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.DRAWING_CACHE_ENABLED","false","false","false","true","true","int","0x00008000","","/**
 * <p>Indicates this view is caching its drawing into a bitmap.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.AT_MOST","true","false","false","true","true","int","2 << MODE_SHIFT","","/**
 * Measure specification mode: The child can be as large as it wants up
 * to the specified size.
 */
","\android\view\View.java"
"android.view.View.FOCUSABLE_MASK","false","false","true","true","true","int","0x00000001","","/**
 * Mask for use with setFlags indicating bits used for focus.
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_NONE","false","false","false","true","true","int","0x00000000","","/**
 * <p>This view doesn't show scrollbars.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.FOCUSABLES_ALL","true","false","false","true","true","int","0x00000000","","/**
 * View flag indicating whether {@link #addFocusables(ArrayList, int, int)}
 * should add all focusable Views regardless if they are focusable in touch mode.
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.scrollBarInterpolator","true","false","false","false","true","Interpolator","new Interpolator(1, 2)","","","\android\view\View.java"
"android.view.View.mDrawingCacheBackgroundColor","false","false","true","false","false","int","0","","/**
 * Solid color to use as a background when creating the drawing cache. Enables
 * the cache to use 16 bit bitmaps instead of 32 bit.
 */
","\android\view\View.java"
"android.view.View.mSession","false","false","false","false","true","IWindowSession","","","","\android\view\View.java"
"android.view.View.mBGDrawable","false","false","true","false","false","Drawable","","","","\android\view\View.java"
"android.view.View.mTouchSlop","false","false","true","false","false","int","","","/**
 * Cache the touch slop from the context that created the view.
 */
","\android\view\View.java"
"android.view.AttachInfo.mScalingRequired","false","false","false","false","false","boolean","","","/**
 * Indicates whether the application is in compatibility mode
 */
","\android\view\View.java"
"android.view.View.OPAQUE_BACKGROUND","false","false","false","true","true","int","0x00800000","","/**
 * Indicates whether the background is opaque.
 *
 * @hide
 */
","\android\view\View.java"
"android.view.View.mInTouchMode","false","false","false","false","false","boolean","","","/**
 * Indicates whether the view's window is currently in touch mode.
 */
","\android\view\View.java"
"android.view.AttachInfo.mNext","false","false","true","false","false","InvalidateInfo","","","","\android\view\View.java"
"android.view.View.SCROLLBARS_OUTSIDE_MASK","false","false","false","true","true","int","0x02000000","","/**
 * Mask to check if the scrollbar style is inside or outside.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.DRAWING_CACHE_QUALITY_AUTO","true","false","false","true","true","int","0x00000000","","/**
 * <p>Enables automatic quality mode for the drawing cache.</p>
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_INSIDE_INSET","true","false","false","true","true","int","0x01000000","","/**
 * The scrollbar style to display the scrollbars inside the padded area,
 * increasing the padding of the view. The scrollbars will not overlap the
 * content area of the view.
 */
","\android\view\View.java"
"android.view.View.mDrawingCache","false","false","true","false","false","SoftReference<Bitmap>","","","","\android\view\View.java"
"android.view.View.PREPRESSED","false","false","true","true","true","int","0x02000000","","/**
 * Indicates a prepressed state;
 * the short time between ACTION_DOWN and recognizing
 * a 'real' press. Prepressed is used to recognize quick taps
 * even when they are shorter than ViewConfiguration.getTapTimeout().
 *
 * @hide
 */
","\android\view\View.java"
"android.view.AttachInfo.mPanelParentWindowToken","false","false","false","false","false","IBinder","","","","\android\view\View.java"
"android.view.ScrollabilityCache.mLastColor","false","false","true","false","false","int","","","","\android\view\View.java"
"android.view.ScrollabilityCache.scrollBarSize","true","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.mScrollY","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The offset, in pixels, by which the content of this view is scrolled
 * vertically.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mScrollX","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The offset, in pixels, by which the content of this view is scrolled
 * horizontally.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mID","false","false","false","false","false","int","NO_ID","@ViewDebug.ExportedProperty(resolveId = true)","/**
 * The view's identifier.
 * {@hide}
 *
 * @see #setId(int)
 * @see #getId()
 */
","\android\view\View.java"
"android.view.View.interpolatorValues","true","false","false","false","false","float","","","","\android\view\View.java"
"android.view.View.mNextFocusUpId","false","false","true","false","false","int","View.NO_ID","","/**
 * When this view has focus and the next focus is {@link #FOCUS_UP},
 * the user may specify which view to go to next.
 */
","\android\view\View.java"
"android.view.View.PRESSED_FOCUSED_SELECTED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_FOCUSED_STATE_SET, SELECTED_STATE_SET)","","/**
 * Indicates the view is pressed, focused and selected.
 *
 * @see #PRESSED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.mLastColor","false","false","true","false","false","int","","","","\android\view\View.java"
"android.view.View.INVALIDATE_MSG","false","false","false","true","true","int","0x1","","/**
 * Identifier for messages requesting the view to be invalidated.
 * Such messages should be sent to {@link #mHandler}.
 */
","\android\view\View.java"
"android.view.View.mNextFocusDownId","false","false","true","false","false","int","View.NO_ID","","/**
 * When this view has focus and the next focus is {@link #FOCUS_DOWN},
 * the user may specify which view to go to next.
 */
","\android\view\View.java"
"android.view.View.FOCUS_DOWN","true","false","false","true","true","int","0x00000082","","/**
 * Use with {@link #focusSearch}. Move focus down.
 */
","\android\view\View.java"
"android.view.View.mTag","false","true","false","false","false","Object","","","/**
 * The view's tag.
 * {@hide}
 *
 * @see #setTag(Object)
 * @see #getTag()
 */
","\android\view\View.java"
"android.view.View.SCROLL_CONTAINER_ADDED","false","false","false","true","true","int","0x00100000","","/**
 * Set by {@link #setScrollContainer(boolean)}.
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.mOpaque","false","false","true","false","true","float","{ 255.0f }","","","\android\view\View.java"
"android.view.View.PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_ENABLED_FOCUSED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed, enabled, focused and its window has the
 * focus.
 *
 * @see #PRESSED_STATE_SET
 * @see #ENABLED_STATE_SET
 * @see #FOCUSED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.DRAW_ANIMATION","false","false","false","true","true","int","0x00000040","","/**
 * When this flag is set, this view is running an animation on behalf of its
 * children and should therefore not cancel invalidate requests, even if they
 * lie outside of this view's bounds.
 *
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.PRESSED_LAST_STATE_SET","false","true","false","true","true","int","{ R.attr.state_last, R.attr.state_pressed }","","/**
 * Used by views that contain lists of items. This state indicates that
 * the view is pressed and showing the last item.
 * @hide
 */
","\android\view\View.java"
"android.view.View.mPaddingRight","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The right padding in pixels, that is the distance in pixels between the
 * right edge of this view and the right edge of its content.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.VIEW_LOG_TAG","false","true","false","true","true","String","""View""","","/**
 * The logging tag used by this class with android.util.Log.
 */
","\android\view\View.java"
"android.view.AttachInfo.mInvalidateChildLocation","false","false","false","false","true","int","new int[2]","","/**
 * Global to the view hierarchy used as a temporary for dealing with
 * x/y points in the ViewGroup.invalidateChild implementation.
 */
","\android\view\View.java"
"android.view.View.mOnTouchListener","false","false","true","false","false","OnTouchListener","","","","\android\view\View.java"
"android.view.View.SELECTED_STATE_SET","false","true","false","true","true","int","{ R.attr.state_selected }","","/**
 * Indicates the view is selected. States are used with
 * {@link android.graphics.drawable.Drawable} to change the drawing of the
 * view depending on its state.
 *
 * @see android.graphics.drawable.Drawable
 * @see #getDrawableState()
 */
","\android\view\View.java"
"android.view.View.left","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_ENABLED_SELECTED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed, enabled, selected and its window has the
 * focus.
 *
 * @see #PRESSED_STATE_SET
 * @see #ENABLED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.AttachInfo.bottom","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_SELECTED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed, selected and its window has the focus.
 *
 * @see #PRESSED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.AttachInfo.mWindowToken","false","false","false","false","true","IBinder","","","","\android\view\View.java"
"android.view.View.ENABLED_MASK","false","false","false","true","true","int","0x00000020","","/**
 * Mask for use with setFlags indicating bits used for indicating whether
 * this view is enabled
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.DUPLICATE_PARENT_STATE","false","false","false","true","true","int","0x00400000","","/**
 * <p>Indicates that this view gets its drawable states from its direct parent
 * and ignores its original internal states.</p>
 *
 * @hide
 */
","\android\view\View.java"
"android.view.View.VIEW_STATE_SETS","false","false","true","true","true","int","{ // 0 0 0 0 0
EMPTY_STATE_SET, // 0 0 0 0 1
WINDOW_FOCUSED_STATE_SET, // 0 0 0 1 0
SELECTED_STATE_SET, // 0 0 0 1 1
SELECTED_WINDOW_FOCUSED_STATE_SET, // 0 0 1 0 0
FOCUSED_STATE_SET, // 0 0 1 0 1
FOCUSED_WINDOW_FOCUSED_STATE_SET, // 0 0 1 1 0
FOCUSED_SELECTED_STATE_SET, // 0 0 1 1 1
FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET, // 0 1 0 0 0
ENABLED_STATE_SET, // 0 1 0 0 1
ENABLED_WINDOW_FOCUSED_STATE_SET, // 0 1 0 1 0
ENABLED_SELECTED_STATE_SET, // 0 1 0 1 1
ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET, // 0 1 1 0 0
ENABLED_FOCUSED_STATE_SET, // 0 1 1 0 1
ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET, // 0 1 1 1 0
ENABLED_FOCUSED_SELECTED_STATE_SET, // 0 1 1 1 1
ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET, // 1 0 0 0 0
PRESSED_STATE_SET, // 1 0 0 0 1
PRESSED_WINDOW_FOCUSED_STATE_SET, // 1 0 0 1 0
PRESSED_SELECTED_STATE_SET, // 1 0 0 1 1
PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET, // 1 0 1 0 0
PRESSED_FOCUSED_STATE_SET, // 1 0 1 0 1
PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET, // 1 0 1 1 0
PRESSED_FOCUSED_SELECTED_STATE_SET, // 1 0 1 1 1
PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET, // 1 1 0 0 0
PRESSED_ENABLED_STATE_SET, // 1 1 0 0 1
PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET, // 1 1 0 1 0
PRESSED_ENABLED_SELECTED_STATE_SET, // 1 1 0 1 1
PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET, // 1 1 1 0 0
PRESSED_ENABLED_FOCUSED_STATE_SET, // 1 1 1 0 1
PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET, // 1 1 1 1 0
PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET, // 1 1 1 1 1
PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET }","","/**
 * The order here is very important to {@link #getDrawableState()}
 */
","\android\view\View.java"
"android.view.MeasureSpec.AT_MOST","true","false","false","true","true","int","2 << MODE_SHIFT","","/**
 * Measure specification mode: The child can be as large as it wants up
 * to the specified size.
 */
","\android\view\View.java"
"android.view.View.mContext","false","true","false","false","false","Context","","","/**
 * The application environment this view lives in.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.paint","true","false","false","false","true","Paint","","","","\android\view\View.java"
"android.view.AttachInfo.mWindow","false","false","false","false","true","IWindow","","","","\android\view\View.java"
"android.view.View.state","true","false","false","false","false","int","OFF","","/**
 * The current state of the scrollbars: ON, OFF, or FADING
 */
","\android\view\View.java"
"android.view.View.mScrollContainers","false","false","false","false","true","ArrayList<View>","new ArrayList<View>()","","/**
 * All views in the window's hierarchy that serve as scroll containers,
 * used to determine if the window can be resized or must be panned
 * to adjust for a soft input area.
 */
","\android\view\View.java"
"android.view.View.LONG_CLICKABLE","false","false","false","true","true","int","0x00200000","","/**
 * <p>
 * Indicates this view can be long clicked. When long clickable, a View
 * reacts to long clicks by notifying the OnLongClickListener or showing a
 * context menu.
 * </p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_INSET_MASK","false","false","false","true","true","int","0x01000000","","/**
 * Mask to check if the scrollbar style is overlay or inset.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mFocusablesTempList","false","false","false","false","true","ArrayList<View>","new ArrayList<View>(24)","","/**
 * Temporary list for use in collecting focusable descendents of a view.
 */
","\android\view\View.java"
"android.view.AttachInfo.INVALIDATE_RECT_MSG","false","false","false","true","true","int","0x2","","/**
 * Identifier for messages requesting the view to invalidate a region.
 * Such messages should be sent to {@link #mHandler}.
 */
","\android\view\View.java"
"android.view.View.ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(ENABLED_SELECTED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is enabled, selected and its window has the focus.
 *
 * @see #ENABLED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.DRAWING_CACHE_VALID","false","false","false","true","true","int","0x00008000","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.PRESSED_ENABLED_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_ENABLED_STATE_SET, FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed, enabled and focused.
 *
 * @see #PRESSED_STATE_SET
 * @see #ENABLED_STATE_SET
 * @see #FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.mOnFocusChangeListener","false","true","false","false","false","OnFocusChangeListener","","","/**
 * Listener used to dispatch focus change events.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.FADING_EDGE_MASK","false","false","false","true","true","int","0x00003000","","/**
 * <p>Mask for use with setFlags indicating bits used for indicating which
 * fading edges are enabled.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.fadingEdgeLength","true","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.DRAWING_CACHE_QUALITY_LOW","true","false","false","true","true","int","0x00080000","","/**
 * <p>Enables low quality mode for the drawing cache.</p>
 */
","\android\view\View.java"
"android.view.View.mSurface","false","false","false","false","false","Surface","","","","\android\view\View.java"
"android.view.AttachInfo.right","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.FORCE_LAYOUT","false","false","false","true","true","int","0x00001000","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.AttachInfo.mWindowLeft","false","false","false","false","false","int","","","/**
 * Left position of this view's window
 */
","\android\view\View.java"
"android.view.View.VISIBLE","true","false","false","true","true","int","0x00000000","","/**
 * This view is visible.  Use with {@link #setVisibility}.
 */
","\android\view\View.java"
"android.view.AttachInfo.mTreeObserver","false","false","false","false","true","ViewTreeObserver","new ViewTreeObserver()","","/**
 * The view tree observer used to dispatch global events like
 * layout, pre-draw, touch mode change, etc.
 */
","\android\view\View.java"
"android.view.View.FITS_SYSTEM_WINDOWS","false","false","true","true","true","int","0x00000002","","/**
 * This view will adjust its padding to fit sytem windows (e.g. status bar)
 */
","\android\view\View.java"
"android.view.View.LAYOUT_REQUIRED","false","false","true","true","true","int","0x00002000","","","\android\view\View.java"
"android.view.View.mTmpInvalRect","false","false","false","false","true","Rect","new Rect()","","/**
 * Temporary for use in computing invalidate rectangles while
 * calling up the hierarchy.
 */
","\android\view\View.java"
"android.view.AttachInfo.mCanvas","false","false","false","false","false","Canvas","","","/**
 * A Canvas used by the view hierarchy to perform bitmap caching.
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.matrix","true","false","false","false","true","Matrix","","","","\android\view\View.java"
"android.view.ScrollabilityCache.mTransparent","false","false","true","false","true","float","{ 0.0f }","","","\android\view\View.java"
"android.view.View.MODE_MASK","false","false","true","true","true","int","0x3 << MODE_SHIFT","","","\android\view\View.java"
"android.view.View.FOCUSED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(FOCUSED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view has the focus and that its window has the focus.
 *
 * @see #FOCUSED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_FOCUSED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed, focused and its window has the focus.
 *
 * @see #PRESSED_STATE_SET
 * @see #FOCUSED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.OFF","true","false","false","true","true","int","0","","/**
 * Scrollbars are not visible
 */
","\android\view\View.java"
"android.view.View.GONE","true","false","false","true","true","int","0x00000008","","/**
 * This view is invisible, and it doesn't take any space for layout
 * purposes. Use with {@link #setVisibility}.
 */
","\android\view\View.java"
"android.view.View.MODE_SHIFT","false","false","true","true","true","int","30","","","\android\view\View.java"
"android.view.View.PRESSED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed and its window has the focus.
 *
 * @see #PRESSED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.mOnKeyListener","false","false","true","false","false","OnKeyListener","","","","\android\view\View.java"
"android.view.AttachInfo.mVisibleInsets","false","false","false","false","true","Rect","new Rect()","","/**
 * For windows that are full-screen but using insets to layout inside
 * of the screen decorations, these are the current insets for the
 * actual visible parts of the window.
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_STYLE_MASK","false","false","false","true","true","int","0x03000000","","/**
 * Mask for scrollbar style.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.CREATOR","true","false","false","true","true","Parcelable.Creator<BaseSavedState>","new Parcelable.Creator<BaseSavedState>() {

    public BaseSavedState createFromParcel(Parcel in) {
        return new BaseSavedState(in);
    }

    public BaseSavedState[] newArray(int size) {
        return new BaseSavedState[size];
    }
}","","","\android\view\View.java"
"android.view.ScrollabilityCache.interpolatorValues","true","false","false","false","false","float","","","","\android\view\View.java"
"android.view.View.sTags","false","false","true","true","false","WeakHashMap<View,SparseArray<Object>>","","","/**
 * Map used to store views' tags.
 */
","\android\view\View.java"
"android.view.View.mKeyDispatchState","false","false","false","false","true","KeyEvent.DispatcherState","new KeyEvent.DispatcherState()","","","\android\view\View.java"
"android.view.View.FADING_EDGE_NONE","false","false","false","true","true","int","0x00000000","","/**
 * <p>This view doesn't show fading edges.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_INSIDE_OVERLAY","true","false","false","true","true","int","0","","/**
 * The scrollbar style to display the scrollbars inside the content area,
 * without increasing the padding. The scrollbars will be overlaid with
 * translucency on the view's content.
 */
","\android\view\View.java"
"android.view.View.sPool","false","false","true","true","true","Pool<InvalidateInfo>","Pools.synchronizedPool(Pools.finitePool(new PoolableManager<InvalidateInfo>() {

    public InvalidateInfo newInstance() {
        return new InvalidateInfo();
    }

    public void onAcquired(InvalidateInfo element) {
    }

    public void onReleased(InvalidateInfo element) {
    }
}, POOL_LIMIT))","","","\android\view\View.java"
"android.view.View.mOriginalWindowAttachCount","false","false","true","false","false","int","","","","\android\view\View.java"
"android.view.View.FOCUS_BACKWARD","true","false","false","true","true","int","0x00000001","","/**
 * Use with {@link #focusSearch}. Move focus to the previous selectable
 * item.
 */
","\android\view\View.java"
"android.view.View.WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","{ R.attr.state_window_focused }","","/**
 * Indicates the view's window has focus. States are used with
 * {@link android.graphics.drawable.Drawable} to change the drawing of the
 * view depending on its state.
 *
 * @see android.graphics.drawable.Drawable
 * @see #getDrawableState()
 */
","\android\view\View.java"
"android.view.InvalidateInfo.left","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.target","false","false","false","false","false","View","","","","\android\view\View.java"
"android.view.View.mPaddingBottom","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The bottom padding in pixels, that is the distance in pixels between the
 * bottom edge of this view and the bottom edge of its content.
 * {@hide}
 */
","\android\view\View.java"
"android.view.InvalidateInfo.sPool","false","false","true","true","true","Pool<InvalidateInfo>","Pools.synchronizedPool(Pools.finitePool(new PoolableManager<InvalidateInfo>() {

    public InvalidateInfo newInstance() {
        return new InvalidateInfo();
    }

    public void onAcquired(InvalidateInfo element) {
    }

    public void onReleased(InvalidateInfo element) {
    }
}, POOL_LIMIT))","","","\android\view\View.java"
"android.view.View.mKeepScreenOn","false","false","false","false","false","boolean","","","/**
 * Set during a traveral if any views want to keep the screen on.
 */
","\android\view\View.java"
"android.view.AttachInfo.mHandler","false","false","false","false","true","Handler","","","/**
 * A Handler supplied by a view's {@link android.view.ViewRoot}. This
 * handler can be used to pump events in the UI events queue.
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.state","true","false","false","false","false","int","OFF","","/**
 * The current state of the scrollbars: ON, OFF, or FADING
 */
","\android\view\View.java"
"android.view.View.PRESSED","false","false","true","true","true","int","0x00004000","","","\android\view\View.java"
"android.view.View.AWAKEN_SCROLL_BARS_ON_ATTACH","false","false","true","true","true","int","0x08000000","","/**
 * Indicates that we should awaken scroll bars once attached
 *
 * @hide
 */
","\android\view\View.java"
"android.view.View.PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_FOCUSED_SELECTED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed, focused, selected and its window has the focus.
 *
 * @see #PRESSED_STATE_SET
 * @see #FOCUSED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.AttachInfo.left","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.EMPTY_STATE_SET","false","true","false","true","true","int","{}","","/**
 * Indicates the view has no states set. States are used with
 * {@link android.graphics.drawable.Drawable} to change the drawing of the
 * view depending on its state.
 *
 * @see android.graphics.drawable.Drawable
 * @see #getDrawableState()
 */
","\android\view\View.java"
"android.view.View.SELECTED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(SELECTED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is selected and that its window has the focus.
 *
 * @see #SELECTED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.sInstanceCount","false","false","false","true","false","long","0","","// Used for debug only
","\android\view\View.java"
"android.view.AttachInfo.mWindowTop","false","false","false","false","false","int","","","/**
 * Top position of this view's window
 */
","\android\view\View.java"
"android.view.View.PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed, enabled, focused, selected and its window
 * has the focus.
 *
 * @see #PRESSED_STATE_SET
 * @see #ENABLED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #FOCUSED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.POOL_LIMIT","false","false","true","true","true","int","10","","","\android\view\View.java"
"android.view.View.mViewVisibilityChanged","false","false","false","false","false","boolean","","","/**
 * Set if the visibility of any views has changed.
 */
","\android\view\View.java"
"android.view.View.OFF","true","false","false","true","true","int","0","","/**
 * Scrollbars are not visible
 */
","\android\view\View.java"
"android.view.View.top","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.mVisibleInsets","false","false","false","false","true","Rect","new Rect()","","/**
 * For windows that are full-screen but using insets to layout inside
 * of the screen decorations, these are the current insets for the
 * actual visible parts of the window.
 */
","\android\view\View.java"
"android.view.View.DRAWING_CACHE_QUALITY_MASK","false","false","false","true","true","int","0x00180000","","/**
 * <p>Mask for use with setFlags indicating bits used for the cache
 * quality property.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.host","true","false","false","false","false","View","","","","\android\view\View.java"
"android.view.View.mNextFocusLeftId","false","false","true","false","false","int","View.NO_ID","","/**
 * When this view has focus and the next focus is {@link #FOCUS_LEFT},
 * the user may specify which view to go to next.
 */
","\android\view\View.java"
"android.view.View.WILL_NOT_DRAW","false","false","false","true","true","int","0x00000080","","/**
 * This view won't draw. {@link #onDraw} won't be called and further
 * optimizations
 * will be performed. It is okay to have this flag set and a background.
 * Use with DRAW_MASK when calling setFlags.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.scrollBarSize","true","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.HAS_BOUNDS","false","false","false","true","true","int","0x00000010","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.scrollBar","true","false","false","false","false","ScrollBarDrawable","","","","\android\view\View.java"
"android.view.View.mHasWindowFocus","false","false","false","false","false","boolean","","","/**
 * Indicates whether the view's window currently has the focus.
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.FADING","true","false","false","true","true","int","2","","/**
 * Scrollbars are fading away
 */
","\android\view\View.java"
"android.view.View.ENABLED_STATE_SET","false","true","false","true","true","int","{ R.attr.state_enabled }","","/**
 * Indicates the view is enabled. States are used with
 * {@link android.graphics.drawable.Drawable} to change the drawing of the
 * view depending on its state.
 *
 * @see android.graphics.drawable.Drawable
 * @see #getDrawableState()
 */
","\android\view\View.java"
"android.view.View.mParent","false","true","false","false","false","ViewParent","","","/**
 * The parent this view is attached to.
 * {@hide}
 *
 * @see #getParent()
 */
","\android\view\View.java"
"android.view.AttachInfo.POOL_LIMIT","false","false","true","true","true","int","10","","","\android\view\View.java"
"android.view.View.mWindowTop","false","false","false","false","false","int","","","/**
 * Top position of this view's window
 */
","\android\view\View.java"
"android.view.View.SINGLE_STATE_SET","false","true","false","true","true","int","{ R.attr.state_single }","","/**
 * Used by views that contain lists of items. This state indicates that
 * the view is showing only one item.
 * @hide
 */
","\android\view\View.java"
"android.view.View.mOldHeightMeasureSpec","false","false","false","false","false","int","Integer.MIN_VALUE","","/**
 * @hide
 */
","\android\view\View.java"
"android.view.AttachInfo.mGivenInternalInsets","false","false","false","false","true","ViewTreeObserver.InternalInsetsInfo","new ViewTreeObserver.InternalInsetsInfo()","","/**
 * The internal insets given by this window.  This value is
 * supplied by the client (through
 * {@link ViewTreeObserver.OnComputeInternalInsetsListener}) and will
 * be given to the window manager when changed to be used in laying
 * out windows behind it.
 */
","\android\view\View.java"
"android.view.View.REQUEST_TRANSPARENT_REGIONS","false","false","false","true","true","int","0x00000200","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.AttachInfo.INVALIDATE_MSG","false","false","false","true","true","int","0x1","","/**
 * Identifier for messages requesting the view to be invalidated.
 * Such messages should be sent to {@link #mHandler}.
 */
","\android\view\View.java"
"android.view.View.mRight","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The distance in pixels from the left edge of this view's parent
 * to the right edge of this view.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mWindowLeft","false","false","false","false","false","int","","","/**
 * Left position of this view's window
 */
","\android\view\View.java"
"android.view.AttachInfo.top","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.HAPTIC_FEEDBACK_ENABLED","true","false","false","true","true","int","0x10000000","","/**
 * View flag indicating whether this view should have haptic feedback
 * enabled for events such as long presses.
 */
","\android\view\View.java"
"android.view.View.FOCUSED_STATE_SET","false","true","false","true","true","int","{ R.attr.state_focused }","","/**
 * Indicates the view is focused. States are used with
 * {@link android.graphics.drawable.Drawable} to change the drawing of the
 * view depending on its state.
 *
 * @see android.graphics.drawable.Drawable
 * @see #getDrawableState()
 */
","\android\view\View.java"
"android.view.View.DRAWABLE_STATE_DIRTY","false","false","false","true","true","int","0x00000400","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mMinHeight","false","false","true","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The minimum height of the view. We'll try our best to have the height
 * of this view to at least this amount.
 */
","\android\view\View.java"
"android.view.MeasureSpec.MODE_MASK","false","false","true","true","true","int","0x3 << MODE_SHIFT","","","\android\view\View.java"
"android.view.AttachInfo.mRecomputeGlobalAttributes","false","false","false","false","false","boolean","","","/**
 * Indicates that ViewRoot should trigger a global layout change
 * the next time it performs a traversal
 */
","\android\view\View.java"
"android.view.View.mPendingCheckForLongPress","false","false","true","false","false","CheckForLongPress","","","","\android\view\View.java"
"android.view.AttachInfo.mInTouchMode","false","false","false","false","false","boolean","","","/**
 * Indicates whether the view's window is currently in touch mode.
 */
","\android\view\View.java"
"android.view.CheckForLongPress.mOriginalWindowAttachCount","false","false","true","false","false","int","","","","\android\view\View.java"
"android.view.View.sThreadLocal","false","false","false","true","true","ThreadLocal<Rect>","new ThreadLocal<Rect>()","","/**
 * Temporary Rect currently for use in setBackground().  This will probably
 * be extended in the future to hold our own class with more than just
 * a Rect. :)
 */
","\android\view\View.java"
"android.view.View.IS_ROOT_NAMESPACE","false","false","false","true","true","int","0x00000008","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.NO_ID","true","false","false","true","true","int","-1","","/**
 * Used to mark a View that has no ID.
 */
","\android\view\View.java"
"android.view.View.SCROLL_CONTAINER","false","false","false","true","true","int","0x00080000","","/**
 * Set by {@link #setScrollContainer(boolean)}.
 */
","\android\view\View.java"
"android.view.View.FADING_EDGE_VERTICAL","false","false","false","true","true","int","0x00002000","","/**
 * <p>This view shows vertical fading edges.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.DIRTY_OPAQUE","false","false","false","true","true","int","0x00400000","","/**
 * View flag indicating whether this view was invalidated by an opaque
 * invalidate request.
 *
 * @hide
 */
","\android\view\View.java"
"android.view.View.mPerformClick","false","false","true","false","false","PerformClick","","","","\android\view\View.java"
"android.view.View.mInvalidateChildLocation","false","false","false","false","true","int","new int[2]","","/**
 * Global to the view hierarchy used as a temporary for dealing with
 * x/y points in the ViewGroup.invalidateChild implementation.
 */
","\android\view\View.java"
"android.view.AttachInfo.sPool","false","false","true","true","true","Pool<InvalidateInfo>","Pools.synchronizedPool(Pools.finitePool(new PoolableManager<InvalidateInfo>() {

    public InvalidateInfo newInstance() {
        return new InvalidateInfo();
    }

    public void onAcquired(InvalidateInfo element) {
    }

    public void onReleased(InvalidateInfo element) {
    }
}, POOL_LIMIT))","","","\android\view\View.java"
"android.view.AttachInfo.mIgnoreDirtyState","false","false","false","false","false","boolean","","","/**
 * Indicates whether or not ignoring the DIRTY_MASK flags.
 */
","\android\view\View.java"
"android.view.View.mLeft","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The distance in pixels from the left edge of this view's parent
 * to the left edge of this view.
 * {@hide}
 */
","\android\view\View.java"
"android.view.AttachInfo.mTmpInvalRect","false","false","false","false","true","Rect","new Rect()","","/**
 * Temporary for use in computing invalidate rectangles while
 * calling up the hierarchy.
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.scrollBarDefaultDelayBeforeFade","true","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.mContentDescription","false","false","true","false","false","CharSequence","","","/**
 * Briefly describes the view and is primarily used for accessibility support.
 */
","\android\view\View.java"
"android.view.View.PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_ENABLED_FOCUSED_STATE_SET, SELECTED_STATE_SET)","","/**
 * Indicates the view is pressed, enabled, focused and selected.
 *
 * @see #PRESSED_STATE_SET
 * @see #ENABLED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.FIRST_STATE_SET","false","true","false","true","true","int","{ R.attr.state_first }","","/**
 * Used by views that contain lists of items. This state indicates that
 * the view is showing the first item.
 * @hide
 */
","\android\view\View.java"
"android.view.View.mNextFocusRightId","false","false","true","false","false","int","View.NO_ID","","/**
 * When this view has focus and the next focus is {@link #FOCUS_RIGHT},
 * the user may specify which view to go to next.
 */
","\android\view\View.java"
"android.view.View.FOCUS_FORWARD","true","false","false","true","true","int","0x00000002","","/**
 * Use with {@link #focusSearch}. Move focus to the next selectable
 * item.
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_HORIZONTAL","false","false","false","true","true","int","0x00000100","","/**
 * <p>This view shows horizontal scrollbars.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.DRAWN","false","false","false","true","true","int","0x00000020","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_OUTSIDE_INSET","true","false","false","true","true","int","0x03000000","","/**
 * The scrollbar style to display the scrollbars at the edge of the view,
 * increasing the padding of the view. The scrollbars will only overlap the
 * background, if any.
 */
","\android\view\View.java"
"android.view.View.mTranslucentWindow","false","false","false","false","false","boolean","","","/**
 * Indicates whether the window is translucent/transparent
 */
","\android\view\View.java"
"android.view.View.PRESSED_MIDDLE_STATE_SET","false","true","false","true","true","int","{ R.attr.state_middle, R.attr.state_pressed }","","/**
 * Used by views that contain lists of items. This state indicates that
 * the view is pressed and showing the middle item.
 * @hide
 */
","\android\view\View.java"
"android.view.View.OPAQUE_SCROLLBARS","false","false","false","true","true","int","0x01000000","","/**
 * Indicates whether the scrollbars are opaque.
 *
 * @hide
 */
","\android\view\View.java"
"android.view.View.ENABLED_SELECTED_STATE_SET","false","true","false","true","true","int","stateSetUnion(ENABLED_STATE_SET, SELECTED_STATE_SET)","","/**
 * Indicates the view is enabled and selected.
 *
 * @see #ENABLED_STATE_SET
 * @see #SELECTED_STATE_SET
 */
","\android\view\View.java"
"android.view.AttachInfo.mKeepScreenOn","false","false","false","false","false","boolean","","","/**
 * Set during a traveral if any views want to keep the screen on.
 */
","\android\view\View.java"
"android.view.InvalidateInfo.right","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.SCROLLBARS_OUTSIDE_OVERLAY","true","false","false","true","true","int","0x02000000","","/**
 * The scrollbar style to display the scrollbars at the edge of the view,
 * without increasing the padding. The scrollbars will be overlaid with
 * translucency.
 */
","\android\view\View.java"
"android.view.AttachInfo.mWindowVisibility","false","false","false","false","false","int","","","/**
 * The current visibility of the window.
 */
","\android\view\View.java"
"android.view.View.PRESSED_ENABLED_SELECTED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_ENABLED_STATE_SET, SELECTED_STATE_SET)","","/**
 * Indicates the view is pressed, enabled and selected.
 *
 * @see #PRESSED_STATE_SET
 * @see #ENABLED_STATE_SET
 * @see #SELECTED_STATE_SET
 */
","\android\view\View.java"
"android.view.AttachInfo.mApplicationScale","false","false","false","false","false","float","","","/**
 * Scale factor used by the compatibility mode
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.shader","true","false","false","false","false","Shader","","","","\android\view\View.java"
"android.view.AttachInfo.mViewScrollChanged","false","false","false","false","false","boolean","","","/**
 * Set to true if a view has been scrolled.
 */
","\android\view\View.java"
"android.view.View.mViewFlags","false","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The view flags hold various views states.
 * {@hide}
 */
","\android\view\View.java"
"android.view.InvalidateInfo.bottom","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.AttachInfo.mViewVisibilityChanged","false","false","false","false","false","boolean","","","/**
 * Set if the visibility of any views has changed.
 */
","\android\view\View.java"
"android.view.AttachInfo.mKeyDispatchState","false","false","false","false","true","KeyEvent.DispatcherState","new KeyEvent.DispatcherState()","","","\android\view\View.java"
"android.view.View.VISIBILITY_MASK","false","false","false","true","true","int","0x0000000C","","/**
 * Mask for use with setFlags indicating bits used for visibility.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.OPAQUE_MASK","false","false","false","true","true","int","0x01800000","","/**
 * Indicates whether the view is opaque.
 *
 * @hide
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.fadeStartTime","true","false","false","false","false","long","","","/**
 * When fading should start. This time moves into the future every time
 * a new scroll happens. Measured based on SystemClock.uptimeMillis()
 */
","\android\view\View.java"
"android.view.View.DIRTY","false","false","false","true","true","int","0x00200000","","/**
 * View flag indicating whether this view was invalidated (fully or partially.)
 *
 * @hide
 */
","\android\view\View.java"
"android.view.View.mScalingRequired","false","false","false","false","false","boolean","","","/**
 * Indicates whether the application is in compatibility mode
 */
","\android\view\View.java"
"android.view.View.SKIP_DRAW","false","false","false","true","true","int","0x00000080","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.SAVE_DISABLED","false","false","false","true","true","int","0x000010000","","/**
 * <p>Indicates that no icicle should be saved for this view.<p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.right","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.PRESSED_SINGLE_STATE_SET","false","true","false","true","true","int","{ R.attr.state_single, R.attr.state_pressed }","","/**
 * Used by views that contain lists of items. This state indicates that
 * the view is pressed and showing only one item.
 * @hide
 */
","\android\view\View.java"
"android.view.View.SAVE_DISABLED_MASK","false","false","false","true","true","int","0x000010000","","/**
 * <p>Mask for use with setFlags indicating bits used for the saveEnabled
 * property.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.ANIMATION_STARTED","false","false","false","true","true","int","0x00010000","","/**
 * Flag used to indicate that this view should be drawn once more (and only once
 * more) after its animation has completed.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.fadeScrollBars","true","false","false","false","false","boolean","","","","\android\view\View.java"
"android.view.View.mBackgroundResource","false","false","true","false","false","int","","","","\android\view\View.java"
"android.view.View.mWindow","false","false","false","false","true","IWindow","","","","\android\view\View.java"
"android.view.View.sTagsLock","false","false","true","true","true","Object","new Object()","","/**
 * Lock used to access sTags.
 */
","\android\view\View.java"
"android.view.View.bottom","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.mLayoutParams","false","true","false","false","false","ViewGroup.LayoutParams","","","/**
 * The layout parameters associated with this view and used by the parent
 * {@link android.view.ViewGroup} to determine how this view should be
 * laid out.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mOldWidthMeasureSpec","false","false","false","false","false","int","Integer.MIN_VALUE","","/**
 * @hide
 */
","\android\view\View.java"
"android.view.AttachInfo.mSession","false","false","false","false","true","IWindowSession","","","","\android\view\View.java"
"android.view.View.ON","true","false","false","true","true","int","1","","/**
 * Scrollbars are visible
 */
","\android\view\View.java"
"android.view.View.FADING_EDGE_HORIZONTAL","false","false","false","true","true","int","0x00001000","","/**
 * <p>This view shows horizontal fading edges.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.FOCUSABLES_TOUCH_MODE","true","false","false","true","true","int","0x00000001","","/**
 * View flag indicating whether {@link #addFocusables(ArrayList, int, int)}
 * should add only Views focusable in touch mode.
 */
","\android\view\View.java"
"android.view.AttachInfo.mTransparentLocation","false","false","false","false","true","int","new int[2]","","/**
 * Global to the view hierarchy used as a temporary for dealing with
 * x/y points in the transparent region computations.
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.fadingEdgeLength","true","false","false","false","false","int","","","","\android\view\View.java"
"android.view.ScrollabilityCache.fadeScrollBars","true","false","false","false","false","boolean","","","","\android\view\View.java"
"android.view.View.mHasPerformedLongPress","false","false","true","false","false","boolean","","","/**
 * Whether the long press's action has been invoked.  The tap's action is invoked on the
 * up event while a long press is invoked as soon as the long press duration is reached, so
 * a long press could be performed before the tap is checked, in which case the tap's action
 * should not be invoked.
 */
","\android\view\View.java"
"android.view.View.FOCUS_LEFT","true","false","false","true","true","int","0x00000011","","/**
 * Use with {@link #focusSearch}. Move focus to the left.
 */
","\android\view\View.java"
"android.view.View.mRecomputeGlobalAttributes","false","false","false","false","false","boolean","","","/**
 * Indicates that ViewRoot should trigger a global layout change
 * the next time it performs a traversal
 */
","\android\view\View.java"
"android.view.AttachInfo.mHasWindowFocus","false","false","false","false","false","boolean","","","/**
 * Indicates whether the view's window currently has the focus.
 */
","\android\view\View.java"
"android.view.View.mUserPaddingBottom","false","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * Cache the paddingBottom set by the user to append to the scrollbar's size.
 */
","\android\view\View.java"
"android.view.View.DISABLED","false","false","false","true","true","int","0x00000020","","/**
 * This view is disabled. Intrepretation varies by subclass.
 * Use with ENABLED_MASK when calling setFlags.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.FOCUSABLE_IN_TOUCH_MODE","false","false","false","true","true","int","0x00040000","","/**
 * <p>Indicates this view can take / keep focus when int touch mode.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mTop","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The distance in pixels from the top edge of this view's parent
 * to the top edge of this view.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mGivenInternalInsets","false","false","false","false","true","ViewTreeObserver.InternalInsetsInfo","new ViewTreeObserver.InternalInsetsInfo()","","/**
 * The internal insets given by this window.  This value is
 * supplied by the client (through
 * {@link ViewTreeObserver.OnComputeInternalInsetsListener}) and will
 * be given to the window manager when changed to be used in laying
 * out windows behind it.
 */
","\android\view\View.java"
"android.view.View.FADING","true","false","false","true","true","int","2","","/**
 * Scrollbars are fading away
 */
","\android\view\View.java"
"android.view.View.SCROLLBARS_VERTICAL","false","false","false","true","true","int","0x00000200","","/**
 * <p>This view shows vertical scrollbars.</p>
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.host","true","false","false","false","false","View","","","","\android\view\View.java"
"android.view.View.LAST_STATE_SET","false","true","false","true","true","int","{ R.attr.state_last }","","/**
 * Used by views that contain lists of items. This state indicates that
 * the view is showing the last item.
 * @hide
 */
","\android\view\View.java"
"android.view.View.mMeasuredWidth","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * Width as measured during measure pass.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mHandler","false","false","false","false","true","Handler","","","/**
 * A Handler supplied by a view's {@link android.view.ViewRoot}. This
 * handler can be used to pump events in the UI events queue.
 */
","\android\view\View.java"
"android.view.View.PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_ENABLED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed, enabled and its window has the focus.
 *
 * @see #PRESSED_STATE_SET
 * @see #ENABLED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.mBackgroundSizeChanged","false","false","true","false","false","boolean","","","","\android\view\View.java"
"android.view.View.UNSPECIFIED","true","false","false","true","true","int","0 << MODE_SHIFT","","/**
 * Measure specification mode: The parent has not imposed any constraint
 * on the child. It can be whatever size it wants.
 */
","\android\view\View.java"
"android.view.View.KEEP_SCREEN_ON","true","false","false","true","true","int","0x04000000","","/**
 * View flag indicating that the screen should remain on while the
 * window containing this view is visible to the user.  This effectively
 * takes care of automatically setting the WindowManager's
 * {@link WindowManager.LayoutParams#FLAG_KEEP_SCREEN_ON}.
 */
","\android\view\View.java"
"android.view.InvalidateInfo.top","false","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(ENABLED_FOCUSED_SELECTED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is enabled, focused, selected and its window
 * has the focus.
 *
 * @see #ENABLED_STATE_SET
 * @see #FOCUSED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.mWindowAttachCount","false","false","false","false","false","int","","","/**
 * Count of how many windows this view has been attached to.
 */
","\android\view\View.java"
"android.view.View.mViewScrollChanged","false","false","false","false","false","boolean","","","/**
 * Set to true if a view has been scrolled.
 */
","\android\view\View.java"
"android.view.View.PRESSED_ENABLED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_STATE_SET, ENABLED_STATE_SET)","","/**
 * Indicates the view is pressed and enabled.
 *
 * @see #PRESSED_STATE_SET
 * @see #ENABLED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.INVISIBLE","true","false","false","true","true","int","0x00000004","","/**
 * This view is invisible, but it still takes up space for layout purposes.
 * Use with {@link #setVisibility}.
 */
","\android\view\View.java"
"android.view.View.matrix","true","false","false","false","true","Matrix","","","","\android\view\View.java"
"android.view.View.mTransparentLocation","false","false","false","false","true","int","new int[2]","","/**
 * Global to the view hierarchy used as a temporary for dealing with
 * x/y points in the transparent region computations.
 */
","\android\view\View.java"
"android.view.View.mNext","false","false","true","false","false","InvalidateInfo","","","","\android\view\View.java"
"android.view.View.FOCUSED","false","false","false","true","true","int","0x00000002","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.AttachInfo.mTranslucentWindow","false","false","false","false","false","boolean","","","/**
 * Indicates whether the window is translucent/transparent
 */
","\android\view\View.java"
"android.view.View.MEASURED_DIMENSION_SET","false","false","false","true","true","int","0x00000800","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.FOCUS_UP","true","false","false","true","true","int","0x00000021","","/**
 * Use with {@link #focusSearch}. Move focus up.
 */
","\android\view\View.java"
"android.view.View.mIgnoreDirtyState","false","false","false","false","false","boolean","","","/**
 * Indicates whether or not ignoring the DIRTY_MASK flags.
 */
","\android\view\View.java"
"android.view.MeasureSpec.EXACTLY","true","false","false","true","true","int","1 << MODE_SHIFT","","/**
 * Measure specification mode: The parent has determined an exact size
 * for the child. The child is going to be given those bounds regardless
 * of how big it wants to be.
 */
","\android\view\View.java"
"android.view.View.FOCUSED_SELECTED_STATE_SET","false","true","false","true","true","int","stateSetUnion(FOCUSED_STATE_SET, SELECTED_STATE_SET)","","/**
 * Indicates the view is focused and selected.
 *
 * @see #FOCUSED_STATE_SET
 * @see #SELECTED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.mPrivateFlags","false","false","false","false","false","int","","@ViewDebug.ExportedProperty(flagMapping = { @ViewDebug.FlagToString(mask = FORCE_LAYOUT, equals = FORCE_LAYOUT, name = ""FORCE_LAYOUT""), @ViewDebug.FlagToString(mask = LAYOUT_REQUIRED, equals = LAYOUT_REQUIRED, name = ""LAYOUT_REQUIRED""), @ViewDebug.FlagToString(mask = DRAWING_CACHE_VALID, equals = DRAWING_CACHE_VALID, name = ""DRAWING_CACHE_INVALID"", outputIf = false), @ViewDebug.FlagToString(mask = DRAWN, equals = DRAWN, name = ""DRAWN"", outputIf = true), @ViewDebug.FlagToString(mask = DRAWN, equals = DRAWN, name = ""NOT_DRAWN"", outputIf = false), @ViewDebug.FlagToString(mask = DIRTY_MASK, equals = DIRTY_OPAQUE, name = ""DIRTY_OPAQUE""), @ViewDebug.FlagToString(mask = DIRTY_MASK, equals = DIRTY, name = ""DIRTY"") })","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mPanelParentWindowToken","false","false","false","false","false","IBinder","","","","\android\view\View.java"
"android.view.AttachInfo.mRootView","false","false","false","false","false","View","","","/**
 * The top view of the hierarchy.
 */
","\android\view\View.java"
"android.view.MeasureSpec.MODE_SHIFT","false","false","true","true","true","int","30","","","\android\view\View.java"
"android.view.View.mOpaque","false","false","true","false","true","float","{ 255.0f }","","","\android\view\View.java"
"android.view.View.mUnscaledDrawingCache","false","false","true","false","false","SoftReference<Bitmap>","","","","\android\view\View.java"
"android.view.View.scrollBarDefaultDelayBeforeFade","true","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.PRESSED_FIRST_STATE_SET","false","true","false","true","true","int","{ R.attr.state_first, R.attr.state_pressed }","","/**
 * Used by views that contain lists of items. This state indicates that
 * the view is pressed and showing the first item.
 * @hide
 */
","\android\view\View.java"
"android.view.View.fadeStartTime","true","false","false","false","false","long","","","/**
 * When fading should start. This time moves into the future every time
 * a new scroll happens. Measured based on SystemClock.uptimeMillis()
 */
","\android\view\View.java"
"android.view.View.PRESSED_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_STATE_SET, FOCUSED_STATE_SET)","","/**
 * Indicates the view is pressed and focused.
 *
 * @see #PRESSED_STATE_SET
 * @see #FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.AttachInfo.target","false","false","false","false","false","View","","","","\android\view\View.java"
"android.view.View.mApplicationScale","false","false","false","false","false","float","","","/**
 * Scale factor used by the compatibility mode
 */
","\android\view\View.java"
"android.view.View.mDrawingTime","false","false","false","false","false","long","","","/**
 * Indicates the time at which drawing started to occur.
 */
","\android\view\View.java"
"android.view.AttachInfo.mRootCallbacks","false","false","false","false","true","Callbacks","","","","\android\view\View.java"
"android.view.View.mPendingCheckForTap","false","false","true","false","false","CheckForTap","null","","","\android\view\View.java"
"android.view.View.scrollBarFadeDuration","true","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.CANCEL_NEXT_UP_EVENT","false","false","false","true","true","int","0x04000000","","/**
 * Indicates whether the view is temporarily detached.
 *
 * @hide
 */
","\android\view\View.java"
"android.view.View.ALPHA_SET","false","false","false","true","true","int","0x00040000","","/**
 * Indicates that the View returned true when onSetAlpha() was called and that
 * the alpha must be restored.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.scrollBarInterpolator","true","false","false","false","true","Interpolator","new Interpolator(1, 2)","","","\android\view\View.java"
"android.view.MeasureSpec.UNSPECIFIED","true","false","false","true","true","int","0 << MODE_SHIFT","","/**
 * Measure specification mode: The parent has not imposed any constraint
 * on the child. It can be whatever size it wants.
 */
","\android\view\View.java"
"android.view.View.mWindowVisibility","false","false","false","false","false","int","","","/**
 * The current visibility of the window.
 */
","\android\view\View.java"
"android.view.View.SAVE_STATE_CALLED","false","false","true","true","true","int","0x00020000","","","\android\view\View.java"
"android.view.View.mTouchDelegate","false","false","true","false","false","TouchDelegate","null","","/**
 * The delegate to handle touch events that are physically in this view
 * but should be handled by another view.
 */
","\android\view\View.java"
"android.view.View.DRAW_MASK","false","false","false","true","true","int","0x00000080","","/**
 * Mask for use with setFlags indicating bits used for indicating whether
 * this view is will draw
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.FOCUS_RIGHT","true","false","false","true","true","int","0x00000042","","/**
 * Use with {@link #focusSearch}. Move focus to the right.
 */
","\android\view\View.java"
"android.view.View.mWindowToken","false","false","false","false","true","IBinder","","","","\android\view\View.java"
"android.view.View.mTransparent","false","false","true","false","true","float","{ 0.0f }","","","\android\view\View.java"
"android.view.View.mScrollCache","false","false","true","false","false","ScrollabilityCache","","","","\android\view\View.java"
"android.view.View.shader","true","false","false","false","false","Shader","","","","\android\view\View.java"
"android.view.View.mPaddingLeft","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The left padding in pixels, that is the distance in pixels between the
 * left edge of this view and the left edge of its content.
 * {@hide}
 */
","\android\view\View.java"
"android.view.AttachInfo.mScrollContainers","false","false","false","false","true","ArrayList<View>","new ArrayList<View>()","","/**
 * All views in the window's hierarchy that serve as scroll containers,
 * used to determine if the window can be resized or must be panned
 * to adjust for a soft input area.
 */
","\android\view\View.java"
"android.view.View.mRootCallbacks","false","false","false","false","true","Callbacks","","","","\android\view\View.java"
"android.view.BaseSavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<BaseSavedState>","new Parcelable.Creator<BaseSavedState>() {

    public BaseSavedState createFromParcel(Parcel in) {
        return new BaseSavedState(in);
    }

    public BaseSavedState[] newArray(int size) {
        return new BaseSavedState[size];
    }
}","","","\android\view\View.java"
"android.view.InvalidateInfo.POOL_LIMIT","false","false","true","true","true","int","10","","","\android\view\View.java"
"android.view.View.mUnsetPressedState","false","false","true","false","false","UnsetPressedState","","","","\android\view\View.java"
"android.view.View.DIRTY_MASK","false","false","false","true","true","int","0x00600000","","/**
 * Mask for {@link #DIRTY} and {@link #DIRTY_OPAQUE}.
 *
 * @hide
 */
","\android\view\View.java"
"android.view.View.ENABLED","false","false","false","true","true","int","0x00000000","","/**
 * This view is enabled. Intrepretation varies by subclass.
 * Use with ENABLED_MASK when calling setFlags.
 * {@hide}
 */
","\android\view\View.java"
"android.view.AttachInfo.mContentInsets","false","false","false","false","true","Rect","new Rect()","","/**
 * For windows that are full-screen but using insets to layout inside
 * of the screen decorations, these are the current insets for the
 * content of the window.
 */
","\android\view\View.java"
"android.view.View.INVALIDATE_RECT_MSG","false","false","false","true","true","int","0x2","","/**
 * Identifier for messages requesting the view to invalidate a region.
 * Such messages should be sent to {@link #mHandler}.
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.ON","true","false","false","true","true","int","1","","/**
 * Scrollbars are visible
 */
","\android\view\View.java"
"android.view.View.ENABLED_FOCUSED_SELECTED_STATE_SET","false","true","false","true","true","int","stateSetUnion(ENABLED_FOCUSED_STATE_SET, SELECTED_STATE_SET)","","/**
 * Indicates the view is enabled, focused and selected.
 *
 * @see #ENABLED_STATE_SET
 * @see #FOCUSED_STATE_SET
 * @see #SELECTED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.mUserPaddingRight","false","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * Cache the paddingRight set by the user to append to the scrollbar's size.
 */
","\android\view\View.java"
"android.view.View.mOnClickListener","false","true","false","false","false","OnClickListener","","","/**
 * Listener used to dispatch click events.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mCanvas","false","false","false","false","false","Canvas","","","/**
 * A Canvas used by the view hierarchy to perform bitmap caching.
 */
","\android\view\View.java"
"android.view.AttachInfo.mFocusablesTempList","false","false","false","false","true","ArrayList<View>","new ArrayList<View>(24)","","/**
 * Temporary list for use in collecting focusable descendents of a view.
 */
","\android\view\View.java"
"android.view.View.DBG","false","false","true","true","true","boolean","false","","","\android\view\View.java"
"android.view.AttachInfo.mSurface","false","false","false","false","false","Surface","","","","\android\view\View.java"
"android.view.View.PRESSED_STATE_SET","false","true","false","true","true","int","{ R.attr.state_pressed }","","/**
 * Indicates the view is pressed. States are used with
 * {@link android.graphics.drawable.Drawable} to change the drawing of the
 * view depending on its state.
 *
 * @see android.graphics.drawable.Drawable
 * @see #getDrawableState()
 * @hide
 */
","\android\view\View.java"
"android.view.View.DRAWING_CACHE_QUALITY_FLAGS","false","false","true","true","true","int","{ DRAWING_CACHE_QUALITY_AUTO, DRAWING_CACHE_QUALITY_LOW, DRAWING_CACHE_QUALITY_HIGH }","","","\android\view\View.java"
"android.view.View.mPaddingTop","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The top padding in pixels, that is the distance in pixels between the
 * top edge of this view and the top edge of its content.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mCurrentAnimation","false","true","false","false","false","Animation","null","","/**
 * The animation currently associated with this view.
 * @hide
 */
","\android\view\View.java"
"android.view.View.FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(FOCUSED_SELECTED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is focused, selected and its window has the focus.
 *
 * @see #FOCUSED_STATE_SET
 * @see #SELECTED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.scrollBarFadeDuration","true","false","false","false","false","int","","","","\android\view\View.java"
"android.view.View.mMeasuredHeight","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * Height as measured during measure pass.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.NOT_FOCUSABLE","false","false","true","true","true","int","0x00000000","","/**
 * This view does not want keystrokes. Use with TAKES_FOCUS_MASK when
 * calling setFlags.
 */
","\android\view\View.java"
"android.view.View.mContentInsets","false","false","false","false","true","Rect","new Rect()","","/**
 * For windows that are full-screen but using insets to layout inside
 * of the screen decorations, these are the current insets for the
 * content of the window.
 */
","\android\view\View.java"
"android.view.View.WANTS_FOCUS","false","false","false","true","true","int","0x00000001","","/**
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mBottom","false","true","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The distance in pixels from the top edge of this view's parent
 * to the bottom edge of this view.
 * {@hide}
 */
","\android\view\View.java"
"android.view.View.mOnLongClickListener","false","true","false","false","false","OnLongClickListener","","","/**
 * Listener used to dispatch long click events.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\View.java"
"android.view.ScrollabilityCache.scrollBar","true","false","false","false","false","ScrollBarDrawable","","","","\android\view\View.java"
"android.view.View.mDrawableState","false","false","true","false","false","int","null","","","\android\view\View.java"
"android.view.View.mMinWidth","false","false","true","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The minimum width of the view. We'll try our best to have the width
 * of this view to at least this amount.
 */
","\android\view\View.java"
"android.view.View.ENABLED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(ENABLED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is enabled and that its window has focus.
 *
 * @see #ENABLED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.InvalidateInfo.mNext","false","false","true","false","false","InvalidateInfo","","","","\android\view\View.java"
"android.view.View.mFloatingTreeObserver","false","false","true","false","false","ViewTreeObserver","","","/**
 * Special tree observer used when mAttachInfo is null.
 */
","\android\view\View.java"
"android.view.View.FOCUSABLE","false","false","true","true","true","int","0x00000001","","/**
 * This view wants keystrokes. Use with TAKES_FOCUS_MASK when calling
 * setFlags.
 */
","\android\view\View.java"
"android.view.View.PRESSED_SELECTED_STATE_SET","false","true","false","true","true","int","stateSetUnion(PRESSED_STATE_SET, SELECTED_STATE_SET)","","/**
 * Indicates the view is pressed and selected.
 *
 * @see #PRESSED_STATE_SET
 * @see #SELECTED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.mRootView","false","false","false","false","false","View","","","/**
 * The top view of the hierarchy.
 */
","\android\view\View.java"
"android.view.View.ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET","false","true","false","true","true","int","stateSetUnion(ENABLED_FOCUSED_STATE_SET, WINDOW_FOCUSED_STATE_SET)","","/**
 * Indicates the view is enabled, focused and its window has the focus.
 *
 * @see #ENABLED_STATE_SET
 * @see #FOCUSED_STATE_SET
 * @see #WINDOW_FOCUSED_STATE_SET
 */
","\android\view\View.java"
"android.view.View.WILL_NOT_CACHE_DRAWING","false","false","false","true","true","int","0x000020000","","/**
 * <p>Indicates that no drawing cache should ever be created for this view.<p>
 * {@hide}
 */
","\android\view\View.java"
"android.net.LocalSocket.isBound","false","false","true","false","false","boolean","","","","\android\net\LocalSocket.java"
"android.net.LocalSocket.implCreated","false","false","true","false","false","boolean","","","","\android\net\LocalSocket.java"
"android.net.LocalSocket.impl","false","false","true","false","false","LocalSocketImpl","","","","\android\net\LocalSocket.java"
"android.net.LocalSocket.localAddress","false","false","true","false","false","LocalSocketAddress","","","","\android\net\LocalSocket.java"
"android.net.LocalSocket.isConnected","false","false","true","false","false","boolean","","","","\android\net\LocalSocket.java"
"android.util.MonthDisplayHelper.mNumDaysInMonth","false","false","true","false","false","int","","","// cached computed stuff that helps with display
","\android\util\MonthDisplayHelper.java"
"android.util.MonthDisplayHelper.mOffset","false","false","true","false","false","int","","","","\android\util\MonthDisplayHelper.java"
"android.util.MonthDisplayHelper.mNumDaysInPrevMonth","false","false","true","false","false","int","","","","\android\util\MonthDisplayHelper.java"
"android.util.MonthDisplayHelper.mWeekStartDay","false","false","true","false","true","int","","","// display pref
","\android\util\MonthDisplayHelper.java"
"android.util.MonthDisplayHelper.mCalendar","false","false","true","false","false","Calendar","","","// holds current month, year, helps compute display
","\android\util\MonthDisplayHelper.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mIndicatorRect","false","false","true","false","true","Rect","new Rect()","","// Bounds of the indicator to be drawn
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_MASK_GROUP","false","false","true","true","true","long","0x7FFFFFFF00000000L","","/**
 * The mask (in packed position representation) for the group
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mClipChildDivider","false","false","true","false","false","boolean","","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mChildIndicatorRight","false","false","true","false","false","int","","","/**
 * Right bound for drawing the indicator of a child. Value of
 * {@link #CHILD_INDICATOR_INHERIT} means use mIndicatorRight.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_INT_MASK_CHILD","false","false","true","true","true","long","0xFFFFFFFF","","/**
 * The mask (in integer child position representation) for the child
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mGroupIndicator","false","false","true","false","false","Drawable","","","/**
 * The indicator drawn next to a group.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.CHILD_LAST_STATE_SET","false","false","true","true","true","int","{ R.attr.state_last }","","/**
 * State indicating the child is the last within its group.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mOnChildClickListener","false","false","true","false","false","OnChildClickListener","","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_MASK_CHILD","false","false","true","true","true","long","0x00000000FFFFFFFFL","","/**
 * The mask (in packed position representation) for the child
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mOnGroupExpandListener","false","false","true","false","false","OnGroupExpandListener","","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_SHIFT_TYPE","false","false","true","true","true","long","63","","/**
 * The shift amount (in packed position representation) for the type
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.expandedGroupMetadataList","false","false","false","false","false","ArrayList<ExpandableListConnector.GroupMetadata>","","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mChildIndicator","false","false","true","false","false","Drawable","","","/**
 * The indicator drawn next to a child.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_TYPE_GROUP","true","false","false","true","true","int","0","","/**
 * The packed position represents a group.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.EMPTY_STATE_SET","false","false","true","true","true","int","{}","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.GROUP_STATE_SETS","false","false","true","true","true","int","{ // 00
EMPTY_STATE_SET, // 01
GROUP_EXPANDED_STATE_SET, // 10
GROUP_EMPTY_STATE_SET, // 11
GROUP_EXPANDED_EMPTY_STATE_SET }","","/**
 * States for the group where the 0th bit is expanded and 1st bit is empty.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListContextMenuInfo.packedPosition","true","false","false","false","false","long","","","/**
 * The packed position in the list represented by the adapter for which
 * the context menu is being displayed. Use the methods
 * {@link ExpandableListView#getPackedPositionType},
 * {@link ExpandableListView#getPackedPositionChild}, and
 * {@link ExpandableListView#getPackedPositionGroup} to unpack this.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListContextMenuInfo.targetView","true","false","false","false","false","View","","","/**
 * The view for which the context menu is being displayed. This
 * will be one of the children Views of this {@link ExpandableListView}.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_VALUE_NULL","true","false","false","true","true","long","0x00000000FFFFFFFFL","","/**
 * The value for a packed position that represents neither/null/no
 * preference. This value is not otherwise possible since a group type
 * (first bit 0) should not have a child position filled.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mChildDivider","false","false","true","false","false","Drawable","","","/**
 * Drawable to be used as a divider when it is adjacent to any children
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mOnGroupClickListener","false","false","true","false","false","OnGroupClickListener","","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_INT_MASK_GROUP","false","false","true","true","true","long","0x7FFFFFFF","","/**
 * The mask (in integer group position representation) for the group
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.GROUP_EXPANDED_EMPTY_STATE_SET","false","false","true","true","true","int","{ R.attr.state_expanded, R.attr.state_empty }","","/**
 * State indicating the group is expanded and empty (has no children).
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.id","true","false","false","false","false","long","","","/**
 * The ID of the item (group or child) for which the context menu is
 * being displayed.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.packedPosition","true","false","false","false","false","long","","","/**
 * The packed position in the list represented by the adapter for which
 * the context menu is being displayed. Use the methods
 * {@link ExpandableListView#getPackedPositionType},
 * {@link ExpandableListView#getPackedPositionChild}, and
 * {@link ExpandableListView#getPackedPositionGroup} to unpack this.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_SHIFT_GROUP","false","false","true","true","true","long","32","","/**
 * The shift amount (in packed position representation) for the group
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mIndicatorLeft","false","false","true","false","false","int","","","/**
 * Left bound for drawing the indicator.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mConnector","false","false","true","false","false","ExpandableListConnector","","","/**
 * Serves as the glue/translator between a ListView and an ExpandableListView
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.CHILD_INDICATOR_INHERIT","true","false","false","true","true","int","-1","","/**
 * Denotes when a child indicator should inherit this bound from the generic
 * indicator bounds
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.targetView","true","false","false","false","false","View","","","/**
 * The view for which the context menu is being displayed. This
 * will be one of the children Views of this {@link ExpandableListView}.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListContextMenuInfo.id","true","false","false","false","false","long","","","/**
 * The ID of the item (group or child) for which the context menu is
 * being displayed.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mChildIndicatorLeft","false","false","true","false","false","int","","","/**
 * Left bound for drawing the indicator of a child. Value of
 * {@link #CHILD_INDICATOR_INHERIT} means use mIndicatorLeft.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mOnGroupCollapseListener","false","false","true","false","false","OnGroupCollapseListener","","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_MASK_TYPE","false","false","true","true","true","long","0x8000000000000000L","","/**
 * The mask (in packed position representation) for the type
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mIndicatorRight","false","false","true","false","false","int","","","/**
 * Right bound for drawing the indicator.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.mAdapter","false","false","true","false","false","ExpandableListAdapter","","","/**
 * Gives us Views through group+child positions
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.GROUP_EMPTY_STATE_SET","false","false","true","true","true","int","{ R.attr.state_empty }","","/**
 * State indicating the group is empty (has no children).
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_TYPE_NULL","true","false","false","true","true","int","2","","/**
 * The packed position represents a neither/null/no preference.
 */
","\android\widget\ExpandableListView.java"
"android.widget.SavedState.expandedGroupMetadataList","false","false","false","false","false","ArrayList<ExpandableListConnector.GroupMetadata>","","","","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.PACKED_POSITION_TYPE_CHILD","true","false","false","true","true","int","1","","/**
 * The packed position represents a child.
 */
","\android\widget\ExpandableListView.java"
"android.widget.ExpandableListView.GROUP_EXPANDED_STATE_SET","false","false","true","true","true","int","{ R.attr.state_expanded }","","/**
 * State indicating the group is expanded.
 */
","\android\widget\ExpandableListView.java"
"android.content.DialogInterface.BUTTON_NEUTRAL","true","false","false","true","true","int","-3","","/**
 * The identifier for the neutral button.
 */
","\android\content\DialogInterface.java"
"android.content.DialogInterface.BUTTON_POSITIVE","true","false","false","true","true","int","-1","","/**
 * The identifier for the positive button.
 */
","\android\content\DialogInterface.java"
"android.content.DialogInterface.BUTTON2","true","false","false","true","true","int","BUTTON_NEGATIVE","@Deprecated","/**
 * @deprecated Use {@link #BUTTON_NEGATIVE}
 */
","\android\content\DialogInterface.java"
"android.content.DialogInterface.BUTTON1","true","false","false","true","true","int","BUTTON_POSITIVE","@Deprecated","/**
 * @deprecated Use {@link #BUTTON_POSITIVE}
 */
","\android\content\DialogInterface.java"
"android.content.DialogInterface.BUTTON3","true","false","false","true","true","int","BUTTON_NEUTRAL","@Deprecated","/**
 * @deprecated Use {@link #BUTTON_NEUTRAL}
 */
","\android\content\DialogInterface.java"
"android.content.DialogInterface.BUTTON_NEGATIVE","true","false","false","true","true","int","-2","","/**
 * The identifier for the negative button.
 */
","\android\content\DialogInterface.java"
"android.text.util.Rfc822Token.mName","false","false","true","false","false","String","","","","\android\text\util\Rfc822Token.java"
"com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient.mTempRect","false","false","true","false","true","Rect","new Rect()","","","\com\android\internal\widget\LinearLayoutWithDefaultTouchRecepient.java"
"com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient.mDefaultTouchRecepient","false","false","true","false","false","View","","","","\com\android\internal\widget\LinearLayoutWithDefaultTouchRecepient.java"
"com.android.internal.view.menu.SubMenuBuilder.mParentMenu","false","false","true","false","false","MenuBuilder","","","","\com\android\internal\view\menu\SubMenuBuilder.java"
"com.android.internal.view.menu.SubMenuBuilder.mItem","false","false","true","false","false","MenuItemImpl","","","","\com\android\internal\view\menu\SubMenuBuilder.java"
"android.provider.BaseColumns._ID","true","false","false","true","true","String","""_id""","","/**
 * The unique ID for a row.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\BaseColumns.java"
"android.provider.BaseColumns._COUNT","true","false","false","true","true","String","""_count""","","/**
 * The count of rows in a directory.
 * <P>Type: INTEGER</P>
 */
","\android\provider\BaseColumns.java"
"android.view.ViewGroup.CHILD_LEFT_INDEX","false","false","true","true","true","int","0","","// Index of the child's left position in the mLocation array
","\android\view\ViewGroup.java"
"android.view.ViewGroup.ARRAY_INITIAL_CAPACITY","false","false","true","true","true","int","12","","","\android\view\ViewGroup.java"
"android.view.ViewGroup.mGroupFlags","false","true","false","false","false","int","","","/**
 * Internal flags.
 *
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mPersistentDrawingCache","false","true","false","false","false","int","","","/**
 * Indicates which types of drawing caches are to be kept in memory.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FOCUS_AFTER_DESCENDANTS","true","false","false","true","true","int","0x40000","","/**
 * This view will get focus only if none of its descendants want it.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.PERSISTENT_SCROLLING_CACHE","true","false","false","true","true","int","0x2","","/**
 * Used to indicate that the scrolling drawing cache should be kept in memory.
 */
","\android\view\ViewGroup.java"
"android.view.MarginLayoutParams.leftMargin","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The left margin in pixels of the child.
 */
","\android\view\ViewGroup.java"
"android.view.LayoutParams.layoutAnimationParameters","true","false","false","false","false","LayoutAnimationController.AnimationParameters","","","/**
 * Used to animate layouts.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.DESCENDANT_FOCUSABILITY_FLAGS","false","false","true","true","true","int","{ FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS }","","/**
 * Used to map between enum in attrubutes and flag values.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_PADDING_NOT_NULL","false","false","true","true","true","int","0x20","","// to clip it, even if FLAG_CLIP_TO_PADDING is set
","\android\view\ViewGroup.java"
"android.view.ViewGroup.leftMargin","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The left margin in pixels of the child.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mInvalidateRegion","false","false","true","false","false","RectF","","","","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_ANIMATION_DONE","false","false","true","true","true","int","0x10","","// Set by default
","\android\view\ViewGroup.java"
"android.view.ViewGroup.PERSISTENT_NO_CACHE","true","false","false","true","true","int","0x0","","/**
 * Used to indicate that no drawing cache should be kept in memory.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.CHILD_TOP_INDEX","false","false","true","true","true","int","1","","// Index of the child's top position in the mLocation array
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mChildTransformation","false","false","true","false","false","Transformation","","","// The current transformation to apply on the child being drawn
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_RUN_ANIMATION","false","false","true","true","true","int","0x8","","// When set, dispatchDraw() will run the layout animation and unset the flag
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_INVALIDATE_REQUIRED","false","false","true","true","true","int","0x4","","// a child needs to be invalidated and FLAG_OPTIMIZE_INVALIDATE is set
","\android\view\ViewGroup.java"
"android.view.ViewGroup.bottomMargin","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The bottom margin in pixels of the child.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mDisappearingChildren","false","true","false","false","false","ArrayList<View>","","","/**
 * Views which have been hidden or removed which need to be animated on
 * their way out.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\ViewGroup.java"
"android.view.LayoutParams.WRAP_CONTENT","true","false","false","true","true","int","-2","","/**
 * Special value for the height or width requested by a View.
 * WRAP_CONTENT means that the view wants to be just large enough to fit
 * its own internal content, taking its own padding into account.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mCachePaint","false","false","true","false","true","Paint","new Paint()","","// Used to draw cached views
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_OPTIMIZE_INVALIDATE","false","false","true","true","true","int","0x80","","// characteristics
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN","false","false","true","true","true","int","0x2000","","/**
 * When set, this ViewGroup's drawable states also include those
 * of its children.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mChildrenCount","false","false","true","false","false","int","","","// considered as children
","\android\view\ViewGroup.java"
"android.view.ViewGroup.WRAP_CONTENT","true","false","false","true","true","int","-2","","/**
 * Special value for the height or width requested by a View.
 * WRAP_CONTENT means that the view wants to be just large enough to fit
 * its own internal content, taking its own padding into account.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_CHILDREN_DRAWN_WITH_CACHE","false","false","true","true","true","int","0x8000","","/**
 * When set, and if FLAG_ALWAYS_DRAWN_WITH_CACHE is not set, this ViewGroup will try to
 * draw its children with their drawing cache.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_NOTIFY_ANIMATION_LISTENER","false","false","true","true","true","int","0x200","","// This flag is set when the layout animation is over (after FLAG_ANIMATION_DONE is set)
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mFocused","false","false","true","false","false","View","","","// The view contained within this ViewGroup that has or contains focus.
","\android\view\ViewGroup.java"
"android.view.ViewGroup.rightMargin","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The right margin in pixels of the child.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FILL_PARENT","true","false","false","true","true","int","-1","@SuppressWarnings({ ""UnusedDeclaration"" })","/**
 * Special value for the height or width requested by a View.
 * FILL_PARENT means that the view wants to be as big as its parent,
 * minus the parent's padding, if any. This value is deprecated
 * starting in API Level 8 and replaced by {@link #MATCH_PARENT}.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FOCUS_BEFORE_DESCENDANTS","true","false","false","true","true","int","0x20000","","/**
 * This view will get focus before any of its descendants.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.topMargin","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The top margin in pixels of the child.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mOnHierarchyChangeListener","false","true","false","false","false","OnHierarchyChangeListener","","","/**
 * Listener used to propagate events indicating when children are added
 * and/or removed from a view group.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mMotionTarget","false","false","true","false","false","View","","","// Target of Motion events
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER","false","true","false","true","true","int","0x400","","/**
 * When set, the drawing method will call {@link #getChildDrawingOrder(int, int)}
 * to get the index of the child to draw for that iteration.
 *
 * @hide
 */
","\android\view\ViewGroup.java"
"android.view.LayoutParams.height","true","false","false","false","false","int","","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = MATCH_PARENT, to = ""MATCH_PARENT""), @ViewDebug.IntToString(from = WRAP_CONTENT, to = ""WRAP_CONTENT"") })","/**
 * Information about how tall the view wants to be. Can be one of the
 * constants FILL_PARENT (replaced by MATCH_PARENT ,
 * in API Level 8) or WRAP_CONTENT. or an exact size.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE","false","false","true","true","true","int","0x1000","","// 1.0 and set it in mCachePaint
","\android\view\ViewGroup.java"
"android.view.ViewGroup.DBG","false","false","true","true","true","boolean","false","","","\android\view\ViewGroup.java"
"android.view.MarginLayoutParams.rightMargin","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The right margin in pixels of the child.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mChildren","false","false","true","false","false","View","","","// Child views of this ViewGroup
","\android\view\ViewGroup.java"
"android.view.ViewGroup.width","true","false","false","false","false","int","","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = MATCH_PARENT, to = ""MATCH_PARENT""), @ViewDebug.IntToString(from = WRAP_CONTENT, to = ""WRAP_CONTENT"") })","/**
 * Information about how wide the view wants to be. Can be one of the
 * constants FILL_PARENT (replaced by MATCH_PARENT ,
 * in API Level 8) or WRAP_CONTENT. or an exact size.
 */
","\android\view\ViewGroup.java"
"android.view.MarginLayoutParams.bottomMargin","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The bottom margin in pixels of the child.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.height","true","false","false","false","false","int","","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = MATCH_PARENT, to = ""MATCH_PARENT""), @ViewDebug.IntToString(from = WRAP_CONTENT, to = ""WRAP_CONTENT"") })","/**
 * Information about how tall the view wants to be. Can be one of the
 * constants FILL_PARENT (replaced by MATCH_PARENT ,
 * in API Level 8) or WRAP_CONTENT. or an exact size.
 */
","\android\view\ViewGroup.java"
"android.view.MarginLayoutParams.topMargin","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The top margin in pixels of the child.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FOCUS_BLOCK_DESCENDANTS","true","false","false","true","true","int","0x60000","","/**
 * This view will block any of its descendants from getting focus, even
 * if they are focusable.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.ARRAY_CAPACITY_INCREMENT","false","false","true","true","true","int","12","","","\android\view\ViewGroup.java"
"android.view.ViewGroup.PERSISTENT_ALL_CACHES","true","false","false","true","true","int","0x3","","/**
 * Used to indicate that all drawing caches should be kept in memory.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_CLIP_TO_PADDING","false","false","true","true","true","int","0x2","","// Set by default
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_MASK_FOCUSABILITY","false","false","true","true","true","int","0x60000","","","\android\view\ViewGroup.java"
"android.view.ViewGroup.mTempRect","false","false","true","false","true","Rect","new Rect()","","","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_CLIP_CHILDREN","false","false","true","true","true","int","0x1","","// Set by default
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_SUPPORT_STATIC_TRANSFORMATIONS","false","true","false","true","true","int","0x800","","/**
 * When set, this ViewGroup supports static transformations on children; this causes
 * {@link #getChildStaticTransformation(View, android.view.animation.Transformation)} to be
 * invoked when a child is drawn.
 *
 * Any subclass overriding
 * {@link #getChildStaticTransformation(View, android.view.animation.Transformation)} should
 * set this flags in {@link #mGroupFlags}.
 *
 * {@hide}
 */
","\android\view\ViewGroup.java"
"android.view.LayoutParams.FILL_PARENT","true","false","false","true","true","int","-1","@SuppressWarnings({ ""UnusedDeclaration"" })","/**
 * Special value for the height or width requested by a View.
 * FILL_PARENT means that the view wants to be as big as its parent,
 * minus the parent's padding, if any. This value is deprecated
 * starting in API Level 8 and replaced by {@link #MATCH_PARENT}.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_CLEAR_TRANSFORMATION","false","false","true","true","true","int","0x100","","// When set, the next call to drawChild() will clear mChildTransformation's matrix
","\android\view\ViewGroup.java"
"android.view.ViewGroup.MATCH_PARENT","true","false","false","true","true","int","-1","","/**
 * Special value for the height or width requested by a View.
 * MATCH_PARENT means that the view wants to be as big as its parent,
 * minus the parent's padding, if any. Introduced in API Level 8.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mLayoutAnimationController","false","false","true","false","false","LayoutAnimationController","","","// Layout animation
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_ANIMATION_CACHE","false","false","true","true","true","int","0x40","","// Set by default
","\android\view\ViewGroup.java"
"android.view.ViewGroup.PERSISTENT_ANIMATION_CACHE","true","false","false","true","true","int","0x1","","/**
 * Used to indicate that the animation drawing cache should be kept in memory.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.CLIP_TO_PADDING_MASK","false","true","false","true","true","int","FLAG_CLIP_TO_PADDING | FLAG_PADDING_NOT_NULL","","/**
 * We clip to padding when FLAG_CLIP_TO_PADDING and FLAG_PADDING_NOT_NULL
 * are set at the same time.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.mAnimationListener","false","false","true","false","false","Animation.AnimationListener","","","","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE","false","false","true","true","true","int","0x4000","","/**
 * When set, this ViewGroup tries to always draw its children using their drawing cache.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_DISALLOW_INTERCEPT","false","false","true","true","true","int","0x80000","","/**
 * When set, this ViewGroup should not intercept touch events.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.layoutAnimationParameters","true","false","false","false","false","LayoutAnimationController.AnimationParameters","","","/**
 * Used to animate layouts.
 */
","\android\view\ViewGroup.java"
"android.view.LayoutParams.MATCH_PARENT","true","false","false","true","true","int","-1","","/**
 * Special value for the height or width requested by a View.
 * MATCH_PARENT means that the view wants to be as big as its parent,
 * minus the parent's padding, if any. Introduced in API Level 8.
 */
","\android\view\ViewGroup.java"
"android.view.LayoutParams.width","true","false","false","false","false","int","","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = MATCH_PARENT, to = ""MATCH_PARENT""), @ViewDebug.IntToString(from = WRAP_CONTENT, to = ""WRAP_CONTENT"") })","/**
 * Information about how wide the view wants to be. Can be one of the
 * constants FILL_PARENT (replaced by MATCH_PARENT ,
 * in API Level 8) or WRAP_CONTENT. or an exact size.
 */
","\android\view\ViewGroup.java"
"android.view.ViewGroup.FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE","false","false","true","true","true","int","0x10000","","/**
 * When set, this group will go through its list of children to notify them of
 * any drawable state change.
 */
","\android\view\ViewGroup.java"
"android.content.SyncInfo.authority","true","false","false","false","true","String","","","/**
 * The authority of the provider that is currently being synced.
 */
","\android\content\SyncInfo.java"
"android.content.SyncInfo.CREATOR","true","false","false","true","true","Creator<SyncInfo>","new Creator<SyncInfo>() {

    public SyncInfo createFromParcel(Parcel in) {
        return new SyncInfo(in);
    }

    public SyncInfo[] newArray(int size) {
        return new SyncInfo[size];
    }
}","","/**
 * @hide
 */
","\android\content\SyncInfo.java"
"android.content.SyncInfo.account","true","false","false","false","true","Account","","","/**
 * The {@link Account} that is currently being synced.
 */
","\android\content\SyncInfo.java"
"android.content.SyncInfo.startTime","true","false","false","false","true","long","","","/**
 * The start time of the current sync operation in milliseconds since boot.
 * This is represented in elapsed real time.
 * See {@link android.os.SystemClock#elapsedRealtime()}.
 */
","\android\content\SyncInfo.java"
"android.content.SyncInfo.authorityId","true","false","false","false","true","int","","","/**
 * @hide
 */
","\android\content\SyncInfo.java"
"com.google.android.mms.util.PduCacheEntry.mMessageBox","false","false","true","false","true","int","","","","\com\google\android\mms\util\PduCacheEntry.java"
"com.google.android.mms.util.PduCacheEntry.mPdu","false","false","true","false","true","GenericPdu","","","","\com\google\android\mms\util\PduCacheEntry.java"
"com.google.android.mms.util.PduCacheEntry.mThreadId","false","false","true","false","true","long","","","","\com\google\android\mms\util\PduCacheEntry.java"
"com.google.android.mms.pdu.PduHeaders.SUBJECT","true","false","false","true","true","int","0x96","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.FROM_ADDRESS_PRESENT_TOKEN","true","false","false","true","true","int","0x80","","/**
 * From field type components.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.TRANSACTION_ID","true","false","false","true","true","int","0x98","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS_IMAGE_RICH","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS_INFORMATIONAL","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.VALUE_ABSOLUTE_TOKEN","true","false","false","true","true","int","0x80","","/**
 * Delivery-Time |
 * Expiry and Reply-Charging-Deadline |
 * field type components.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.FROM","true","false","false","true","true","int","0x89","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_END","true","false","false","true","true","int","0xFF","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.DATE","true","false","false","true","true","int","0x85","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS_AUTO","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_STORE_REQ","true","false","false","true","true","int","0x8B","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_STATE","true","false","false","true","true","int","0xA3","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_SENDING_ADDRESS_UNRESOLVED","true","false","false","true","true","int","0x84","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.SENDER_VISIBILITY","true","false","false","true","true","int","0x94","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_TRANSIENT_MESSAGE_NOT_FOUND","true","false","false","true","true","int","0xC2","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_CHARGING_ACCEPTED","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_UNRECOGNIZED","true","false","false","true","true","int","0x84","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_ERROR_PERMANENT_SERVICE_DENIED","true","false","false","true","true","int","0xE1","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_TRANSIENT_FAILURE","true","false","false","true","true","int","0xC0","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS","true","false","false","true","true","int","0xA5","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_CHARGING","true","false","false","true","true","int","0x9C","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.VALUE_YES","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Delivery-Report |
 * X-Mms-Read-Report |
 * X-Mms-Report-Allowed |
 * X-Mms-Sender-Visibility |
 * X-Mms-Store |
 * X-Mms-Stored |
 * X-Mms-Totals |
 * X-Mms-Quotas |
 * X-Mms-Distribution-Indicator |
 * X-Mms-DRM-Content |
 * X-Mms-Adaptation-Allowed |
 * field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_UNSUPPORTED_MESSAGE","true","false","false","true","true","int","0x88","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_READ_ORIG_IND","true","false","false","true","true","int","0x88","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_DELETE_CONF","true","false","false","true","true","int","0x92","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_STATE_SENT","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_ERROR_END","true","false","false","true","true","int","0xFF","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_NOTIFICATION_IND","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_TEXT","true","false","false","true","true","int","0xA6","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS_VIDEO_BASIC","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.SENDER_VISIBILITY_SHOW","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.BCC","true","false","false","true","true","int","0x81","","/**
 * All pdu header fields.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.PRIORITY_HIGH","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_MESSAGE_FORMAT_CORRUPT","true","false","false","true","true","int","0xE2","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CC","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_OK","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Retrieve-Status field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_APPLIC_ID","true","false","false","true","true","int","0xB8","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_CONTENT_NOT_ACCEPTED","true","false","false","true","true","int","0xE5","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_CHARGING_DEADLINE","true","false","false","true","true","int","0x9D","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_MESSAGE_FORMAT_CORRUPT","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_ERROR_TRANSIENT_MESSAGE_NOT_FOUND","true","false","false","true","true","int","0xC1","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_SERVICE_DENIED","true","false","false","true","true","int","0xE1","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_UPLOAD_CONF","true","false","false","true","true","int","0x90","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_INDETERMINATE","true","false","false","true","true","int","0x85","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_ERROR_TRANSIENT_NETWORK_PROBLEM","true","false","false","true","true","int","0xC2","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_SENDING_ADDRESS_UNRESOLVED","true","false","false","true","true","int","0xE3","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS_PERSONAL_STR","true","false","false","true","true","String","""personal""","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MBOX_QUOTAS","true","false","false","true","true","int","0xAC","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_SEND_CONF","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_REPLY_CHARGING_FORWARDING_DENIED","true","false","false","true","true","int","0xE8","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_FORWARD_REQ","true","false","false","true","true","int","0x89","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.QUOTAS","true","false","false","true","true","int","0xAB","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.FROM_INSERT_ADDRESS_TOKEN_STR","true","false","false","true","true","String","""insert-address-token""","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_CONTENT_NOT_ACCEPTED","true","false","false","true","true","int","0x87","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS_VIDEO_RICH","true","false","false","true","true","int","0x84","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RECOMMENDED_RETRIEVAL_MODE_TEXT","true","false","false","true","true","int","0xB5","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_CHARGING_SIZE","true","false","false","true","true","int","0x9F","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_FLAGS_FILTER_TOKEN","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_STORE_CONF","true","false","false","true","true","int","0x8C","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_FORWARDED","true","false","false","true","true","int","0x86","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_ERROR_PERMANENT_FAILURE","true","false","false","true","true","int","0xE0","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_ID","true","false","false","true","true","int","0x8B","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_STATE_NEW","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_SEND_REQ","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Message-Type field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.READ_STATUS__DELETED_WITHOUT_BEING_READ","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT","true","false","false","true","true","int","0xAE","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.FROM_INSERT_ADDRESS_TOKEN","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CURRENT_MMS_VERSION","true","false","false","true","true","int","MMS_VERSION_1_2","","// Current version is 1.2.
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS","true","false","false","true","true","int","0x99","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS_MEGAPIXEL","true","false","false","true","true","int","0x85","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_CANCEL_CONF","true","false","false","true","true","int","0x97","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_LOCATION","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.EXPIRY","true","false","false","true","true","int","0x88","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_ERROR_PERMANENT_MMBOX_FULL","true","false","false","true","true","int","0xE4","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE","true","false","false","true","true","int","0x8C","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.LIMIT","true","false","false","true","true","int","0xB3","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.ELEMENT_DESCRIPTOR","true","false","false","true","true","int","0xB2","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CANCEL_STATUS","true","false","false","true","true","int","0xBF","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_ADDRESS_HIDING_NOT_SUPPORTED","true","false","false","true","true","int","0xEA","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS_TEXT","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Content-Class field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.DISTRIBUTION_INDICATOR","true","false","false","true","true","int","0xB1","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS_CONTENT_RICH","true","false","false","true","true","int","0x87","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_ERROR_PERMANENT_FAILURE","true","false","false","true","true","int","0xE0","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_UNREACHABLE","true","false","false","true","true","int","0x87","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.AUX_APPLIC_ID","true","false","false","true","true","int","0xB9","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.READ_REPLY","true","false","false","true","true","int","0x90","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MMS_VERSION_1_1","true","false","false","true","true","int","((1 << 4) | 1)","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MMS_VERSION_1_2","true","false","false","true","true","int","((1 << 4) | 2)","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_TRANSIENT_NETWORK_PROBLEM","true","false","false","true","true","int","0xC3","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MMS_VERSION_1_0","true","false","false","true","true","int","((1 << 4) | 0)","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_ERROR_PERMANENT_CONTENT_UNSUPPORTED","true","false","false","true","true","int","0xE3","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_EXPIRED","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Status Field.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MMS_VERSION","true","false","false","true","true","int","0x8D","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MMS_VERSION_1_3","true","false","false","true","true","int","((1 << 4) | 3)","","/**
 * X-Mms-MMS-Version field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_READ_REC_IND","true","false","false","true","true","int","0x87","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.PREVIOUSLY_SENT_BY","true","false","false","true","true","int","0xA0","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.READ_REPORT","true","false","false","true","true","int","0x90","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_ERROR_TRANSIENT_NETWORK_PROBLEM","true","false","false","true","true","int","0xC1","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_TEXT","true","false","false","true","true","int","0xB6","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CANCEL_STATUS_REQUEST_SUCCESSFULLY_RECEIVED","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Cancel-Status field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.VALUE_RELATIVE_TOKEN","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_LACK_OF_PREPAID","true","false","false","true","true","int","0xEB","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_TEXT","true","false","false","true","true","int","0x9A","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_DELETE_REQ","true","false","false","true","true","int","0x91","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_TRANSIENT_PARTIAL_SUCCESS","true","false","false","true","true","int","0xC4","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CANCEL_STATUS_REQUEST_CORRUPTED","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPORT_ALLOWED","true","false","false","true","true","int","0x91","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RECOMMENDED_RETRIEVAL_MODE","true","false","false","true","true","int","0xB4","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_TYPE","true","false","false","true","true","int","0x84","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.START","true","false","false","true","true","int","0xAF","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_NOTIFYRESP_IND","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_DESCR","true","false","false","true","true","int","0x93","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.READ_STATUS","true","false","false","true","true","int","0x9B","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_CHARGING_REQUESTED_TEXT_ONLY","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS","true","false","false","true","true","int","0x8A","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.DELIVERY_TIME","true","false","false","true","true","int","0x87","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_MESSAGE_NOT_FOUND","true","false","false","true","true","int","0xE4","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_DELETE_CONF","true","false","false","true","true","int","0x95","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_SERVICE_DENIED","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_SUCCESS","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Store-Status field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.mHeaderMap","false","false","true","false","false","HashMap<Integer,Object>","null","","/**
 * The map contains the value of all headers.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_ACKNOWLEDGE_IND","true","false","false","true","true","int","0x85","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_CHARGING_REQUESTED","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Reply-Charging field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_FORWARD_CONF","true","false","false","true","true","int","0x8A","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_REPLY_CHARGING_LIMITATIONS_NOT_MET","true","false","false","true","true","int","0xE6","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_ERROR_PERMANENT_MESSAGE_NOT_FOUND","true","false","false","true","true","int","0xE2","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_REPLY_CHARGING_REQUEST_NOT_ACCEPTED","true","false","false","true","true","int","0xE6","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE","true","false","false","true","true","int","0xA2","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_DELIVERY_IND","true","false","false","true","true","int","0x86","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.PRIORITY","true","false","false","true","true","int","0x8F","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_MESSAGE_NOT_FOUND","true","false","false","true","true","int","0x85","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS_ADVERTISEMENT_STR","true","false","false","true","true","String","""advertisement""","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_TRANSIENT_SENDNG_ADDRESS_UNRESOLVED","true","false","false","true","true","int","0xC1","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.DELIVERY_REPORT","true","false","false","true","true","int","0x86","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLACE_ID","true","false","false","true","true","int","0xBD","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_RETRIEVED","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.FROM_ADDRESS_PRESENT_TOKEN_STR","true","false","false","true","true","String","""address-present-token""","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_DEFERRED","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_REPLY_CHARGING_NOT_SUPPORTED","true","false","false","true","true","int","0xE9","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_ERROR_END","true","false","false","true","true","int","0xFF","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.TO","true","false","false","true","true","int","0x97","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_STATE_DRAFT","true","false","false","true","true","int","0x80","","/**
 * X-Mms-MM-State field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_ERROR_PERMANENT_MESSAGE_FORMAT_CORRUPT","true","false","false","true","true","int","0xE2","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_SIZE","true","false","false","true","true","int","0x8E","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.SENDER_VISIBILITY_HIDE","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Sender-Visibility field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_RETRIEVE_CONF","true","false","false","true","true","int","0x84","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.TOTALS","true","false","false","true","true","int","0xA9","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_FLAGS","true","false","false","true","true","int","0xA4","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS_IMAGE_BASIC","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS_ADVERTISEMENT","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_ERROR_PERMANENT_SERVICE_DENIED","true","false","false","true","true","int","0xE1","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.PREVIOUSLY_SENT_DATE","true","false","false","true","true","int","0xA1","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MBOX_TOTALS","true","false","false","true","true","int","0xAA","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_UPLOAD_REQ","true","false","false","true","true","int","0x8F","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS_AUTO_STR","true","false","false","true","true","String","""auto""","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.ATTRIBUTES","true","false","false","true","true","int","0xA8","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS","true","false","false","true","true","int","0x95","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_PERMANENT_FAILURE","true","false","false","true","true","int","0xE0","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CANCEL_ID","true","false","false","true","true","int","0xBE","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_FLAGS_REMOVE_TOKEN","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS","true","false","false","true","true","int","0xBA","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_UNSPECIFIED","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_CHARGING_ID","true","false","false","true","true","int","0x9E","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS_PERSONAL","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Message-Class field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.PRIORITY_LOW","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Priority field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_CANCEL_REQ","true","false","false","true","true","int","0x96","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_STATE_RETRIEVED","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.ADDITIONAL_HEADERS","true","false","false","true","true","int","0xB0","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RETRIEVE_STATUS_ERROR_TRANSIENT_FAILURE","true","false","false","true","true","int","0xC0","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STATUS_REJECTED","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.VALUE_NO","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_FLAGS_ADD_TOKEN","true","false","false","true","true","int","0x80","","/**
 * MM-Flags field type components.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.ADAPTATION_ALLOWED","true","false","false","true","true","int","0xBC","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_CLASS_INFORMATIONAL_STR","true","false","false","true","true","String","""informational""","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.APPLIC_ID","true","false","false","true","true","int","0xB7","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.REPLY_CHARGING_ACCEPTED_TEXT_ONLY","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS","true","false","false","true","true","int","0x92","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORED","true","false","false","true","true","int","0xA7","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_ERROR_NETWORK_PROBLEM","true","false","false","true","true","int","0x86","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_ERROR_TRANSIENT_FAILURE","true","false","false","true","true","int","0xC0","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_DELETE_REQ","true","false","false","true","true","int","0x94","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RECOMMENDED_RETRIEVAL_MODE_MANUAL","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Recommended-Retrieval-Mode field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.PRIORITY_NORMAL","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.READ_STATUS_READ","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Read-Status field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_COUNT","true","false","false","true","true","int","0xAD","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_TEXT","true","false","false","true","true","int","0x93","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_VIEW_CONF","true","false","false","true","true","int","0x8E","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.CONTENT_CLASS_CONTENT_BASIC","true","false","false","true","true","int","0x86","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.STORE_STATUS_ERROR_PERMANENT_MESSAGE_NOT_FOUND","true","false","false","true","true","int","0xE3","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MM_STATE_FORWARDED","true","false","false","true","true","int","0x84","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.DRM_CONTENT","true","false","false","true","true","int","0xBB","","","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.RESPONSE_STATUS_OK","true","false","false","true","true","int","0x80","","/**
 * X-Mms-Response-Status field types.
 */
","\com\google\android\mms\pdu\PduHeaders.java"
"com.google.android.mms.pdu.PduHeaders.MESSAGE_TYPE_MBOX_VIEW_REQ","true","false","false","true","true","int","0x8D","","","\com\google\android\mms\pdu\PduHeaders.java"
"android.provider.Words._ID","true","false","false","true","true","String","BaseColumns._ID","","","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.LOCALE_TYPE_ALL","true","false","false","true","true","int","0","","/**
 * The locale type to specify that the word is common to all locales.
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.LOCALE_TYPE_ALL","true","false","false","true","true","int","0","","/**
 * The locale type to specify that the word is common to all locales.
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary._ID","true","false","false","true","true","String","BaseColumns._ID","","","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.LOCALE_TYPE_CURRENT","true","false","false","true","true","int","1","","/**
 * The locale type to specify that the word is for the current locale.
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/vnd.google.userword""","","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single word.
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.DEFAULT_SORT_ORDER","true","false","false","true","true","String","FREQUENCY + "" DESC""","","/**
 * Sort by descending order of frequency.
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.LOCALE","true","false","false","true","true","String","""locale""","","/**
 * The locale that this word belongs to. Null if it pertains to all
 * locales. Locale is as defined by the string returned by Locale.toString().
 * <p>TYPE: TEXT</p>
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/vnd.google.userword""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of words.
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.FREQUENCY","true","false","false","true","true","String","""frequency""","","/**
 * The frequency column. A value between 1 and 255. Higher values imply higher frequency.
 * <p>TYPE: INTEGER</p>
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.LOCALE","true","false","false","true","true","String","""locale""","","/**
 * The locale that this word belongs to. Null if it pertains to all
 * locales. Locale is as defined by the string returned by Locale.toString().
 * <p>TYPE: TEXT</p>
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.FREQUENCY","true","false","false","true","true","String","""frequency""","","/**
 * The frequency column. A value between 1 and 255. Higher values imply higher frequency.
 * <p>TYPE: INTEGER</p>
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.APP_ID","true","false","false","true","true","String","""appid""","","/**
 * The uid of the application that inserted the word.
 * <p>TYPE: INTEGER</p>
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.WORD","true","false","false","true","true","String","""word""","","/**
 * The word column.
 * <p>TYPE: TEXT</p>
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.DEFAULT_SORT_ORDER","true","false","false","true","true","String","FREQUENCY + "" DESC""","","/**
 * Sort by descending order of frequency.
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/words"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.APP_ID","true","false","false","true","true","String","""appid""","","/**
 * The uid of the application that inserted the word.
 * <p>TYPE: INTEGER</p>
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/vnd.google.userword""","","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single word.
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/vnd.google.userword""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of words.
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.AUTHORITY","true","false","false","true","true","String","""user_dictionary""","","/**
 * Authority string for this provider.
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.LOCALE_TYPE_CURRENT","true","false","false","true","true","int","1","","/**
 * The locale type to specify that the word is for the current locale.
 */
","\android\provider\UserDictionary.java"
"android.provider.Words.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/words"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\UserDictionary.java"
"android.provider.UserDictionary.WORD","true","false","false","true","true","String","""word""","","/**
 * The word column.
 * <p>TYPE: TEXT</p>
 */
","\android\provider\UserDictionary.java"
"android.widget.PassThroughHierarchyChangeListener.mOnHierarchyChangeListener","false","false","true","false","false","ViewGroup.OnHierarchyChangeListener","","","","\android\widget\RadioGroup.java"
"android.widget.RadioGroup.mOnHierarchyChangeListener","false","false","true","false","false","ViewGroup.OnHierarchyChangeListener","","","","\android\widget\RadioGroup.java"
"android.widget.RadioGroup.mCheckedId","false","false","true","false","false","int","-1","","// holds the checked id; the selection is empty by default
","\android\widget\RadioGroup.java"
"android.widget.RadioGroup.mProtectFromCheckedChange","false","false","true","false","false","boolean","false","","// when true, mOnCheckedChangeListener discards events
","\android\widget\RadioGroup.java"
"android.widget.RadioGroup.mChildOnCheckedChangeListener","false","false","true","false","false","CompoundButton.OnCheckedChangeListener","","","// tracks children radio buttons checked state
","\android\widget\RadioGroup.java"
"android.widget.RadioGroup.mPassThroughListener","false","false","true","false","false","PassThroughHierarchyChangeListener","","","","\android\widget\RadioGroup.java"
"android.widget.RadioGroup.mOnCheckedChangeListener","false","false","true","false","false","OnCheckedChangeListener","","","","\android\widget\RadioGroup.java"
"android.text.util.LinkSpec.start","false","false","false","false","false","int","","","","\android\text\util\Linkify.java"
"android.text.util.Linkify.sPhoneNumberTransformFilter","true","false","false","true","true","TransformFilter","new TransformFilter() {

    public final String transformUrl(final Matcher match, String url) {
        return Patterns.digitsAndPlusOnly(match);
    }
}","","/**
 * Transforms matched phone number text into something suitable
 * to be used in a tel: URL.  It does this by removing everything
 * but the digits and plus signs.  For instance:
 * &apos;+1 (919) 555-1212&apos;
 * becomes &apos;+19195551212&apos;
 */
","\android\text\util\Linkify.java"
"android.text.util.Linkify.ALL","true","false","false","true","true","int","WEB_URLS | EMAIL_ADDRESSES | PHONE_NUMBERS | MAP_ADDRESSES","","/**
 * Bit mask indicating that all available patterns should be matched in
 * methods that take an options mask
 */
","\android\text\util\Linkify.java"
"android.text.util.LinkSpec.url","false","false","false","false","false","String","","","","\android\text\util\Linkify.java"
"android.text.util.Linkify.sPhoneNumberMatchFilter","true","false","false","true","true","MatchFilter","new MatchFilter() {

    public final boolean acceptMatch(CharSequence s, int start, int end) {
        int digitCount = 0;
        for (int i = start; i < end; i++) {
            if (Character.isDigit(s.charAt(i))) {
                digitCount++;
                if (digitCount >= PHONE_NUMBER_MINIMUM_DIGITS) {
                    return true;
                }
            }
        }
        return false;
    }
}","","/**
 * Filters out URL matches that don't have enough digits to be a
 * phone number.
 */
","\android\text\util\Linkify.java"
"android.text.util.Linkify.PHONE_NUMBER_MINIMUM_DIGITS","false","false","true","true","true","int","5","","/**
 * Don't treat anything with fewer than this many digits as a
 * phone number.
 */
","\android\text\util\Linkify.java"
"android.text.util.Linkify.EMAIL_ADDRESSES","true","false","false","true","true","int","0x02","","/**
 * Bit field indicating that email addresses should be matched in methods
 * that take an options mask
 */
","\android\text\util\Linkify.java"
"android.text.util.Linkify.PHONE_NUMBERS","true","false","false","true","true","int","0x04","","/**
 * Bit field indicating that phone numbers should be matched in methods that
 * take an options mask
 */
","\android\text\util\Linkify.java"
"android.text.util.Linkify.MAP_ADDRESSES","true","false","false","true","true","int","0x08","","/**
 * Bit field indicating that street addresses should be matched in methods that
 * take an options mask
 */
","\android\text\util\Linkify.java"
"android.text.util.Linkify.WEB_URLS","true","false","false","true","true","int","0x01","","/**
 * Bit field indicating that web URLs should be matched in methods that
 * take an options mask
 */
","\android\text\util\Linkify.java"
"android.text.util.Linkify.sUrlMatchFilter","true","false","false","true","true","MatchFilter","new MatchFilter() {

    public final boolean acceptMatch(CharSequence s, int start, int end) {
        if (start == 0) {
            return true;
        }
        if (s.charAt(start - 1) == '@') {
            return false;
        }
        return true;
    }
}","","/**
 * Filters out web URL matches that occur after an at-sign (@).  This is
 * to prevent turning the domain name in an email address into a web link.
 */
","\android\text\util\Linkify.java"
"android.text.util.LinkSpec.end","false","false","false","false","false","int","","","","\android\text\util\Linkify.java"
"android.bluetooth.BluetoothDevicePicker.EXTRA_NEED_AUTH","true","false","false","true","true","String","""android.bluetooth.devicepicker.extra.NEED_AUTH""","","","\android\bluetooth\BluetoothDevicePicker.java"
"android.bluetooth.BluetoothDevicePicker.EXTRA_LAUNCH_CLASS","true","false","false","true","true","String","""android.bluetooth.devicepicker.extra.DEVICE_PICKER_LAUNCH_CLASS""","","","\android\bluetooth\BluetoothDevicePicker.java"
"android.bluetooth.BluetoothDevicePicker.FILTER_TYPE_ALL","true","false","false","true","true","int","0","","/**
 * Ask device picker to show all kinds of BT devices
 */
","\android\bluetooth\BluetoothDevicePicker.java"
"android.bluetooth.BluetoothDevicePicker.FILTER_TYPE_TRANSFER","true","false","false","true","true","int","2","","/**
 * Ask device picker to show BT devices that support Object Transfer
 */
","\android\bluetooth\BluetoothDevicePicker.java"
"android.bluetooth.BluetoothDevicePicker.FILTER_TYPE_AUDIO","true","false","false","true","true","int","1","","/**
 * Ask device picker to show BT devices that support AUDIO profiles
 */
","\android\bluetooth\BluetoothDevicePicker.java"
"android.bluetooth.BluetoothDevicePicker.ACTION_LAUNCH","true","false","false","true","true","String","""android.bluetooth.devicepicker.action.LAUNCH""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast when someone want to select one BT device from devices list.
 * This intent contains below extra data:
 * - {@link #EXTRA_NEED_AUTH} (boolean): if need authentication
 * - {@link #EXTRA_FILTER_TYPE} (int): what kinds of device should be
 * listed
 * - {@link #EXTRA_LAUNCH_PACKAGE} (string): where(which package) this
 * intent come from
 * - {@link #EXTRA_LAUNCH_CLASS} (string): where(which class) this intent
 * come from
 */
","\android\bluetooth\BluetoothDevicePicker.java"
"android.bluetooth.BluetoothDevicePicker.EXTRA_LAUNCH_PACKAGE","true","false","false","true","true","String","""android.bluetooth.devicepicker.extra.LAUNCH_PACKAGE""","","","\android\bluetooth\BluetoothDevicePicker.java"
"android.bluetooth.BluetoothDevicePicker.EXTRA_FILTER_TYPE","true","false","false","true","true","String","""android.bluetooth.devicepicker.extra.FILTER_TYPE""","","","\android\bluetooth\BluetoothDevicePicker.java"
"android.bluetooth.BluetoothDevicePicker.ACTION_DEVICE_SELECTED","true","false","false","true","true","String","""android.bluetooth.devicepicker.action.DEVICE_SELECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast when one BT device is selected from BT device picker screen.
 * Selected BT device address is contained in extra string {@link BluetoothIntent}
 */
","\android\bluetooth\BluetoothDevicePicker.java"
"android.widget.ProgressBar.mMaxHeight","false","false","false","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mOnlyIndeterminate","false","false","true","false","false","boolean","","","","\android\widget\ProgressBar.java"
"android.widget.RefreshProgressRunnable.mProgress","false","false","true","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.secondaryProgress","false","false","false","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mNoInvalidate","false","false","true","false","false","boolean","","","","\android\widget\ProgressBar.java"
"android.widget.SavedState.secondaryProgress","false","false","false","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.progress","false","false","false","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.RefreshProgressRunnable.mId","false","false","true","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mSampleTile","false","false","false","false","false","Bitmap","","","","\android\widget\ProgressBar.java"
"android.widget.RefreshProgressRunnable.mFromUser","false","false","true","false","false","boolean","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mInDrawing","false","false","true","false","false","boolean","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.ANIMATION_RESOLUTION","false","false","true","true","true","int","200","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mDuration","false","false","true","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mMax","false","false","true","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mLastDrawTime","false","false","true","false","false","long","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mIndeterminate","false","false","true","false","false","boolean","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mMaxWidth","false","false","false","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mProgress","false","false","true","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mSecondaryProgress","false","false","true","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mId","false","false","true","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.MAX_LEVEL","false","false","true","true","true","int","10000","","","\android\widget\ProgressBar.java"
"android.widget.SavedState.progress","false","false","false","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mTransformation","false","false","true","false","false","Transformation","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mIndeterminateDrawable","false","false","true","false","false","Drawable","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mUiThreadId","false","false","true","false","false","long","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mShouldStartAnimationDrawable","false","false","true","false","false","boolean","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mCurrentDrawable","false","false","true","false","false","Drawable","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mAnimation","false","false","true","false","false","AlphaAnimation","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mMinWidth","false","false","false","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mProgressDrawable","false","false","true","false","false","Drawable","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mInterpolator","false","false","true","false","false","Interpolator","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mRefreshProgressRunnable","false","false","true","false","false","RefreshProgressRunnable","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mMinHeight","false","false","false","false","false","int","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mFromUser","false","false","true","false","false","boolean","","","","\android\widget\ProgressBar.java"
"android.widget.ProgressBar.mBehavior","false","false","true","false","false","int","","","","\android\widget\ProgressBar.java"
"android.app.backup.AbsoluteFileBackupHelper.DEBUG","false","false","true","true","true","boolean","false","","","\android\app\backup\AbsoluteFileBackupHelper.java"
"android.app.backup.AbsoluteFileBackupHelper.TAG","false","false","true","true","true","String","""AbsoluteFileBackupHelper""","","","\android\app\backup\AbsoluteFileBackupHelper.java"
"android.app.backup.AbsoluteFileBackupHelper.mContext","false","false","false","false","false","Context","","","","\android\app\backup\AbsoluteFileBackupHelper.java"
"android.app.backup.AbsoluteFileBackupHelper.mFiles","false","false","false","false","false","String","","","","\android\app\backup\AbsoluteFileBackupHelper.java"
"android.view.LayoutParams.gravity","true","false","false","false","false","int","","","/**
 * Placement of window within the screen as per {@link Gravity}
 *
 * @see Gravity
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_LAYOUT_INSET_DECOR","true","false","false","true","true","int","0x00010000","","/**
 * Window flag: a special option only for use in combination with
 * {@link #FLAG_LAYOUT_IN_SCREEN}.  When requesting layout in the
 * screen your window may appear on top of or behind screen decorations
 * such as the status bar.  By also including this flag, the window
 * manager will report the inset rectangle needed to ensure your
 * content is not covered by screen decorations.  This flag is normally
 * set for you by Window as described in {@link Window#setFlags}.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_DIM_BEHIND","true","false","false","true","true","int","0x00000002","","/**
 * Window flag: everything behind this window will be dimmed.
 * Use {@link #dimAmount} to control the amount of dim.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_WALLPAPER","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 13","","/**
 * Window type: wallpaper window, placed behind any window that wants
 * to sit on top of the wallpaper.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FIRST_SYSTEM_WINDOW","true","false","false","true","true","int","2000","","/**
 * Start of system-specific window types.  These are not normally
 * created by applications.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_STATUS_BAR","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW","","/**
 * Window type: the status bar.  There can be only one status bar
 * window; it is placed at the top of the screen, and all other
 * windows are shifted down so they are below it.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.buttonBrightness","true","false","false","false","false","float","BRIGHTNESS_OVERRIDE_NONE","","/**
 * This can be used to override the standard behavior of the button and
 * keyboard backlights.  A value of less than 0, the default, means to
 * use the standard backlight behavior.  0 to 1 adjusts the brightness
 * from dark to full bright.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_APPLICATION","true","false","false","true","true","int","2","","/**
 * Window type: a normal application window.  The {@link #token} must be
 * an Activity token identifying who the window belongs to.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.flags","true","false","false","false","false","int","","@ViewDebug.ExportedProperty(flagMapping = { @ViewDebug.FlagToString(mask = FLAG_BLUR_BEHIND, equals = FLAG_BLUR_BEHIND, name = ""FLAG_BLUR_BEHIND""), @ViewDebug.FlagToString(mask = FLAG_DIM_BEHIND, equals = FLAG_DIM_BEHIND, name = ""FLAG_DIM_BEHIND""), @ViewDebug.FlagToString(mask = FLAG_NOT_FOCUSABLE, equals = FLAG_NOT_FOCUSABLE, name = ""FLAG_NOT_FOCUSABLE""), @ViewDebug.FlagToString(mask = FLAG_NOT_TOUCHABLE, equals = FLAG_NOT_TOUCHABLE, name = ""FLAG_NOT_TOUCHABLE""), @ViewDebug.FlagToString(mask = FLAG_NOT_TOUCH_MODAL, equals = FLAG_NOT_TOUCH_MODAL, name = ""FLAG_NOT_TOUCH_MODAL""), @ViewDebug.FlagToString(mask = FLAG_LAYOUT_IN_SCREEN, equals = FLAG_LAYOUT_IN_SCREEN, name = ""FLAG_LAYOUT_IN_SCREEN""), @ViewDebug.FlagToString(mask = FLAG_DITHER, equals = FLAG_DITHER, name = ""FLAG_DITHER""), @ViewDebug.FlagToString(mask = FLAG_TURN_SCREEN_ON, equals = FLAG_TURN_SCREEN_ON, name = ""FLAG_TURN_SCREEN_ON""), @ViewDebug.FlagToString(mask = FLAG_KEEP_SCREEN_ON, equals = FLAG_KEEP_SCREEN_ON, name = ""FLAG_KEEP_SCREEN_ON""), @ViewDebug.FlagToString(mask = FLAG_SHOW_WHEN_LOCKED, equals = FLAG_SHOW_WHEN_LOCKED, name = ""FLAG_SHOW_WHEN_LOCKED""), @ViewDebug.FlagToString(mask = FLAG_ALLOW_LOCK_WHILE_SCREEN_ON, equals = FLAG_ALLOW_LOCK_WHILE_SCREEN_ON, name = ""FLAG_ALLOW_LOCK_WHILE_SCREEN_ON""), @ViewDebug.FlagToString(mask = FLAG_DISMISS_KEYGUARD, equals = FLAG_DISMISS_KEYGUARD, name = ""FLAG_DISMISS_KEYGUARD""), @ViewDebug.FlagToString(mask = FLAG_FULLSCREEN, equals = FLAG_FULLSCREEN, name = ""FLAG_FULLSCREEN""), @ViewDebug.FlagToString(mask = FLAG_FORCE_NOT_FULLSCREEN, equals = FLAG_FORCE_NOT_FULLSCREEN, name = ""FLAG_FORCE_NOT_FULLSCREEN""), @ViewDebug.FlagToString(mask = FLAG_IGNORE_CHEEK_PRESSES, equals = FLAG_IGNORE_CHEEK_PRESSES, name = ""FLAG_IGNORE_CHEEK_PRESSES"") })","/**
 * Various behavioral options/flags.  Default is none.
 *
 * @see #FLAG_BLUR_BEHIND
 * @see #FLAG_DIM_BEHIND
 * @see #FLAG_NOT_FOCUSABLE
 * @see #FLAG_NOT_TOUCHABLE
 * @see #FLAG_NOT_TOUCH_MODAL
 * @see #FLAG_LAYOUT_IN_SCREEN
 * @see #FLAG_DITHER
 * @see #FLAG_KEEP_SCREEN_ON
 * @see #FLAG_FULLSCREEN
 * @see #FLAG_FORCE_NOT_FULLSCREEN
 * @see #FLAG_IGNORE_CHEEK_PRESSES
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.BRIGHTNESS_OVERRIDE_NONE","true","false","false","true","true","float","-1.0f","","/**
 * Default value for {@link #screenBrightness} and {@link #buttonBrightness}
 * indicating that the brightness value is not overridden for this window
 * and normal brightness policy should be used.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.MEMORY_TYPE_NORMAL","true","false","false","true","true","int","0","","/**
 * Memory type: The window's surface is allocated in main memory.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_SYSTEM_OVERLAY","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 6","","/**
 * Window type: system overlay windows, which need to be displayed
 * on top of everything else.  These windows must not take input
 * focus, or they will interfere with the keyguard.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_MASK_STATE","true","false","false","true","true","int","0x0f","","/**
 * Mask for {@link #softInputMode} of the bits that determine the
 * desired visibility state of the soft input area for this window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.x","true","false","false","false","false","int","","","/**
 * X position for this window.  With the default gravity it is ignored.
 * When using {@link Gravity#LEFT} or {@link Gravity#RIGHT} it provides
 * an offset from the given edge.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_MODE_CHANGED","true","false","false","true","true","int","1 << 9","","","\android\view\WindowManager.java"
"android.view.WindowManager.y","true","false","false","false","false","int","","","/**
 * Y position for this window.  With the default gravity it is ignored.
 * When using {@link Gravity#TOP} or {@link Gravity#BOTTOM} it provides
 * an offset from the given edge.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_MASK_ADJUST","true","false","false","true","true","int","0xf0","","/**
 * Mask for {@link #softInputMode} of the bits that determine the
 * way that the window should be adjusted to accommodate the soft
 * input window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_SECURE","true","false","false","true","true","int","0x00002000","","/**
 * Window flag: don't allow screen shots while this window is
 * displayed.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_APPLICATION_PANEL","true","false","false","true","true","int","FIRST_SUB_WINDOW","","/**
 * Window type: a panel on top of an application window.  These windows
 * appear on top of their attached window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_TOUCHABLE_WHEN_WAKING","true","false","false","true","true","int","0x00000040","","/**
 * Window flag: When set, if the device is asleep when the touch
 * screen is pressed, you will receive this first touch event.  Usually
 * the first touch event is consumed by the system since the user can
 * not see what they are pressing on.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.buttonBrightness","true","false","false","false","false","float","BRIGHTNESS_OVERRIDE_NONE","","/**
 * This can be used to override the standard behavior of the button and
 * keyboard backlights.  A value of less than 0, the default, means to
 * use the standard backlight behavior.  0 to 1 adjusts the brightness
 * from dark to full bright.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.MEMORY_TYPE_CHANGED","true","false","false","true","true","int","1 << 8","","","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_IS_FORWARD_NAVIGATION","true","false","false","true","true","int","0x100","","/**
 * Bit for {@link #softInputMode}: set when the user has navigated
 * forward to the window.  This is normally set automatically for
 * you by the system, though you may want to set it in certain cases
 * when you are displaying a window yourself.  This flag will always
 * be cleared automatically after the window is displayed.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_LAYOUT_IN_SCREEN","true","false","false","true","true","int","0x00000100","","/**
 * Window flag: place the window within the entire screen, ignoring
 * decorations around the border (a.k.a. the status bar).  The
 * window must correctly position its contents to take the screen
 * decoration into account.  This flag is normally set for you
 * by Window as described in {@link Window#setFlags}.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.flags","true","false","false","false","false","int","","@ViewDebug.ExportedProperty(flagMapping = { @ViewDebug.FlagToString(mask = FLAG_BLUR_BEHIND, equals = FLAG_BLUR_BEHIND, name = ""FLAG_BLUR_BEHIND""), @ViewDebug.FlagToString(mask = FLAG_DIM_BEHIND, equals = FLAG_DIM_BEHIND, name = ""FLAG_DIM_BEHIND""), @ViewDebug.FlagToString(mask = FLAG_NOT_FOCUSABLE, equals = FLAG_NOT_FOCUSABLE, name = ""FLAG_NOT_FOCUSABLE""), @ViewDebug.FlagToString(mask = FLAG_NOT_TOUCHABLE, equals = FLAG_NOT_TOUCHABLE, name = ""FLAG_NOT_TOUCHABLE""), @ViewDebug.FlagToString(mask = FLAG_NOT_TOUCH_MODAL, equals = FLAG_NOT_TOUCH_MODAL, name = ""FLAG_NOT_TOUCH_MODAL""), @ViewDebug.FlagToString(mask = FLAG_LAYOUT_IN_SCREEN, equals = FLAG_LAYOUT_IN_SCREEN, name = ""FLAG_LAYOUT_IN_SCREEN""), @ViewDebug.FlagToString(mask = FLAG_DITHER, equals = FLAG_DITHER, name = ""FLAG_DITHER""), @ViewDebug.FlagToString(mask = FLAG_TURN_SCREEN_ON, equals = FLAG_TURN_SCREEN_ON, name = ""FLAG_TURN_SCREEN_ON""), @ViewDebug.FlagToString(mask = FLAG_KEEP_SCREEN_ON, equals = FLAG_KEEP_SCREEN_ON, name = ""FLAG_KEEP_SCREEN_ON""), @ViewDebug.FlagToString(mask = FLAG_SHOW_WHEN_LOCKED, equals = FLAG_SHOW_WHEN_LOCKED, name = ""FLAG_SHOW_WHEN_LOCKED""), @ViewDebug.FlagToString(mask = FLAG_ALLOW_LOCK_WHILE_SCREEN_ON, equals = FLAG_ALLOW_LOCK_WHILE_SCREEN_ON, name = ""FLAG_ALLOW_LOCK_WHILE_SCREEN_ON""), @ViewDebug.FlagToString(mask = FLAG_DISMISS_KEYGUARD, equals = FLAG_DISMISS_KEYGUARD, name = ""FLAG_DISMISS_KEYGUARD""), @ViewDebug.FlagToString(mask = FLAG_FULLSCREEN, equals = FLAG_FULLSCREEN, name = ""FLAG_FULLSCREEN""), @ViewDebug.FlagToString(mask = FLAG_FORCE_NOT_FULLSCREEN, equals = FLAG_FORCE_NOT_FULLSCREEN, name = ""FLAG_FORCE_NOT_FULLSCREEN""), @ViewDebug.FlagToString(mask = FLAG_IGNORE_CHEEK_PRESSES, equals = FLAG_IGNORE_CHEEK_PRESSES, name = ""FLAG_IGNORE_CHEEK_PRESSES"") })","/**
 * Various behavioral options/flags.  Default is none.
 *
 * @see #FLAG_BLUR_BEHIND
 * @see #FLAG_DIM_BEHIND
 * @see #FLAG_NOT_FOCUSABLE
 * @see #FLAG_NOT_TOUCHABLE
 * @see #FLAG_NOT_TOUCH_MODAL
 * @see #FLAG_LAYOUT_IN_SCREEN
 * @see #FLAG_DITHER
 * @see #FLAG_KEEP_SCREEN_ON
 * @see #FLAG_FULLSCREEN
 * @see #FLAG_FORCE_NOT_FULLSCREEN
 * @see #FLAG_IGNORE_CHEEK_PRESSES
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.LAST_SUB_WINDOW","true","false","false","true","true","int","1999","","/**
 * End of types of sub-windows.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_ADJUST_PAN","true","false","false","true","true","int","0x20","","/**
 * Adjustment option for {@link #softInputMode}: set to have a window
 * pan when an input method is
 * shown, so it doesn't need to deal with resizing but just panned
 * by the framework to ensure the current input focus is visible.  This
 * can <em>not<em> be combined with {@link #SOFT_INPUT_ADJUST_RESIZE}; if
 * neither of these are set, then the system will try to pick one or
 * the other depending on the contents of the window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.softInputMode","true","false","false","false","false","int","","","/**
 * Desired operating mode for any soft input area.  May any combination
 * of:
 *
 * <ul>
 * <li> One of the visibility states
 * {@link #SOFT_INPUT_STATE_UNSPECIFIED}, {@link #SOFT_INPUT_STATE_UNCHANGED},
 * {@link #SOFT_INPUT_STATE_HIDDEN}, {@link #SOFT_INPUT_STATE_ALWAYS_VISIBLE}, or
 * {@link #SOFT_INPUT_STATE_VISIBLE}.
 * <li> One of the adjustment options
 * {@link #SOFT_INPUT_ADJUST_UNSPECIFIED},
 * {@link #SOFT_INPUT_ADJUST_RESIZE}, or
 * {@link #SOFT_INPUT_ADJUST_PAN}.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_STATE_VISIBLE","true","false","false","true","true","int","4","","/**
 * Visibility state for {@link #softInputMode}: please show the soft
 * input area when normally appropriate (when the user is navigating
 * forward to your window).
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.LAST_SYSTEM_WINDOW","true","false","false","true","true","int","2999","","/**
 * End of types of system windows.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_COMPATIBLE_WINDOW","true","false","false","true","true","int","0x20000000","","/**
 * Window flag: special flag to limit the size of the window to be
 * original size ([320x480] x density). Used to create window for applications
 * running under compatibility mode.
 *
 * {@hide}
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.x","true","false","false","false","false","int","","","/**
 * X position for this window.  With the default gravity it is ignored.
 * When using {@link Gravity#LEFT} or {@link Gravity#RIGHT} it provides
 * an offset from the given edge.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.y","true","false","false","false","false","int","","","/**
 * Y position for this window.  With the default gravity it is ignored.
 * When using {@link Gravity#TOP} or {@link Gravity#BOTTOM} it provides
 * an offset from the given edge.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.BRIGHTNESS_OVERRIDE_OFF","true","false","false","true","true","float","0.0f","","/**
 * Value for {@link #screenBrightness} and {@link #buttonBrightness}
 * indicating that the screen or button backlight brightness should be set
 * to the lowest value when this window is in front.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.memoryType","true","false","false","false","false","int","","","/**
 * Specifies what type of memory buffers should be used by this window.
 * Default is normal.
 *
 * @see #MEMORY_TYPE_NORMAL
 * @see #MEMORY_TYPE_PUSH_BUFFERS
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_LAYOUT_INSET_DECOR","true","false","false","true","true","int","0x00010000","","/**
 * Window flag: a special option only for use in combination with
 * {@link #FLAG_LAYOUT_IN_SCREEN}.  When requesting layout in the
 * screen your window may appear on top of or behind screen decorations
 * such as the status bar.  By also including this flag, the window
 * manager will report the inset rectangle needed to ensure your
 * content is not covered by screen decorations.  This flag is normally
 * set for you by Window as described in {@link Window#setFlags}.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_KEYGUARD","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 4","","/**
 * Window type: keyguard window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.MEMORY_TYPE_NORMAL","true","false","false","true","true","int","0","","/**
 * Memory type: The window's surface is allocated in main memory.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.LAST_SYSTEM_WINDOW","true","false","false","true","true","int","2999","","/**
 * End of types of system windows.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_APPLICATION_STARTING","true","false","false","true","true","int","3","","/**
 * Window type: special application window that is displayed while the
 * application is starting.  Not for use by applications themselves;
 * this is used by the system to display something until the
 * application can show its own windows.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.MEMORY_TYPE_HARDWARE","true","false","false","true","true","int","1","@Deprecated","/**
 * Memory type: The window's surface is configured to be accessible
 * by DMA engines and hardware accelerators.
 * @deprecated this is ignored, this value is set automatically when needed.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_SCALED","true","false","false","true","true","int","0x00004000","","/**
 * Window flag: a special mode where the layout parameters are used
 * to perform scaling of the surface when it is composited to the
 * screen.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_LAYOUT_IN_SCREEN","true","false","false","true","true","int","0x00000100","","/**
 * Window flag: place the window within the entire screen, ignoring
 * decorations around the border (a.k.a. the status bar).  The
 * window must correctly position its contents to take the screen
 * decoration into account.  This flag is normally set for you
 * by Window as described in {@link Window#setFlags}.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_SEARCH_BAR","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 1","","/**
 * Window type: the search bar.  There can be only one search bar
 * window; it is placed at the top of the screen.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_STATE_UNSPECIFIED","true","false","false","true","true","int","0","","/**
 * Visibility state for {@link #softInputMode}: no state has been specified.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_DITHER","true","false","false","true","true","int","0x00001000","","/**
 * Window flag: turn on dithering when compositing this window to
 * the screen.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_CHANGED","true","false","false","true","true","int","1 << 1","","","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_SHOW_WALLPAPER","true","false","false","true","true","int","0x00100000","","/**
 * Window flag: ask that the system wallpaper be shown behind
 * your window.  The window surface must be translucent to be able
 * to actually see the wallpaper behind it; this flag just ensures
 * that the wallpaper surface will be there if this window actually
 * has translucent regions.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_WATCH_OUTSIDE_TOUCH","true","false","false","true","true","int","0x00040000","","/**
 * Window flag: if you have set {@link #FLAG_NOT_TOUCH_MODAL}, you
 * can set this flag to receive a single special MotionEvent with
 * the action
 * {@link MotionEvent#ACTION_OUTSIDE MotionEvent.ACTION_OUTSIDE} for
 * touches that occur outside of your window.  Note that you will not
 * receive the full down/move/up gesture, only the location of the
 * first down as an ACTION_OUTSIDE.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_NOT_FOCUSABLE","true","false","false","true","true","int","0x00000008","","/**
 * Window flag: this window won't ever get key input focus, so the
 * user can not send key or other button events to it.  Those will
 * instead go to whatever focusable window is behind it.  This flag
 * will also enable {@link #FLAG_NOT_TOUCH_MODAL} whether or not that
 * is explicitly set.
 *
 * <p>Setting this flag also implies that the window will not need to
 * interact with
 * a soft input method, so it will be Z-ordered and positioned
 * independently of any active input method (typically this means it
 * gets Z-ordered on top of the input method, so it can use the full
 * screen for its content and cover the input method if needed.  You
 * can use {@link #FLAG_ALT_FOCUSABLE_IM} to modify this behavior.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.MEMORY_TYPE_PUSH_BUFFERS","true","false","false","true","true","int","3","","/**
 * Memory type: The window's surface doesn't own its buffers and
 * therefore cannot be locked. Instead the buffers are pushed to
 * it through native binder calls.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_CHANGED","true","false","false","true","true","int","1 << 1","","","\android\view\WindowManager.java"
"android.view.WindowManager.verticalWeight","true","false","false","false","false","float","","","/**
 * Indicates how much of the extra space will be allocated vertically
 * to the view associated with these LayoutParams. Specify 0 if the view
 * should not be stretched. Otherwise the extra pixels will be pro-rated
 * among all views whose weight is greater than 0.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SCREEN_BRIGHTNESS_CHANGED","true","false","false","true","true","int","1 << 11","","","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_FULLSCREEN","true","false","false","true","true","int","0x00000400","","/**
 * Window flag: Hide all screen decorations (e.g. status bar) while
 * this window is displayed.  This allows the window to use the entire
 * display space for itself -- the status bar will be hidden when
 * an app window with this flag set is on the top layer.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_IS_FORWARD_NAVIGATION","true","false","false","true","true","int","0x100","","/**
 * Bit for {@link #softInputMode}: set when the user has navigated
 * forward to the window.  This is normally set automatically for
 * you by the system, though you may want to set it in certain cases
 * when you are displaying a window yourself.  This flag will always
 * be cleared automatically after the window is displayed.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_SYSTEM_OVERLAY","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 6","","/**
 * Window type: system overlay windows, which need to be displayed
 * on top of everything else.  These windows must not take input
 * focus, or they will interfere with the keyguard.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_KEYGUARD","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 4","","/**
 * Window type: keyguard window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.ALPHA_CHANGED","true","false","false","true","true","int","1 << 7","","","\android\view\WindowManager.java"
"android.view.WindowManager.MEMORY_TYPE_GPU","true","false","false","true","true","int","2","@Deprecated","/**
 * Memory type: The window's surface is configured to be accessible
 * by graphics accelerators.
 * @deprecated this is ignored, this value is set automatically when needed.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FIRST_SUB_WINDOW","true","false","false","true","true","int","1000","","/**
 * Start of types of sub-windows.  The {@link #token} of these windows
 * must be set to the window they are attached to.  These types of
 * windows are kept next to their attached window in Z-order, and their
 * coordinate space is relative to their attached window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FIRST_SYSTEM_WINDOW","true","false","false","true","true","int","2000","","/**
 * Start of system-specific window types.  These are not normally
 * created by applications.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_MASK_STATE","true","false","false","true","true","int","0x0f","","/**
 * Mask for {@link #softInputMode} of the bits that determine the
 * desired visibility state of the soft input area for this window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SCREEN_ORIENTATION_CHANGED","true","false","false","true","true","int","1 << 10","","","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_KEYGUARD_DIALOG","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 9","","/**
 * Window type: dialogs that the keyguard shows
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_APPLICATION_STARTING","true","false","false","true","true","int","3","","/**
 * Window type: special application window that is displayed while the
 * application is starting.  Not for use by applications themselves;
 * this is used by the system to display something until the
 * application can show its own windows.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_WALLPAPER","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 13","","/**
 * Window type: wallpaper window, placed behind any window that wants
 * to sit on top of the wallpaper.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.ANIMATION_CHANGED","true","false","false","true","true","int","1 << 4","","","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_ALLOW_LOCK_WHILE_SCREEN_ON","true","false","false","true","true","int","0x00000001","","/**
 * Window flag: as long as this window is visible to the user, allow
 * the lock screen to activate while the screen is on.
 * This can be used independently, or in combination with
 * {@link #FLAG_KEEP_SCREEN_ON} and/or {@link #FLAG_SHOW_WHEN_LOCKED}
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_TOAST","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 5","","/**
 * Window type: transient notifications.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_NOT_TOUCH_MODAL","true","false","false","true","true","int","0x00000020","","/**
 * Window flag: Even when this window is focusable (its
 * {@link #FLAG_NOT_FOCUSABLE is not set), allow any pointer events
 * outside of the window to be sent to the windows behind it.  Otherwise
 * it will consume all pointer events itself, regardless of whether they
 * are inside of the window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.screenOrientation","true","false","false","false","false","int","ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED","","/**
 * Specific orientation value for a window.
 * May be any of the same values allowed
 * for {@link android.content.pm.ActivityInfo#screenOrientation}.
 * If not set, a default value of
 * {@link android.content.pm.ActivityInfo#SCREEN_ORIENTATION_UNSPECIFIED}
 * will be used.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.BRIGHTNESS_OVERRIDE_NONE","true","false","false","true","true","float","-1.0f","","/**
 * Default value for {@link #screenBrightness} and {@link #buttonBrightness}
 * indicating that the brightness value is not overridden for this window
 * and normal brightness policy should be used.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SCREEN_ORIENTATION_CHANGED","true","false","false","true","true","int","1 << 10","","","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_ADJUST_RESIZE","true","false","false","true","true","int","0x10","","/**
 * Adjustment option for {@link #softInputMode}: set to allow the
 * window to be resized when an input
 * method is shown, so that its contents are not covered by the input
 * method.  This can <em>not<em> be combined with
 * {@link #SOFT_INPUT_ADJUST_PAN}; if
 * neither of these are set, then the system will try to pick one or
 * the other depending on the contents of the window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_STATUS_BAR","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW","","/**
 * Window type: the status bar.  There can be only one status bar
 * window; it is placed at the top of the screen, and all other
 * windows are shifted down so they are below it.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_MODE_CHANGED","true","false","false","true","true","int","1 << 9","","","\android\view\WindowManager.java"
"android.view.LayoutParams.alpha","true","false","false","false","false","float","1.0f","","/**
 * An alpha value to apply to this entire window.
 * An alpha of 1.0 means fully opaque and 0.0 means fully transparent
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_PRIORITY_PHONE","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 7","","/**
 * Window type: priority phone UI, which needs to be displayed even if
 * the keyguard is active.  These windows must not take input
 * focus, or they will interfere with the keyguard.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_SECURE","true","false","false","true","true","int","0x00002000","","/**
 * Window flag: don't allow screen shots while this window is
 * displayed.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_PRIORITY_PHONE","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 7","","/**
 * Window type: priority phone UI, which needs to be displayed even if
 * the keyguard is active.  These windows must not take input
 * focus, or they will interfere with the keyguard.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.LAST_SUB_WINDOW","true","false","false","true","true","int","1999","","/**
 * End of types of sub-windows.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_STATUS_BAR_PANEL","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 14","","/**
 * Window type: panel that slides out from the status bar
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_SYSTEM_ERROR","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 10","","/**
 * Window type: internal system error windows, appear on top of
 * everything they can.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.token","true","false","false","false","false","IBinder","null","","/**
 * Identifier for this window.  This will usually be filled in for
 * you.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_INPUT_METHOD_DIALOG","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 12","","/**
 * Window type: internal input methods dialog windows, which appear above
 * the current input method window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_BASE_APPLICATION","true","false","false","true","true","int","1","","/**
 * Window type: an application window that serves as the ""base"" window
 * of the overall application; all other application windows will
 * appear on top of it.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_KEEP_SURFACE_WHILE_ANIMATING","true","false","false","true","true","int","0x10000000","","/**
 * Window flag: *sigh* The lock screen wants to continue running its
 * animation while it is fading.  A kind-of hack to allow this.  Maybe
 * in the future we just make this the default behavior.
 *
 * {@hide}
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_SCALED","true","false","false","true","true","int","0x00004000","","/**
 * Window flag: a special mode where the layout parameters are used
 * to perform scaling of the surface when it is composited to the
 * screen.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.BRIGHTNESS_OVERRIDE_FULL","true","false","false","true","true","float","1.0f","","/**
 * Value for {@link #screenBrightness} and {@link #buttonBrightness}
 * indicating that the screen or button backlight brightness should be set
 * to the hightest value when this window is in front.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.mTitle","false","false","true","false","false","CharSequence","""""","","","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_APPLICATION","true","false","false","true","true","int","2","","/**
 * Window type: a normal application window.  The {@link #token} must be
 * an Activity token identifying who the window belongs to.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.LAYOUT_CHANGED","true","false","false","true","true","int","1 << 0","@SuppressWarnings({ ""PointlessBitwiseExpression"" })","","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_MASK_ADJUST","true","false","false","true","true","int","0xf0","","/**
 * Mask for {@link #softInputMode} of the bits that determine the
 * way that the window should be adjusted to accommodate the soft
 * input window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_ADJUST_UNSPECIFIED","true","false","false","true","true","int","0x00","","/**
 * Adjustment option for {@link #softInputMode}: nothing specified.
 * The system will try to pick one or
 * the other depending on the contents of the window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_PHONE","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 2","","/**
 * Window type: phone.  These are non-application windows providing
 * user interaction with the phone (in particular incoming calls).
 * These windows are normally placed above all applications, but behind
 * the status bar.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.dimAmount","true","false","false","false","false","float","1.0f","","/**
 * When {@link #FLAG_DIM_BEHIND} is set, this is the amount of dimming
 * to apply.  Range is from 1.0 for completely opaque to 0.0 for no
 * dim.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_STATE_HIDDEN","true","false","false","true","true","int","2","","/**
 * Visibility state for {@link #softInputMode}: please hide any soft input
 * area when normally appropriate (when the user is navigating
 * forward to your window).
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.ALPHA_CHANGED","true","false","false","true","true","int","1 << 7","","","\android\view\WindowManager.java"
"android.view.WindowManager.FLAGS_CHANGED","true","false","false","true","true","int","1 << 2","","","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_KEEP_SCREEN_ON","true","false","false","true","true","int","0x00000080","","/**
 * Window flag: as long as this window is visible to the user, keep
 * the device's screen turned on and bright.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_SHOW_WALLPAPER","true","false","false","true","true","int","0x00100000","","/**
 * Window flag: ask that the system wallpaper be shown behind
 * your window.  The window surface must be translucent to be able
 * to actually see the wallpaper behind it; this flag just ensures
 * that the wallpaper surface will be there if this window actually
 * has translucent regions.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_COMPATIBLE_WINDOW","true","false","false","true","true","int","0x20000000","","/**
 * Window flag: special flag to limit the size of the window to be
 * original size ([320x480] x density). Used to create window for applications
 * running under compatibility mode.
 *
 * {@hide}
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_APPLICATION_PANEL","true","false","false","true","true","int","FIRST_SUB_WINDOW","","/**
 * Window type: a panel on top of an application window.  These windows
 * appear on top of their attached window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_ADJUST_UNSPECIFIED","true","false","false","true","true","int","0x00","","/**
 * Adjustment option for {@link #softInputMode}: nothing specified.
 * The system will try to pick one or
 * the other depending on the contents of the window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE","true","false","false","true","true","int","5","","/**
 * Visibility state for {@link #softInputMode}: please always make the
 * soft input area visible when this window receives input focus.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAGS_CHANGED","true","false","false","true","true","int","1 << 2","","","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_ALLOW_LOCK_WHILE_SCREEN_ON","true","false","false","true","true","int","0x00000001","","/**
 * Window flag: as long as this window is visible to the user, allow
 * the lock screen to activate while the screen is on.
 * This can be used independently, or in combination with
 * {@link #FLAG_KEEP_SCREEN_ON} and/or {@link #FLAG_SHOW_WHEN_LOCKED}
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.format","true","false","false","false","false","int","","","/**
 * The desired bitmap format.  May be one of the constants in
 * {@link android.graphics.PixelFormat}.  Default is OPAQUE.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.format","true","false","false","false","false","int","","","/**
 * The desired bitmap format.  May be one of the constants in
 * {@link android.graphics.PixelFormat}.  Default is OPAQUE.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_ALT_FOCUSABLE_IM","true","false","false","true","true","int","0x00020000","","/**
 * Window flag: invert the state of {@link #FLAG_NOT_FOCUSABLE} with
 * respect to how this window interacts with the current method.  That
 * is, if FLAG_NOT_FOCUSABLE is set and this flag is set, then the
 * window will behave as if it needs to interact with the input method
 * and thus be placed behind/away from it; if FLAG_NOT_FOCUSABLE is
 * not set and this flag is set, then the window will behave as if it
 * doesn't need to interact with the input method and can be placed
 * to use more space and cover the input method.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_STATE_HIDDEN","true","false","false","true","true","int","2","","/**
 * Visibility state for {@link #softInputMode}: please hide any soft input
 * area when normally appropriate (when the user is navigating
 * forward to your window).
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED","true","false","false","true","true","int","0","","/**
 * Visibility state for {@link #softInputMode}: no state has been specified.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_IGNORE_CHEEK_PRESSES","true","false","false","true","true","int","0x00008000","","/**
 * Window flag: intended for windows that will often be used when the user is
 * holding the screen against their face, it will aggressively filter the event
 * stream to prevent unintended presses in this situation that may not be
 * desired for a particular window, when such an event stream is detected, the
 * application will receive a CANCEL motion event to indicate this so applications
 * can handle this accordingly by taking no action on the event
 * until the finger is released.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_INPUT_METHOD","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 11","","/**
 * Window type: internal input methods windows, which appear above
 * the normal UI.  Application windows may be resized or panned to keep
 * the input focus visible while this window is displayed.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.packageName","true","false","false","false","false","String","null","","/**
 * Name of the package owning this window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_SYSTEM_ALERT","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 3","","/**
 * Window type: system window, such as low power alert. These windows
 * are always on top of application windows.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.horizontalMargin","true","false","false","false","false","float","","","/**
 * The horizontal margin, as a percentage of the container's width,
 * between the container and the widget.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.memoryType","true","false","false","false","false","int","","","/**
 * Specifies what type of memory buffers should be used by this window.
 * Default is normal.
 *
 * @see #MEMORY_TYPE_NORMAL
 * @see #MEMORY_TYPE_PUSH_BUFFERS
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.horizontalMargin","true","false","false","false","false","float","","","/**
 * The horizontal margin, as a percentage of the container's width,
 * between the container and the widget.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.LAYOUT_CHANGED","true","false","false","true","true","int","1 << 0","@SuppressWarnings({ ""PointlessBitwiseExpression"" })","","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING","true","false","false","true","true","int","0x00000040","","/**
 * Window flag: When set, if the device is asleep when the touch
 * screen is pressed, you will receive this first touch event.  Usually
 * the first touch event is consumed by the system since the user can
 * not see what they are pressing on.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FIRST_APPLICATION_WINDOW","true","false","false","true","true","int","1","","/**
 * Start of window types that represent normal application windows.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.MEMORY_TYPE_GPU","true","false","false","true","true","int","2","@Deprecated","/**
 * Memory type: The window's surface is configured to be accessible
 * by graphics accelerators.
 * @deprecated this is ignored, this value is set automatically when needed.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TITLE_CHANGED","true","false","false","true","true","int","1 << 6","","","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_APPLICATION_ATTACHED_DIALOG","true","false","false","true","true","int","FIRST_SUB_WINDOW + 3","","/**
 * Window type: like {@link #TYPE_APPLICATION_PANEL}, but layout
 * of the window happens as that of a top-level window, <em>not</em>
 * as a child of its container.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.BRIGHTNESS_OVERRIDE_FULL","true","false","false","true","true","float","1.0f","","/**
 * Value for {@link #screenBrightness} and {@link #buttonBrightness}
 * indicating that the screen or button backlight brightness should be set
 * to the hightest value when this window is in front.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_DITHER","true","false","false","true","true","int","0x00001000","","/**
 * Window flag: turn on dithering when compositing this window to
 * the screen.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_STATE_ALWAYS_VISIBLE","true","false","false","true","true","int","5","","/**
 * Visibility state for {@link #softInputMode}: please always make the
 * soft input area visible when this window receives input focus.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_SHOW_WHEN_LOCKED","true","false","false","true","true","int","0x00080000","","/**
 * Window flag: special flag to let windows be shown when the screen
 * is locked. This will let application windows take precedence over
 * key guard or any other lock screens. Can be used with
 * {@link #FLAG_KEEP_SCREEN_ON} to turn screen on and display windows
 * directly before showing the key guard window.  Can be used with
 * {@link #FLAG_DISMISS_KEYGUARD} to automatically fully dismisss
 * non-secure keyguards.  This flag only applies to the top-most
 * full-screen window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.mTitle","false","false","true","false","false","CharSequence","""""","","","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_LAYOUT_NO_LIMITS","true","false","false","true","true","int","0x00000200","","/**
 * Window flag: allow window to extend outside of the screen.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.CREATOR","true","false","false","true","true","Parcelable.Creator<LayoutParams>","new Parcelable.Creator<LayoutParams>() {

    public LayoutParams createFromParcel(Parcel in) {
        return new LayoutParams(in);
    }

    public LayoutParams[] newArray(int size) {
        return new LayoutParams[size];
    }
}","","","\android\view\WindowManager.java"
"android.view.LayoutParams.MEMORY_TYPE_HARDWARE","true","false","false","true","true","int","1","@Deprecated","/**
 * Memory type: The window's surface is configured to be accessible
 * by DMA engines and hardware accelerators.
 * @deprecated this is ignored, this value is set automatically when needed.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_TOAST","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 5","","/**
 * Window type: transient notifications.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_BLUR_BEHIND","true","false","false","true","true","int","0x00000004","","/**
 * Window flag: blur everything behind this window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_PHONE","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 2","","/**
 * Window type: phone.  These are non-application windows providing
 * user interaction with the phone (in particular incoming calls).
 * These windows are normally placed above all applications, but behind
 * the status bar.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_TURN_SCREEN_ON","true","false","false","true","true","int","0x00200000","","/**
 * Window flag: when set as a window is being added or made
 * visible, once the window has been shown then the system will
 * poke the power manager's user activity (as if the user had woken
 * up the device) to turn the screen on.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_BLUR_BEHIND","true","false","false","true","true","int","0x00000004","","/**
 * Window flag: blur everything behind this window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_DISMISS_KEYGUARD","true","false","false","true","true","int","0x00400000","","/**
 * Window flag: when set the window will cause the keyguard to
 * be dismissed, only if it is not a secure lock keyguard.  Because such
 * a keyguard is not needed for security, it will never re-appear if
 * the user navigates to another window (in contrast to
 * {@link #FLAG_SHOW_WHEN_LOCKED}, which will only temporarily
 * hide both secure and non-secure keyguards but ensure they reappear
 * when the user moves to another UI that doesn't hide them).
 * If the keyguard is currently active and is secure (requires an
 * unlock pattern) than the user will still need to confirm it before
 * seeing this window, unless {@link #FLAG_SHOW_WHEN_LOCKED} has
 * also been set.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.MEMORY_TYPE_PUSH_BUFFERS","true","false","false","true","true","int","3","","/**
 * Memory type: The window's surface doesn't own its buffers and
 * therefore cannot be locked. Instead the buffers are pushed to
 * it through native binder calls.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_FORCE_NOT_FULLSCREEN","true","false","false","true","true","int","0x00000800","","/**
 * Window flag: Override {@link #FLAG_FULLSCREEN and force the
 * screen decorations (such as status bar) to be shown.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_APPLICATION_MEDIA_OVERLAY","true","false","false","true","true","int","FIRST_SUB_WINDOW + 4","","/**
 * Window type: window for showing overlays on top of media windows.
 * These windows are displayed between TYPE_APPLICATION_MEDIA and the
 * application window.  They should be translucent to be useful.  This
 * is a big ugly hack so:
 * @hide
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SCREEN_BRIGHTNESS_CHANGED","true","false","false","true","true","int","1 << 11","","","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_STATUS_BAR_PANEL","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 14","","/**
 * Window type: panel that slides out from the status bar
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_INPUT_METHOD","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 11","","/**
 * Window type: internal input methods windows, which appear above
 * the normal UI.  Application windows may be resized or panned to keep
 * the input focus visible while this window is displayed.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH","true","false","false","true","true","int","0x00040000","","/**
 * Window flag: if you have set {@link #FLAG_NOT_TOUCH_MODAL}, you
 * can set this flag to receive a single special MotionEvent with
 * the action
 * {@link MotionEvent#ACTION_OUTSIDE MotionEvent.ACTION_OUTSIDE} for
 * touches that occur outside of your window.  Note that you will not
 * receive the full down/move/up gesture, only the location of the
 * first down as an ACTION_OUTSIDE.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_NOT_TOUCH_MODAL","true","false","false","true","true","int","0x00000020","","/**
 * Window flag: Even when this window is focusable (its
 * {@link #FLAG_NOT_FOCUSABLE is not set), allow any pointer events
 * outside of the window to be sent to the windows behind it.  Otherwise
 * it will consume all pointer events itself, regardless of whether they
 * are inside of the window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_KEEP_SCREEN_ON","true","false","false","true","true","int","0x00000080","","/**
 * Window flag: as long as this window is visible to the user, keep
 * the device's screen turned on and bright.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_SEARCH_BAR","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 1","","/**
 * Window type: the search bar.  There can be only one search bar
 * window; it is placed at the top of the screen.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_SYSTEM_ALERT","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 3","","/**
 * Window type: system window, such as low power alert. These windows
 * are always on top of application windows.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.horizontalWeight","true","false","false","false","false","float","","","/**
 * Indicates how much of the extra space will be allocated horizontally
 * to the view associated with these LayoutParams. Specify 0 if the view
 * should not be stretched. Otherwise the extra pixels will be pro-rated
 * among all views whose weight is greater than 0.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_STATE_VISIBLE","true","false","false","true","true","int","4","","/**
 * Visibility state for {@link #softInputMode}: please show the soft
 * input area when normally appropriate (when the user is navigating
 * forward to your window).
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_KEYGUARD_DIALOG","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 9","","/**
 * Window type: dialogs that the keyguard shows
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.windowAnimations","true","false","false","false","false","int","","","/**
 * A style resource defining the animations to use for this window.
 * This must be a system resource; it can not be an application resource
 * because the window manager does not have access to applications.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_FULLSCREEN","true","false","false","true","true","int","0x00000400","","/**
 * Window flag: Hide all screen decorations (e.g. status bar) while
 * this window is displayed.  This allows the window to use the entire
 * display space for itself -- the status bar will be hidden when
 * an app window with this flag set is on the top layer.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.verticalWeight","true","false","false","false","false","float","","","/**
 * Indicates how much of the extra space will be allocated vertically
 * to the view associated with these LayoutParams. Specify 0 if the view
 * should not be stretched. Otherwise the extra pixels will be pro-rated
 * among all views whose weight is greater than 0.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.screenBrightness","true","false","false","false","false","float","BRIGHTNESS_OVERRIDE_NONE","","/**
 * This can be used to override the user's preferred brightness of
 * the screen.  A value of less than 0, the default, means to use the
 * preferred screen brightness.  0 to 1 adjusts the brightness from
 * dark to full bright.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.BUTTON_BRIGHTNESS_CHANGED","true","false","false","true","true","int","1 << 12","","/**
 * {@hide}
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_SYSTEM_ERROR","true","false","false","true","true","int","0x40000000","","/**
 * Window flag: a special option intended for system dialogs.  When
 * this flag is set, the window will demand focus unconditionally when
 * it is created.
 * {@hide}
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_SHOW_WHEN_LOCKED","true","false","false","true","true","int","0x00080000","","/**
 * Window flag: special flag to let windows be shown when the screen
 * is locked. This will let application windows take precedence over
 * key guard or any other lock screens. Can be used with
 * {@link #FLAG_KEEP_SCREEN_ON} to turn screen on and display windows
 * directly before showing the key guard window.  Can be used with
 * {@link #FLAG_DISMISS_KEYGUARD} to automatically fully dismisss
 * non-secure keyguards.  This flag only applies to the top-most
 * full-screen window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.verticalMargin","true","false","false","false","false","float","","","/**
 * The vertical margin, as a percentage of the container's height,
 * between the container and the widget.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_SYSTEM_ERROR","true","false","false","true","true","int","0x40000000","","/**
 * Window flag: a special option intended for system dialogs.  When
 * this flag is set, the window will demand focus unconditionally when
 * it is created.
 * {@hide}
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_APPLICATION_MEDIA","true","false","false","true","true","int","FIRST_SUB_WINDOW + 1","","/**
 * Window type: window for showing media (e.g. video).  These windows
 * are displayed behind their attached window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.verticalMargin","true","false","false","false","false","float","","","/**
 * The vertical margin, as a percentage of the container's height,
 * between the container and the widget.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.BRIGHTNESS_OVERRIDE_OFF","true","false","false","true","true","float","0.0f","","/**
 * Value for {@link #screenBrightness} and {@link #buttonBrightness}
 * indicating that the screen or button backlight brightness should be set
 * to the lowest value when this window is in front.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.windowAnimations","true","false","false","false","false","int","","","/**
 * A style resource defining the animations to use for this window.
 * This must be a system resource; it can not be an application resource
 * because the window manager does not have access to applications.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_APPLICATION_ATTACHED_DIALOG","true","false","false","true","true","int","FIRST_SUB_WINDOW + 3","","/**
 * Window type: like {@link #TYPE_APPLICATION_PANEL}, but layout
 * of the window happens as that of a top-level window, <em>not</em>
 * as a child of its container.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.DIM_AMOUNT_CHANGED","true","false","false","true","true","int","1 << 5","","","\android\view\WindowManager.java"
"android.view.LayoutParams.FIRST_APPLICATION_WINDOW","true","false","false","true","true","int","1","","/**
 * Start of window types that represent normal application windows.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FIRST_SUB_WINDOW","true","false","false","true","true","int","1000","","/**
 * Start of types of sub-windows.  The {@link #token} of these windows
 * must be set to the window they are attached to.  These types of
 * windows are kept next to their attached window in Z-order, and their
 * coordinate space is relative to their attached window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.gravity","true","false","false","false","false","int","","","/**
 * Placement of window within the screen as per {@link Gravity}
 *
 * @see Gravity
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.packageName","true","false","false","false","false","String","null","","/**
 * Name of the package owning this window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_APPLICATION_SUB_PANEL","true","false","false","true","true","int","FIRST_SUB_WINDOW + 2","","/**
 * Window type: a sub-panel on top of an application window.  These
 * windows are displayed on top their attached window and any
 * {@link #TYPE_APPLICATION_PANEL} panels.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_SYSTEM_ERROR","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 10","","/**
 * Window type: internal system error windows, appear on top of
 * everything they can.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.MEMORY_TYPE_CHANGED","true","false","false","true","true","int","1 << 8","","","\android\view\WindowManager.java"
"android.view.LayoutParams.softInputMode","true","false","false","false","false","int","","","/**
 * Desired operating mode for any soft input area.  May any combination
 * of:
 *
 * <ul>
 * <li> One of the visibility states
 * {@link #SOFT_INPUT_STATE_UNSPECIFIED}, {@link #SOFT_INPUT_STATE_UNCHANGED},
 * {@link #SOFT_INPUT_STATE_HIDDEN}, {@link #SOFT_INPUT_STATE_ALWAYS_VISIBLE}, or
 * {@link #SOFT_INPUT_STATE_VISIBLE}.
 * <li> One of the adjustment options
 * {@link #SOFT_INPUT_ADJUST_UNSPECIFIED},
 * {@link #SOFT_INPUT_ADJUST_RESIZE}, or
 * {@link #SOFT_INPUT_ADJUST_PAN}.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_STATE_ALWAYS_HIDDEN","true","false","false","true","true","int","3","","/**
 * Visibility state for {@link #softInputMode}: please always hide any
 * soft input area when this window receives focus.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_SYSTEM_DIALOG","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 8","","/**
 * Window type: panel that slides out from the status bar
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.ANIMATION_CHANGED","true","false","false","true","true","int","1 << 4","","","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_INPUT_METHOD_DIALOG","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 12","","/**
 * Window type: internal input methods dialog windows, which appear above
 * the current input method window.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_DIM_BEHIND","true","false","false","true","true","int","0x00000002","","/**
 * Window flag: everything behind this window will be dimmed.
 * Use {@link #dimAmount} to control the amount of dim.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.dimAmount","true","false","false","false","false","float","1.0f","","/**
 * When {@link #FLAG_DIM_BEHIND} is set, this is the amount of dimming
 * to apply.  Range is from 1.0 for completely opaque to 0.0 for no
 * dim.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_SYSTEM_DIALOG","true","false","false","true","true","int","FIRST_SYSTEM_WINDOW + 8","","/**
 * Window type: panel that slides out from the status bar
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_NOT_FOCUSABLE","true","false","false","true","true","int","0x00000008","","/**
 * Window flag: this window won't ever get key input focus, so the
 * user can not send key or other button events to it.  Those will
 * instead go to whatever focusable window is behind it.  This flag
 * will also enable {@link #FLAG_NOT_TOUCH_MODAL} whether or not that
 * is explicitly set.
 *
 * <p>Setting this flag also implies that the window will not need to
 * interact with
 * a soft input method, so it will be Z-ordered and positioned
 * independently of any active input method (typically this means it
 * gets Z-ordered on top of the input method, so it can use the full
 * screen for its content and cover the input method if needed.  You
 * can use {@link #FLAG_ALT_FOCUSABLE_IM} to modify this behavior.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN","true","false","false","true","true","int","0x00000800","","/**
 * Window flag: Override {@link #FLAG_FULLSCREEN and force the
 * screen decorations (such as status bar) to be shown.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.mCompatibilityParamsBackup","false","false","true","false","false","int","null","","// internal buffer to backup/restore parameters under compatibility mode.
","\android\view\WindowManager.java"
"android.view.LayoutParams.mCompatibilityParamsBackup","false","false","true","false","false","int","null","","// internal buffer to backup/restore parameters under compatibility mode.
","\android\view\WindowManager.java"
"android.view.WindowManager.type","true","false","false","false","false","int","","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = TYPE_BASE_APPLICATION, to = ""TYPE_BASE_APPLICATION""), @ViewDebug.IntToString(from = TYPE_APPLICATION, to = ""TYPE_APPLICATION""), @ViewDebug.IntToString(from = TYPE_APPLICATION_STARTING, to = ""TYPE_APPLICATION_STARTING""), @ViewDebug.IntToString(from = TYPE_APPLICATION_PANEL, to = ""TYPE_APPLICATION_PANEL""), @ViewDebug.IntToString(from = TYPE_APPLICATION_MEDIA, to = ""TYPE_APPLICATION_MEDIA""), @ViewDebug.IntToString(from = TYPE_APPLICATION_SUB_PANEL, to = ""TYPE_APPLICATION_SUB_PANEL""), @ViewDebug.IntToString(from = TYPE_APPLICATION_ATTACHED_DIALOG, to = ""TYPE_APPLICATION_ATTACHED_DIALOG""), @ViewDebug.IntToString(from = TYPE_STATUS_BAR, to = ""TYPE_STATUS_BAR""), @ViewDebug.IntToString(from = TYPE_SEARCH_BAR, to = ""TYPE_SEARCH_BAR""), @ViewDebug.IntToString(from = TYPE_PHONE, to = ""TYPE_PHONE""), @ViewDebug.IntToString(from = TYPE_SYSTEM_ALERT, to = ""TYPE_SYSTEM_ALERT""), @ViewDebug.IntToString(from = TYPE_KEYGUARD, to = ""TYPE_KEYGUARD""), @ViewDebug.IntToString(from = TYPE_TOAST, to = ""TYPE_TOAST""), @ViewDebug.IntToString(from = TYPE_SYSTEM_OVERLAY, to = ""TYPE_SYSTEM_OVERLAY""), @ViewDebug.IntToString(from = TYPE_PRIORITY_PHONE, to = ""TYPE_PRIORITY_PHONE""), @ViewDebug.IntToString(from = TYPE_STATUS_BAR_PANEL, to = ""TYPE_STATUS_BAR_PANEL""), @ViewDebug.IntToString(from = TYPE_SYSTEM_DIALOG, to = ""TYPE_SYSTEM_DIALOG""), @ViewDebug.IntToString(from = TYPE_KEYGUARD_DIALOG, to = ""TYPE_KEYGUARD_DIALOG""), @ViewDebug.IntToString(from = TYPE_SYSTEM_ERROR, to = ""TYPE_SYSTEM_ERROR""), @ViewDebug.IntToString(from = TYPE_INPUT_METHOD, to = ""TYPE_INPUT_METHOD""), @ViewDebug.IntToString(from = TYPE_INPUT_METHOD_DIALOG, to = ""TYPE_INPUT_METHOD_DIALOG"") })","/**
 * The general type of window.  There are three main classes of
 * window types:
 * <ul>
 * <li> <strong>Application windows</strong> (ranging from
 * {@link #FIRST_APPLICATION_WINDOW} to
 * {@link #LAST_APPLICATION_WINDOW}) are normal top-level application
 * windows.  For these types of windows, the {@link #token} must be
 * set to the token of the activity they are a part of (this will
 * normally be done for you if {@link #token} is null).
 * <li> <strong>Sub-windows</strong> (ranging from
 * {@link #FIRST_SUB_WINDOW} to
 * {@link #LAST_SUB_WINDOW}) are associated with another top-level
 * window.  For these types of windows, the {@link #token} must be
 * the token of the window it is attached to.
 * <li> <strong>System windows</strong> (ranging from
 * {@link #FIRST_SYSTEM_WINDOW} to
 * {@link #LAST_SYSTEM_WINDOW}) are special types of windows for
 * use by the system for specific purposes.  They should not normally
 * be used by applications, and a special permission is required
 * to use them.
 * </ul>
 *
 * @see #TYPE_BASE_APPLICATION
 * @see #TYPE_APPLICATION
 * @see #TYPE_APPLICATION_STARTING
 * @see #TYPE_APPLICATION_PANEL
 * @see #TYPE_APPLICATION_MEDIA
 * @see #TYPE_APPLICATION_SUB_PANEL
 * @see #TYPE_APPLICATION_ATTACHED_DIALOG
 * @see #TYPE_STATUS_BAR
 * @see #TYPE_SEARCH_BAR
 * @see #TYPE_PHONE
 * @see #TYPE_SYSTEM_ALERT
 * @see #TYPE_KEYGUARD
 * @see #TYPE_TOAST
 * @see #TYPE_SYSTEM_OVERLAY
 * @see #TYPE_PRIORITY_PHONE
 * @see #TYPE_STATUS_BAR_PANEL
 * @see #TYPE_SYSTEM_DIALOG
 * @see #TYPE_KEYGUARD_DIALOG
 * @see #TYPE_SYSTEM_ERROR
 * @see #TYPE_INPUT_METHOD
 * @see #TYPE_INPUT_METHOD_DIALOG
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.screenOrientation","true","false","false","false","false","int","ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED","","/**
 * Specific orientation value for a window.
 * May be any of the same values allowed
 * for {@link android.content.pm.ActivityInfo#screenOrientation}.
 * If not set, a default value of
 * {@link android.content.pm.ActivityInfo#SCREEN_ORIENTATION_UNSPECIFIED}
 * will be used.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.DIM_AMOUNT_CHANGED","true","false","false","true","true","int","1 << 5","","","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_ALT_FOCUSABLE_IM","true","false","false","true","true","int","0x00020000","","/**
 * Window flag: invert the state of {@link #FLAG_NOT_FOCUSABLE} with
 * respect to how this window interacts with the current method.  That
 * is, if FLAG_NOT_FOCUSABLE is set and this flag is set, then the
 * window will behave as if it needs to interact with the input method
 * and thus be placed behind/away from it; if FLAG_NOT_FOCUSABLE is
 * not set and this flag is set, then the window will behave as if it
 * doesn't need to interact with the input method and can be placed
 * to use more space and cover the input method.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_NOT_TOUCHABLE","true","false","false","true","true","int","0x00000010","","/**
 * Window flag: this window can never receive touch events.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN","true","false","false","true","true","int","3","","/**
 * Visibility state for {@link #softInputMode}: please always hide any
 * soft input area when this window receives focus.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_NOT_TOUCHABLE","true","false","false","true","true","int","0x00000010","","/**
 * Window flag: this window can never receive touch events.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.CREATOR","true","false","false","true","true","Parcelable.Creator<LayoutParams>","new Parcelable.Creator<LayoutParams>() {

    public LayoutParams createFromParcel(Parcel in) {
        return new LayoutParams(in);
    }

    public LayoutParams[] newArray(int size) {
        return new LayoutParams[size];
    }
}","","","\android\view\WindowManager.java"
"android.view.LayoutParams.type","true","false","false","false","false","int","","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = TYPE_BASE_APPLICATION, to = ""TYPE_BASE_APPLICATION""), @ViewDebug.IntToString(from = TYPE_APPLICATION, to = ""TYPE_APPLICATION""), @ViewDebug.IntToString(from = TYPE_APPLICATION_STARTING, to = ""TYPE_APPLICATION_STARTING""), @ViewDebug.IntToString(from = TYPE_APPLICATION_PANEL, to = ""TYPE_APPLICATION_PANEL""), @ViewDebug.IntToString(from = TYPE_APPLICATION_MEDIA, to = ""TYPE_APPLICATION_MEDIA""), @ViewDebug.IntToString(from = TYPE_APPLICATION_SUB_PANEL, to = ""TYPE_APPLICATION_SUB_PANEL""), @ViewDebug.IntToString(from = TYPE_APPLICATION_ATTACHED_DIALOG, to = ""TYPE_APPLICATION_ATTACHED_DIALOG""), @ViewDebug.IntToString(from = TYPE_STATUS_BAR, to = ""TYPE_STATUS_BAR""), @ViewDebug.IntToString(from = TYPE_SEARCH_BAR, to = ""TYPE_SEARCH_BAR""), @ViewDebug.IntToString(from = TYPE_PHONE, to = ""TYPE_PHONE""), @ViewDebug.IntToString(from = TYPE_SYSTEM_ALERT, to = ""TYPE_SYSTEM_ALERT""), @ViewDebug.IntToString(from = TYPE_KEYGUARD, to = ""TYPE_KEYGUARD""), @ViewDebug.IntToString(from = TYPE_TOAST, to = ""TYPE_TOAST""), @ViewDebug.IntToString(from = TYPE_SYSTEM_OVERLAY, to = ""TYPE_SYSTEM_OVERLAY""), @ViewDebug.IntToString(from = TYPE_PRIORITY_PHONE, to = ""TYPE_PRIORITY_PHONE""), @ViewDebug.IntToString(from = TYPE_STATUS_BAR_PANEL, to = ""TYPE_STATUS_BAR_PANEL""), @ViewDebug.IntToString(from = TYPE_SYSTEM_DIALOG, to = ""TYPE_SYSTEM_DIALOG""), @ViewDebug.IntToString(from = TYPE_KEYGUARD_DIALOG, to = ""TYPE_KEYGUARD_DIALOG""), @ViewDebug.IntToString(from = TYPE_SYSTEM_ERROR, to = ""TYPE_SYSTEM_ERROR""), @ViewDebug.IntToString(from = TYPE_INPUT_METHOD, to = ""TYPE_INPUT_METHOD""), @ViewDebug.IntToString(from = TYPE_INPUT_METHOD_DIALOG, to = ""TYPE_INPUT_METHOD_DIALOG"") })","/**
 * The general type of window.  There are three main classes of
 * window types:
 * <ul>
 * <li> <strong>Application windows</strong> (ranging from
 * {@link #FIRST_APPLICATION_WINDOW} to
 * {@link #LAST_APPLICATION_WINDOW}) are normal top-level application
 * windows.  For these types of windows, the {@link #token} must be
 * set to the token of the activity they are a part of (this will
 * normally be done for you if {@link #token} is null).
 * <li> <strong>Sub-windows</strong> (ranging from
 * {@link #FIRST_SUB_WINDOW} to
 * {@link #LAST_SUB_WINDOW}) are associated with another top-level
 * window.  For these types of windows, the {@link #token} must be
 * the token of the window it is attached to.
 * <li> <strong>System windows</strong> (ranging from
 * {@link #FIRST_SYSTEM_WINDOW} to
 * {@link #LAST_SYSTEM_WINDOW}) are special types of windows for
 * use by the system for specific purposes.  They should not normally
 * be used by applications, and a special permission is required
 * to use them.
 * </ul>
 *
 * @see #TYPE_BASE_APPLICATION
 * @see #TYPE_APPLICATION
 * @see #TYPE_APPLICATION_STARTING
 * @see #TYPE_APPLICATION_PANEL
 * @see #TYPE_APPLICATION_MEDIA
 * @see #TYPE_APPLICATION_SUB_PANEL
 * @see #TYPE_APPLICATION_ATTACHED_DIALOG
 * @see #TYPE_STATUS_BAR
 * @see #TYPE_SEARCH_BAR
 * @see #TYPE_PHONE
 * @see #TYPE_SYSTEM_ALERT
 * @see #TYPE_KEYGUARD
 * @see #TYPE_TOAST
 * @see #TYPE_SYSTEM_OVERLAY
 * @see #TYPE_PRIORITY_PHONE
 * @see #TYPE_STATUS_BAR_PANEL
 * @see #TYPE_SYSTEM_DIALOG
 * @see #TYPE_KEYGUARD_DIALOG
 * @see #TYPE_SYSTEM_ERROR
 * @see #TYPE_INPUT_METHOD
 * @see #TYPE_INPUT_METHOD_DIALOG
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.TYPE_BASE_APPLICATION","true","false","false","true","true","int","1","","/**
 * Window type: an application window that serves as the ""base"" window
 * of the overall application; all other application windows will
 * appear on top of it.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_ADJUST_RESIZE","true","false","false","true","true","int","0x10","","/**
 * Adjustment option for {@link #softInputMode}: set to allow the
 * window to be resized when an input
 * method is shown, so that its contents are not covered by the input
 * method.  This can <em>not<em> be combined with
 * {@link #SOFT_INPUT_ADJUST_PAN}; if
 * neither of these are set, then the system will try to pick one or
 * the other depending on the contents of the window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.LAST_APPLICATION_WINDOW","true","false","false","true","true","int","99","","/**
 * End of types of application windows.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_TURN_SCREEN_ON","true","false","false","true","true","int","0x00200000","","/**
 * Window flag: when set as a window is being added or made
 * visible, once the window has been shown then the system will
 * poke the power manager's user activity (as if the user had woken
 * up the device) to turn the screen on.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FORMAT_CHANGED","true","false","false","true","true","int","1 << 3","","","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_KEEP_SURFACE_WHILE_ANIMATING","true","false","false","true","true","int","0x10000000","","/**
 * Window flag: *sigh* The lock screen wants to continue running its
 * animation while it is fading.  A kind-of hack to allow this.  Maybe
 * in the future we just make this the default behavior.
 *
 * {@hide}
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_ADJUST_PAN","true","false","false","true","true","int","0x20","","/**
 * Adjustment option for {@link #softInputMode}: set to have a window
 * pan when an input method is
 * shown, so it doesn't need to deal with resizing but just panned
 * by the framework to ensure the current input focus is visible.  This
 * can <em>not<em> be combined with {@link #SOFT_INPUT_ADJUST_RESIZE}; if
 * neither of these are set, then the system will try to pick one or
 * the other depending on the contents of the window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FORMAT_CHANGED","true","false","false","true","true","int","1 << 3","","","\android\view\WindowManager.java"
"android.view.WindowManager.TITLE_CHANGED","true","false","false","true","true","int","1 << 6","","","\android\view\WindowManager.java"
"android.view.WindowManager.LAST_APPLICATION_WINDOW","true","false","false","true","true","int","99","","/**
 * End of types of application windows.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_IGNORE_CHEEK_PRESSES","true","false","false","true","true","int","0x00008000","","/**
 * Window flag: intended for windows that will often be used when the user is
 * holding the screen against their face, it will aggressively filter the event
 * stream to prevent unintended presses in this situation that may not be
 * desired for a particular window, when such an event stream is detected, the
 * application will receive a CANCEL motion event to indicate this so applications
 * can handle this accordingly by taking no action on the event
 * until the finger is released.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.horizontalWeight","true","false","false","false","false","float","","","/**
 * Indicates how much of the extra space will be allocated horizontally
 * to the view associated with these LayoutParams. Specify 0 if the view
 * should not be stretched. Otherwise the extra pixels will be pro-rated
 * among all views whose weight is greater than 0.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_APPLICATION_SUB_PANEL","true","false","false","true","true","int","FIRST_SUB_WINDOW + 2","","/**
 * Window type: a sub-panel on top of an application window.  These
 * windows are displayed on top their attached window and any
 * {@link #TYPE_APPLICATION_PANEL} panels.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.FLAG_LAYOUT_NO_LIMITS","true","false","false","true","true","int","0x00000200","","/**
 * Window flag: allow window to extend outside of the screen.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_APPLICATION_MEDIA","true","false","false","true","true","int","FIRST_SUB_WINDOW + 1","","/**
 * Window type: window for showing media (e.g. video).  These windows
 * are displayed behind their attached window.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.token","true","false","false","false","false","IBinder","null","","/**
 * Identifier for this window.  This will usually be filled in for
 * you.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.SOFT_INPUT_STATE_UNCHANGED","true","false","false","true","true","int","1","","/**
 * Visibility state for {@link #softInputMode}: please don't change the state of
 * the soft input area.
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.screenBrightness","true","false","false","false","false","float","BRIGHTNESS_OVERRIDE_NONE","","/**
 * This can be used to override the user's preferred brightness of
 * the screen.  A value of less than 0, the default, means to use the
 * preferred screen brightness.  0 to 1 adjusts the brightness from
 * dark to full bright.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.FLAG_DISMISS_KEYGUARD","true","false","false","true","true","int","0x00400000","","/**
 * Window flag: when set the window will cause the keyguard to
 * be dismissed, only if it is not a secure lock keyguard.  Because such
 * a keyguard is not needed for security, it will never re-appear if
 * the user navigates to another window (in contrast to
 * {@link #FLAG_SHOW_WHEN_LOCKED}, which will only temporarily
 * hide both secure and non-secure keyguards but ensure they reappear
 * when the user moves to another UI that doesn't hide them).
 * If the keyguard is currently active and is secure (requires an
 * unlock pattern) than the user will still need to confirm it before
 * seeing this window, unless {@link #FLAG_SHOW_WHEN_LOCKED} has
 * also been set.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.BUTTON_BRIGHTNESS_CHANGED","true","false","false","true","true","int","1 << 12","","/**
 * {@hide}
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.TYPE_APPLICATION_MEDIA_OVERLAY","true","false","false","true","true","int","FIRST_SUB_WINDOW + 4","","/**
 * Window type: window for showing overlays on top of media windows.
 * These windows are displayed between TYPE_APPLICATION_MEDIA and the
 * application window.  They should be translucent to be useful.  This
 * is a big ugly hack so:
 * @hide
 */
","\android\view\WindowManager.java"
"android.view.LayoutParams.SOFT_INPUT_STATE_UNCHANGED","true","false","false","true","true","int","1","","/**
 * Visibility state for {@link #softInputMode}: please don't change the state of
 * the soft input area.
 */
","\android\view\WindowManager.java"
"android.view.WindowManager.alpha","true","false","false","false","false","float","1.0f","","/**
 * An alpha value to apply to this entire window.
 * An alpha of 1.0 means fully opaque and 0.0 means fully transparent
 */
","\android\view\WindowManager.java"
"android.database.DatabaseUtils.TABLE_INFO_PRAGMA_DEFAULT_INDEX","true","false","false","true","true","int","4","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.mPreparedStatement","false","false","true","false","false","SQLiteStatement","null","","","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.mColumns","false","false","true","false","false","HashMap<String,Integer>","","","","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.mTableName","false","false","true","false","true","String","","","","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.mInsertSQL","false","false","true","false","false","String","null","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.mColl","false","false","true","true","false","Collator","null","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.mTableName","false","false","true","false","true","String","","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.mInsertStatement","false","false","true","false","false","SQLiteStatement","null","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.countProjection","false","false","true","true","true","String","new String[] { ""count(*)"" }","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.TAG","false","false","true","true","true","String","""DatabaseUtils""","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.DEBUG","false","false","true","true","true","boolean","false","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.mColumns","false","false","true","false","false","HashMap<String,Integer>","","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.mReplaceStatement","false","false","true","false","false","SQLiteStatement","null","","","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.mDb","false","false","true","false","true","SQLiteDatabase","","","","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.TABLE_INFO_PRAGMA_COLUMNNAME_INDEX","true","false","false","true","true","int","1","","/**
 * {@hide}
 *
 * These are the columns returned by sqlite's ""PRAGMA
 * table_info(...)"" command that we depend on.
 */
","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.TABLE_INFO_PRAGMA_COLUMNNAME_INDEX","true","false","false","true","true","int","1","","/**
 * {@hide}
 *
 * These are the columns returned by sqlite's ""PRAGMA
 * table_info(...)"" command that we depend on.
 */
","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.mReplaceStatement","false","false","true","false","false","SQLiteStatement","null","","","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.mInsertStatement","false","false","true","false","false","SQLiteStatement","null","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.mInsertSQL","false","false","true","false","false","String","null","","","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.mPreparedStatement","false","false","true","false","false","SQLiteStatement","null","","","\android\database\DatabaseUtils.java"
"android.database.InsertHelper.TABLE_INFO_PRAGMA_DEFAULT_INDEX","true","false","false","true","true","int","4","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.LOCAL_LOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\android\database\DatabaseUtils.java"
"android.database.DatabaseUtils.mDb","false","false","true","false","true","SQLiteDatabase","","","","\android\database\DatabaseUtils.java"
"com.android.internal.widget.WeightedLinearLayout.mMinorWeight","false","false","true","false","false","float","","","","\com\android\internal\widget\WeightedLinearLayout.java"
"com.android.internal.widget.WeightedLinearLayout.mMajorWeight","false","false","true","false","false","float","","","","\com\android\internal\widget\WeightedLinearLayout.java"
"android.webkit.JsResult.mResult","false","true","false","false","false","boolean","","","// This is a basic result of a confirm or prompt dialog.
","\android\webkit\JsResult.java"
"android.webkit.JsResult.mReady","false","false","true","false","false","boolean","","","// ready to handle it.
","\android\webkit\JsResult.java"
"android.webkit.JsResult.mTriedToNotifyBeforeReady","false","false","true","false","false","boolean","","","// is ready.
","\android\webkit\JsResult.java"
"android.webkit.JsResult.mProxy","false","true","false","false","true","CallbackProxy","","","/**
 * This is the caller of the prompt and is the object that is waiting.
 * @hide
 */
","\android\webkit\JsResult.java"
"android.webkit.JsResult.mDefaultValue","false","false","true","false","true","boolean","","","// This is the default value of the result.
","\android\webkit\JsResult.java"
"android.content.pm.ConfigurationInfo.reqInputFeatures","true","false","false","false","false","int","0","","/**
 * Flags associated with the input features.  Any combination of
 * {@link #INPUT_FEATURE_HARD_KEYBOARD},
 * {@link #INPUT_FEATURE_FIVE_WAY_NAV}
 */
","\android\content\pm\ConfigurationInfo.java"
"android.content.pm.ConfigurationInfo.GL_ES_VERSION_UNDEFINED","true","false","false","true","true","int","0","","/**
 * Default value for {@link #reqGlEsVersion};
 */
","\android\content\pm\ConfigurationInfo.java"
"android.content.pm.ConfigurationInfo.reqKeyboardType","true","false","false","false","false","int","","","/**
 * Application's input method preference.
 * One of: {@link android.content.res.Configuration#KEYBOARD_UNDEFINED},
 * {@link android.content.res.Configuration#KEYBOARD_NOKEYS},
 * {@link android.content.res.Configuration#KEYBOARD_QWERTY},
 * {@link android.content.res.Configuration#KEYBOARD_12KEY}
 */
","\android\content\pm\ConfigurationInfo.java"
"android.content.pm.ConfigurationInfo.CREATOR","true","false","false","true","true","Creator<ConfigurationInfo>","new Creator<ConfigurationInfo>() {

    public ConfigurationInfo createFromParcel(Parcel source) {
        return new ConfigurationInfo(source);
    }

    public ConfigurationInfo[] newArray(int size) {
        return new ConfigurationInfo[size];
    }
}","","","\android\content\pm\ConfigurationInfo.java"
"android.content.pm.ConfigurationInfo.INPUT_FEATURE_HARD_KEYBOARD","true","false","false","true","true","int","0x00000001","","/**
 * Value for {@link #reqInputFeatures}: if set, indicates that the application
 * requires a hard keyboard
 */
","\android\content\pm\ConfigurationInfo.java"
"android.content.pm.ConfigurationInfo.reqNavigation","true","false","false","false","false","int","","","/**
 * A flag indicating whether any keyboard is available.
 * one of: {@link android.content.res.Configuration#NAVIGATION_UNDEFINED},
 * {@link android.content.res.Configuration#NAVIGATION_DPAD},
 * {@link android.content.res.Configuration#NAVIGATION_TRACKBALL},
 * {@link android.content.res.Configuration#NAVIGATION_WHEEL}
 */
","\android\content\pm\ConfigurationInfo.java"
"android.content.pm.ConfigurationInfo.reqGlEsVersion","true","false","false","false","false","int","","","/**
 * The GLES version used by an application. The upper order 16 bits represent the
 * major version and the lower order 16 bits the minor version.
 */
","\android\content\pm\ConfigurationInfo.java"
"android.content.pm.ConfigurationInfo.INPUT_FEATURE_FIVE_WAY_NAV","true","false","false","true","true","int","0x00000002","","/**
 * Value for {@link #reqInputFeatures}: if set, indicates that the application
 * requires a five way navigation device
 */
","\android\content\pm\ConfigurationInfo.java"
"android.content.pm.ConfigurationInfo.reqTouchScreen","true","false","false","false","false","int","","","/**
 * The kind of touch screen attached to the device.
 * One of: {@link android.content.res.Configuration#TOUCHSCREEN_NOTOUCH},
 * {@link android.content.res.Configuration#TOUCHSCREEN_STYLUS},
 * {@link android.content.res.Configuration#TOUCHSCREEN_FINGER}.
 */
","\android\content\pm\ConfigurationInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.FEEDBACK_SPOKEN","true","false","false","true","true","int","0x0000001","","/**
 * Denotes spoken feedback.
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.notificationTimeout","true","false","false","false","false","long","","","/**
 * The timeout after the most recent event of a given type before an
 * {@link AccessibilityService} is notified.
 * <p>
 * Note: The event notification timeout is useful to avoid propagating events to the client
 * too frequently since this is accomplished via an expensive interprocess call.
 * One can think of the timeout as a criteria to determine when event generation has
 * settled down
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.FEEDBACK_AUDIBLE","true","false","false","true","true","int","0x0000004","","/**
 * Denotes audible (not spoken) feedback.
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.FEEDBACK_HAPTIC","true","false","false","true","true","int","0x0000002","","/**
 * Denotes haptic feedback.
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.eventTypes","true","false","false","false","false","int","","","/**
 * The event types an {@link AccessibilityService} is interested in.
 *
 * @see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_CLICKED
 * @see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_LONG_CLICKED
 * @see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_FOCUSED
 * @see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SELECTED
 * @see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_CHANGED
 * @see android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED
 * @see android.view.accessibility.AccessibilityEvent#TYPE_NOTIFICATION_STATE_CHANGED
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.feedbackType","true","false","false","false","false","int","","","/**
 * The feedback type an {@link AccessibilityService} provides.
 *
 * @see #FEEDBACK_AUDIBLE
 * @see #FEEDBACK_GENERIC
 * @see #FEEDBACK_HAPTIC
 * @see #FEEDBACK_SPOKEN
 * @see #FEEDBACK_VISUAL
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.packageNames","true","false","false","false","false","String","","","/**
 * The package names an {@link AccessibilityService} is interested in. Setting
 * to null is equivalent to all packages.
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.flags","true","false","false","false","false","int","","","/**
 * This field represents a set of flags used for configuring an
 * {@link AccessibilityService}.
 *
 * @see #DEFAULT
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.DEFAULT","true","false","false","true","true","int","0x0000001","","/**
 * If an {@link AccessibilityService} is the default for a given type.
 * Default service is invoked only if no package specific one exists. In case of
 * more than one package specific service only the earlier registered is notified.
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.FEEDBACK_GENERIC","true","false","false","true","true","int","0x0000010","","/**
 * Denotes generic feedback.
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.FEEDBACK_VISUAL","true","false","false","true","true","int","0x0000008","","/**
 * Denotes visual feedback.
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.accessibilityservice.AccessibilityServiceInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<AccessibilityServiceInfo>","new Parcelable.Creator<AccessibilityServiceInfo>() {

    public AccessibilityServiceInfo createFromParcel(Parcel parcel) {
        AccessibilityServiceInfo info = new AccessibilityServiceInfo();
        info.eventTypes = parcel.readInt();
        info.packageNames = parcel.readStringArray();
        info.feedbackType = parcel.readInt();
        info.notificationTimeout = parcel.readLong();
        info.flags = parcel.readInt();
        return info;
    }

    public AccessibilityServiceInfo[] newArray(int size) {
        return new AccessibilityServiceInfo[size];
    }
}","","/**
 * @see Parcelable.Creator
 */
","\android\accessibilityservice\AccessibilityServiceInfo.java"
"android.pim.vcard.VCardParser_V21.sAvailablePropertyNameSetV21","false","false","true","true","true","HashSet<String>","new HashSet<String>(Arrays.asList(""BEGIN"", ""LOGO"", ""PHOTO"", ""LABEL"", ""FN"", ""TITLE"", ""SOUND"", ""VERSION"", ""TEL"", ""EMAIL"", ""TZ"", ""GEO"", ""NOTE"", ""URL"", ""BDAY"", ""ROLE"", ""REV"", ""UID"", ""KEY"", ""MAILER""))","","/**
 * Store the property names available in vCard 2.1
 */
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.sAvailableEncodingV21","false","false","true","true","true","HashSet<String>","new HashSet<String>(Arrays.asList(""7BIT"", ""8BIT"", ""QUOTED-PRINTABLE"", ""BASE64"", ""B""))","","/**
 * Though vCard 2.1 specification does not allow ""B"" encoding, some data may have it.
 * We allow it for safety...
 */
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mUnknownValueMap","false","true","false","false","false","Set<String>","new HashSet<String>()","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeParsePropertyValues","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mBuilder","false","true","false","false","false","VCardInterpreter","null","","/**
 * The builder to build parsed data
 */
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.STATE_PARAMS_IN_DQUOTE","false","false","true","true","true","int","2","","// This is just for safety.
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.sDefaultEncoding","false","true","false","false","true","String","""8BIT""","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mEncoding","false","true","false","false","false","String","null","","/**
 * The encoding type. ""Encoding"" in vCard is different from ""Charset"".
 * e.g. 7BIT, 8BIT, QUOTED-PRINTABLE.
 */
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeParseAdrOrgN","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeEndProperty","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mNestCount","false","false","true","false","false","int","","","// See v21_foma_1.vcf in test directory for more information.
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mPreviousLine","false","false","true","false","false","String","","","// Used only for parsing END:VCARD.
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.CustomBufferedReader.mTime","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mUnknownTypeMap","false","true","false","false","false","Set<String>","new HashSet<String>()","","// emit a warning message.
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.LOG_TAG","false","false","true","true","true","String","""VCardParser_V21""","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mReader","false","true","false","false","false","BufferedReader","","","// Should not directly read a line from this object. Use getLine() instead.
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.sKnownTypeSet","false","false","true","true","true","HashSet<String>","new HashSet<String>(Arrays.asList(""DOM"", ""INTL"", ""POSTAL"", ""PARCEL"", ""HOME"", ""WORK"", ""PREF"", ""VOICE"", ""FAX"", ""MSG"", ""CELL"", ""PAGER"", ""BBS"", ""MODEM"", ""CAR"", ""ISDN"", ""VIDEO"", ""AOL"", ""APPLELINK"", ""ATTMAIL"", ""CIS"", ""EWORLD"", ""INTERNET"", ""IBMMAIL"", ""MCIMAIL"", ""POWERSHARE"", ""PRODIGY"", ""TLX"", ""X400"", ""GIF"", ""CGM"", ""WMF"", ""BMP"", ""MET"", ""PMB"", ""DIB"", ""PICT"", ""TIFF"", ""PDF"", ""PS"", ""JPEG"", ""QTIME"", ""MPEG"", ""MPEG2"", ""AVI"", ""WAVE"", ""AIFF"", ""PCM"", ""X509"", ""PGP""))","","/**
 * Store the known-type
 */
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeReadEndRecord","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeHandleQuotedPrintable","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.STATE_GROUP_OR_PROPNAME","false","false","true","true","true","int","0","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeParseItems","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.STATE_PARAMS","false","false","true","true","true","int","1","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeParseLineAndHandleGroup","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.sKnownValueSet","false","false","true","true","true","HashSet<String>","new HashSet<String>(Arrays.asList(""INLINE"", ""URL"", ""CONTENT-ID"", ""CID""))","","/**
 * Store the known-value
 */
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeHandleMiscPropertyValue","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeStartProperty","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeTotal","false","false","true","false","false","long","","","// For measuring performance.
","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeReadStartRecord","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.pim.vcard.VCardParser_V21.mTimeHandleBase64","false","false","true","false","false","long","","","","\android\pim\vcard\VCardParser_V21.java"
"android.webkit.MimeTypeMap.mMimeTypeToExtensionMap","false","false","true","false","false","HashMap<String,String>","","","/**
 * MIME-type to file extension mapping:
 */
","\android\webkit\MimeTypeMap.java"
"android.webkit.MimeTypeMap.sMimeTypeMap","false","false","true","true","false","MimeTypeMap","","","/**
 * Singleton MIME-type map instance:
 */
","\android\webkit\MimeTypeMap.java"
"android.webkit.MimeTypeMap.mExtensionToMimeTypeMap","false","false","true","false","false","HashMap<String,String>","","","/**
 * File extension to MIME type mapping:
 */
","\android\webkit\MimeTypeMap.java"
"com.android.internal.widget.PasswordEntryKeyboardView.KEYCODE_OPTIONS","false","false","false","true","true","int","-100","","","\com\android\internal\widget\PasswordEntryKeyboardView.java"
"com.android.internal.widget.PasswordEntryKeyboardView.KEYCODE_NEXT_LANGUAGE","false","false","false","true","true","int","-104","","","\com\android\internal\widget\PasswordEntryKeyboardView.java"
"com.android.internal.widget.PasswordEntryKeyboardView.KEYCODE_VOICE","false","false","false","true","true","int","-102","","","\com\android\internal\widget\PasswordEntryKeyboardView.java"
"com.android.internal.widget.PasswordEntryKeyboardView.KEYCODE_SHIFT_LONGPRESS","false","false","false","true","true","int","-101","","","\com\android\internal\widget\PasswordEntryKeyboardView.java"
"com.android.internal.widget.PasswordEntryKeyboardView.KEYCODE_F1","false","false","false","true","true","int","-103","","","\com\android\internal\widget\PasswordEntryKeyboardView.java"
"android.appwidget.AppWidgetManager.META_DATA_APPWIDGET_OLD_NAME","true","false","false","true","true","String","""android.appwidget.oldName""","","/**
 * Field for the manifest meta-data tag used to indicate any previous name for the
 * app widget receiver.
 *
 * @see AppWidgetProviderInfo
 *
 * @hide Pending API approval
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.mDisplayMetrics","false","false","true","false","false","DisplayMetrics","","","","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.sService","false","false","false","true","false","IAppWidgetService","","","","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.META_DATA_APPWIDGET_PROVIDER","true","false","false","true","true","String","""android.appwidget.provider""","","/**
 * Field for the manifest meta-data tag.
 *
 * @see AppWidgetProviderInfo
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.ACTION_APPWIDGET_ENABLED","true","false","false","true","true","String","""android.appwidget.action.APPWIDGET_ENABLED""","","/**
 * Sent when an instance of an AppWidget is added to a host for the first time.
 * This broadcast is sent at boot time if there is a AppWidgetHost installed with
 * an instance for this provider.
 *
 * @see AppWidgetProvider#onEnabled AppWidgetProvider.onEnabled(Context context)
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.ACTION_APPWIDGET_UPDATE","true","false","false","true","true","String","""android.appwidget.action.APPWIDGET_UPDATE""","","/**
 * Sent when it is time to update your AppWidget.
 *
 * <p>This may be sent in response to a new instance for this AppWidget provider having
 * been instantiated, the requested {@link AppWidgetProviderInfo#updatePeriodMillis update interval}
 * having lapsed, or the system booting.
 *
 * <p>
 * The intent will contain the following extras:
 * <table>
 * <tr>
 * <td>{@link #EXTRA_APPWIDGET_IDS}</td>
 * <td>The appWidgetIds to update.  This may be all of the AppWidgets created for this
 * provider, or just a subset.  The system tries to send updates for as few AppWidget
 * instances as possible.</td>
 * </tr>
 * </table>
 *
 * @see AppWidgetProvider#onUpdate AppWidgetProvider.onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds)
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.sManagerCache","false","false","false","true","false","WeakHashMap<Context,WeakReference<AppWidgetManager>>","new WeakHashMap()","","","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.ACTION_APPWIDGET_DELETED","true","false","false","true","true","String","""android.appwidget.action.APPWIDGET_DELETED""","","/**
 * Sent when an instance of an AppWidget is deleted from its host.
 *
 * @see AppWidgetProvider#onDeleted AppWidgetProvider.onDeleted(Context context, int[] appWidgetIds)
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.EXTRA_CUSTOM_EXTRAS","true","false","false","true","true","String","""customExtras""","","/**
 * An intent extra to pass to the AppWidget picker containing a {@link java.util.List} of
 * {@link android.os.Bundle} objects to mix in to the list of AppWidgets that are
 * installed.  It will be added to the extras object on the {@link android.content.Intent}
 * that is returned from the picker activity.
 *
 * {@more}
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.mContext","false","false","false","false","false","Context","","","","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.INVALID_APPWIDGET_ID","true","false","false","true","true","int","0","","/**
 * A sentiel value that the AppWidget manager will never return as a appWidgetId.
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_IDS","true","false","false","true","true","String","""appWidgetIds""","","/**
 * An intent extra that contains multiple appWidgetIds.
 * <p>
 * The value will be an int array that can be retrieved like this:
 * {@sample frameworks/base/tests/appwidgets/AppWidgetHostTest/src/com/android/tests/appwidgethost/TestAppWidgetProvider.java getExtra_EXTRA_APPWIDGET_IDS}
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.ACTION_APPWIDGET_DISABLED","true","false","false","true","true","String","""android.appwidget.action.APPWIDGET_DISABLED""","","/**
 * Sent when an instance of an AppWidget is removed from the last host.
 *
 * @see AppWidgetProvider#onEnabled AppWidgetProvider.onEnabled(Context context)
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.EXTRA_CUSTOM_INFO","true","false","false","true","true","String","""customInfo""","","/**
 * An intent extra to pass to the AppWidget picker containing a {@link java.util.List} of
 * {@link AppWidgetProviderInfo} objects to mix in to the list of AppWidgets that are
 * installed.  (This is how the launcher shows the search widget).
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.EXTRA_APPWIDGET_ID","true","false","false","true","true","String","""appWidgetId""","","/**
 * An intent extra that contains one appWidgetId.
 * <p>
 * The value will be an int that can be retrieved like this:
 * {@sample frameworks/base/tests/appwidgets/AppWidgetHostTest/src/com/android/tests/appwidgethost/AppWidgetHostActivity.java getExtra_EXTRA_APPWIDGET_ID}
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.ACTION_APPWIDGET_PICK","true","false","false","true","true","String","""android.appwidget.action.APPWIDGET_PICK""","","/**
 * Send this from your {@link AppWidgetHost} activity when you want to pick an AppWidget to display.
 * The AppWidget picker activity will be launched.
 * <p>
 * You must supply the following extras:
 * <table>
 * <tr>
 * <td>{@link #EXTRA_APPWIDGET_ID}</td>
 * <td>A newly allocated appWidgetId, which will be bound to the AppWidget provider
 * once the user has selected one.</td>
 * </tr>
 * </table>
 *
 * <p>
 * The system will respond with an onActivityResult call with the following extras in
 * the intent:
 * <table>
 * <tr>
 * <td>{@link #EXTRA_APPWIDGET_ID}</td>
 * <td>The appWidgetId that you supplied in the original intent.</td>
 * </tr>
 * </table>
 * <p>
 * When you receive the result from the AppWidget pick activity, if the resultCode is
 * {@link android.app.Activity#RESULT_OK}, an AppWidget has been selected.  You should then
 * check the AppWidgetProviderInfo for the returned AppWidget, and if it has one, launch its configuration
 * activity.  If {@link android.app.Activity#RESULT_CANCELED} is returned, you should delete
 * the appWidgetId.
 *
 * @see #ACTION_APPWIDGET_CONFIGURE
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.ACTION_APPWIDGET_CONFIGURE","true","false","false","true","true","String","""android.appwidget.action.APPWIDGET_CONFIGURE""","","/**
 * Sent when it is time to configure your AppWidget while it is being added to a host.
 * This action is not sent as a broadcast to the AppWidget provider, but as a startActivity
 * to the activity specified in the {@link AppWidgetProviderInfo AppWidgetProviderInfo meta-data}.
 *
 * <p>
 * The intent will contain the following extras:
 * <table>
 * <tr>
 * <td>{@link #EXTRA_APPWIDGET_ID}</td>
 * <td>The appWidgetId to configure.</td>
 * </tr>
 * </table>
 *
 * <p>If you return {@link android.app.Activity#RESULT_OK} using
 * {@link android.app.Activity#setResult Activity.setResult()}, the AppWidget will be added,
 * and you will receive an {@link #ACTION_APPWIDGET_UPDATE} broadcast for this AppWidget.
 * If you return {@link android.app.Activity#RESULT_CANCELED}, the host will cancel the add
 * and not display this AppWidget, and you will receive a {@link #ACTION_APPWIDGET_DELETED} broadcast.
 */
","\android\appwidget\AppWidgetManager.java"
"android.appwidget.AppWidgetManager.TAG","false","false","false","true","true","String","""AppWidgetManager""","","","\android\appwidget\AppWidgetManager.java"
"com.android.internal.widget.SlidingTab.alignment","false","false","true","false","false","int","ALIGN_UNKNOWN","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mGrabbedState","false","false","true","false","false","int","OnTriggerListener.NO_HANDLE","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mAnimating","false","false","true","false","false","boolean","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mThreshold","false","false","true","false","false","float","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mLeftSlider","false","false","true","false","false","Slider","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.ALIGN_BOTTOM","true","false","false","true","true","int","3","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.STATE_NORMAL","false","false","true","true","true","int","0","","/**
 * States for the view.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.ALIGN_TOP","true","false","false","true","true","int","2","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.VIBRATE_SHORT","false","false","true","true","true","long","30","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.alignment_value","false","false","true","false","false","int","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.ALIGN_LEFT","true","false","false","true","true","int","0","","/**
 * Tab alignment - determines which side the tab should be drawn on
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.ANIM_TARGET_TIME","false","false","true","true","true","int","500","","// Time to show targets (in ms)
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.alignment_value","false","false","true","false","false","int","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.target","false","false","true","false","true","ImageView","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.STATE_PRESSED","false","false","true","true","true","int","1","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.text","false","false","true","false","true","TextView","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.OnTriggerListener.LEFT_HANDLE","true","false","false","true","true","int","1","","/**
 * The interface was triggered because the user grabbed the left handle and moved it past
 * the threshold.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mRightSlider","false","false","true","false","false","Slider","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.VERTICAL","false","false","true","true","true","int","1","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.alignment","false","false","true","false","false","int","ALIGN_UNKNOWN","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mHoldRightOnTransition","false","false","true","false","false","boolean","true","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.HORIZONTAL","false","false","true","true","true","int","0","","// as defined in attrs.xml
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.ALIGN_RIGHT","true","false","false","true","true","int","1","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.STATE_ACTIVE","false","false","true","true","true","int","2","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.LEFT_HANDLE","true","false","false","true","true","int","1","","/**
 * The interface was triggered because the user grabbed the left handle and moved it past
 * the threshold.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.ALIGN_TOP","true","false","false","true","true","int","2","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.target","false","false","true","false","true","ImageView","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.currentState","false","false","true","false","false","int","STATE_NORMAL","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.OnTriggerListener.RIGHT_HANDLE","true","false","false","true","true","int","2","","/**
 * The interface was triggered because the user grabbed the right handle and moved it past
 * the threshold.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mHoldLeftOnTransition","false","false","true","false","false","boolean","true","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mVibrator","false","false","true","false","false","Vibrator","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mOtherSlider","false","false","true","false","false","Slider","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.text","false","false","true","false","true","TextView","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.LOG_TAG","false","false","true","true","true","String","""SlidingTab""","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.ALIGN_BOTTOM","true","false","false","true","true","int","3","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.ALIGN_RIGHT","true","false","false","true","true","int","1","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.VIBRATE_LONG","false","false","true","true","true","long","40","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.ALIGN_UNKNOWN","true","false","false","true","true","int","4","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.STATE_ACTIVE","false","false","true","true","true","int","2","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.STATE_PRESSED","false","false","true","true","true","int","1","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.STATE_NORMAL","false","false","true","true","true","int","0","","/**
 * States for the view.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mCurrentSlider","false","false","true","false","false","Slider","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mTmpRect","false","false","true","false","false","Rect","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.tab","false","false","true","false","true","ImageView","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mOnTriggerListener","false","false","true","false","false","OnTriggerListener","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mAnimationDoneListener","false","false","true","false","true","AnimationListener","new AnimationListener() {

    public void onAnimationStart(Animation animation) {
    }

    public void onAnimationRepeat(Animation animation) {
    }

    public void onAnimationEnd(Animation animation) {
        onAnimationDone();
    }
}","","/**
 * Listener used to reset the view when the current animation completes.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.ANIM_DURATION","false","false","true","true","true","int","250","","// Time for most animations (in ms)
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mTriggered","false","false","true","false","false","boolean","false","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.currentState","false","false","true","false","false","int","STATE_NORMAL","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.TRACKING_MARGIN","false","false","true","true","true","int","50","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mTracking","false","false","true","false","false","boolean","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.Slider.ALIGN_UNKNOWN","true","false","false","true","true","int","4","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.NO_HANDLE","true","false","false","true","true","int","0","","/**
 * The interface was triggered because the user let go of the handle without reaching the
 * threshold.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.ALIGN_LEFT","true","false","false","true","true","int","0","","/**
 * Tab alignment - determines which side the tab should be drawn on
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mDensity","false","false","true","false","false","float","","","// used to scale dimensions for bitmaps.
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.OnTriggerListener.NO_HANDLE","true","false","false","true","true","int","0","","/**
 * The interface was triggered because the user let go of the handle without reaching the
 * threshold.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.RIGHT_HANDLE","true","false","false","true","true","int","2","","/**
 * The interface was triggered because the user grabbed the right handle and moved it past
 * the threshold.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.tab","false","false","true","false","true","ImageView","","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.mOrientation","false","false","true","false","false","int","","","/**
 * Either {@link #HORIZONTAL} or {@link #VERTICAL}.
 */
","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.DBG","false","false","true","true","true","boolean","false","","","\com\android\internal\widget\SlidingTab.java"
"com.android.internal.widget.SlidingTab.THRESHOLD","false","false","true","true","true","float","2.0f / 3.0f","","// TODO: Make these configurable
","\com\android\internal\widget\SlidingTab.java"
"android.widget.SeekBar.mOnSeekBarChangeListener","false","false","true","false","false","OnSeekBarChangeListener","","","","\android\widget\SeekBar.java"
"android.view.HapticFeedbackConstants.LONG_PRESS","true","false","false","true","true","int","0","","/**
 * The user has performed a long press on an object that is resulting
 * in an action being performed.
 */
","\android\view\HapticFeedbackConstants.java"
"android.view.HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING","true","false","false","true","true","int","0x0002","","/**
 * Flag for {@link View#performHapticFeedback(int, int)
 * View.performHapticFeedback(int, int)}: Ignore the global setting
 * for whether to perform haptic feedback, do it always.
 */
","\android\view\HapticFeedbackConstants.java"
"android.view.HapticFeedbackConstants.KEYBOARD_TAP","true","false","false","true","true","int","3","","/**
 * The user has pressed a soft keyboard key.
 */
","\android\view\HapticFeedbackConstants.java"
"android.view.HapticFeedbackConstants.VIRTUAL_KEY","true","false","false","true","true","int","1","","/**
 * The user has pressed on a virtual on-screen key.
 */
","\android\view\HapticFeedbackConstants.java"
"android.view.HapticFeedbackConstants.FLAG_IGNORE_VIEW_SETTING","true","false","false","true","true","int","0x0001","","/**
 * Flag for {@link View#performHapticFeedback(int, int)
 * View.performHapticFeedback(int, int)}: Ignore the setting in the
 * view for whether to perform haptic feedback, do it always.
 */
","\android\view\HapticFeedbackConstants.java"
"android.view.HapticFeedbackConstants.SAFE_MODE_ENABLED","true","false","false","true","true","int","10001","","/**
 * This is a private constant.  Feel free to renumber as desired.
 * @hide
 */
","\android\view\HapticFeedbackConstants.java"
"android.view.HapticFeedbackConstants.SAFE_MODE_DISABLED","true","false","false","true","true","int","10000","","/**
 * This is a private constant.  Feel free to renumber as desired.
 * @hide
 */
","\android\view\HapticFeedbackConstants.java"
"android.util.StringBuilderPrinter.mBuilder","false","false","true","false","true","StringBuilder","","","","\android\util\StringBuilderPrinter.java"
"android.os.HandlerThread.mLooper","false","false","true","false","false","Looper","","","","\android\os\HandlerThread.java"
"android.os.HandlerThread.mPriority","false","false","true","false","false","int","","","","\android\os\HandlerThread.java"
"android.os.HandlerThread.mTid","false","false","true","false","false","int","-1","","","\android\os\HandlerThread.java"
"android.view.animation.Animation.ZORDER_BOTTOM","true","false","false","true","true","int","-1","","/**
 * Requests that the content being animated be forced under all other
 * content for the duration of the animation.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mFillAfter","false","false","false","false","false","boolean","false","","/**
 * Indicates whether the animation transformation should be applied after the
 * animation ends.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.type","true","false","false","false","false","int","","","/**
 * One of Animation.ABSOLUTE, Animation.RELATIVE_TO_SELF, or
 * Animation.RELATIVE_TO_PARENT.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.RESTART","true","false","false","true","true","int","1","","/**
 * When the animation reaches the end and the repeat count is INFINTE_REPEAT
 * or a positive value, the animation restarts from the beginning.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mMore","false","false","true","false","false","boolean","true","","","\android\view\animation\Animation.java"
"android.view.animation.Animation.mPreviousRegion","false","false","false","false","false","RectF","new RectF()","","","\android\view\animation\Animation.java"
"android.view.animation.Animation.mFillBefore","false","false","false","false","false","boolean","true","","/**
 * Indicates whether the animation transformation should be applied before the
 * animation starts.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mTransformation","false","false","false","false","false","Transformation","new Transformation()","","","\android\view\animation\Animation.java"
"android.view.animation.Animation.mCycleFlip","false","false","false","false","false","boolean","false","","/**
 * Set by {@link #getTransformation(long, Transformation)} when the animation repeats
 * in REVERSE mode.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mRepeatCount","false","false","false","false","false","int","0","","/**
 * The number of times the animation must repeat. By default, an animation repeats
 * indefinitely.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mOneMoreTime","false","false","true","false","false","boolean","true","","","\android\view\animation\Animation.java"
"android.view.animation.Animation.mFillEnabled","false","false","false","false","false","boolean","false","","/**
 * Indicates whether fillAfter should be taken into account.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mInterpolator","false","false","false","false","false","Interpolator","","","/**
 * The interpolator used by the animation to smooth the movement.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mInitialized","false","false","false","false","false","boolean","false","","/**
 * This value must be set to true by {@link #initialize(int, int, int, int)}. It
 * indicates the animation was successfully initialized and can be played.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.ABSOLUTE","true","false","false","true","true","int","0","","/**
 * The specified dimension is an absolute number of pixels.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.START_ON_FIRST_FRAME","true","false","false","true","true","int","-1","","/**
 * Can be used as the start time to indicate the start time should be the current
 * time when {@link #getTransformation(long, Transformation)} is invoked for the
 * first animation frame. This can is useful for short animations.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mRegion","false","false","false","false","false","RectF","new RectF()","","","\android\view\animation\Animation.java"
"android.view.animation.Description.value","true","false","false","false","false","float","","","/**
 * The absolute or relative dimension for this Description.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mStartOffset","false","false","false","false","false","long","","","/**
 * The delay in milliseconds after which the animation must start. When the
 * start offset is > 0, the start time of the animation is startTime + startOffset.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.INFINITE","true","false","false","true","true","int","-1","","/**
 * Repeat the animation indefinitely.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mDuration","false","false","false","false","false","long","","","/**
 * The duration of one animation cycle in milliseconds.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.ZORDER_NORMAL","true","false","false","true","true","int","0","","/**
 * Requests that the content being animated be kept in its current Z
 * order.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mRepeatMode","false","false","false","false","false","int","RESTART","","/**
 * The behavior of the animation when it repeats. The repeat mode is either
 * {@link #RESTART} or {@link #REVERSE}.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Description.type","true","false","false","false","false","int","","","/**
 * One of Animation.ABSOLUTE, Animation.RELATIVE_TO_SELF, or
 * Animation.RELATIVE_TO_PARENT.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.ZORDER_TOP","true","false","false","true","true","int","1","","/**
 * Requests that the content being animated be forced on top of all other
 * content for the duration of the animation.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mStartTime","false","false","false","false","false","long","-1","","/**
 * The time in milliseconds at which the animation must start;
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.RELATIVE_TO_PARENT","true","false","false","true","true","int","2","","/**
 * The specified dimension holds a float and should be multiplied by the
 * height or width of the parent of the object being animated.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mStarted","false","false","false","false","false","boolean","false","","/**
 * Set by {@link #getTransformation(long, Transformation)} when the animation starts.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mZAdjustment","false","false","true","false","false","int","","","/**
 * Desired Z order mode during animation.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mRepeated","false","false","false","false","false","int","0","","/**
 * Indicates how many times the animation was repeated.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.value","true","false","false","false","false","float","","","/**
 * The absolute or relative dimension for this Description.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.REVERSE","true","false","false","true","true","int","2","","/**
 * When the animation reaches the end and the repeat count is INFINTE_REPEAT
 * or a positive value, the animation plays backward (and then forward again).
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mEnded","false","false","false","false","false","boolean","false","","/**
 * Set by {@link #getTransformation(long, Transformation)} when the animation ends.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.RELATIVE_TO_SELF","true","false","false","true","true","int","1","","/**
 * The specified dimension holds a float and should be multiplied by the
 * height or width of the object being animated.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mDetachWallpaper","false","false","true","false","false","boolean","false","","/**
 * Don't animate the wallpaper.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mListener","false","false","false","false","false","AnimationListener","","","/**
 * The animation listener to be notified when the animation starts, ends or repeats.
 */
","\android\view\animation\Animation.java"
"android.view.animation.Animation.mPreviousTransformation","false","false","false","false","false","Transformation","new Transformation()","","","\android\view\animation\Animation.java"
"android.bluetooth.HeadsetBase.mEventThread","false","false","true","false","false","Thread","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mNativeData","false","false","true","false","false","int","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mConnectTimestamp","false","false","true","false","true","long","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mEventThreadInterrupted","false","false","true","false","false","boolean","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mEventThreadHandler","false","false","true","false","false","Handler","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mTimeoutRemainingMs","false","false","true","false","false","int","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mRfcommChannel","false","false","true","false","true","int","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.DBG","false","false","true","true","true","boolean","false","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.TAG","false","false","true","true","true","String","""Bluetooth HeadsetBase""","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.RFCOMM_DISCONNECTED","true","false","false","true","true","int","1","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mWakeLock","false","false","true","false","false","WakeLock","","","// held while processing an AT command
","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.sAtInputCount","false","false","true","true","false","int","0","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mRemoteDevice","false","false","true","false","true","BluetoothDevice","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.DIRECTION_INCOMING","true","false","false","true","true","int","1","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mAtParser","false","true","false","false","false","AtParser","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mAddress","false","false","true","false","true","String","","","// for native code
","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mDirection","false","false","true","false","true","int","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.mAdapter","false","false","true","false","true","BluetoothAdapter","","","","\android\bluetooth\HeadsetBase.java"
"android.bluetooth.HeadsetBase.DIRECTION_OUTGOING","true","false","false","true","true","int","2","","","\android\bluetooth\HeadsetBase.java"
"android.content.res.Height.sProportion","false","false","true","true","false","float","0","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.italicId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.mStrings","false","false","true","false","false","CharSequence","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.sProportion","false","false","true","true","false","float","0","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.localLOGV","false","false","true","true","true","boolean","Config.LOGV || false","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.bigId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.subId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.listItemId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.underlineId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.strikeId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.ttId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.mStyleIDs","false","false","false","false","false","StyleIDs","null","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.smallId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.marqueeId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.boldId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.mSize","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.mNative","false","false","true","false","true","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.bigId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.TAG","false","false","true","true","true","String","""AssetManager""","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.mOwnsNative","false","false","true","false","true","boolean","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.italicId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.strikeId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.Height.mSize","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.subId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.underlineId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.smallId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.supId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.mSparseStrings","false","false","true","false","false","SparseArray<CharSequence>","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.supId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.mUseSparse","false","false","true","false","true","boolean","","","","\android\content\res\StringBlock.java"
"android.content.res.StringBlock.marqueeId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.listItemId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.boldId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.content.res.StyleIDs.ttId","false","false","true","false","false","int","","","","\android\content\res\StringBlock.java"
"android.net.SntpClient.REFERENCE_TIME_OFFSET","false","false","true","true","true","int","16","","","\android\net\SntpClient.java"
"android.net.SntpClient.mNtpTimeReference","false","false","true","false","false","long","","","// value of SystemClock.elapsedRealtime() corresponding to mNtpTime
","\android\net\SntpClient.java"
"android.net.SntpClient.NTP_VERSION","false","false","true","true","true","int","3","","","\android\net\SntpClient.java"
"android.net.SntpClient.TAG","false","false","true","true","true","String","""SntpClient""","","","\android\net\SntpClient.java"
"android.net.SntpClient.NTP_PORT","false","false","true","true","true","int","123","","","\android\net\SntpClient.java"
"android.net.SntpClient.NTP_PACKET_SIZE","false","false","true","true","true","int","48","","","\android\net\SntpClient.java"
"android.net.SntpClient.RECEIVE_TIME_OFFSET","false","false","true","true","true","int","32","","","\android\net\SntpClient.java"
"android.net.SntpClient.TRANSMIT_TIME_OFFSET","false","false","true","true","true","int","40","","","\android\net\SntpClient.java"
"android.net.SntpClient.NTP_MODE_CLIENT","false","false","true","true","true","int","3","","","\android\net\SntpClient.java"
"android.net.SntpClient.ORIGINATE_TIME_OFFSET","false","false","true","true","true","int","24","","","\android\net\SntpClient.java"
"android.net.SntpClient.mNtpTime","false","false","true","false","false","long","","","// system time computed from NTP server response
","\android\net\SntpClient.java"
"android.net.SntpClient.mRoundTripTime","false","false","true","false","false","long","","","// round trip time in milliseconds
","\android\net\SntpClient.java"
"android.net.SntpClient.OFFSET_1900_TO_1970","false","false","true","true","true","long","((365L * 70L) + 17L) * 24L * 60L * 60L","","// 70 years plus 17 leap days
","\android\net\SntpClient.java"
"android.gesture.OrientedBoundingBox.orientation","true","false","false","false","true","float","","","","\android\gesture\OrientedBoundingBox.java"
"android.gesture.OrientedBoundingBox.squareness","true","false","false","false","true","float","","","","\android\gesture\OrientedBoundingBox.java"
"android.gesture.OrientedBoundingBox.height","true","false","false","false","true","float","","","","\android\gesture\OrientedBoundingBox.java"
"android.gesture.OrientedBoundingBox.centerX","true","false","false","false","true","float","","","","\android\gesture\OrientedBoundingBox.java"
"android.gesture.OrientedBoundingBox.centerY","true","false","false","false","true","float","","","","\android\gesture\OrientedBoundingBox.java"
"android.gesture.OrientedBoundingBox.width","true","false","false","false","true","float","","","","\android\gesture\OrientedBoundingBox.java"
"android.util.PrintStreamPrinter.mPS","false","false","true","false","true","PrintStream","","","","\android\util\PrintStreamPrinter.java"
"android.view.FocusFinderHelper.mFocusFinder","false","false","true","false","false","FocusFinder","","","","\android\view\FocusFinderHelper.java"
"android.widget.LinearLayout.VERTICAL_GRAVITY_COUNT","false","false","true","true","true","int","4","","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mMaxDescent","false","false","true","false","false","int","","","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.weight","true","false","false","false","false","float","","@ViewDebug.ExportedProperty","/**
 * Indicates how much of the extra space in the LinearLayout will be
 * allocated to the view associated with these LayoutParams. Specify
 * 0 if the view should not be stretched. Otherwise the extra pixels
 * will be pro-rated among all views whose weight is greater than 0.
 */
","\android\widget\LinearLayout.java"
"android.widget.LayoutParams.gravity","true","false","false","false","false","int","-1","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = -1, to = ""NONE""), @ViewDebug.IntToString(from = Gravity.NO_GRAVITY, to = ""NONE""), @ViewDebug.IntToString(from = Gravity.TOP, to = ""TOP""), @ViewDebug.IntToString(from = Gravity.BOTTOM, to = ""BOTTOM""), @ViewDebug.IntToString(from = Gravity.LEFT, to = ""LEFT""), @ViewDebug.IntToString(from = Gravity.RIGHT, to = ""RIGHT""), @ViewDebug.IntToString(from = Gravity.CENTER_VERTICAL, to = ""CENTER_VERTICAL""), @ViewDebug.IntToString(from = Gravity.FILL_VERTICAL, to = ""FILL_VERTICAL""), @ViewDebug.IntToString(from = Gravity.CENTER_HORIZONTAL, to = ""CENTER_HORIZONTAL""), @ViewDebug.IntToString(from = Gravity.FILL_HORIZONTAL, to = ""FILL_HORIZONTAL""), @ViewDebug.IntToString(from = Gravity.CENTER, to = ""CENTER""), @ViewDebug.IntToString(from = Gravity.FILL, to = ""FILL"") })","/**
 * Gravity for the view associated with these LayoutParams.
 *
 * @see android.view.Gravity
 */
","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mWeightSum","false","false","true","false","false","float","","@ViewDebug.ExportedProperty","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.HORIZONTAL","true","false","false","true","true","int","0","","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mBaselineAligned","false","false","true","false","false","boolean","true","@ViewDebug.ExportedProperty","/**
 * Whether the children of this layout are baseline aligned.  Only applicable
 * if {@link #mOrientation} is horizontal.
 */
","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.INDEX_FILL","false","false","true","true","true","int","3","","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mTotalLength","false","false","true","false","false","int","","@ViewDebug.ExportedProperty","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.gravity","true","false","false","false","false","int","-1","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = -1, to = ""NONE""), @ViewDebug.IntToString(from = Gravity.NO_GRAVITY, to = ""NONE""), @ViewDebug.IntToString(from = Gravity.TOP, to = ""TOP""), @ViewDebug.IntToString(from = Gravity.BOTTOM, to = ""BOTTOM""), @ViewDebug.IntToString(from = Gravity.LEFT, to = ""LEFT""), @ViewDebug.IntToString(from = Gravity.RIGHT, to = ""RIGHT""), @ViewDebug.IntToString(from = Gravity.CENTER_VERTICAL, to = ""CENTER_VERTICAL""), @ViewDebug.IntToString(from = Gravity.FILL_VERTICAL, to = ""FILL_VERTICAL""), @ViewDebug.IntToString(from = Gravity.CENTER_HORIZONTAL, to = ""CENTER_HORIZONTAL""), @ViewDebug.IntToString(from = Gravity.FILL_HORIZONTAL, to = ""FILL_HORIZONTAL""), @ViewDebug.IntToString(from = Gravity.CENTER, to = ""CENTER""), @ViewDebug.IntToString(from = Gravity.FILL, to = ""FILL"") })","/**
 * Gravity for the view associated with these LayoutParams.
 *
 * @see android.view.Gravity
 */
","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mMaxAscent","false","false","true","false","false","int","","","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.VERTICAL","true","false","false","true","true","int","1","","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.INDEX_TOP","false","false","true","true","true","int","1","","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mGravity","false","false","true","false","false","int","Gravity.LEFT | Gravity.TOP","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = -1, to = ""NONE""), @ViewDebug.IntToString(from = Gravity.NO_GRAVITY, to = ""NONE""), @ViewDebug.IntToString(from = Gravity.TOP, to = ""TOP""), @ViewDebug.IntToString(from = Gravity.BOTTOM, to = ""BOTTOM""), @ViewDebug.IntToString(from = Gravity.LEFT, to = ""LEFT""), @ViewDebug.IntToString(from = Gravity.RIGHT, to = ""RIGHT""), @ViewDebug.IntToString(from = Gravity.CENTER_VERTICAL, to = ""CENTER_VERTICAL""), @ViewDebug.IntToString(from = Gravity.FILL_VERTICAL, to = ""FILL_VERTICAL""), @ViewDebug.IntToString(from = Gravity.CENTER_HORIZONTAL, to = ""CENTER_HORIZONTAL""), @ViewDebug.IntToString(from = Gravity.FILL_HORIZONTAL, to = ""FILL_HORIZONTAL""), @ViewDebug.IntToString(from = Gravity.CENTER, to = ""CENTER""), @ViewDebug.IntToString(from = Gravity.FILL, to = ""FILL"") })","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mUseLargestChild","false","false","true","false","false","boolean","","@ViewDebug.ExportedProperty","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mBaselineAlignedChildIndex","false","false","true","false","false","int","-1","@ViewDebug.ExportedProperty","/**
 * If this layout is part of another layout that is baseline aligned,
 * use the child at this index as the baseline.
 *
 * Note: this is orthogonal to {@link #mBaselineAligned}, which is concerned
 * with whether the children of this layout are baseline aligned.
 */
","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mBaselineChildTop","false","false","true","false","false","int","0","@ViewDebug.ExportedProperty","/**
 * The additional offset to the child's baseline.
 * We'll calculate the baseline of this layout as we measure vertically; for
 * horizontal linear layouts, the offset of 0 is appropriate.
 */
","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.mOrientation","false","false","true","false","false","int","","@ViewDebug.ExportedProperty","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.INDEX_BOTTOM","false","false","true","true","true","int","2","","","\android\widget\LinearLayout.java"
"android.widget.LinearLayout.INDEX_CENTER_VERTICAL","false","false","true","true","true","int","0","","","\android\widget\LinearLayout.java"
"android.widget.LayoutParams.weight","true","false","false","false","false","float","","@ViewDebug.ExportedProperty","/**
 * Indicates how much of the extra space in the LinearLayout will be
 * allocated to the view associated with these LayoutParams. Specify
 * 0 if the view should not be stretched. Otherwise the extra pixels
 * will be pro-rated among all views whose weight is greater than 0.
 */
","\android\widget\LinearLayout.java"
"android.widget.NumberPicker.mIncrementButton","false","false","true","false","false","NumberPickerButton","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mDecrementButton","false","false","true","false","false","NumberPickerButton","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mBuilder","false","false","false","false","true","StringBuilder","new StringBuilder()","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mPrevious","false","false","true","false","false","int","","","/**
 * Previous value of this NumberPicker.
 */
","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mDisplayedValues","false","false","true","false","false","String","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mText","false","false","true","false","true","EditText","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mDecrement","false","false","true","false","false","boolean","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mNumberInputFilter","false","false","true","false","true","InputFilter","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mFormatter","false","false","true","false","false","Formatter","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mFmt","false","false","false","false","true","java.util.Formatter","new java.util.Formatter(mBuilder)","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mIncrement","false","false","true","false","false","boolean","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mRunnable","false","false","true","false","true","Runnable","new Runnable() {

    public void run() {
        if (mIncrement) {
            changeCurrent(mCurrent + 1);
            mHandler.postDelayed(this, mSpeed);
        } else if (mDecrement) {
            changeCurrent(mCurrent - 1);
            mHandler.postDelayed(this, mSpeed);
        }
    }
}","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mEnd","false","false","true","false","false","int","","","/**
 * Upper value of the range of numbers allowed for the NumberPicker
 */
","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mHandler","false","false","true","false","true","Handler","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mCurrent","false","false","true","false","false","int","","","/**
 * Current value of this NumberPicker
 */
","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mSpeed","false","false","true","false","false","long","300","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.DIGIT_CHARACTERS","false","false","true","true","true","char","new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' }","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mStart","false","false","true","false","false","int","","","/**
 * Lower value of the range of numbers allowed for the NumberPicker
 */
","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mListener","false","false","true","false","false","OnChangedListener","","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.mArgs","false","false","false","false","true","Object","new Object[1]","","","\android\widget\NumberPicker.java"
"android.widget.NumberPicker.TWO_DIGIT_FORMATTER","true","false","false","true","true","NumberPicker.Formatter","new NumberPicker.Formatter() {

    final StringBuilder mBuilder = new StringBuilder();

    final java.util.Formatter mFmt = new java.util.Formatter(mBuilder);

    final Object[] mArgs = new Object[1];

    public String toString(int value) {
        mArgs[0] = value;
        mBuilder.delete(0, mBuilder.length());
        mFmt.format(""%02d"", mArgs);
        return mFmt.toString();
    }
}","","/*
     * Use a custom NumberPicker formatting callback to use two-digit
     * minutes strings like ""01"".  Keeping a static formatter etc. is the
     * most efficient way to do this; it avoids creating temporary objects
     * on every call to format().
     */
","\android\widget\NumberPicker.java"
"android.service.wallpaper.Engine.mPendingXOffset","false","false","false","false","false","float","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mConfiguration","false","false","false","false","true","Configuration","new Configuration()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperEngineWrapper.mEngine","false","false","false","false","false","Engine","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mScreenOn","false","false","false","false","false","boolean","true","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperCommand.extras","false","false","false","false","false","Bundle","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mDestroyed","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mContentInsets","false","false","false","false","true","Rect","new Rect()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mLock","false","false","false","false","true","Object","new Object()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mPendingSync","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.DO_ATTACH","false","false","true","true","true","int","10","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperEngineWrapper.mIsPreview","false","false","false","false","true","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mWindowFlags","false","false","false","false","false","int","WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mOffsetMessageEnqueued","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mLayout","false","false","false","false","true","WindowManager.LayoutParams","new WindowManager.LayoutParams()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperCommand.action","false","false","false","false","false","String","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.MSG_TOUCH_EVENT","false","false","true","true","true","int","10040","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mPendingMove","false","false","false","false","false","MotionEvent","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mWindowType","false","false","false","false","true","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperEngineWrapper.mWindowType","false","false","false","false","true","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mWindowToken","false","false","false","false","false","IBinder","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mIWallpaperEngine","false","false","false","false","false","IWallpaperEngineWrapper","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mCaller","false","false","true","false","true","HandlerCaller","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mConfiguration","false","false","false","false","true","Configuration","new Configuration()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperCommand.sync","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mHeight","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mReqHeight","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.MSG_VISIBILITY_CHANGED","false","false","true","true","true","int","10010","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mSession","false","false","false","false","false","IWindowSession","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mPendingYOffsetStep","false","false","false","false","false","float","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mReqWidth","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mVisible","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mVisibleInsets","false","false","false","false","true","Rect","new Rect()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mPendingXOffsetStep","false","false","false","false","false","float","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mConnection","false","false","false","false","true","IWallpaperConnection","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.TAG","false","false","false","true","true","String","""WallpaperService""","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mPendingYOffsetStep","false","false","false","false","false","float","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.SERVICE_META_DATA","true","false","false","true","true","String","""android.service.wallpaper""","","/**
 * Name under which a WallpaperService component publishes information
 * about itself.  This meta-data must reference an XML resource containing
 * a <code>&lt;{@link android.R.styleable#Wallpaper wallpaper}&gt;</code>
 * tag.
 */
","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mLayout","false","false","false","false","true","WindowManager.LayoutParams","new WindowManager.LayoutParams()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mWindow","false","false","false","false","true","BaseIWindow","new BaseIWindow() {

    @Override
    public boolean onDispatchPointer(MotionEvent event, long eventTime, boolean callWhenDone) {
        synchronized (mLock) {
            if (event.getAction() == MotionEvent.ACTION_MOVE) {
                if (mPendingMove != null) {
                    mCaller.removeMessages(MSG_TOUCH_EVENT, mPendingMove);
                    mPendingMove.recycle();
                }
                mPendingMove = event;
            } else {
                mPendingMove = null;
            }
            Message msg = mCaller.obtainMessageO(MSG_TOUCH_EVENT, event);
            mCaller.sendMessage(msg);
        }
        return false;
    }

    @Override
    public void resized(int w, int h, Rect coveredInsets, Rect visibleInsets, boolean reportDraw, Configuration newConfig) {
        Message msg = mCaller.obtainMessageI(MSG_WINDOW_RESIZED, reportDraw ? 1 : 0);
        mCaller.sendMessage(msg);
    }

    @Override
    public void dispatchAppVisibility(boolean visible) {
        // activity tell us when to run.
        if (!mIWallpaperEngine.mIsPreview) {
            Message msg = mCaller.obtainMessageI(MSG_VISIBILITY_CHANGED, visible ? 1 : 0);
            mCaller.sendMessage(msg);
        }
    }

    @Override
    public void dispatchWallpaperOffsets(float x, float y, float xStep, float yStep, boolean sync) {
        synchronized (mLock) {
            if (DEBUG)
                Log.v(TAG, ""Dispatch wallpaper offsets: "" + x + "", "" + y);
            mPendingXOffset = x;
            mPendingYOffset = y;
            mPendingXOffsetStep = xStep;
            mPendingYOffsetStep = yStep;
            if (sync) {
                mPendingSync = true;
            }
            if (!mOffsetMessageEnqueued) {
                mOffsetMessageEnqueued = true;
                Message msg = mCaller.obtainMessage(MSG_WALLPAPER_OFFSETS);
                mCaller.sendMessage(msg);
            }
        }
    }

    public void dispatchWallpaperCommand(String action, int x, int y, int z, Bundle extras, boolean sync) {
        synchronized (mLock) {
            if (DEBUG)
                Log.v(TAG, ""Dispatch wallpaper command: "" + x + "", "" + y);
            WallpaperCommand cmd = new WallpaperCommand();
            cmd.action = action;
            cmd.x = x;
            cmd.y = y;
            cmd.z = z;
            cmd.extras = extras;
            cmd.sync = sync;
            Message msg = mCaller.obtainMessage(MSG_WALLPAPER_COMMAND);
            msg.obj = cmd;
            mCaller.sendMessage(msg);
        }
    }
}","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mSurfaceHolder","false","false","false","false","true","BaseSurfaceHolder","new BaseSurfaceHolder() {

    @Override
    public boolean onAllowLockCanvas() {
        return mDrawingAllowed;
    }

    @Override
    public void onRelayoutContainer() {
        Message msg = mCaller.obtainMessage(MSG_UPDATE_SURFACE);
        mCaller.sendMessage(msg);
    }

    @Override
    public void onUpdateSurface() {
        Message msg = mCaller.obtainMessage(MSG_UPDATE_SURFACE);
        mCaller.sendMessage(msg);
    }

    public boolean isCreating() {
        return mIsCreating;
    }

    @Override
    public void setFixedSize(int width, int height) {
        throw new UnsupportedOperationException(""Wallpapers currently only support sizing from layout"");
    }

    public void setKeepScreenOn(boolean screenOn) {
        throw new UnsupportedOperationException(""Wallpapers do not support keep screen on"");
    }
}","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.DO_SET_DESIRED_SIZE","false","false","true","true","true","int","30","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mLock","false","false","false","false","true","Object","new Object()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mWinFrame","false","false","false","false","true","Rect","new Rect()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperCommand.x","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mWindowToken","false","false","false","false","true","IBinder","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mFormat","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mPendingMove","false","false","false","false","false","MotionEvent","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mPendingXOffsetStep","false","false","false","false","false","float","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperCommand.z","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperCommand.y","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mSession","false","false","false","false","false","IWindowSession","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.extras","false","false","false","false","false","Bundle","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperEngineWrapper.mCaller","false","false","true","false","true","HandlerCaller","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mHeight","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.SERVICE_INTERFACE","true","false","false","true","true","String","""android.service.wallpaper.WallpaperService""","@SdkConstant(SdkConstantType.SERVICE_ACTION)","/**
 * The {@link Intent} that must be declared as handled by the service.
 * To be supported, the service must also require the
 * {@link android.Manifest.permission#BIND_WALLPAPER} permission so
 * that other applications can not abuse it.
 */
","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mPendingYOffset","false","false","false","false","false","float","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.action","false","false","false","false","false","String","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mTarget","false","false","true","false","true","WallpaperService","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mCurHeight","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mVisible","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mWindow","false","false","false","false","true","BaseIWindow","new BaseIWindow() {

    @Override
    public boolean onDispatchPointer(MotionEvent event, long eventTime, boolean callWhenDone) {
        synchronized (mLock) {
            if (event.getAction() == MotionEvent.ACTION_MOVE) {
                if (mPendingMove != null) {
                    mCaller.removeMessages(MSG_TOUCH_EVENT, mPendingMove);
                    mPendingMove.recycle();
                }
                mPendingMove = event;
            } else {
                mPendingMove = null;
            }
            Message msg = mCaller.obtainMessageO(MSG_TOUCH_EVENT, event);
            mCaller.sendMessage(msg);
        }
        return false;
    }

    @Override
    public void resized(int w, int h, Rect coveredInsets, Rect visibleInsets, boolean reportDraw, Configuration newConfig) {
        Message msg = mCaller.obtainMessageI(MSG_WINDOW_RESIZED, reportDraw ? 1 : 0);
        mCaller.sendMessage(msg);
    }

    @Override
    public void dispatchAppVisibility(boolean visible) {
        // activity tell us when to run.
        if (!mIWallpaperEngine.mIsPreview) {
            Message msg = mCaller.obtainMessageI(MSG_VISIBILITY_CHANGED, visible ? 1 : 0);
            mCaller.sendMessage(msg);
        }
    }

    @Override
    public void dispatchWallpaperOffsets(float x, float y, float xStep, float yStep, boolean sync) {
        synchronized (mLock) {
            if (DEBUG)
                Log.v(TAG, ""Dispatch wallpaper offsets: "" + x + "", "" + y);
            mPendingXOffset = x;
            mPendingYOffset = y;
            mPendingXOffsetStep = xStep;
            mPendingYOffsetStep = yStep;
            if (sync) {
                mPendingSync = true;
            }
            if (!mOffsetMessageEnqueued) {
                mOffsetMessageEnqueued = true;
                Message msg = mCaller.obtainMessage(MSG_WALLPAPER_OFFSETS);
                mCaller.sendMessage(msg);
            }
        }
    }

    public void dispatchWallpaperCommand(String action, int x, int y, int z, Bundle extras, boolean sync) {
        synchronized (mLock) {
            if (DEBUG)
                Log.v(TAG, ""Dispatch wallpaper command: "" + x + "", "" + y);
            WallpaperCommand cmd = new WallpaperCommand();
            cmd.action = action;
            cmd.x = x;
            cmd.y = y;
            cmd.z = z;
            cmd.extras = extras;
            cmd.sync = sync;
            Message msg = mCaller.obtainMessage(MSG_WALLPAPER_COMMAND);
            msg.obj = cmd;
            mCaller.sendMessage(msg);
        }
    }
}","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mCreated","false","false","false","false","false","boolean","","","// Current window state.
","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mVisibleInsets","false","false","false","false","true","Rect","new Rect()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperEngineWrapper.mConnection","false","false","false","false","true","IWallpaperConnection","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.MSG_WALLPAPER_OFFSETS","false","false","true","true","true","int","10020","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mPendingXOffset","false","false","false","false","false","float","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperEngineWrapper.mWindowToken","false","false","false","false","true","IBinder","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mSurfaceCreated","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mCreated","false","false","false","false","false","boolean","","","// Current window state.
","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mCurWindowFlags","false","false","false","false","false","int","mWindowFlags","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mEngine","false","false","false","false","false","Engine","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mCurWidth","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mFormat","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mDestroyed","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mDrawingAllowed","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mType","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mWidth","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mConnection","false","false","false","false","false","IWallpaperConnection","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.MSG_UPDATE_SURFACE","false","false","true","true","true","int","10000","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mDrawingAllowed","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mReceiver","false","false","false","false","true","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        if (Intent.ACTION_SCREEN_ON.equals(intent.getAction())) {
            mScreenOn = true;
            reportVisibility();
        } else if (Intent.ACTION_SCREEN_OFF.equals(intent.getAction())) {
            mScreenOn = false;
            reportVisibility();
        }
    }
}","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mSurfaceHolder","false","false","false","false","true","BaseSurfaceHolder","new BaseSurfaceHolder() {

    @Override
    public boolean onAllowLockCanvas() {
        return mDrawingAllowed;
    }

    @Override
    public void onRelayoutContainer() {
        Message msg = mCaller.obtainMessage(MSG_UPDATE_SURFACE);
        mCaller.sendMessage(msg);
    }

    @Override
    public void onUpdateSurface() {
        Message msg = mCaller.obtainMessage(MSG_UPDATE_SURFACE);
        mCaller.sendMessage(msg);
    }

    public boolean isCreating() {
        return mIsCreating;
    }

    @Override
    public void setFixedSize(int width, int height) {
        throw new UnsupportedOperationException(""Wallpapers currently only support sizing from layout"");
    }

    public void setKeepScreenOn(boolean screenOn) {
        throw new UnsupportedOperationException(""Wallpapers do not support keep screen on"");
    }
}","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mReceiver","false","false","false","false","true","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        if (Intent.ACTION_SCREEN_ON.equals(intent.getAction())) {
            mScreenOn = true;
            reportVisibility();
        } else if (Intent.ACTION_SCREEN_OFF.equals(intent.getAction())) {
            mScreenOn = false;
            reportVisibility();
        }
    }
}","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.x","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.z","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mActiveEngines","false","false","true","false","true","ArrayList<Engine>","new ArrayList<Engine>()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.y","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mCaller","false","false","false","false","false","HandlerCaller","","","// Copies from mIWallpaperEngine.
","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.sync","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.DEBUG","false","false","false","true","true","boolean","false","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperEngineWrapper.mReqHeight","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.DO_DETACH","false","false","true","true","true","int","20","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mReportedVisible","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mCurWindowFlags","false","false","false","false","false","int","mWindowFlags","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mIsPreview","false","false","false","false","true","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mReportedVisible","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mWindowFlags","false","false","false","false","false","int","WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.MSG_WINDOW_RESIZED","false","false","true","true","true","int","10030","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mWidth","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mPendingSync","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mType","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mInitializing","false","false","false","false","false","boolean","true","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mContentInsets","false","false","false","false","true","Rect","new Rect()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mWinFrame","false","false","false","false","true","Rect","new Rect()","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mIsCreating","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperEngineWrapper.mReqWidth","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mIsCreating","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mCallbackLooper","false","false","true","false","false","Looper","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.IWallpaperServiceWrapper.mTarget","false","false","true","false","true","WallpaperService","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mCurHeight","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mScreenOn","false","false","false","false","false","boolean","true","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.MSG_WALLPAPER_COMMAND","false","false","true","true","true","int","10025","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mInitializing","false","false","false","false","false","boolean","true","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mPendingYOffset","false","false","false","false","false","float","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.Engine.mOffsetMessageEnqueued","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mIWallpaperEngine","false","false","false","false","false","IWallpaperEngineWrapper","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mSurfaceCreated","false","false","false","false","false","boolean","","","","\android\service\wallpaper\WallpaperService.java"
"android.service.wallpaper.WallpaperService.mCurWidth","false","false","false","false","false","int","","","","\android\service\wallpaper\WallpaperService.java"
"android.text.style.ImageSpan.mContext","false","false","true","false","false","Context","","","","\android\text\style\ImageSpan.java"
"android.text.style.ImageSpan.mDrawable","false","false","true","false","false","Drawable","","","","\android\text\style\ImageSpan.java"
"android.text.style.ImageSpan.mResourceId","false","false","true","false","false","int","","","","\android\text\style\ImageSpan.java"
"android.text.style.ImageSpan.mSource","false","false","true","false","false","String","","","","\android\text\style\ImageSpan.java"
"android.text.style.ImageSpan.mContentUri","false","false","true","false","false","Uri","","","","\android\text\style\ImageSpan.java"
"com.google.android.mms.pdu.PduBody.mPartMapByName","false","false","true","false","false","Map<String,PduPart>","null","","","\com\google\android\mms\pdu\PduBody.java"
"com.google.android.mms.pdu.PduBody.mParts","false","false","true","false","false","Vector<PduPart>","null","","","\com\google\android\mms\pdu\PduBody.java"
"com.google.android.mms.pdu.PduBody.mPartMapByContentLocation","false","false","true","false","false","Map<String,PduPart>","null","","","\com\google\android\mms\pdu\PduBody.java"
"com.google.android.mms.pdu.PduBody.mPartMapByContentId","false","false","true","false","false","Map<String,PduPart>","null","","","\com\google\android\mms\pdu\PduBody.java"
"com.google.android.mms.pdu.PduBody.mPartMapByFileName","false","false","true","false","false","Map<String,PduPart>","null","","","\com\google\android\mms\pdu\PduBody.java"
"android.content.pm.PathPermission.mWritePermission","false","false","true","false","true","String","","","","\android\content\pm\PathPermission.java"
"android.content.pm.PathPermission.CREATOR","true","false","false","true","true","Parcelable.Creator<PathPermission>","new Parcelable.Creator<PathPermission>() {

    public PathPermission createFromParcel(Parcel source) {
        return new PathPermission(source);
    }

    public PathPermission[] newArray(int size) {
        return new PathPermission[size];
    }
}","","","\android\content\pm\PathPermission.java"
"android.content.pm.PathPermission.mReadPermission","false","false","true","false","true","String","","","","\android\content\pm\PathPermission.java"
"android.os.Power.BRIGHTNESS_DIM","true","false","false","true","true","int","20","","/**
 * Brightness value for dim backlight
 */
","\android\os\Power.java"
"android.os.Power.BRIGHTNESS_LOW_BATTERY","true","false","false","true","true","int","10","","/**
 * Brightness value to use when battery is low
 */
","\android\os\Power.java"
"android.os.Power.BRIGHTNESS_OFF","true","false","false","true","true","int","0","","/**
 * Brightness value for fully off
 */
","\android\os\Power.java"
"android.os.Power.BRIGHTNESS_ON","true","false","false","true","true","int","255","","/**
 * Brightness value for fully on
 */
","\android\os\Power.java"
"android.os.Power.LOW_BATTERY_THRESHOLD","true","false","false","true","true","int","10","","/**
 * Threshold for BRIGHTNESS_LOW_BATTERY (percentage)
 * Screen will stay dim if battery level is <= LOW_BATTERY_THRESHOLD
 */
","\android\os\Power.java"
"android.os.Power.PARTIAL_WAKE_LOCK","true","false","false","true","true","int","1","","/**
 * Wake lock that ensures that the CPU is running.  The screen might
 * not be on.
 */
","\android\os\Power.java"
"android.os.Power.FULL_WAKE_LOCK","true","false","false","true","true","int","2","","/**
 * Wake lock that ensures that the screen is on.
 */
","\android\os\Power.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_TEXT","false","false","true","true","true","int","8","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.LOCAL_LOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_MMS_VERSION","false","false","true","true","true","int","14","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_CONTENT_LOCATION","false","false","true","true","true","int","5","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.mContext","false","false","true","false","true","Context","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_RETRIEVE_TEXT_CHARSET","false","false","true","true","true","int","26","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.ENCODED_STRING_COLUMN_NAME_MAP","false","false","true","true","true","HashMap<Integer,String>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_PROJECTION","false","false","true","true","true","String","new String[] { Part._ID, Part.CHARSET, Part.CONTENT_DISPOSITION, Part.CONTENT_ID, Part.CONTENT_LOCATION, Part.CONTENT_TYPE, Part.FILENAME, Part.NAME, Part.TEXT }","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_DATE","false","false","true","true","true","int","21","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_MESSAGE_ID","false","false","true","true","true","int","8","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_RESPONSE_TEXT","false","false","true","true","true","int","9","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PROC_STATUS_PERMANENTLY_FAILURE","true","false","false","true","true","int","2","","/**
 * Indicate that we permanently failed to process a MM.
 */
","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.MESSAGE_BOX_MAP","false","false","true","true","true","HashMap<Uri,Integer>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.mContentResolver","false","false","true","false","true","ContentResolver","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.ENCODED_STRING_COLUMN_INDEX_MAP","false","false","true","true","true","HashMap<Integer,Integer>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.TEXT_STRING_COLUMN_NAME_MAP","false","false","true","true","true","HashMap<Integer,String>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.ADDRESS_FIELDS","false","false","true","true","true","int","new int[] { PduHeaders.BCC, PduHeaders.CC, PduHeaders.FROM, PduHeaders.TO }","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.OCTET_COLUMN_INDEX_MAP","false","false","true","true","true","HashMap<Integer,Integer>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_PROJECTION","false","false","true","true","true","String","new String[] { Mms._ID, Mms.MESSAGE_BOX, Mms.THREAD_ID, Mms.RETRIEVE_TEXT, Mms.SUBJECT, Mms.CONTENT_LOCATION, Mms.CONTENT_TYPE, Mms.MESSAGE_CLASS, Mms.MESSAGE_ID, Mms.RESPONSE_TEXT, Mms.TRANSACTION_ID, Mms.CONTENT_CLASS, Mms.DELIVERY_REPORT, Mms.MESSAGE_TYPE, Mms.MMS_VERSION, Mms.PRIORITY, Mms.READ_REPORT, Mms.READ_STATUS, Mms.REPORT_ALLOWED, Mms.RETRIEVE_STATUS, Mms.STATUS, Mms.DATE, Mms.DELIVERY_TIME, Mms.EXPIRY, Mms.MESSAGE_SIZE, Mms.SUBJECT_CHARSET, Mms.RETRIEVE_TEXT_CHARSET }","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_CONTENT_DISPOSITION","false","false","true","true","true","int","2","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PROC_STATUS_TRANSIENT_FAILURE","true","false","false","true","true","int","1","","/**
 * Indicate that we transiently failed to process a MM.
 */
","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_CACHE_INSTANCE","false","false","true","true","true","PduCache","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_TRANSACTION_ID","false","false","true","true","true","int","10","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_STATUS","false","false","true","true","true","int","20","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.TEMPORARY_DRM_OBJECT_URI","true","false","false","true","true","String","""content://mms/"" + Long.MAX_VALUE + ""/part""","","/**
 * The uri of temporary drm objects.
 */
","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_DELIVERY_TIME","false","false","true","true","true","int","22","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_THREAD_ID","false","false","true","true","true","int","2","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_CHARSET","false","false","true","true","true","int","1","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_DELIVERY_REPORT","false","false","true","true","true","int","12","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.CHARSET_COLUMN_INDEX_MAP","false","false","true","true","true","HashMap<Integer,Integer>","","","// These map are used for convenience in persist() and load().
","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_RETRIEVE_TEXT","false","false","true","true","true","int","3","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.DUMMY_THREAD_ID","false","false","true","true","true","long","Long.MAX_VALUE","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.TEXT_STRING_COLUMN_INDEX_MAP","false","false","true","true","true","HashMap<Integer,Integer>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.LONG_COLUMN_NAME_MAP","false","false","true","true","true","HashMap<Integer,String>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_REPORT_ALLOWED","false","false","true","true","true","int","18","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_MESSAGE_CLASS","false","false","true","true","true","int","7","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_READ_REPORT","false","false","true","true","true","int","16","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.TAG","false","false","true","true","true","String","""PduPersister""","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_RETRIEVE_STATUS","false","false","true","true","true","int","19","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_FILENAME","false","false","true","true","true","int","6","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_MESSAGE_TYPE","false","false","true","true","true","int","13","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.LONG_COLUMN_INDEX_MAP","false","false","true","true","true","HashMap<Integer,Integer>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_CONTENT_TYPE","false","false","true","true","true","int","5","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.OCTET_COLUMN_NAME_MAP","false","false","true","true","true","HashMap<Integer,String>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_SUBJECT_CHARSET","false","false","true","true","true","int","25","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.DEBUG","false","false","true","true","true","boolean","false","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_MESSAGE_BOX","false","false","true","true","true","int","1","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_SUBJECT","false","false","true","true","true","int","4","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_ID","false","false","true","true","true","int","0","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.CHARSET_COLUMN_NAME_MAP","false","false","true","true","true","HashMap<Integer,String>","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_PRIORITY","false","false","true","true","true","int","15","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_EXPIRY","false","false","true","true","true","int","23","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PROC_STATUS_COMPLETED","true","false","false","true","true","int","3","","/**
 * Indicate that we have successfully processed a MM.
 */
","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_CONTENT_LOCATION","false","false","true","true","true","int","4","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_CONTENT_ID","false","false","true","true","true","int","3","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_ID","false","false","true","true","true","int","0","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.sPersister","false","false","true","true","false","PduPersister","","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_CONTENT_TYPE","false","false","true","true","true","int","6","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_READ_STATUS","false","false","true","true","true","int","17","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_CONTENT_CLASS","false","false","true","true","true","int","11","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PDU_COLUMN_MESSAGE_SIZE","false","false","true","true","true","int","24","","","\com\google\android\mms\pdu\PduPersister.java"
"com.google.android.mms.pdu.PduPersister.PART_COLUMN_NAME","false","false","true","true","true","int","7","","","\com\google\android\mms\pdu\PduPersister.java"
"android.view.ViewRoot.mSoftInputMode","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mViewRoot","false","false","true","false","true","WeakReference<ViewRoot>","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mHasHadWindowFocus","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mNewSurfaceNeeded","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.RunQueue.action","false","false","false","false","false","Runnable","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mAddedTouchMode","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mGlCanvas","false","false","false","false","false","Canvas","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mScrollMayChange","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.MAX_ACCELERATION","false","false","false","true","true","float","20","","/**
 * The maximum amount of acceleration we will apply.
 */
","\android\view\ViewRoot.java"
"android.view.ViewRoot.DEBUG_INPUT_RESIZE","false","false","true","true","true","boolean","false || LOCAL_LOGV","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mAppVisible","false","false","false","false","false","boolean","true","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mSurface","false","false","true","false","true","Surface","new Surface()","","// Surface can never be reassigned or cleared (use Surface.clear()).
","\android\view\ViewRoot.java"
"android.view.ViewRoot.mLastScrolledFocus","false","false","false","false","false","View","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.CLOSE_SYSTEM_DIALOGS","true","false","false","true","true","int","1014","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.newConfig","false","false","false","false","false","Configuration","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mView","false","false","false","false","false","View","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mLayoutRequested","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.RunQueue.mActions","false","false","true","false","true","ArrayList<HandlerAction>","new ArrayList<HandlerAction>()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mLocation","false","false","false","false","true","WindowLeaked","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mTmpLocation","false","false","false","false","true","int","new int[2]","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DO_TRAVERSAL","true","false","false","true","true","int","1000","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mGlWanted","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mDirty","false","false","false","false","false","Rect","","","// will be a graphics.Region soon
","\android\view\ViewRoot.java"
"android.view.ViewRoot.DEBUG_ORIENTATION","false","false","true","true","true","boolean","false || LOCAL_LOGV","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mTempRect","false","false","false","false","true","Rect","","","// used in the transaction to not thrash the heap.
","\android\view\ViewRoot.java"
"android.view.ViewRoot.mVisRect","false","false","false","false","true","Rect","","","// used to retrieve visible rect of focused view.
","\android\view\ViewRoot.java"
"android.view.ViewRoot.visibleInsets","false","false","false","false","false","Rect","","","","\android\view\ViewRoot.java"
"android.view.EventCompletion.mIsPointer","false","false","false","false","true","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DISPATCH_GET_NEW_SURFACE","true","false","false","true","true","int","1009","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.WATCH_POINTER","false","false","true","true","true","boolean","false","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mUseGL","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mTranslator","false","false","false","false","false","CompatibilityInfo.Translator","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mCurScrollY","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DISPATCH_APP_VISIBILITY","true","false","false","true","true","int","1008","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.lt","false","false","true","true","false","LatencyTimer","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mLastWasImTarget","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mViewVisibility","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mLastConfiguration","false","false","false","false","true","Configuration","new Configuration()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mFullRedrawNeeded","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mEglDisplay","false","false","false","false","false","EGLDisplay","","","","\android\view\ViewRoot.java"
"android.view.EventCompletion.mKeyEvent","false","false","false","false","true","KeyEvent","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.WINDOW_FOCUS_CHANGED","true","false","false","true","true","int","1004","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DEBUG_IMF","false","false","true","true","true","boolean","false || LOCAL_LOGV","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mPreviousTransparentRegion","false","false","false","false","true","Region","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DEBUG_LAYOUT","false","false","true","true","true","boolean","false || LOCAL_LOGV","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.sFirstDrawHandlers","false","false","false","true","true","ArrayList<Runnable>","new ArrayList<Runnable>()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mDensity","false","false","true","false","true","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DBG","false","false","true","true","true","boolean","false","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mPendingVisibleInsets","false","false","false","false","true","Rect","new Rect()","","","\android\view\ViewRoot.java"
"android.view.ResizedInfo.newConfig","false","false","false","false","false","Configuration","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mTrackballAxisY","false","false","false","false","true","TrackballAxis","new TrackballAxis()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mTrackballAxisX","false","false","false","false","true","TrackballAxis","new TrackballAxis()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.step","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.lastMoveTime","false","false","false","false","false","long","0","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mWillDrawSoon","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.position","false","false","false","false","false","float","","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.dir","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mAudioManager","false","false","false","false","false","AudioManager","","","/**
 * see {@link #playSoundEffect(int)}
 */
","\android\view\ViewRoot.java"
"android.view.ViewRoot.FINISH_INPUT_CONNECTION","true","false","false","true","true","int","1012","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mAdded","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.RESIZED","true","false","false","true","true","int","1002","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.MAX_ACCELERATION","false","false","false","true","true","float","20","","/**
 * The maximum amount of acceleration we will apply.
 */
","\android\view\ViewRoot.java"
"android.view.ViewRoot.DISPATCH_KEY_FROM_IME","true","false","false","true","true","int","1011","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mInitialized","false","false","false","true","false","boolean","false","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.FAST_MOVE_TIME","false","false","false","true","true","long","150","","/**
 * The maximum amount of time (in milliseconds) between events in order
 * for us to consider the user to be doing fast trackball movements,
 * and thus apply an acceleration.
 */
","\android\view\ViewRoot.java"
"android.view.ViewRoot.mViewConfiguration","false","false","false","false","true","ViewConfiguration","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mTransparentRegion","false","false","false","false","true","Region","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DISPATCH_POINTER","true","false","false","true","true","int","1006","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.position","false","false","false","false","false","float","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mWindowAttributesChanged","false","false","false","false","false","boolean","false","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DEBUG_CONFIGURATION","false","false","true","true","true","boolean","false || LOCAL_LOGV","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.LOCAL_LOGV","false","false","true","true","true","boolean","false ? Config.LOGD : Config.LOGV","@SuppressWarnings({ ""ConstantConditionalExpression"" })","","\android\view\ViewRoot.java"
"android.view.ViewRoot.TAG","false","false","true","true","true","String","""ViewRoot""","","","\android\view\ViewRoot.java"
"android.view.ResizedInfo.coveredInsets","false","false","false","false","false","Rect","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.FAST_MOVE_TIME","false","false","false","true","true","long","150","","/**
 * The maximum amount of time (in milliseconds) between events in order
 * for us to consider the user to be doing fast trackball movements,
 * and thus apply an acceleration.
 */
","\android\view\ViewRoot.java"
"android.view.ViewRoot.DEBUG_TRACKBALL","false","false","true","true","true","boolean","false || LOCAL_LOGV","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.sDrawTime","false","false","true","true","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mEgl","false","false","false","false","false","EGL10","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mThread","false","false","false","false","true","Thread","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mAttachInfo","false","false","false","false","true","View.AttachInfo","","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.nonAccelMovement","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ResizedInfo.visibleInsets","false","false","false","false","false","Rect","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.SHOW_FPS","false","false","true","true","true","boolean","false","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.action","false","false","false","false","false","Runnable","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.coveredInsets","false","false","false","false","false","Rect","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mMainLooper","false","false","true","false","true","Looper","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mRealFocusedView","false","false","false","false","false","View","","","// this is not set to null in touch mode
","\android\view\ViewRoot.java"
"android.view.ViewRoot.mHolder","false","false","true","false","false","SurfaceHolder","new SurfaceHolder() {

    // we only need a SurfaceHolder for opengl. it would be nice
    // to implement everything else though, especially the callback
    // support (opengl doesn't make use of it right now, but eventually
    // will).
    public Surface getSurface() {
        return mSurface;
    }

    public boolean isCreating() {
        return false;
    }

    public void addCallback(Callback callback) {
    }

    public void removeCallback(Callback callback) {
    }

    public void setFixedSize(int width, int height) {
    }

    public void setSizeFromLayout() {
    }

    public void setFormat(int format) {
    }

    public void setType(int type) {
    }

    public void setKeepScreenOn(boolean screenOn) {
    }

    public Canvas lockCanvas() {
        return null;
    }

    public Canvas lockCanvas(Rect dirty) {
        return null;
    }

    public void unlockCanvasAndPost(Canvas canvas) {
    }

    public Rect getSurfaceFrame() {
        return null;
    }
}","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mReportNextDraw","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mHeight","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.acceleration","false","false","false","false","false","float","1","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.nonAccelMovement","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.CHECK_FOCUS","true","false","false","true","true","int","1013","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.sFirstDrawComplete","false","false","false","true","false","boolean","false","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mIsPointer","false","false","false","false","true","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.FINISHED_EVENT","true","false","false","true","true","int","1010","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mFocusedView","false","false","false","false","false","View","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.ACCEL_MOVE_SCALING_FACTOR","false","false","false","true","true","float","(1.0f / 40)","","/**
 * Scaling factor to the time (in milliseconds) between events to how
 * much to multiple/divide the current acceleration.  When movement
 * is < FAST_MOVE_TIME this multiplies the acceleration; when >
 * FAST_MOVE_TIME it divides it.
 */
","\android\view\ViewRoot.java"
"android.view.ViewRoot.mPendingEventSeq","false","false","false","false","false","int","0","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.dir","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DISPATCH_KEY","true","false","false","true","true","int","1005","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.sRunQueues","false","false","false","true","true","ThreadLocal<RunQueue>","new ThreadLocal<RunQueue>()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mTraversalScheduled","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mWinFrame","false","false","false","false","true","Rect","","","// frame given by window manager.
","\android\view\ViewRoot.java"
"android.view.ViewRoot.RESIZED_REPORT","true","false","false","true","true","int","1003","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mMotionEvent","false","false","false","false","true","MotionEvent","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DIE","true","false","false","true","true","int","1001","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mScrollY","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mLastGivenInsets","false","false","false","false","true","ViewTreeObserver.InternalInsetsInfo","new ViewTreeObserver.InternalInsetsInfo()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.MAX_TRACKBALL_DELAY","false","false","false","true","true","int","250","","/**
 * Maximum time we allow the user to roll the trackball enough to generate
 * a key event, before resetting the counters.
 */
","\android\view\ViewRoot.java"
"android.view.ViewRoot.absPosition","false","false","false","false","false","float","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.sWindowSession","false","false","false","true","false","IWindowSession","","","","\android\view\ViewRoot.java"
"android.view.EventCompletion.mWindow","false","false","false","false","true","IWindow","","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.ACCEL_MOVE_SCALING_FACTOR","false","false","false","true","true","float","(1.0f / 40)","","/**
 * Scaling factor to the time (in milliseconds) between events to how
 * much to multiple/divide the current acceleration.  When movement
 * is < FAST_MOVE_TIME this multiplies the acceleration; when >
 * FAST_MOVE_TIME it divides it.
 */
","\android\view\ViewRoot.java"
"android.view.EventCompletion.mMotionEvent","false","false","false","false","true","MotionEvent","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.sInstanceCount","false","false","false","true","false","long","0","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mIsAnimating","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mGL","false","false","false","false","false","GL11","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DISPATCH_TRACKBALL","true","false","false","true","true","int","1007","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mFirst","false","false","false","false","false","boolean","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mWindow","false","false","false","false","true","IWindow","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.lastMoveTime","false","false","false","false","false","long","0","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mActions","false","false","true","false","true","ArrayList<HandlerAction>","new ArrayList<HandlerAction>()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.MEASURE_LATENCY","false","false","true","true","true","boolean","false","","","\android\view\ViewRoot.java"
"android.view.W.mViewRoot","false","false","true","false","true","WeakReference<ViewRoot>","","","","\android\view\ViewRoot.java"
"android.view.W.mMainLooper","false","false","true","false","true","Looper","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mLastTrackballTime","false","false","false","false","false","long","0","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mProfile","false","false","true","false","false","boolean","false","","// FIXME for perf testing only
","\android\view\ViewRoot.java"
"android.view.ViewRoot.mEglSurface","false","false","false","false","false","EGLSurface","","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.absPosition","false","false","false","false","false","float","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mEglContext","false","false","false","false","false","EGLContext","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mInputMethodCallback","false","false","false","false","true","InputMethodCallback","","","","\android\view\ViewRoot.java"
"android.view.TrackballAxis.step","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.InputMethodCallback.mViewRoot","false","false","true","false","false","WeakReference<ViewRoot>","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mStaticInit","false","false","false","true","true","Object","new Object()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mWindowAttributes","false","false","false","false","true","WindowManager.LayoutParams","new WindowManager.LayoutParams()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mScroller","false","false","false","false","false","Scroller","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mPendingEvents","false","false","false","false","true","SparseArray<Object>","new SparseArray<Object>()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mWidth","false","false","false","false","false","int","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mPendingConfiguration","false","false","false","false","true","Configuration","new Configuration()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.DEBUG_DRAW","false","false","true","true","true","boolean","false || LOCAL_LOGV","","/**
 * @noinspection PointlessBooleanExpression
 */
","\android\view\ViewRoot.java"
"android.view.ViewRoot.mAddNesting","false","false","false","false","false","int","","","/*package*/
","\android\view\ViewRoot.java"
"android.view.TrackballAxis.acceleration","false","false","false","false","false","float","1","","","\android\view\ViewRoot.java"
"android.view.HandlerAction.delay","false","false","false","false","false","long","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mKeyEvent","false","false","false","false","true","KeyEvent","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.delay","false","false","false","false","false","long","","","","\android\view\ViewRoot.java"
"android.view.RunQueue.delay","false","false","false","false","false","long","","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.mPendingContentInsets","false","false","false","false","true","Rect","new Rect()","","","\android\view\ViewRoot.java"
"android.view.ViewRoot.sConfigCallbacks","false","false","false","true","true","ArrayList<ComponentCallbacks>","new ArrayList<ComponentCallbacks>()","","","\android\view\ViewRoot.java"
"android.view.HandlerAction.action","false","false","false","false","false","Runnable","","","","\android\view\ViewRoot.java"
"android.provider.DrmStore.SIZE","true","false","false","true","true","String","""_size""","","/**
 * The size of the file in bytes
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\DrmStore.java"
"android.provider.Columns.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the file
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\DrmStore.java"
"android.provider.DrmStore.TAG","false","false","true","true","true","String","""DrmStore""","","","\android\provider\DrmStore.java"
"android.provider.DrmStore.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the file
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\DrmStore.java"
"android.provider.Columns.MIME_TYPE","true","false","false","true","true","String","""mime_type""","","/**
 * The MIME type of the file
 * <P>Type: TEXT</P>
 */
","\android\provider\DrmStore.java"
"android.provider.Audio.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/audio"")","","","\android\provider\DrmStore.java"
"android.provider.DrmStore.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/audio"")","","","\android\provider\DrmStore.java"
"android.provider.DrmStore.TITLE","true","false","false","true","true","String","""title""","","/**
 * The title of the file content
 * <P>Type: TEXT</P>
 */
","\android\provider\DrmStore.java"
"android.provider.Columns.TITLE","true","false","false","true","true","String","""title""","","/**
 * The title of the file content
 * <P>Type: TEXT</P>
 */
","\android\provider\DrmStore.java"
"android.provider.DrmStore.ACCESS_DRM_PERMISSION","false","false","true","true","true","String","""android.permission.ACCESS_DRM""","","/**
 * This is in the Manifest class of the drm provider, but that isn't visible
 * in the framework.
 */
","\android\provider\DrmStore.java"
"android.provider.DrmStore.MIME_TYPE","true","false","false","true","true","String","""mime_type""","","/**
 * The MIME type of the file
 * <P>Type: TEXT</P>
 */
","\android\provider\DrmStore.java"
"android.provider.Images.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/images"")","","","\android\provider\DrmStore.java"
"android.provider.DrmStore.AUTHORITY","true","false","false","true","true","String","""drm""","","","\android\provider\DrmStore.java"
"android.provider.Columns.SIZE","true","false","false","true","true","String","""_size""","","/**
 * The size of the file in bytes
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\DrmStore.java"
"android.test.InstrumentationTestCase.mInstrumentation","false","false","true","false","false","Instrumentation","","","","\android\test\InstrumentationTestCase.java"
"android.net.LocalSocketImpl.fos","false","false","true","false","false","SocketOutputStream","","","","\android\net\LocalSocketImpl.java"
"android.net.LocalSocketImpl.outboundFileDescriptors","false","false","false","false","false","FileDescriptor","","","/**
 * file descriptor array that should be written during next write
 */
","\android\net\LocalSocketImpl.java"
"android.net.LocalSocketImpl.inboundFileDescriptors","false","false","false","false","false","FileDescriptor","","","/**
 * file descriptor array received during a previous read
 */
","\android\net\LocalSocketImpl.java"
"android.net.LocalSocketImpl.readMonitor","false","false","true","false","false","Object","new Object()","","","\android\net\LocalSocketImpl.java"
"android.net.LocalSocketImpl.writeMonitor","false","false","true","false","false","Object","new Object()","","","\android\net\LocalSocketImpl.java"
"android.net.LocalSocketImpl.fd","false","false","true","false","false","FileDescriptor","","","/**
 * null if closed or not yet created
 */
","\android\net\LocalSocketImpl.java"
"android.net.LocalSocketImpl.fis","false","false","true","false","false","SocketInputStream","","","","\android\net\LocalSocketImpl.java"
"android.inputmethodservice.IInputMethodWrapper.DO_UNSET_INPUT_CONTEXT","false","false","true","true","true","int","30","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.InputMethodSessionCallbackWrapper.mContext","false","false","false","false","true","Context","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_HIDE_SOFT_INPUT","false","false","true","true","true","int","70","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.notified","false","false","false","false","false","boolean","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.mTarget","false","false","false","false","true","AbstractInputMethodService","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_ATTACH_TOKEN","false","false","true","true","true","int","10","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_SHOW_SOFT_INPUT","false","false","true","true","true","int","60","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.mInputMethod","false","false","false","false","true","InputMethod","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.mCb","false","false","false","false","true","IInputMethodCallback","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_DUMP","false","false","true","true","true","int","1","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.mCaller","false","false","false","false","true","HandlerCaller","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_REVOKE_SESSION","false","false","true","true","true","int","50","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.InputMethodSessionCallbackWrapper.mCb","false","false","false","false","true","IInputMethodCallback","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_CREATE_SESSION","false","false","true","true","true","int","40","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_RESTART_INPUT","false","false","true","true","true","int","34","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.mContext","false","false","false","false","true","Context","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.Notifier.notified","false","false","false","false","false","boolean","","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DEBUG","false","false","true","true","true","boolean","false","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_SET_SESSION_ENABLED","false","false","true","true","true","int","45","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_START_INPUT","false","false","true","true","true","int","32","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.DO_SET_INPUT_CONTEXT","false","false","true","true","true","int","20","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.inputmethodservice.IInputMethodWrapper.TAG","false","false","true","true","true","String","""InputMethodWrapper""","","","\android\inputmethodservice\IInputMethodWrapper.java"
"android.util.Config.PROFILE","true","false","false","true","true","boolean","false","@Deprecated","/**
 * @deprecated Always false.
 */
","\android\util\Config.java"
"android.util.Config.RELEASE","true","false","false","true","true","boolean","!DEBUG","@Deprecated","/**
 * @deprecated Use {@link #DEBUG} instead.
 */
","\android\util\Config.java"
"android.util.Config.DEBUG","true","false","false","true","true","boolean","ConfigBuildFlags.DEBUG","","/**
 * If this is a debug build, this field will be true.
 */
","\android\util\Config.java"
"android.util.Config.LOGD","true","false","false","true","true","boolean","true","@Deprecated","/**
 * @deprecated Always true.
 */
","\android\util\Config.java"
"android.util.Config.LOGV","true","false","false","true","true","boolean","false","@Deprecated","/**
 * @deprecated Always false.
 */
","\android\util\Config.java"
"android.pim.vcard.VCardSourceDetector.JAPANESE_MOBILE_PHONE_SIGNS","false","false","true","true","false","Set<String>","new HashSet<String>(Arrays.asList(""X-GNO"", ""X-GN"", ""X-REDUCTION""))","","","\android\pim\vcard\VCardSourceDetector.java"
"android.pim.vcard.VCardSourceDetector.mSpecifiedCharset","false","false","true","false","false","String","","","","\android\pim\vcard\VCardSourceDetector.java"
"android.pim.vcard.VCardSourceDetector.mType","false","false","true","false","false","int","VCardConfig.PARSE_TYPE_UNKNOWN","","","\android\pim\vcard\VCardSourceDetector.java"
"android.pim.vcard.VCardSourceDetector.WINDOWS_MOBILE_PHONE_SIGNS","false","false","true","true","false","Set<String>","new HashSet<String>(Arrays.asList(""X-MICROSOFT-ASST_TEL"", ""X-MICROSOFT-ASSISTANT"", ""X-MICROSOFT-OFFICELOC""))","","","\android\pim\vcard\VCardSourceDetector.java"
"android.pim.vcard.VCardSourceDetector.APPLE_SIGNS","false","false","true","true","false","Set<String>","new HashSet<String>(Arrays.asList(""X-PHONETIC-FIRST-NAME"", ""X-PHONETIC-MIDDLE-NAME"", ""X-PHONETIC-LAST-NAME"", ""X-ABADR"", ""X-ABUID""))","","","\android\pim\vcard\VCardSourceDetector.java"
"android.pim.vcard.VCardSourceDetector.mNeedParseSpecifiedCharset","false","false","true","false","false","boolean","","","// Some mobile phones (like FOMA) tells us the charset of the data.
","\android\pim\vcard\VCardSourceDetector.java"
"android.pim.vcard.VCardSourceDetector.FOMA_SIGNS","false","false","true","true","false","Set<String>","new HashSet<String>(Arrays.asList(""X-SD-VERN"", ""X-SD-FORMAT_VER"", ""X-SD-CATEGORIES"", ""X-SD-CLASS"", ""X-SD-DCREATED"", ""X-SD-DESCRIPTION""))","","// In other words, Japanese FOMA mobile phones are detected as FOMA, not JAPANESE_MOBILE_PHONES.
","\android\pim\vcard\VCardSourceDetector.java"
"android.pim.vcard.VCardSourceDetector.TYPE_FOMA_CHARSET_SIGN","false","false","true","true","false","String","""X-SD-CHAR_CODE""","","","\android\pim\vcard\VCardSourceDetector.java"
"android.app.ProcessErrorStateInfo.shortMsg","true","false","false","false","false","String","","","/**
 * A short message describing the error condition.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.CRASHED","true","false","false","true","true","int","1","","","\android\app\ActivityManager.java"
"android.app.MemoryInfo.threshold","true","false","false","false","false","long","","","/**
 * The threshold of {@link #availMem} at which we consider memory to be
 * low and start killing background services and other non-extraneous
 * processes.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.processName","true","false","false","false","false","String","","","/**
 * The process name in which the crash or error occurred.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.shortMsg","true","false","false","false","false","String","","","/**
 * A short message describing the error condition.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.FLAG_PERSISTENT_PROCESS","true","false","false","true","true","int","1 << 3","","/**
 * Bit for {@link #flags): set if the service is running in a
 * persistent process.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.TAG","false","false","true","true","false","String","""ActivityManager""","","","\android\app\ActivityManager.java"
"android.app.RunningTaskInfo.id","true","false","false","false","false","int","","","/**
 * A unique identifier for this task.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.started","true","false","false","false","false","boolean","","","/**
 * Set to true if this service has been explicitly started.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.mContext","false","false","true","false","true","Context","","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.tag","true","false","false","false","false","String","","","/**
 * The activity name associated with the error, if known.  May be null.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.origActivity","true","false","false","false","false","ComponentName","","","/**
 * If this task was started from an alias, this is the actual
 * activity component that was initially started; the component of
 * the baseIntent in this case is the name of the actual activity
 * implementation that the alias referred to.  Otherwise, this is null.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.clientLabel","true","false","false","false","false","int","","","/**
 * For special services that are bound to by system code, this is
 * a string resource providing a user-visible label for who the
 * client is.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.started","true","false","false","false","false","boolean","","","/**
 * Set to true if this service has been explicitly started.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.lru","true","false","false","false","false","int","","","/**
 * An additional ordering within a particular {@link #importance}
 * category, providing finer-grained information about the relative
 * utility of processes within a category.  This number means nothing
 * except that a smaller values are more recently used (and thus
 * more important).  Currently an LRU value is only maintained for
 * the {@link #IMPORTANCE_BACKGROUND} category, though others may
 * be maintained in the future.
 */
","\android\app\ActivityManager.java"
"android.app.RecentTaskInfo.CREATOR","true","false","false","true","true","Creator<RecentTaskInfo>","new Creator<RecentTaskInfo>() {

    public RecentTaskInfo createFromParcel(Parcel source) {
        return new RecentTaskInfo(source);
    }

    public RecentTaskInfo[] newArray(int size) {
        return new RecentTaskInfo[size];
    }
}","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.importanceReasonCode","true","false","false","false","false","int","","","/**
 * The reason for {@link #importance}, if any.
 */
","\android\app\ActivityManager.java"
"android.app.MemoryInfo.CREATOR","true","false","false","true","true","Creator<MemoryInfo>","new Creator<MemoryInfo>() {

    public MemoryInfo createFromParcel(Parcel source) {
        return new MemoryInfo(source);
    }

    public MemoryInfo[] newArray(int size) {
        return new MemoryInfo[size];
    }
}","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.process","true","false","false","false","false","String","","","/**
 * The name of the process this service runs in.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.REASON_PROVIDER_IN_USE","true","false","false","true","true","int","1","","/**
 * Constant for {@link #importanceReasonCode}: one of the application's
 * content providers is being used by another process.  The pid of
 * the client process is in {@link #importanceReasonPid} and the
 * target provider in this process is in
 * {@link #importanceReasonComponent}.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.IMPORTANCE_FOREGROUND","true","false","false","true","true","int","100","","/**
 * Constant for {@link #importance}: this process is running the
 * foreground UI.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.uid","true","false","false","false","false","int","","","/**
 * The kernel user-ID that has been assigned to this process;
 * currently this is not a unique ID (multiple applications can have
 * the same uid).
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.flags","true","false","false","false","false","int","","","/**
 * Running flags.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.description","true","false","false","false","false","CharSequence","","","/**
 * Description of the task's current state.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.processName","true","false","false","false","false","String","","","/**
 * The name of the process that this object is associated with
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.FLAG_FOREGROUND","true","false","false","true","true","int","1 << 1","","/**
 * Bit for {@link #flags}: set if the service has asked to
 * run as a foreground process.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.importanceReasonPid","true","false","false","false","false","int","","","/**
 * For the specified values of {@link #importanceReasonCode}, this
 * is the process ID of the other process that is a client of this
 * process.  This will be 0 if no other process is using this one.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.importanceReasonComponent","true","false","false","false","false","ComponentName","","","/**
 * For the specified values of {@link #importanceReasonCode}, this
 * is the name of the component that is being used in this process.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.mHandler","false","false","true","false","true","Handler","","","","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.clientPackage","true","false","false","false","false","String","","","/**
 * For special services that are bound to by system code, this is
 * the package that holds the binding.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.foreground","true","false","false","false","false","boolean","","","/**
 * Set to true if the service has asked to run as a foreground process.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.FLAG_FOREGROUND","true","false","false","true","true","int","1 << 1","","/**
 * Bit for {@link #flags}: set if the service has asked to
 * run as a foreground process.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.longMsg","true","false","false","false","false","String","","","/**
 * A long message describing the error condition.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.pid","true","false","false","false","false","int","","","/**
 * The pid of this process; 0 if none
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.DEBUG","false","false","true","true","false","boolean","false","","","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.lastActivityTime","true","false","false","false","false","long","","","/**
 * The time when there was last activity in the service (either
 * explicit requests to start it or clients binding to it).
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.NO_ERROR","true","false","false","true","true","int","0","","/**
 * Condition codes
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.crashCount","true","false","false","false","false","int","","","/**
 * Number of times the service's process has crashed while the service
 * is running.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.IMPORTANCE_SERVICE","true","false","false","true","true","int","300","","/**
 * Constant for {@link #importance}: this process is contains services
 * that should remain running.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.flags","true","false","false","false","false","int","","","/**
 * Running flags.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.IMPORTANCE_EMPTY","true","false","false","true","true","int","500","","/**
 * Constant for {@link #importance}: this process is empty of any
 * actively running code.
 */
","\android\app\ActivityManager.java"
"android.app.RunningTaskInfo.baseActivity","true","false","false","false","false","ComponentName","","","/**
 * The component launched as the first activity in the task.  This can
 * be considered the ""application"" of this task.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.tag","true","false","false","false","false","String","","","/**
 * The activity name associated with the error, if known.  May be null.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.service","true","false","false","false","false","ComponentName","","","/**
 * The service component.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.baseActivity","true","false","false","false","false","ComponentName","","","/**
 * The component launched as the first activity in the task.  This can
 * be considered the ""application"" of this task.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.FLAG_SYSTEM_PROCESS","true","false","false","true","true","int","1 << 2","","/**
 * Bit for {@link #flags): set if the service is running in a
 * core system process.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.importanceReasonPid","true","false","false","false","false","int","","","/**
 * For the specified values of {@link #importanceReasonCode}, this
 * is the process ID of the other process that is a client of this
 * process.  This will be 0 if no other process is using this one.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.REASON_UNKNOWN","true","false","false","true","true","int","0","","/**
 * Constant for {@link #importanceReasonCode}: nothing special has
 * been specified for the reason for this level.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.condition","true","false","false","false","false","int","","","/**
 * The condition that the process is in.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.IMPORTANCE_VISIBLE","true","false","false","true","true","int","200","","/**
 * Constant for {@link #importance}: this process is running something
 * that is considered to be actively visible to the user.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.crashData","true","false","false","false","false","byte","null","","/**
 * to be deprecated: This value will always be null.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.condition","true","false","false","false","false","int","","","/**
 * The condition that the process is in.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.activeSince","true","false","false","false","false","long","","","/**
 * The time when the service was first made active, either by someone
 * starting or binding to it.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.foreground","true","false","false","false","false","boolean","","","/**
 * Set to true if the service has asked to run as a foreground process.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.crashData","true","false","false","false","false","byte","null","","/**
 * to be deprecated: This value will always be null.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.IMPORTANCE_FOREGROUND","true","false","false","true","true","int","100","","/**
 * Constant for {@link #importance}: this process is running the
 * foreground UI.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.REASON_PROVIDER_IN_USE","true","false","false","true","true","int","1","","/**
 * Constant for {@link #importanceReasonCode}: one of the application's
 * content providers is being used by another process.  The pid of
 * the client process is in {@link #importanceReasonPid} and the
 * target provider in this process is in
 * {@link #importanceReasonComponent}.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.baseIntent","true","false","false","false","false","Intent","","","/**
 * The original Intent used to launch the task.  You can use this
 * Intent to re-launch the task (if it is no longer running) or bring
 * the current task to the front.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.clientCount","true","false","false","false","false","int","","","/**
 * Number of clients connected to the service.
 */
","\android\app\ActivityManager.java"
"android.app.RunningTaskInfo.CREATOR","true","false","false","true","true","Creator<RunningTaskInfo>","new Creator<RunningTaskInfo>() {

    public RunningTaskInfo createFromParcel(Parcel source) {
        return new RunningTaskInfo(source);
    }

    public RunningTaskInfo[] newArray(int size) {
        return new RunningTaskInfo[size];
    }
}","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.clientCount","true","false","false","false","false","int","","","/**
 * Number of clients connected to the service.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.lowMemory","true","false","false","false","false","boolean","","","/**
 * Set to true if the system considers itself to currently be in a low
 * memory situation.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.id","true","false","false","false","false","int","","","/**
 * A unique identifier for this task.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.lastActivityTime","true","false","false","false","false","long","","","/**
 * The time when there was last activity in the service (either
 * explicit requests to start it or clients binding to it).
 */
","\android\app\ActivityManager.java"
"android.app.RunningTaskInfo.description","true","false","false","false","false","CharSequence","","","/**
 * Description of the task's current state.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.FLAG_PERSISTENT_PROCESS","true","false","false","true","true","int","1 << 3","","/**
 * Bit for {@link #flags): set if the service is running in a
 * persistent process.
 */
","\android\app\ActivityManager.java"
"android.app.MemoryInfo.availMem","true","false","false","false","false","long","","","/**
 * The total available memory on the system.  This number should not
 * be considered absolute: due to the nature of the kernel, a significant
 * portion of this memory is actually in use and needed for the overall
 * system to run well.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.REASON_SERVICE_IN_USE","true","false","false","true","true","int","2","","/**
 * Constant for {@link #importanceReasonCode}: one of the application's
 * content providers is being used by another process.  The pid of
 * the client process is in {@link #importanceReasonPid} and the
 * target provider in this process is in
 * {@link #importanceReasonComponent}.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.IMPORTANCE_BACKGROUND","true","false","false","true","true","int","400","","/**
 * Constant for {@link #importance}: this process process contains
 * background code that is expendable.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.RECENT_IGNORE_UNAVAILABLE","true","false","false","true","true","int","0x0002","","/**
 * @hide
 * TODO: Make this public.  Provides a list that does not contain any
 * recent tasks that currently are not available to the user.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.CREATOR","true","false","false","true","true","Creator<RunningAppProcessInfo>","new Creator<RunningAppProcessInfo>() {

    public RunningAppProcessInfo createFromParcel(Parcel source) {
        return new RunningAppProcessInfo(source);
    }

    public RunningAppProcessInfo[] newArray(int size) {
        return new RunningAppProcessInfo[size];
    }
}","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.crashCount","true","false","false","false","false","int","","","/**
 * Number of times the service's process has crashed while the service
 * is running.
 */
","\android\app\ActivityManager.java"
"android.app.RecentTaskInfo.baseIntent","true","false","false","false","false","Intent","","","/**
 * The original Intent used to launch the task.  You can use this
 * Intent to re-launch the task (if it is no longer running) or bring
 * the current task to the front.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.pid","true","false","false","false","false","int","","","/**
 * The pid of this process; 0 if none
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.restarting","true","false","false","false","false","long","","","/**
 * If non-zero, this service is not currently running, but scheduled to
 * restart at the given time.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.FLAG_STARTED","true","false","false","true","true","int","1 << 0","","/**
 * Bit for {@link #flags}: set if this service has been
 * explicitly started.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.activeSince","true","false","false","false","false","long","","","/**
 * The time when the service was first made active, either by someone
 * starting or binding to it.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.pid","true","false","false","false","false","int","","","/**
 * If non-zero, this is the process the service is running in.
 */
","\android\app\ActivityManager.java"
"android.app.RunningTaskInfo.numActivities","true","false","false","false","false","int","","","/**
 * Number of activities in this task.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.pkgList","true","false","false","false","false","String","","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.NOT_RESPONDING","true","false","false","true","true","int","2","","","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.lru","true","false","false","false","false","int","","","/**
 * An additional ordering within a particular {@link #importance}
 * category, providing finer-grained information about the relative
 * utility of processes within a category.  This number means nothing
 * except that a smaller values are more recently used (and thus
 * more important).  Currently an LRU value is only maintained for
 * the {@link #IMPORTANCE_BACKGROUND} category, though others may
 * be maintained in the future.
 */
","\android\app\ActivityManager.java"
"android.app.RunningTaskInfo.thumbnail","true","false","false","false","false","Bitmap","","","/**
 * Thumbnail representation of the task's current state.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.threshold","true","false","false","false","false","long","","","/**
 * The threshold of {@link #availMem} at which we consider memory to be
 * low and start killing background services and other non-extraneous
 * processes.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.pkgList","true","false","false","false","false","String","","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.thumbnail","true","false","false","false","false","Bitmap","","","/**
 * Thumbnail representation of the task's current state.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.NOT_RESPONDING","true","false","false","true","true","int","2","","","\android\app\ActivityManager.java"
"android.app.MemoryInfo.lowMemory","true","false","false","false","false","boolean","","","/**
 * Set to true if the system considers itself to currently be in a low
 * memory situation.
 */
","\android\app\ActivityManager.java"
"android.app.RecentTaskInfo.id","true","false","false","false","false","int","","","/**
 * If this task is currently running, this is the identifier for it.
 * If it is not running, this will be -1.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.longMsg","true","false","false","false","false","String","","","/**
 * A long message describing the error condition.
 */
","\android\app\ActivityManager.java"
"android.app.RunningTaskInfo.topActivity","true","false","false","false","false","ComponentName","","","/**
 * The activity component at the top of the history stack of the task.
 * This is what the user is currently doing.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.stackTrace","true","false","false","false","false","String","","","/**
 * The stack trace where the error originated.  May be null.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.CREATOR","true","false","false","true","true","Creator<RunningAppProcessInfo>","new Creator<RunningAppProcessInfo>() {

    public RunningAppProcessInfo createFromParcel(Parcel source) {
        return new RunningAppProcessInfo(source);
    }

    public RunningAppProcessInfo[] newArray(int size) {
        return new RunningAppProcessInfo[size];
    }
}","","","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.CREATOR","true","false","false","true","true","Creator<ProcessErrorStateInfo>","new Creator<ProcessErrorStateInfo>() {

    public ProcessErrorStateInfo createFromParcel(Parcel source) {
        return new ProcessErrorStateInfo(source);
    }

    public ProcessErrorStateInfo[] newArray(int size) {
        return new ProcessErrorStateInfo[size];
    }
}","","","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.service","true","false","false","false","false","ComponentName","","","/**
 * The service component.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.restarting","true","false","false","false","false","long","","","/**
 * If non-zero, this service is not currently running, but scheduled to
 * restart at the given time.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.FLAG_SYSTEM_PROCESS","true","false","false","true","true","int","1 << 2","","/**
 * Bit for {@link #flags): set if the service is running in a
 * core system process.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.processName","true","false","false","false","false","String","","","/**
 * The name of the process that this object is associated with
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.uid","true","false","false","false","false","int","","","/**
 * The user id of this process.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.REASON_SERVICE_IN_USE","true","false","false","true","true","int","2","","/**
 * Constant for {@link #importanceReasonCode}: one of the application's
 * content providers is being used by another process.  The pid of
 * the client process is in {@link #importanceReasonPid} and the
 * target provider in this process is in
 * {@link #importanceReasonComponent}.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.IMPORTANCE_BACKGROUND","true","false","false","true","true","int","400","","/**
 * Constant for {@link #importance}: this process process contains
 * background code that is expendable.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.importanceReasonComponent","true","false","false","false","false","ComponentName","","","/**
 * For the specified values of {@link #importanceReasonCode}, this
 * is the name of the component that is being used in this process.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.importance","true","false","false","false","false","int","","","/**
 * The relative importance level that the system places on this
 * process.  May be one of {@link #IMPORTANCE_FOREGROUND},
 * {@link #IMPORTANCE_VISIBLE}, {@link #IMPORTANCE_SERVICE},
 * {@link #IMPORTANCE_BACKGROUND}, or {@link #IMPORTANCE_EMPTY}.  These
 * constants are numbered so that ""more important"" values are always
 * smaller than ""less important"" values.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.CRASHED","true","false","false","true","true","int","1","","","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.FLAG_STARTED","true","false","false","true","true","int","1 << 0","","/**
 * Bit for {@link #flags}: set if this service has been
 * explicitly started.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.uid","true","false","false","false","false","int","","","/**
 * The user id of this process.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.uid","true","false","false","false","false","int","","","/**
 * The UID that owns this service.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.IMPORTANCE_VISIBLE","true","false","false","true","true","int","200","","/**
 * Constant for {@link #importance}: this process is running something
 * that is considered to be actively visible to the user.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.stackTrace","true","false","false","false","false","String","","","/**
 * The stack trace where the error originated.  May be null.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.pid","true","false","false","false","false","int","","","/**
 * The pid of this process; 0 if none
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.IMPORTANCE_SERVICE","true","false","false","true","true","int","300","","/**
 * Constant for {@link #importance}: this process is contains services
 * that should remain running.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.REASON_UNKNOWN","true","false","false","true","true","int","0","","/**
 * Constant for {@link #importanceReasonCode}: nothing special has
 * been specified for the reason for this level.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.clientLabel","true","false","false","false","false","int","","","/**
 * For special services that are bound to by system code, this is
 * a string resource providing a user-visible label for who the
 * client is.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.RECENT_WITH_EXCLUDED","true","false","false","true","true","int","0x0001","","/**
 * Flag for use with {@link #getRecentTasks}: return all tasks, even those
 * that have set their
 * {@link android.content.Intent#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS} flag.
 */
","\android\app\ActivityManager.java"
"android.app.RecentTaskInfo.origActivity","true","false","false","false","false","ComponentName","","","/**
 * If this task was started from an alias, this is the actual
 * activity component that was initially started; the component of
 * the baseIntent in this case is the name of the actual activity
 * implementation that the alias referred to.  Otherwise, this is null.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.IMPORTANCE_EMPTY","true","false","false","true","true","int","500","","/**
 * Constant for {@link #importance}: this process is empty of any
 * actively running code.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.topActivity","true","false","false","false","false","ComponentName","","","/**
 * The activity component at the top of the history stack of the task.
 * This is what the user is currently doing.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.CREATOR","true","false","false","true","true","Creator<RunningServiceInfo>","new Creator<RunningServiceInfo>() {

    public RunningServiceInfo createFromParcel(Parcel source) {
        return new RunningServiceInfo(source);
    }

    public RunningServiceInfo[] newArray(int size) {
        return new RunningServiceInfo[size];
    }
}","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.localLOGV","false","false","true","true","false","boolean","DEBUG || android.util.Config.LOGV","","","\android\app\ActivityManager.java"
"android.app.ActivityManager.availMem","true","false","false","false","false","long","","","/**
 * The total available memory on the system.  This number should not
 * be considered absolute: due to the nature of the kernel, a significant
 * portion of this memory is actually in use and needed for the overall
 * system to run well.
 */
","\android\app\ActivityManager.java"
"android.app.RunningAppProcessInfo.importanceReasonCode","true","false","false","false","false","int","","","/**
 * The reason for {@link #importance}, if any.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.numRunning","true","false","false","false","false","int","","","/**
 * Number of activities that are currently running (not stopped
 * and persisted) in this task.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.importance","true","false","false","false","false","int","","","/**
 * The relative importance level that the system places on this
 * process.  May be one of {@link #IMPORTANCE_FOREGROUND},
 * {@link #IMPORTANCE_VISIBLE}, {@link #IMPORTANCE_SERVICE},
 * {@link #IMPORTANCE_BACKGROUND}, or {@link #IMPORTANCE_EMPTY}.  These
 * constants are numbered so that ""more important"" values are always
 * smaller than ""less important"" values.
 */
","\android\app\ActivityManager.java"
"android.app.RunningTaskInfo.numRunning","true","false","false","false","false","int","","","/**
 * Number of activities that are currently running (not stopped
 * and persisted) in this task.
 */
","\android\app\ActivityManager.java"
"android.app.RunningServiceInfo.process","true","false","false","false","false","String","","","/**
 * The name of the process this service runs in.
 */
","\android\app\ActivityManager.java"
"android.app.ProcessErrorStateInfo.NO_ERROR","true","false","false","true","true","int","0","","/**
 * Condition codes
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.numActivities","true","false","false","false","false","int","","","/**
 * Number of activities in this task.
 */
","\android\app\ActivityManager.java"
"android.app.ActivityManager.clientPackage","true","false","false","false","false","String","","","/**
 * For special services that are bound to by system code, this is
 * the package that holds the binding.
 */
","\android\app\ActivityManager.java"
"android.database.BulkCursorToCursorAdaptor.mWantsAllOnMoveCalls","false","false","true","false","false","boolean","","","","\android\database\BulkCursorToCursorAdaptor.java"
"android.database.BulkCursorToCursorAdaptor.mCount","false","false","true","false","false","int","","","","\android\database\BulkCursorToCursorAdaptor.java"
"android.database.BulkCursorToCursorAdaptor.mBulkCursor","false","false","true","false","false","IBulkCursor","","","","\android\database\BulkCursorToCursorAdaptor.java"
"android.database.BulkCursorToCursorAdaptor.mObserverBridge","false","false","true","false","false","SelfContentObserver","","","","\android\database\BulkCursorToCursorAdaptor.java"
"android.database.BulkCursorToCursorAdaptor.TAG","false","false","true","true","true","String","""BulkCursor""","","","\android\database\BulkCursorToCursorAdaptor.java"
"android.database.BulkCursorToCursorAdaptor.mColumns","false","false","true","false","false","String","","","","\android\database\BulkCursorToCursorAdaptor.java"
"android.content.pm.FeatureInfo.CREATOR","true","false","false","true","true","Creator<FeatureInfo>","new Creator<FeatureInfo>() {

    public FeatureInfo createFromParcel(Parcel source) {
        return new FeatureInfo(source);
    }

    public FeatureInfo[] newArray(int size) {
        return new FeatureInfo[size];
    }
}","","","\android\content\pm\FeatureInfo.java"
"android.content.pm.FeatureInfo.flags","true","false","false","false","false","int","","","/**
 * Additional flags.  May be zero or more of {@link #FLAG_REQUIRED}.
 */
","\android\content\pm\FeatureInfo.java"
"android.content.pm.FeatureInfo.GL_ES_VERSION_UNDEFINED","true","false","false","true","true","int","0","","/**
 * Default value for {@link #reqGlEsVersion};
 */
","\android\content\pm\FeatureInfo.java"
"android.content.pm.FeatureInfo.FLAG_REQUIRED","true","false","false","true","true","int","0x0001","","/**
 * Set on {@link #flags} if this feature has been required by the application.
 */
","\android\content\pm\FeatureInfo.java"
"android.content.pm.FeatureInfo.name","true","false","false","false","false","String","","","/**
 * The name of this feature, for example ""android.hardware.camera"".  If
 * this is null, then this is an OpenGL ES version feature as described
 * in {@link #reqGlEsVersion}.
 */
","\android\content\pm\FeatureInfo.java"
"android.content.pm.FeatureInfo.reqGlEsVersion","true","false","false","false","false","int","","","/**
 * The GLES version used by an application. The upper order 16 bits represent the
 * major version and the lower order 16 bits the minor version.  Only valid
 * if {@link #name} is null.
 */
","\android\content\pm\FeatureInfo.java"
"android.speech.RecognizerResultsIntent.ACTION_VOICE_SEARCH_RESULTS","true","false","false","true","true","String","""android.speech.action.VOICE_SEARCH_RESULTS""","","/**
 * Intent that can be sent by implementations of voice search to display the results of
 * a search in, for example, a web browser.
 *
 * This intent should always be accompanied by at least
 * {@link #EXTRA_VOICE_SEARCH_RESULT_STRINGS}, and optionally but recommended,
 * {@link #EXTRA_VOICE_SEARCH_RESULT_URLS}, and sometimes
 * {@link #EXTRA_VOICE_SEARCH_RESULT_HTML} and
 * {@link #EXTRA_VOICE_SEARCH_RESULT_HTML_BASE_URLS}.
 *
 * These are parallel arrays, where a recognition result string at index N of
 * {@link #EXTRA_VOICE_SEARCH_RESULT_STRINGS} should be accompanied by a url to use for
 * searching based on that string at index N of {@link #EXTRA_VOICE_SEARCH_RESULT_URLS},
 * and, possibly, the full html to display for that result at index N of
 * {@link #EXTRA_VOICE_SEARCH_RESULT_HTML}. If full html is provided, a base url (or
 * list of base urls) should be provided with {@link #EXTRA_VOICE_SEARCH_RESULT_HTML_BASE_URLS}.
 *
 * @hide for making public in a later release
 */
","\android\speech\RecognizerResultsIntent.java"
"android.speech.RecognizerResultsIntent.EXTRA_VOICE_SEARCH_RESULT_HTML_BASE_URLS","true","false","false","true","true","String","""android.speech.extras.VOICE_SEARCH_RESULT_HTML_BASE_URLS""","","/**
 * The key to an extra {@link ArrayList} of {@link String}s that contains the base url to
 * assume when interpreting html provided in {@link #EXTRA_VOICE_SEARCH_RESULT_HTML}.
 *
 * A list of size 1 may be provided to apply the same base url to all html results.
 * A list of the same size as {@link #EXTRA_VOICE_SEARCH_RESULT_STRINGS} may be provided
 * to apply different base urls to each different html result in the
 * {@link #EXTRA_VOICE_SEARCH_RESULT_HTML} list.
 *
 * @hide not to be exposed immediately as the implementation details may change
 */
","\android\speech\RecognizerResultsIntent.java"
"android.speech.RecognizerResultsIntent.EXTRA_VOICE_SEARCH_RESULT_URLS","true","false","false","true","true","String","""android.speech.extras.VOICE_SEARCH_RESULT_URLS""","","/**
 * The key to an extra {@link ArrayList} of {@link String}s that contains the search urls
 * to use, if available, for the recognition alternates provided in
 * {@link #EXTRA_VOICE_SEARCH_RESULT_STRINGS}. This list should always be the same size as the
 * one provided in {@link #EXTRA_VOICE_SEARCH_RESULT_STRINGS} - if a result cannot provide a
 * search url, that entry in this ArrayList should be <code>null</code>, and the implementor of
 * {@link #ACTION_VOICE_SEARCH_RESULTS} should execute a search of its own choosing,
 * based on the recognition result string.
 *
 * @hide for making public in a later release
 */
","\android\speech\RecognizerResultsIntent.java"
"android.speech.RecognizerResultsIntent.EXTRA_VOICE_SEARCH_RESULT_STRINGS","true","false","false","true","true","String","""android.speech.extras.VOICE_SEARCH_RESULT_STRINGS""","","/**
 * The key to an extra {@link ArrayList} of {@link String}s that contains the list of
 * recognition alternates from voice search, in order from highest to lowest confidence.
 *
 * @hide for making public in a later release
 */
","\android\speech\RecognizerResultsIntent.java"
"android.speech.RecognizerResultsIntent.EXTRA_VOICE_SEARCH_RESULT_HTML","true","false","false","true","true","String","""android.speech.extras.VOICE_SEARCH_RESULT_HTML""","","/**
 * The key to an extra {@link ArrayList} of {@link String}s that contains the html content to
 * use, if available, for the recognition alternates provided in
 * {@link #EXTRA_VOICE_SEARCH_RESULT_STRINGS}. This list should always be the same size as the
 * one provided in {@link #EXTRA_VOICE_SEARCH_RESULT_STRINGS} - if a result cannot provide
 * html, that entry in this list should be <code>null</code>, and the implementor of
 * {@link #ACTION_VOICE_SEARCH_RESULTS} should back off to the corresponding url provided in
 * {@link #EXTRA_VOICE_SEARCH_RESULT_URLS}, if available, or else should execute a search of
 * its own choosing, based on the recognition result string.
 *
 * Currently this html content should be expected in the form of a uri with scheme
 * {@link #URI_SCHEME_INLINE} for the Browser. In the future this may change to a ""content://""
 * uri or some other identifier. Anyone who reads this extra should confirm that a result is
 * in fact an ""inline:"" uri and back off to the urls or strings gracefully if it is not, thus
 * maintaining future backwards compatibility if this changes.
 *
 * @hide not to be exposed immediately as the implementation details may change
 */
","\android\speech\RecognizerResultsIntent.java"
"android.speech.RecognizerResultsIntent.URI_SCHEME_INLINE","true","false","false","true","true","String","""inline""","","/**
 * The scheme used currently for html content in {@link #EXTRA_VOICE_SEARCH_RESULT_HTML}.
 *
 * @hide not to be exposed immediately as the implementation details may change
 */
","\android\speech\RecognizerResultsIntent.java"
"android.speech.RecognizerResultsIntent.EXTRA_VOICE_SEARCH_RESULT_HTTP_HEADERS","true","false","false","true","true","String","""android.speech.extras.EXTRA_VOICE_SEARCH_RESULT_HTTP_HEADERS""","","/**
 * The key to an extra {@link ArrayList} of {@link Bundle}s that contains key/value pairs.
 * All the values and the keys are {@link String}s. Each key/value pair represents an extra HTTP
 * header. The keys can't be the standard HTTP headers as they are set by the WebView.
 *
 * A list of size 1 may be provided to apply the same HTTP headers to all web results. A
 * list of the same size as {@link #EXTRA_VOICE_SEARCH_RESULT_STRINGS} may be provided to
 * apply different HTTP headers to each different web result in the list. These headers will
 * only be used in the case that the url for a particular web result (from
 * {@link #EXTRA_VOICE_SEARCH_RESULT_URLS}) is loaded.
 *
 * @hide not to be exposed immediately as the implementation details may change
 */
","\android\speech\RecognizerResultsIntent.java"
"android.net.ThrottleManager.PERIOD_WEEK","true","false","false","true","true","int","3","","// {@hide}
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.EXTRA_CYCLE_WRITE","true","false","false","true","true","String","""cycleWrite""","","/**
 * contains a long of the number of bytes written in the cycle
 * {@hide}
 */
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_7DAY","true","false","false","true","true","int","4","","// @hide
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_60SEC","true","false","false","true","true","int","10","","// @hide
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.POLICY_CHANGED_ACTION","true","false","false","true","true","String","""android.net.thrott.POLICY_CHANGED_ACTION""","","/**
 * Broadcast on boot and whenever the settings change.
 * {@hide}
 */
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.mService","false","false","true","false","false","IThrottleManager","","","","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.THROTTLE_ACTION","true","false","false","true","true","String","""android.net.thrott.THROTTLE_ACTION""","","/**
 * Broadcast when the thottle level changes.
 * {@hide}
 */
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.EXTRA_CYCLE_END","true","false","false","true","true","String","""cycleEnd""","","/**
 * contains a long of the ms since 1970 used to init a calendar, etc for the end
 * of the cycle
 * {@hide}
 */
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.EXTRA_CYCLE_READ","true","false","false","true","true","String","""cycleRead""","","/**
 * The lookup key for a long for the read bytecount for this period.  Retrieve with
 * {@link android.content.Intent#getLongExtra(String)}.
 * {@hide}
 */
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.EXTRA_CYCLE_START","true","false","false","true","true","String","""cycleStart""","","/**
 * contains a long of the number of bytes read in the cycle
 * {@hide}
 */
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_YEAR","true","false","false","true","true","int","1","","// {@hide}
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_HOUR","true","false","false","true","true","int","7","","// @hide
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_SECOND","true","false","false","true","true","int","11","","// @hide
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_MONTH","true","false","false","true","true","int","2","","// {@hide}
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_24HOUR","true","false","false","true","true","int","6","","// @hide
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_MINUTE","true","false","false","true","true","int","9","","// @hide
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.DIRECTION_RX","true","false","false","true","true","int","1","","// {@hide}
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.DIRECTION_TX","true","false","false","true","true","int","0","","// {@hide}
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_60MIN","true","false","false","true","true","int","8","","// @hide
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.THROTTLE_POLL_ACTION","true","false","false","true","true","String","""android.net.thrott.POLL_ACTION""","","/**
 * Broadcast each polling period to indicate new data counts.
 *
 * Includes four extras:
 * EXTRA_CYCLE_READ - a long of the read bytecount for the current cycle
 * EXTRA_CYCLE_WRITE -a long of the write bytecount for the current cycle
 * EXTRA_CYLCE_START -a long of MS for the cycle start time
 * EXTRA_CYCLE_END   -a long of MS for the cycle stop time
 * {@hide}
 */
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_DAY","true","false","false","true","true","int","5","","// @hide
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.EXTRA_THROTTLE_LEVEL","true","false","false","true","true","String","""level""","","/**
 * int of the current bandwidth in TODO
 * {@hide}
 */
","\android\net\ThrottleManager.java"
"android.net.ThrottleManager.PERIOD_CYCLE","true","false","false","true","true","int","0","","// {@hide}
","\android\net\ThrottleManager.java"
"com.android.internal.widget.RotarySelector.mTriggered","false","false","true","false","false","boolean","false","","/**
 * Whether the user has triggered something (e.g dragging the left handle all the way over to
 * the right).
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.SPIN_ANIMATION_DURATION_MILLIS","false","false","false","true","true","int","800","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mDimpleDim","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mBackgroundHeight","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mOnDialTriggerListener","false","false","true","false","false","OnDialTriggerListener","","","// Listener for onDialTrigger() callbacks.
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.LEFT_HANDLE","true","false","false","true","true","int","1","","/**
 * The dial was triggered because the user grabbed the left handle,
 * and rotated the dial clockwise.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mBackground","false","false","true","false","false","Bitmap","","","// UI elements
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.EDGE_TRIGGER_DIP","false","false","true","true","true","int","100","","/**
 * How far from the edge of the screen the user must drag to trigger the event.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.OnDialTriggerListener.LEFT_HANDLE","true","false","false","true","true","int","1","","/**
 * The dial was triggered because the user grabbed the left handle,
 * and rotated the dial clockwise.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mRightHandleIcon","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mAnimatingDeltaXEnd","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mOrientation","false","false","true","false","false","int","","","/**
 * Either {@link #HORIZONTAL} or {@link #VERTICAL}.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mOuterRadius","false","false","true","false","true","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mRightHandleX","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.VISUAL_DEBUG","false","false","true","true","true","boolean","false","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mEdgeTriggerThresh","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mInnerRadius","false","false","true","false","true","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mLeftHandleX","false","false","true","false","false","int","","","// positions of the left and right handle
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.ROTARY_STROKE_WIDTH_DIP","false","false","false","true","true","int","83","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.RIGHT_HANDLE_GRABBED","true","false","false","true","true","int","2","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mMinimumVelocity","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mAnimating","false","false","true","false","false","boolean","false","","// the user lets go before triggering an action
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mDimpleSpacing","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mVibrator","false","false","true","false","false","Vibrator","","","// Vibration (haptic feedback)
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.SNAP_BACK_ANIMATION_DURATION_MILLIS","false","false","false","true","true","int","300","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.HORIZONTAL","true","false","false","true","true","int","0","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mInterpolator","false","false","true","false","false","DecelerateInterpolator","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mGrabbedState","false","false","true","false","false","int","NOTHING_GRABBED","","/**
 * If the user is currently dragging something.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mDensity","false","false","true","false","false","float","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.OnDialTriggerListener.RIGHT_HANDLE","true","false","false","true","true","int","2","","/**
 * The dial was triggered because the user grabbed the right handle,
 * and rotated the dial counterclockwise.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.RIGHT_HANDLE","true","false","false","true","true","int","2","","/**
 * The dial was triggered because the user grabbed the right handle,
 * and rotated the dial counterclockwise.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mAnimationStartTime","false","false","true","false","false","long","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mVelocityTracker","false","false","true","false","false","VelocityTracker","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.VIBRATE_SHORT","false","false","true","true","true","long","20","","// msec
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mArrowMatrix","false","false","false","false","true","Matrix","new Matrix()","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mDimpleWidth","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mArrowLongLeft","false","false","true","false","false","Bitmap","","","// Long arrow starting on the left, pointing clockwise
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mArrowShortLeftAndRight","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.LEFT_HANDLE_GRABBED","true","false","false","true","true","int","1","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mRotaryOffsetX","false","false","true","false","false","int","0","","// current offset of rotary widget along the x axis
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.OUTER_ROTARY_RADIUS_DIP","false","false","false","true","true","int","390","","/**
 * Dimensions of arc in background drawable.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mMaximumVelocity","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mBackgroundWidth","false","false","true","false","false","int","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mPaint","false","false","true","false","false","Paint","new Paint()","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.NOTHING_GRABBED","true","false","false","true","true","int","0","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.LOG_TAG","false","false","true","true","true","String","""RotarySelector""","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.EDGE_PADDING_DIP","false","false","true","true","true","int","9","","/**
 * How far inset the left and right circles should be
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mLeftHandleIcon","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mAnimationDuration","false","false","true","false","false","long","","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.DBG","false","false","true","true","true","boolean","false","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mDimplesOfFling","false","false","true","false","false","int","0","","/**
 * The number of dimples we are flinging when we do the ""spin"" animation.  Used to know when to
 * wrap the icons back around so they ""rotate back"" onto the screen.
 * @see #updateAnimation()
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mArrowLongRight","false","false","true","false","false","Bitmap","","","// Long arrow starting on the right, pointing CCW
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mAnimatingDeltaXStart","false","false","true","false","false","int","","","// the animation will interpolate from this delta to zero
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.VERTICAL","true","false","false","true","true","int","1","","","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mBgMatrix","false","false","false","false","true","Matrix","new Matrix()","","// used to rotate the background and arrow assets depending on orientation
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.VIBRATE_LONG","false","false","true","true","true","long","20","","// msec
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.ARROW_SCRUNCH_DIP","false","false","true","true","true","int","6","","/**
 * The drawable for the arrows need to be scrunched this many dips towards the rotary bg below
 * it.
 */
","\com\android\internal\widget\RotarySelector.java"
"com.android.internal.widget.RotarySelector.mDimple","false","false","true","false","false","Bitmap","","","","\com\android\internal\widget\RotarySelector.java"
"android.server.BluetoothA2dpService.mReceiver","false","false","true","false","true","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        String action = intent.getAction();
        BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
        if (action.equals(BluetoothAdapter.ACTION_STATE_CHANGED)) {
            int state = intent.getIntExtra(BluetoothAdapter.EXTRA_STATE, BluetoothAdapter.ERROR);
            switch(state) {
                case BluetoothAdapter.STATE_ON:
                    onBluetoothEnable();
                    break;
                case BluetoothAdapter.STATE_TURNING_OFF:
                    onBluetoothDisable();
                    break;
            }
        } else if (action.equals(BluetoothDevice.ACTION_BOND_STATE_CHANGED)) {
            int bondState = intent.getIntExtra(BluetoothDevice.EXTRA_BOND_STATE, BluetoothDevice.ERROR);
            switch(bondState) {
                case BluetoothDevice.BOND_BONDED:
                    if (getSinkPriority(device) == BluetoothA2dp.PRIORITY_UNDEFINED) {
                        setSinkPriority(device, BluetoothA2dp.PRIORITY_ON);
                    }
                    break;
                case BluetoothDevice.BOND_NONE:
                    setSinkPriority(device, BluetoothA2dp.PRIORITY_UNDEFINED);
                    break;
            }
        } else if (action.equals(BluetoothDevice.ACTION_ACL_CONNECTED)) {
            if (getSinkPriority(device) == BluetoothA2dp.PRIORITY_AUTO_CONNECT && isSinkDevice(device)) {
                // This device is a preferred sink. Make an A2DP connection
                // after a delay. We delay to avoid connection collisions,
                // and to give other profiles such as HFP a chance to
                // connect first.
                Message msg = Message.obtain(mHandler, MESSAGE_CONNECT_TO, device);
                mHandler.sendMessageDelayed(msg, 6000);
            }
        } else if (action.equals(BluetoothDevice.ACTION_ACL_DISCONNECTED)) {
            synchronized (this) {
                if (mAudioDevices.containsKey(device)) {
                    int state = mAudioDevices.get(device);
                    handleSinkStateChange(device, state, BluetoothA2dp.STATE_DISCONNECTED);
                }
            }
        } else if (action.equals(AudioManager.VOLUME_CHANGED_ACTION)) {
            int streamType = intent.getIntExtra(AudioManager.EXTRA_VOLUME_STREAM_TYPE, -1);
            if (streamType == AudioManager.STREAM_MUSIC) {
                BluetoothDevice[] sinks = getConnectedSinks();
                if (sinks.length != 0 && isPhoneDocked(sinks[0])) {
                    String address = sinks[0].getAddress();
                    int newVolLevel = intent.getIntExtra(AudioManager.EXTRA_VOLUME_STREAM_VALUE, 0);
                    int oldVolLevel = intent.getIntExtra(AudioManager.EXTRA_PREV_VOLUME_STREAM_VALUE, 0);
                    String path = mBluetoothService.getObjectPathFromAddress(address);
                    if (newVolLevel > oldVolLevel) {
                        avrcpVolumeUpNative(path);
                    } else if (newVolLevel < oldVolLevel) {
                        avrcpVolumeDownNative(path);
                    }
                }
            }
        }
    }
}","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mAudioDevices","false","false","true","false","false","HashMap<BluetoothDevice,Integer>","","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.SINK_STATE_CONNECTING","false","false","true","true","true","String","""connecting""","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.BLUETOOTH_A2DP_SERVICE","true","false","false","true","true","String","""bluetooth_a2dp""","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.BLUETOOTH_ENABLED","false","false","true","true","true","String","""bluetooth_enabled""","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.BLUETOOTH_ADMIN_PERM","false","false","true","true","true","String","android.Manifest.permission.BLUETOOTH_ADMIN","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.SINK_STATE_DISCONNECTED","false","false","true","true","true","String","""disconnected""","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mSinkCount","false","false","true","true","false","int","","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.TAG","false","false","true","true","true","String","""BluetoothA2dpService""","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.DBG","false","false","true","true","true","boolean","true","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mAdapter","false","false","true","false","true","BluetoothAdapter","","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.SINK_STATE_CONNECTED","false","false","true","true","true","String","""connected""","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mIntentFilter","false","false","true","false","true","IntentFilter","","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mBluetoothService","false","false","true","false","true","BluetoothService","","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mAudioManager","false","false","true","false","true","AudioManager","","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mContext","false","false","true","false","true","Context","","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mTargetA2dpState","false","false","true","false","false","int","","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.SINK_STATE_PLAYING","false","false","true","true","true","String","""playing""","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.PROPERTY_STATE","false","false","true","true","true","String","""State""","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.MESSAGE_CONNECT_TO","false","false","true","true","true","int","1","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.mHandler","false","false","true","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        switch(msg.what) {
            case MESSAGE_CONNECT_TO:
                BluetoothDevice device = (BluetoothDevice) msg.obj;
                // nothing is currently connected
                if (mBluetoothService.isEnabled() && getSinkPriority(device) == BluetoothA2dp.PRIORITY_AUTO_CONNECT && lookupSinksMatchingStates(new int[] { BluetoothA2dp.STATE_CONNECTING, BluetoothA2dp.STATE_CONNECTED, BluetoothA2dp.STATE_PLAYING, BluetoothA2dp.STATE_DISCONNECTING }).size() == 0) {
                    log(""Auto-connecting A2DP to sink "" + device);
                    connectSink(device);
                }
                break;
        }
    }
}","","","\android\server\BluetoothA2dpService.java"
"android.server.BluetoothA2dpService.BLUETOOTH_PERM","false","false","true","true","true","String","android.Manifest.permission.BLUETOOTH","","","\android\server\BluetoothA2dpService.java"
"android.os.FileUtils.blksize","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.mtime","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileStatus.size","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileStatus.ctime","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IXUSR","true","false","false","true","true","int","00100","","","\android\os\FileUtils.java"
"android.os.FileStatus.blocks","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileStatus.blksize","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.size","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileStatus.gid","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileStatus.ino","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IROTH","true","false","false","true","true","int","00004","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IXGRP","true","false","false","true","true","int","00010","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IWGRP","true","false","false","true","true","int","00020","","","\android\os\FileUtils.java"
"android.os.FileUtils.gid","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileStatus.dev","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.blocks","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileStatus.uid","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IWUSR","true","false","false","true","true","int","00200","","","\android\os\FileUtils.java"
"android.os.FileStatus.mtime","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileStatus.rdev","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.ino","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.dev","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileStatus.nlink","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.uid","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.atime","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IWOTH","true","false","false","true","true","int","00002","","","\android\os\FileUtils.java"
"android.os.FileUtils.SAFE_FILENAME_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""[\\w%+,./=_-]+"")","","/**
 * Regular expression for safe filenames: no spaces or metacharacters
 */
","\android\os\FileUtils.java"
"android.os.FileUtils.nlink","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileStatus.atime","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileUtils.mode","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IRGRP","true","false","false","true","true","int","00040","","","\android\os\FileUtils.java"
"android.os.FileUtils.ctime","true","false","false","false","false","long","","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IRUSR","true","false","false","true","true","int","00400","","","\android\os\FileUtils.java"
"android.os.FileUtils.rdev","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IRWXU","true","false","false","true","true","int","00700","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IRWXO","true","false","false","true","true","int","00007","","","\android\os\FileUtils.java"
"android.os.FileStatus.mode","true","false","false","false","false","int","","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IRWXG","true","false","false","true","true","int","00070","","","\android\os\FileUtils.java"
"android.os.FileUtils.S_IXOTH","true","false","false","true","true","int","00001","","","\android\os\FileUtils.java"
"android.bluetooth.AtParser.TYPE_READ","false","false","true","true","true","int","1","","// AT+FOO?
","\android\bluetooth\AtParser.java"
"android.bluetooth.AtParser.TYPE_SET","false","false","true","true","true","int","2","","// AT+FOO=
","\android\bluetooth\AtParser.java"
"android.bluetooth.AtParser.TYPE_TEST","false","false","true","true","true","int","3","","// AT+FOO=?
","\android\bluetooth\AtParser.java"
"android.bluetooth.AtParser.mLastInput","false","false","true","false","false","String","","","// for ""A/"" (repeat last command) support
","\android\bluetooth\AtParser.java"
"android.bluetooth.AtParser.TYPE_ACTION","false","false","true","true","true","int","0","","// AT+FOO
","\android\bluetooth\AtParser.java"
"android.bluetooth.AtParser.mBasicHandlers","false","false","true","false","false","HashMap<Character,AtCommandHandler>","","","","\android\bluetooth\AtParser.java"
"android.bluetooth.AtParser.mExtHandlers","false","false","true","false","false","HashMap<String,AtCommandHandler>","","","","\android\bluetooth\AtParser.java"
"android.util.LongSparseArray.mValues","false","false","true","false","false","Object","","","","\android\util\LongSparseArray.java"
"android.util.LongSparseArray.mKeys","false","false","true","false","false","long","","","","\android\util\LongSparseArray.java"
"android.util.LongSparseArray.DELETED","false","false","true","true","true","Object","new Object()","","","\android\util\LongSparseArray.java"
"android.util.LongSparseArray.mGarbage","false","false","true","false","false","boolean","false","","","\android\util\LongSparseArray.java"
"android.util.LongSparseArray.mSize","false","false","true","false","false","int","","","","\android\util\LongSparseArray.java"
"com.android.internal.backup.LocalTransport.TRANSPORT_DIR_NAME","false","false","true","true","true","String","""com.android.internal.backup.LocalTransport""","","","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.backup.LocalTransport.mContext","false","false","true","false","false","Context","","","","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.backup.LocalTransport.RESTORE_TOKEN","false","false","true","true","true","long","1","","// The single hardcoded restore set always has the same (nonzero!) token
","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.backup.LocalTransport.mRestorePackage","false","false","true","false","false","int","-1","","// Index into mRestorePackages
","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.backup.LocalTransport.mDataDir","false","false","true","false","false","File","new File(Environment.getDownloadCacheDirectory(), ""backup"")","","","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.backup.LocalTransport.mPackageManager","false","false","true","false","false","PackageManager","","","","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.backup.LocalTransport.DEBUG","false","false","true","true","true","boolean","true","","","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.backup.LocalTransport.mRestorePackages","false","false","true","false","false","PackageInfo","null","","","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.backup.LocalTransport.TAG","false","false","true","true","true","String","""LocalTransport""","","","\com\android\internal\backup\LocalTransport.java"
"com.android.internal.view.menu.MenuBuilder.mItems","false","false","true","false","false","ArrayList<MenuItemImpl>","","","/**
 * Contains all of the items for this menu
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mOptionalIconsVisible","false","false","true","false","false","boolean","false","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuAdapter.mMenuType","false","false","true","false","false","int","","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mShortcutsVisible","false","false","true","false","false","boolean","","","/**
 * Whether the shortcuts should be visible on menus. Use isShortcutsVisible()
 * instead of accessing this directly.
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.VIEWS_TAG","false","false","true","true","true","String","""android:views""","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mPreventDispatchingItemsChanged","false","false","true","false","false","boolean","false","","/**
 * Prevents onItemsChanged from doing its junk, useful for batching commands
 * that may individually call onItemsChanged.
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mVisibleItems","false","false","true","false","false","ArrayList<MenuItemImpl>","","","/**
 * Contains only the items that are currently visible.  This will be created/refreshed from
 * {@link #getVisibleItems()}
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.LAYOUT_RES_FOR_TYPE","false","false","false","true","true","int","new int[] { com.android.internal.R.layout.icon_menu_layout, com.android.internal.R.layout.expanded_menu_layout, 0 }","","// Order must be the same order as the TYPE_*
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mInflater","false","false","true","false","false","LayoutInflater","","","/**
 * The layout inflater that uses the menu type's theme
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mHeaderIcon","false","false","false","false","false","Drawable","","","/**
 * Header icon for menu types that have a header and support icons (context)
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mMenuType","false","false","true","false","false","int","","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.ITEM_LAYOUT_RES_FOR_TYPE","false","false","false","true","true","int","new int[] { com.android.internal.R.layout.icon_menu_item_layout, com.android.internal.R.layout.list_menu_item_layout, com.android.internal.R.layout.list_menu_item_layout }","","// Order must be the same order as the TYPE_*
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mHeaderTitle","false","false","false","false","false","CharSequence","","","/**
 * Header title for menu types that have a header (context and submenus)
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.THEME_RES_FOR_TYPE","false","false","false","true","true","int","new int[] { com.android.internal.R.style.Theme_IconMenu, com.android.internal.R.style.Theme_ExpandedMenu, 0 }","","// Order must be the same order as the TYPE_*
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.TYPE_EXPANDED","true","false","false","true","true","int","1","","/**
 * The menu type that represents the expanded menu view
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mResources","false","false","true","false","true","Resources","","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mCallback","false","false","true","false","false","Callback","","","/**
 * Callback that will receive the various menu-related events generated by
 * this class. Use getCallback to get a reference to the callback.
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuType.mMenuType","false","false","true","false","false","int","","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.sCategoryToOrder","false","false","true","true","true","int","new int[] { 1, /* No category */
4, /* CONTAINER */
5, /* SYSTEM */
3, /* SECONDARY */
2, /* ALTERNATIVE */
0 }","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mMenuTypes","false","false","true","false","false","MenuType","","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mIsVisibleItemsStale","false","false","true","false","false","boolean","","","/**
 * Whether or not the items (or any one item's shown state) has changed since it was last
 * fetched from {@link #getVisibleItems()}
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuType.mMenuView","false","false","true","false","false","WeakReference<MenuView>","","","/**
 * The lazily loaded {@link MenuView}
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mMenuView","false","false","true","false","false","WeakReference<MenuView>","","","/**
 * The lazily loaded {@link MenuView}
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mFrozenViewStates","false","false","true","false","false","SparseArray<Parcelable>","","","/**
 * Contains the state of the View hierarchy for all menu views when the menu
 * was frozen.
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.NUM_TYPES","true","false","false","true","true","int","3","","/**
 * The number of different menu types
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.TYPE_ICON","true","false","false","true","true","int","0","","/**
 * The menu type that represents the icon menu view
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mCurrentMenuInfo","false","false","true","false","false","ContextMenuInfo","","","/**
 * Current use case is Context Menus: As Views populate the context menu, each one has
 * extra information that should be passed along.  This is the current menu info that
 * should be set on all items added to this menu.
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mHeaderView","false","false","false","false","false","View","","","/**
 * Header custom view for menu types that have a header and support custom views (context)
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.TYPE_DIALOG","true","false","false","true","true","int","2","","/**
 * The menu type that represents a menu dialog. Examples are context and sub
 * menus. This menu type will not have a corresponding MenuView, but it will
 * have an ItemView.
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.LOGTAG","false","false","true","true","true","String","""MenuBuilder""","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mContext","false","false","true","false","true","Context","","","","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuType.mInflater","false","false","true","false","false","LayoutInflater","","","/**
 * The layout inflater that uses the menu type's theme
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.view.menu.MenuBuilder.mQwertyMode","false","false","true","false","false","boolean","","","/**
 * Whether the shortcuts should be qwerty-accessible. Use isQwertyMode()
 * instead of accessing this directly.
 */
","\com\android\internal\view\menu\MenuBuilder.java"
"com.android.internal.policy.PolicyManager.sPolicy","false","false","true","true","true","IPolicy","","","","\com\android\internal\policy\PolicyManager.java"
"com.android.internal.policy.PolicyManager.POLICY_IMPL_CLASS_NAME","false","false","true","true","true","String","""com.android.internal.policy.impl.Policy""","","","\com\android\internal\policy\PolicyManager.java"
"android.webkit.WebViewDatabase.PASSWORD_USERNAME_COL","false","false","true","true","true","String","""username""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheCrossDomainColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.TABLE_FORMDATA_ID","false","false","true","true","true","int","3","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheETagColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.COOKIES_SECURE_COL","false","false","true","true","true","String","""secure""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_CONTENTLENGTH_COL","false","false","true","true","true","String","""contentlength""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.HTTPAUTH_USERNAME_COL","false","false","true","true","true","String","""username""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheMimeTypeColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheContentDispositionColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.TABLE_PASSWORD_ID","false","false","true","true","true","int","1","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_CROSSDOMAIN_COL","false","false","true","true","true","String","""crossdomain""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheExpiresColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.COOKIES_VALUE_COL","false","false","true","true","true","String","""value""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_ENCODING_COL","false","false","true","true","true","String","""encoding""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheExpiresStringColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.FORMDATA_VALUE_COL","false","false","true","true","true","String","""value""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.FORMDATA_URLID_COL","false","false","true","true","true","String","""urlid""","","// column id strings for ""formdata"" table
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.FORMDATA_NAME_COL","false","false","true","true","true","String","""name""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mTableNames","false","false","true","true","true","String","{ ""cookies"", ""password"", ""formurl"", ""formdata"", ""httpauth"" }","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.ID_COL","false","false","true","true","true","String","""_id""","","// column id strings for ""_id"" which can be used by any table
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheLocationColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheUrlColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheDatabase","false","false","true","true","false","SQLiteDatabase","null","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.TABLE_COOKIES_ID","false","false","true","true","true","int","0","","// Table ids (they are index to mTableNames)
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_EXPIRES_COL","false","false","true","true","true","String","""expires""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.DATABASE_FILE","false","false","true","true","true","String","""webview.db""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheHttpStatusColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mDatabase","false","false","true","true","false","SQLiteDatabase","null","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_EXPIRES_STRING_COL","false","false","true","true","true","String","""expiresstring""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mFormLock","false","false","true","false","true","Object","new Object()","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheEncodingColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.HTTPAUTH_REALM_COL","false","false","true","true","true","String","""realm""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCookieLock","false","false","true","false","true","Object","new Object()","","// synchronize locks
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.HTTPAUTH_PASSWORD_COL","false","false","true","true","true","String","""password""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.TABLE_HTTPAUTH_ID","false","false","true","true","true","int","4","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_LOCATION_COL","false","false","true","true","true","String","""location""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.ID_PROJECTION","false","false","true","true","true","String","new String[] { ""_id"" }","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.COOKIES_DOMAIN_COL","false","false","true","true","true","String","""domain""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mHttpAuthLock","false","false","true","false","true","Object","new Object()","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_CONTENTDISPOSITION_COL","false","false","true","true","true","String","""contentdisposition""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mInstance","false","false","true","true","false","WebViewDatabase","null","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.PASSWORD_HOST_COL","false","false","true","true","true","String","""host""","","// column id strings for ""password"" table
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.PASSWORD_PASSWORD_COL","false","false","true","true","true","String","""password""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_DATABASE_FILE","false","false","true","true","true","String","""webviewCache.db""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_LAST_MODIFY_COL","false","false","true","true","true","String","""lastmodify""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_MIMETYPE_COL","false","false","true","true","true","String","""mimetype""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheLastModifyColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_HTTP_STATUS_COL","false","false","true","true","true","String","""httpstatus""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.COOKIES_PATH_COL","false","false","true","true","true","String","""path""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_URL_COL","false","false","true","true","true","String","""url""","","// column id strings for ""cache"" table
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheTransactionRefcount","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mPasswordLock","false","false","true","false","true","Object","new Object()","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheFilePathColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.HTTPAUTH_HOST_COL","false","false","true","true","true","String","""host""","","// column id strings for ""httpauth"" table
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheContentLengthColIndex","false","false","true","true","false","int","","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.COOKIES_EXPIRES_COL","false","false","true","true","true","String","""expires""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_FILE_PATH_COL","false","false","true","true","true","String","""filepath""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.COOKIES_NAME_COL","false","false","true","true","true","String","""name""","","// column id strings for ""cookies"" table
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_DATABASE_VERSION","false","false","true","true","true","int","4","","// 9 -> 10 Update httpauth table UNIQUE
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.LOGTAG","false","true","false","true","true","String","""webviewdatabase""","","// log tag
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.CACHE_ETAG_COL","false","false","true","true","true","String","""etag""","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.mCacheInserter","false","false","true","true","false","DatabaseUtils.InsertHelper","","","// use InsertHelper to improve insert performance by 40%
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.FORMURL_URL_COL","false","false","true","true","true","String","""url""","","// column id strings for ""formurl"" table
","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.DATABASE_VERSION","false","false","true","true","true","int","10","","","\android\webkit\WebViewDatabase.java"
"android.webkit.WebViewDatabase.TABLE_FORMURL_ID","false","false","true","true","true","int","2","","","\android\webkit\WebViewDatabase.java"
"android.content.SyncQueue.mOperationsMap","false","false","true","false","true","HashMap<String,SyncOperation>","Maps.newHashMap()","","// quick lookup of an enqueued SyncOperation.
","\android\content\SyncQueue.java"
"android.content.SyncQueue.TAG","false","false","true","true","true","String","""SyncManager""","","","\android\content\SyncQueue.java"
"android.content.SyncQueue.mSyncStorageEngine","false","false","true","false","false","SyncStorageEngine","","","","\android\content\SyncQueue.java"
"android.os.SystemProperties.PROP_VALUE_MAX","true","false","false","true","true","int","91","","","\android\os\SystemProperties.java"
"android.os.SystemProperties.PROP_NAME_MAX","true","false","false","true","true","int","31","","","\android\os\SystemProperties.java"
"android.widget.Chronometer.mOnChronometerTickListener","false","false","true","false","false","OnChronometerTickListener","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mFormatBuilder","false","false","true","false","false","StringBuilder","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mLogged","false","false","true","false","false","boolean","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mFormat","false","false","true","false","false","String","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mFormatterLocale","false","false","true","false","false","Locale","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mVisible","false","false","true","false","false","boolean","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mRecycle","false","false","true","false","false","StringBuilder","new StringBuilder(8)","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mStarted","false","false","true","false","false","boolean","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mRunning","false","false","true","false","false","boolean","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mHandler","false","false","true","false","false","Handler","new Handler() {

    public void handleMessage(Message m) {
        if (mRunning) {
            updateText(SystemClock.elapsedRealtime());
            dispatchChronometerTick();
            sendMessageDelayed(Message.obtain(this, TICK_WHAT), 1000);
        }
    }
}","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mBase","false","false","true","false","false","long","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mFormatterArgs","false","false","true","false","false","Object","new Object[1]","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.mFormatter","false","false","true","false","false","Formatter","","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.TAG","false","false","true","true","true","String","""Chronometer""","","","\android\widget\Chronometer.java"
"android.widget.Chronometer.TICK_WHAT","false","false","true","true","true","int","2","","","\android\widget\Chronometer.java"
"android.util.SparseBooleanArray.mSize","false","false","true","false","false","int","","","","\android\util\SparseBooleanArray.java"
"android.util.SparseBooleanArray.mKeys","false","false","true","false","false","int","","","","\android\util\SparseBooleanArray.java"
"android.util.SparseBooleanArray.mValues","false","false","true","false","false","boolean","","","","\android\util\SparseBooleanArray.java"
"android.database.sqlite.SQLiteCursor.mCursorState","false","false","true","false","false","int","0","","","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mMaxRead","false","false","true","false","false","int","Integer.MAX_VALUE","","/**
 * mMaxRead is the max items that each cursor window reads
 * default to a very high value
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mColumnNameMap","false","false","true","false","false","Map<String,Integer>","","","/**
 * A mapping of column names to column indices, to speed up lookups
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.TAG","false","false","false","true","true","String","""Cursor""","","","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mCount","false","false","true","false","false","int","NO_COUNT","","/**
 * The number of rows in the cursor
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mStackTrace","false","false","true","false","false","Throwable","","","/**
 * Used to find out where a cursor was allocated in case it never got released.
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mThreadState","false","false","true","false","true","int","","","","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.QueryThread.mThreadState","false","false","true","false","true","int","","","","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mColumns","false","false","true","false","false","String","","","/**
 * The names of the columns in the rows
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mDatabase","false","false","true","false","false","SQLiteDatabase","","","/**
 * The database the cursor was created from
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.NO_COUNT","false","false","false","true","true","int","-1","","","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mNotificationHandler","false","true","false","false","false","MainThreadNotificationHandler","","","/**
 * @hide
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mQuery","false","false","true","false","false","SQLiteQuery","","","/**
 * The query object for the cursor
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mPendingData","false","false","true","false","false","boolean","false","","","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mInitialRead","false","false","true","false","false","int","Integer.MAX_VALUE","","","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mEditTable","false","false","true","false","false","String","","","/**
 * The name of the table to edit
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mDriver","false","false","true","false","false","SQLiteCursorDriver","","","/**
 * The compiled query this cursor came from
 */
","\android\database\sqlite\SQLiteCursor.java"
"android.database.sqlite.SQLiteCursor.mLock","false","false","true","false","false","ReentrantLock","null","","","\android\database\sqlite\SQLiteCursor.java"
"android.database.CursorWindow.mStartPos","false","false","true","false","false","int","","","","\android\database\CursorWindow.java"
"android.database.CursorWindow.nWindow","false","false","true","false","false","int","","@SuppressWarnings(""unused"")","/**
 * The pointer to the native window class
 */
","\android\database\CursorWindow.java"
"android.database.CursorWindow.CREATOR","true","false","false","true","true","Parcelable.Creator<CursorWindow>","new Parcelable.Creator<CursorWindow>() {

    public CursorWindow createFromParcel(Parcel source) {
        return new CursorWindow(source);
    }

    public CursorWindow[] newArray(int size) {
        return new CursorWindow[size];
    }
}","","","\android\database\CursorWindow.java"
"android.text.method.ScrollingMovementMethod.sInstance","false","false","true","true","false","ScrollingMovementMethod","","","","\android\text\method\ScrollingMovementMethod.java"
"android.bluetooth.BluetoothA2dp.STATE_PLAYING","true","false","false","true","true","int","4","","/**
 * Playing implies connected
 */
","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.EXTRA_SINK_STATE","true","false","false","true","true","String","""android.bluetooth.a2dp.extra.SINK_STATE""","","/**
 * int extra for ACTION_SINK_STATE_CHANGED
 */
","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.STATE_DISCONNECTED","true","false","false","true","true","int","0","","","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.DBG","false","false","true","true","true","boolean","false","","","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.mContext","false","false","true","false","true","Context","","","","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.STATE_DISCONNECTING","true","false","false","true","true","int","3","","","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.STATE_CONNECTING","true","false","false","true","true","int","1","","","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.TAG","false","false","true","true","true","String","""BluetoothA2dp""","","","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.PRIORITY_UNDEFINED","true","false","false","true","true","int","-1","","/**
 * Default priority when not set or when the device is unpaired
 */
","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.ACTION_SINK_STATE_CHANGED","true","false","false","true","true","String","""android.bluetooth.a2dp.action.SINK_STATE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Indicates the state of an A2DP audio sink has changed.
 * This intent will always contain EXTRA_SINK_STATE,
 * EXTRA_PREVIOUS_SINK_STATE and BluetoothDevice.EXTRA_DEVICE
 * extras.
 */
","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.EXTRA_PREVIOUS_SINK_STATE","true","false","false","true","true","String","""android.bluetooth.a2dp.extra.PREVIOUS_SINK_STATE""","","/**
 * int extra for ACTION_SINK_STATE_CHANGED
 */
","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.PRIORITY_ON","true","false","false","true","true","int","100","","/**
 * Default priority for a2dp devices that should allow incoming
 * connections
 */
","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.STATE_CONNECTED","true","false","false","true","true","int","2","","","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.PRIORITY_OFF","true","false","false","true","true","int","0","","/**
 * Default priority for a2dp devices that should not allow incoming
 * connections
 */
","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.PRIORITY_AUTO_CONNECT","true","false","false","true","true","int","1000","","/**
 * Default priority for a2dp devices that we try to auto-connect
 * and allow incoming connections
 */
","\android\bluetooth\BluetoothA2dp.java"
"android.bluetooth.BluetoothA2dp.mService","false","false","true","false","true","IBluetoothA2dp","","","","\android\bluetooth\BluetoothA2dp.java"
"android.text.method.Visible.mText","false","false","true","false","false","Spannable","","","","\android\text\method\PasswordTransformationMethod.java"
"android.text.method.PasswordCharSequence.mSource","false","false","true","false","false","CharSequence","","","","\android\text\method\PasswordTransformationMethod.java"
"android.text.method.PasswordTransformationMethod.mText","false","false","true","false","false","Spannable","","","","\android\text\method\PasswordTransformationMethod.java"
"android.text.method.PasswordTransformationMethod.mTransformer","false","false","true","false","false","PasswordTransformationMethod","","","","\android\text\method\PasswordTransformationMethod.java"
"android.text.method.PasswordTransformationMethod.sInstance","false","false","true","true","false","PasswordTransformationMethod","","","","\android\text\method\PasswordTransformationMethod.java"
"android.text.method.Visible.mTransformer","false","false","true","false","false","PasswordTransformationMethod","","","","\android\text\method\PasswordTransformationMethod.java"
"android.text.method.PasswordTransformationMethod.mSource","false","false","true","false","false","CharSequence","","","","\android\text\method\PasswordTransformationMethod.java"
"android.text.method.PasswordTransformationMethod.DOT","false","false","true","true","false","char","'\u2022'","","","\android\text\method\PasswordTransformationMethod.java"
"android.inputmethodservice.IInputMethodSessionWrapper.mInputMethodSession","false","false","false","false","true","InputMethodSession","","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DEBUG","false","false","true","true","true","boolean","false","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_FINISH_INPUT","false","false","true","true","true","int","60","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.mCb","false","false","false","false","true","IInputMethodCallback","","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_DISPLAY_COMPLETIONS","false","false","true","true","true","int","65","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.InputMethodEventCallbackWrapper.mCb","false","false","false","false","true","IInputMethodCallback","","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_UPDATE_CURSOR","false","false","true","true","true","int","95","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_APP_PRIVATE_COMMAND","false","false","true","true","true","int","100","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_DISPATCH_KEY_EVENT","false","false","true","true","true","int","70","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_DISPATCH_TRACKBALL_EVENT","false","false","true","true","true","int","80","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.TAG","false","false","true","true","true","String","""InputMethodWrapper""","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_TOGGLE_SOFT_INPUT","false","false","true","true","true","int","105","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_UPDATE_SELECTION","false","false","true","true","true","int","90","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.mCaller","false","false","false","false","true","HandlerCaller","","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.inputmethodservice.IInputMethodSessionWrapper.DO_UPDATE_EXTRACTED_TEXT","false","false","true","true","true","int","67","","","\android\inputmethodservice\IInputMethodSessionWrapper.java"
"android.text.Spannable.sInstance","false","false","true","true","false","Spannable.Factory","new Spannable.Factory()","","","\android\text\Spannable.java"
"android.text.Factory.sInstance","false","false","true","true","false","Spannable.Factory","new Spannable.Factory()","","","\android\text\Spannable.java"
"com.android.internal.http.multipart.StringPart.LOG","false","false","true","true","true","Log","LogFactory.getLog(StringPart.class)","","/**
 * Log object for this class.
 */
","\com\android\internal\http\multipart\StringPart.java"
"com.android.internal.http.multipart.StringPart.DEFAULT_TRANSFER_ENCODING","true","false","false","true","true","String","""8bit""","","/**
 * Default transfer encoding of string parameters
 */
","\com\android\internal\http\multipart\StringPart.java"
"com.android.internal.http.multipart.StringPart.DEFAULT_CONTENT_TYPE","true","false","false","true","true","String","""text/plain""","","/**
 * Default content encoding of string parameters.
 */
","\com\android\internal\http\multipart\StringPart.java"
"com.android.internal.http.multipart.StringPart.value","false","false","true","false","false","String","","","/**
 * The String value of this part.
 */
","\com\android\internal\http\multipart\StringPart.java"
"com.android.internal.http.multipart.StringPart.DEFAULT_CHARSET","true","false","false","true","true","String","""US-ASCII""","","/**
 * Default charset of string parameters
 */
","\com\android\internal\http\multipart\StringPart.java"
"com.android.internal.http.multipart.StringPart.content","false","false","true","false","false","byte","","","/**
 * Contents of this StringPart.
 */
","\com\android\internal\http\multipart\StringPart.java"
"com.android.internal.os.AtomicFile.mBackupName","false","false","true","false","true","File","","","","\com\android\internal\os\AtomicFile.java"
"com.android.internal.os.AtomicFile.mBaseName","false","false","true","false","true","File","","","","\com\android\internal\os\AtomicFile.java"
"android.text.style.IconMarginSpan.mPad","false","false","true","false","false","int","","","","\android\text\style\IconMarginSpan.java"
"android.text.style.IconMarginSpan.mBitmap","false","false","true","false","false","Bitmap","","","","\android\text\style\IconMarginSpan.java"
"android.text.TextPaint.linkColor","true","false","false","false","false","int","","","","\android\text\TextPaint.java"
"android.text.TextPaint.baselineShift","true","false","false","false","false","int","","","","\android\text\TextPaint.java"
"android.text.TextPaint.density","true","false","false","false","false","float","1.0f","","","\android\text\TextPaint.java"
"android.text.TextPaint.drawableState","true","false","false","false","false","int","","","","\android\text\TextPaint.java"
"android.text.TextPaint.bgColor","true","false","false","false","false","int","","","","\android\text\TextPaint.java"
"android.database.ContentObserverProxy.mRemote","false","true","false","false","false","IContentObserver","","","","\android\database\CursorToBulkCursorAdaptor.java"
"android.database.CursorToBulkCursorAdaptor.mRemote","false","true","false","false","false","IContentObserver","","","","\android\database\CursorToBulkCursorAdaptor.java"
"android.database.CursorToBulkCursorAdaptor.mReadOnly","false","false","true","false","true","boolean","","","","\android\database\CursorToBulkCursorAdaptor.java"
"android.database.CursorToBulkCursorAdaptor.mWindow","false","false","true","false","false","CursorWindow","","","","\android\database\CursorToBulkCursorAdaptor.java"
"android.database.CursorToBulkCursorAdaptor.mObserver","false","false","true","false","false","ContentObserverProxy","","","","\android\database\CursorToBulkCursorAdaptor.java"
"android.database.CursorToBulkCursorAdaptor.TAG","false","false","true","true","true","String","""Cursor""","","","\android\database\CursorToBulkCursorAdaptor.java"
"android.database.CursorToBulkCursorAdaptor.mCursor","false","false","true","false","true","CrossProcessCursor","","","","\android\database\CursorToBulkCursorAdaptor.java"
"android.database.CursorToBulkCursorAdaptor.mProviderName","false","false","true","false","true","String","","","","\android\database\CursorToBulkCursorAdaptor.java"
"android.view.VelocityTracker.DEBUG","false","false","false","true","true","boolean","false","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.mLastTouch","false","false","false","false","false","int","","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.mNext","false","false","true","false","false","VelocityTracker","","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.NUM_PAST","false","false","false","true","true","int","10","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.sPool","false","false","true","true","true","Pool<VelocityTracker>","Pools.synchronizedPool(Pools.finitePool(new PoolableManager<VelocityTracker>() {

    public VelocityTracker newInstance() {
        return new VelocityTracker();
    }

    public void onAcquired(VelocityTracker element) {
        element.clear();
    }

    public void onReleased(VelocityTracker element) {
    }
}, 2))","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.mYVelocity","false","false","false","false","false","float","new float[MotionEvent.BASE_AVAIL_POINTERS]","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.mPastTime","false","false","false","false","true","long","new long[MotionEvent.BASE_AVAIL_POINTERS][NUM_PAST]","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.mPool","false","false","false","true","true","VelocityTracker","new VelocityTracker[1]","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.TAG","false","false","false","true","true","String","""VelocityTracker""","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.mPastY","false","false","false","false","true","float","new float[MotionEvent.BASE_AVAIL_POINTERS][NUM_PAST]","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.mPastX","false","false","false","false","true","float","new float[MotionEvent.BASE_AVAIL_POINTERS][NUM_PAST]","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.localLOGV","false","false","false","true","true","boolean","DEBUG || Config.LOGV","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.mXVelocity","false","false","false","false","false","float","new float[MotionEvent.BASE_AVAIL_POINTERS]","","","\android\view\VelocityTracker.java"
"android.view.VelocityTracker.LONGEST_PAST_TIME","false","false","false","true","true","int","200","","","\android\view\VelocityTracker.java"
"android.app.LocalActivityRecord.curState","false","false","false","false","false","int","RESTORED","","// Current state the activity is in.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityRecord.activity","false","false","false","false","false","Activity","","","// Currently instantiated activity.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.activityInfo","false","false","false","false","false","ActivityInfo","","","// Package manager info about activity.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityRecord.window","false","false","false","false","false","Window","","","// Activity's top-level window.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.mSingleMode","false","false","true","false","false","boolean","","","/**
 * True if only one activity can be resumed at a time
 */
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.localLOGV","false","false","true","true","true","boolean","false || Config.LOGV","","","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.window","false","false","false","false","false","Window","","","// Activity's top-level window.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.CREATED","false","false","false","true","true","int","2","","// Created, not started or resumed.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.STARTED","false","false","false","true","true","int","3","","// Created and started, not resumed.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityRecord.activityInfo","false","false","false","false","false","ActivityInfo","","","// Package manager info about activity.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityRecord.instanceState","false","false","false","false","false","Bundle","","","// Last retrieved freeze state.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.mCurState","false","false","true","false","false","int","INITIALIZING","","/**
 * Current state the owner (ActivityGroup) is in
 */
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.curState","false","false","false","false","false","int","RESTORED","","// Current state the activity is in.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.activity","false","false","false","false","false","Activity","","","// Currently instantiated activity.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.mActivityArray","false","false","true","false","true","ArrayList<LocalActivityRecord>","new ArrayList<LocalActivityRecord>()","","/**
 * array of all known activities for easy iterating.
 */
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.mResumed","false","false","true","false","false","LocalActivityRecord","","","/**
 * The activity that is currently resumed.
 */
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.INITIALIZING","false","false","false","true","true","int","1","","// Ready to launch (after startActivity()).
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.DESTROYED","false","false","false","true","true","int","5","","// No longer with us.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.mParent","false","false","true","false","true","Activity","","","/**
 * The containing activity that owns the activities we create.
 */
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityRecord.id","false","false","false","false","true","String","","","// Unique name of this record.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.mActivities","false","false","true","false","true","Map<String,LocalActivityRecord>","new HashMap<String, LocalActivityRecord>()","","/**
 * id -> record of all known activities.
 */
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.intent","false","false","false","false","false","Intent","","","// Which activity to run here.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.mActivityThread","false","false","true","false","true","ActivityThread","","","/**
 * Thread our activities are running in.
 */
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityRecord.intent","false","false","false","false","false","Intent","","","// Which activity to run here.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.id","false","false","false","false","true","String","","","// Unique name of this record.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.RESUMED","false","false","false","true","true","int","4","","// Created started and resumed.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.RESTORED","false","false","false","true","true","int","0","","// State restored, but no startActivity().
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.instanceState","false","false","false","false","false","Bundle","","","// Last retrieved freeze state.
","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.TAG","false","false","true","true","true","String","""LocalActivityManager""","","","\android\app\LocalActivityManager.java"
"android.app.LocalActivityManager.mFinishing","false","false","true","false","false","boolean","","","/**
 * Set to true once we find out the container is finishing.
 */
","\android\app\LocalActivityManager.java"
"com.android.internal.os.AndroidPrintStream.priority","false","false","true","false","true","int","","","","\com\android\internal\os\AndroidPrintStream.java"
"com.android.internal.os.AndroidPrintStream.tag","false","false","true","false","true","String","","","","\com\android\internal\os\AndroidPrintStream.java"
"android.net.DhcpInfo.dns2","true","false","false","false","false","int","","","","\android\net\DhcpInfo.java"
"android.net.DhcpInfo.dns1","true","false","false","false","false","int","","","","\android\net\DhcpInfo.java"
"android.net.DhcpInfo.ipAddress","true","false","false","false","false","int","","","","\android\net\DhcpInfo.java"
"android.net.DhcpInfo.leaseDuration","true","false","false","false","false","int","","","","\android\net\DhcpInfo.java"
"android.net.DhcpInfo.CREATOR","true","false","false","true","true","Creator<DhcpInfo>","new Creator<DhcpInfo>() {

    public DhcpInfo createFromParcel(Parcel in) {
        DhcpInfo info = new DhcpInfo();
        info.ipAddress = in.readInt();
        info.gateway = in.readInt();
        info.netmask = in.readInt();
        info.dns1 = in.readInt();
        info.dns2 = in.readInt();
        info.serverAddress = in.readInt();
        info.leaseDuration = in.readInt();
        return info;
    }

    public DhcpInfo[] newArray(int size) {
        return new DhcpInfo[size];
    }
}","","/**
 * Implement the Parcelable interface {@hide}
 */
","\android\net\DhcpInfo.java"
"android.net.DhcpInfo.serverAddress","true","false","false","false","false","int","","","","\android\net\DhcpInfo.java"
"android.net.DhcpInfo.netmask","true","false","false","false","false","int","","","","\android\net\DhcpInfo.java"
"android.net.DhcpInfo.gateway","true","false","false","false","false","int","","","","\android\net\DhcpInfo.java"
"com.android.internal.net.DomainNameValidator.ALT_IPA_NAME","false","false","true","true","true","int","7","","","\com\android\internal\net\DomainNameValidator.java"
"com.android.internal.net.DomainNameValidator.ALT_DNS_NAME","false","false","true","true","true","int","2","","","\com\android\internal\net\DomainNameValidator.java"
"com.android.internal.net.DomainNameValidator.DEBUG","false","false","true","true","true","boolean","false","","","\com\android\internal\net\DomainNameValidator.java"
"com.android.internal.net.DomainNameValidator.QUICK_IP_PATTERN","false","false","true","true","false","Pattern","","","","\com\android\internal\net\DomainNameValidator.java"
"com.android.internal.net.DomainNameValidator.LOG_ENABLED","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\com\android\internal\net\DomainNameValidator.java"
"com.android.internal.net.DomainNameValidator.TAG","false","false","true","true","true","String","""DomainNameValidator""","","","\com\android\internal\net\DomainNameValidator.java"
"android.provider.ApplicationColumns.ICON","true","false","false","true","true","String","""icon""","","","\android\provider\Applications.java"
"android.provider.Applications.AUTHORITY","true","false","false","true","true","String","""applications""","","/**
 * The content authority for this provider.
 */
","\android\provider\Applications.java"
"android.provider.Applications.APPLICATION_PATH","true","false","false","true","true","String","""applications""","","/**
 * The content path for application component URIs.
 */
","\android\provider\Applications.java"
"android.provider.Applications.ICON","true","false","false","true","true","String","""icon""","","","\android\provider\Applications.java"
"android.provider.Applications.APPLICATION_SUB_TYPE","false","false","true","true","true","String","""vnd.android.application""","","","\android\provider\Applications.java"
"android.provider.Applications.APPLICATION_ITEM_TYPE","true","false","false","true","true","String","ContentResolver.CURSOR_ITEM_BASE_TYPE + ""/"" + APPLICATION_SUB_TYPE","","/**
 * The MIME type for a single application item.
 */
","\android\provider\Applications.java"
"android.provider.ApplicationColumns.NAME","true","false","false","true","true","String","""name""","","","\android\provider\Applications.java"
"android.provider.Applications.APPLICATION_DIR_TYPE","true","false","false","true","true","String","ContentResolver.CURSOR_DIR_BASE_TYPE + ""/"" + APPLICATION_SUB_TYPE","","/**
 * The MIME type for a list of application items.
 */
","\android\provider\Applications.java"
"android.provider.Applications.SEARCH_PATH","true","false","false","true","true","String","""search""","","/**
 * The content path for application search.
 */
","\android\provider\Applications.java"
"android.provider.ApplicationColumns.URI","true","false","false","true","true","String","""uri""","","","\android\provider\Applications.java"
"android.provider.Applications.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY)","","/**
 * The content:// style URL for this provider
 */
","\android\provider\Applications.java"
"android.provider.Applications.NAME","true","false","false","true","true","String","""name""","","","\android\provider\Applications.java"
"android.provider.Applications.URI","true","false","false","true","true","String","""uri""","","","\android\provider\Applications.java"
"android.database.ContentObserver.lock","false","false","true","false","false","Object","new Object()","","// Protects mTransport
","\android\database\ContentObserver.java"
"android.database.ContentObserver.mSelf","false","false","true","false","false","boolean","","","","\android\database\ContentObserver.java"
"android.database.ContentObserver.mTransport","false","false","true","false","false","Transport","","","","\android\database\ContentObserver.java"
"android.database.Transport.mContentObserver","false","false","false","false","false","ContentObserver","","","","\android\database\ContentObserver.java"
"android.database.ContentObserver.mHandler","false","false","false","false","false","Handler","","","/* package */
","\android\database\ContentObserver.java"
"android.database.NotificationRunnable.mSelf","false","false","true","false","false","boolean","","","","\android\database\ContentObserver.java"
"android.database.ContentObserver.mContentObserver","false","false","false","false","false","ContentObserver","","","","\android\database\ContentObserver.java"
"android.view.animation.Transformation.TYPE_ALPHA","true","false","false","true","false","int","0x1","","/**
 * Indicates a transformation that applies an alpha only (uses an identity matrix.)
 */
","\android\view\animation\Transformation.java"
"android.view.animation.Transformation.mAlpha","false","true","false","false","false","float","","","","\android\view\animation\Transformation.java"
"android.view.animation.Transformation.mMatrix","false","true","false","false","false","Matrix","","","","\android\view\animation\Transformation.java"
"android.view.animation.Transformation.TYPE_MATRIX","true","false","false","true","false","int","0x2","","/**
 * Indicates a transformation that applies a matrix only (alpha = 1.)
 */
","\android\view\animation\Transformation.java"
"android.view.animation.Transformation.mTransformationType","false","true","false","false","false","int","","","","\android\view\animation\Transformation.java"
"android.view.animation.Transformation.TYPE_BOTH","true","false","false","true","false","int","TYPE_ALPHA | TYPE_MATRIX","","/**
 * Indicates a transformation that applies an alpha and a matrix.
 */
","\android\view\animation\Transformation.java"
"android.view.animation.Transformation.TYPE_IDENTITY","true","false","false","true","false","int","0x0","","/**
 * Indicates a transformation that has no effect (alpha = 1 and identity matrix.)
 */
","\android\view\animation\Transformation.java"
"android.util.Event.LENGTH_OFFSET","false","false","true","true","true","int","0","","// Layout of event log entry received from kernel.
","\android\util\EventLog.java"
"android.util.EventLog.PAYLOAD_START","false","false","true","true","true","int","20","","","\android\util\EventLog.java"
"android.util.Event.PAYLOAD_START","false","false","true","true","true","int","20","","","\android\util\EventLog.java"
"android.util.Event.NANOSECONDS_OFFSET","false","false","true","true","true","int","16","","","\android\util\EventLog.java"
"android.util.EventLog.COMMENT_PATTERN","false","false","true","true","true","String","""^\\s*(#.*)?$""","","","\android\util\EventLog.java"
"android.util.EventLog.TAG","false","false","true","true","true","String","""EventLog""","","","\android\util\EventLog.java"
"android.util.Event.LIST_TYPE","false","false","true","true","true","byte","3","","","\android\util\EventLog.java"
"android.util.EventLog.DATA_START","false","false","true","true","true","int","24","","","\android\util\EventLog.java"
"android.util.Event.DATA_START","false","false","true","true","true","int","24","","","\android\util\EventLog.java"
"android.util.Event.THREAD_OFFSET","false","false","true","true","true","int","8","","","\android\util\EventLog.java"
"android.util.Event.mBuffer","false","false","true","false","true","ByteBuffer","","","","\android\util\EventLog.java"
"android.util.Event.STRING_TYPE","false","false","true","true","true","byte","2","","","\android\util\EventLog.java"
"android.util.EventLog.PROCESS_OFFSET","false","false","true","true","true","int","4","","","\android\util\EventLog.java"
"android.util.EventLog.THREAD_OFFSET","false","false","true","true","true","int","8","","","\android\util\EventLog.java"
"android.util.EventLog.SECONDS_OFFSET","false","false","true","true","true","int","12","","","\android\util\EventLog.java"
"android.util.EventLog.TAGS_FILE","false","false","true","true","true","String","""/system/etc/event-log-tags""","","","\android\util\EventLog.java"
"android.util.EventLog.STRING_TYPE","false","false","true","true","true","byte","2","","","\android\util\EventLog.java"
"android.util.EventLog.LONG_TYPE","false","false","true","true","true","byte","1","","","\android\util\EventLog.java"
"android.util.EventLog.LIST_TYPE","false","false","true","true","true","byte","3","","","\android\util\EventLog.java"
"android.util.Event.SECONDS_OFFSET","false","false","true","true","true","int","12","","","\android\util\EventLog.java"
"android.util.Event.TAG_OFFSET","false","false","true","true","true","int","20","","","\android\util\EventLog.java"
"android.util.Event.PROCESS_OFFSET","false","false","true","true","true","int","4","","","\android\util\EventLog.java"
"android.util.Event.LONG_TYPE","false","false","true","true","true","byte","1","","","\android\util\EventLog.java"
"android.util.EventLog.INT_TYPE","false","false","true","true","true","byte","0","","// Value types
","\android\util\EventLog.java"
"android.util.EventLog.sTagCodes","false","false","true","true","false","HashMap<String,Integer>","null","","","\android\util\EventLog.java"
"android.util.EventLog.NANOSECONDS_OFFSET","false","false","true","true","true","int","16","","","\android\util\EventLog.java"
"android.util.EventLog.LENGTH_OFFSET","false","false","true","true","true","int","0","","// Layout of event log entry received from kernel.
","\android\util\EventLog.java"
"android.util.Event.INT_TYPE","false","false","true","true","true","byte","0","","// Value types
","\android\util\EventLog.java"
"android.util.EventLog.TAG_OFFSET","false","false","true","true","true","int","20","","","\android\util\EventLog.java"
"android.util.EventLog.mBuffer","false","false","true","false","true","ByteBuffer","","","","\android\util\EventLog.java"
"android.util.EventLog.TAG_PATTERN","false","false","true","true","true","String","""^\\s*(\\d+)\\s+(\\w+)\\s*(\\(.*\\))?\\s*$""","","","\android\util\EventLog.java"
"android.util.EventLog.sTagNames","false","false","true","true","false","HashMap<Integer,String>","null","","","\android\util\EventLog.java"
"android.util.Pair.first","true","false","false","false","true","F","","","","\android\util\Pair.java"
"android.util.Pair.second","true","false","false","false","true","S","","","","\android\util\Pair.java"
"android.content.SyncStatusInfo.numSourceServer","true","false","false","false","false","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.lastFailureTime","true","false","false","false","false","long","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.initialFailureTime","true","false","false","false","false","long","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.initialize","true","false","false","false","false","boolean","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.lastSuccessSource","true","false","false","false","false","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.numSourceLocal","true","false","false","false","false","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.numSyncs","true","false","false","false","false","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.totalElapsedTime","true","false","false","false","false","long","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.periodicSyncTimes","true","false","false","false","false","ArrayList<Long>","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.authorityId","true","false","false","false","true","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.lastFailureMesg","true","false","false","false","false","String","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.CREATOR","true","false","false","true","true","Creator<SyncStatusInfo>","new Creator<SyncStatusInfo>() {

    public SyncStatusInfo createFromParcel(Parcel in) {
        return new SyncStatusInfo(in);
    }

    public SyncStatusInfo[] newArray(int size) {
        return new SyncStatusInfo[size];
    }
}","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.lastFailureSource","true","false","false","false","false","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.pending","true","false","false","false","false","boolean","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.lastSuccessTime","true","false","false","false","false","long","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.numSourcePeriodic","true","false","false","false","false","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.numSourceUser","true","false","false","false","false","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.numSourcePoll","true","false","false","false","false","int","","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.VERSION","false","false","false","true","true","int","2","","","\android\content\SyncStatusInfo.java"
"android.content.SyncStatusInfo.TAG","false","false","true","true","true","String","""Sync""","","","\android\content\SyncStatusInfo.java"
"com.android.server.ResettableTimeout.mOffAt","false","false","true","false","false","long","","","// turn it off at this time.
","\com\android\server\ResettableTimeout.java"
"com.android.server.ResettableTimeout.mThread","false","false","true","false","false","Thread","","","","\com\android\server\ResettableTimeout.java"
"com.android.server.ResettableTimeout.mLock","false","false","true","false","false","ConditionVariable","new ConditionVariable()","","","\com\android\server\ResettableTimeout.java"
"com.android.server.ResettableTimeout.mOffCalled","false","false","true","false","false","boolean","","","","\com\android\server\ResettableTimeout.java"
"com.android.internal.app.ExternalMediaFormatActivity.POSITIVE_BUTTON","false","false","true","true","true","int","AlertDialog.BUTTON1","","","\com\android\internal\app\ExternalMediaFormatActivity.java"
"com.android.internal.app.ExternalMediaFormatActivity.mStorageReceiver","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        String action = intent.getAction();
        Log.d(""ExternalMediaFormatActivity"", ""got action "" + action);
        if (action == Intent.ACTION_MEDIA_REMOVED || action == Intent.ACTION_MEDIA_CHECKING || action == Intent.ACTION_MEDIA_MOUNTED || action == Intent.ACTION_MEDIA_SHARED) {
            finish();
        }
    }
}","","/**
 * Used to detect when the media state changes, in case we need to call finish()
 */
","\com\android\internal\app\ExternalMediaFormatActivity.java"
"android.provider.OpenableColumns.SIZE","true","false","false","true","true","String","""_size""","","/**
 * The number of bytes in the file identified by the openable URI. Null if unknown.
 */
","\android\provider\OpenableColumns.java"
"android.provider.OpenableColumns.DISPLAY_NAME","true","false","false","true","true","String","""_display_name""","","/**
 * The human-friendly name of file. If this is not provided then the name should default to the
 * the last segment of the file's URI.
 */
","\android\provider\OpenableColumns.java"
"android.net.http.Timer.mStart","false","false","true","false","false","long","","","","\android\net\http\Timer.java"
"android.net.http.Timer.mLast","false","false","true","false","false","long","","","","\android\net\http\Timer.java"
"android.preference.SeekBarPreference.mMyIcon","false","false","true","false","false","Drawable","","","","\android\preference\SeekBarPreference.java"
"android.preference.SeekBarPreference.TAG","false","false","true","true","true","String","""SeekBarPreference""","","","\android\preference\SeekBarPreference.java"
"android.os.Bundle.LOG_TAG","false","false","true","true","true","String","""Bundle""","","","\android\os\Bundle.java"
"android.os.Bundle.mParcelledData","false","false","false","false","false","Parcel","null","","/* package */
","\android\os\Bundle.java"
"android.os.Bundle.mMap","false","false","false","false","false","Map<String,Object>","null","","/* package */
","\android\os\Bundle.java"
"android.os.Bundle.CREATOR","true","false","false","true","true","Parcelable.Creator<Bundle>","new Parcelable.Creator<Bundle>() {

    public Bundle createFromParcel(Parcel in) {
        return in.readBundle();
    }

    public Bundle[] newArray(int size) {
        return new Bundle[size];
    }
}","","","\android\os\Bundle.java"
"android.os.Bundle.EMPTY","true","false","false","true","true","Bundle","","","","\android\os\Bundle.java"
"android.os.Bundle.mClassLoader","false","false","true","false","false","ClassLoader","","","/**
 * The ClassLoader used when unparcelling data from mParcelledData.
 */
","\android\os\Bundle.java"
"android.os.Bundle.mHasFds","false","false","true","false","false","boolean","false","","","\android\os\Bundle.java"
"android.os.Bundle.mFdsKnown","false","false","true","false","false","boolean","true","","","\android\os\Bundle.java"
"android.text.method.SingleLineTransformationMethod.ORIGINAL","false","false","true","true","false","char","new char[] { '\n', '\r' }","","","\android\text\method\SingleLineTransformationMethod.java"
"android.text.method.SingleLineTransformationMethod.REPLACEMENT","false","false","true","true","false","char","new char[] { ' ', '\uFEFF' }","","","\android\text\method\SingleLineTransformationMethod.java"
"android.text.method.SingleLineTransformationMethod.sInstance","false","false","true","true","false","SingleLineTransformationMethod","","","","\android\text\method\SingleLineTransformationMethod.java"
"android.util.Log.LOG_ID_EVENTS","true","false","false","true","true","int","2","","/**
 * @hide
 */
","\android\util\Log.java"
"android.util.Log.ERROR","true","false","false","true","true","int","6","","/**
 * Priority constant for the println method; use Log.e.
 */
","\android\util\Log.java"
"android.util.Log.DEBUG","true","false","false","true","true","int","3","","/**
 * Priority constant for the println method; use Log.d.
 */
","\android\util\Log.java"
"android.util.Log.LOG_ID_MAIN","true","false","false","true","true","int","0","","/**
 * @hide
 */
","\android\util\Log.java"
"android.util.Log.WARN","true","false","false","true","true","int","5","","/**
 * Priority constant for the println method; use Log.w.
 */
","\android\util\Log.java"
"android.util.Log.ASSERT","true","false","false","true","true","int","7","","/**
 * Priority constant for the println method.
 */
","\android\util\Log.java"
"android.util.Log.LOG_ID_SYSTEM","true","false","false","true","true","int","3","","/**
 * @hide
 */
","\android\util\Log.java"
"android.util.Log.LOG_ID_RADIO","true","false","false","true","true","int","1","","/**
 * @hide
 */
","\android\util\Log.java"
"android.util.Log.VERBOSE","true","false","false","true","true","int","2","","/**
 * Priority constant for the println method; use Log.v.
 */
","\android\util\Log.java"
"android.util.Log.INFO","true","false","false","true","true","int","4","","/**
 * Priority constant for the println method; use Log.i.
 */
","\android\util\Log.java"
"android.bluetooth.BluetoothAdapter.ACTION_DISCOVERY_STARTED","true","false","false","true","true","String","""android.bluetooth.adapter.action.DISCOVERY_STARTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The local Bluetooth adapter has started the remote
 * device discovery process.
 * <p>This usually involves an inquiry scan of about 12 seconds, followed
 * by a page scan of each new device to retrieve its Bluetooth name.
 * <p>Register for {@link BluetoothDevice#ACTION_FOUND} to be notified as
 * remote Bluetooth devices are found.
 * <p>Device discovery is a heavyweight procedure. New connections to
 * remote Bluetooth devices should not be attempted while discovery is in
 * progress, and existing connections will experience limited bandwidth
 * and high latency. Use {@link #cancelDiscovery()} to cancel an ongoing
 * discovery.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.EXTRA_STATE","true","false","false","true","true","String","""android.bluetooth.adapter.extra.STATE""","","/**
 * Used as an int extra field in {@link #ACTION_STATE_CHANGED}
 * intents to request the current power state. Possible values are:
 * {@link #STATE_OFF},
 * {@link #STATE_TURNING_ON},
 * {@link #STATE_ON},
 * {@link #STATE_TURNING_OFF},
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.BLUETOOTH_SERVICE","true","false","false","true","true","String","""bluetooth""","","/**
 * @hide
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.STATE_TURNING_OFF","true","false","false","true","true","int","13","","/**
 * Indicates the local Bluetooth adapter is turning off. Local clients
 * should immediately attempt graceful disconnection of any remote links.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.RESERVED_RFCOMM_CHANNELS","false","false","true","true","true","int","new int[] { // HFAG
10, // HSAG
11, // OPUSH
12, // PBAP
19 }","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.ADDRESS_LENGTH","false","false","true","true","true","int","17","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.ERROR","true","false","false","true","true","int","Integer.MIN_VALUE","","/**
 * Sentinel error value for this class. Guaranteed to not equal any other
 * integer constant in this class. Provided as a convenience for functions
 * that require a sentinel error value, for example:
 * <p><code>Intent.getIntExtra(BluetoothAdapter.EXTRA_STATE,
 * BluetoothAdapter.ERROR)</code>
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.EXTRA_LOCAL_NAME","true","false","false","true","true","String","""android.bluetooth.adapter.extra.LOCAL_NAME""","","/**
 * Used as a String extra field in {@link #ACTION_LOCAL_NAME_CHANGED}
 * intents to request the local Bluetooth name.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.mHandler","false","false","true","false","false","Handler","new Handler() {

    public void handleMessage(Message msg) {
        /* handle socket closing */
        int handle = msg.what;
        try {
            if (DBG)
                Log.d(TAG, ""Removing service record "" + Integer.toHexString(handle));
            mService.removeServiceRecord(handle);
        } catch (RemoteException e) {
            Log.e(TAG, """", e);
        }
    }
}","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE","true","false","false","true","true","int","23","","/**
 * Indicates that both inquiry scan and page scan are enabled on the local
 * Bluetooth adapter. Therefore this device is both discoverable and
 * connectable from remote Bluetooth devices.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.RfcommChannelPicker.sRandom","false","false","true","true","false","Random","","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.mUuid","false","false","true","false","true","UUID","","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE","true","false","false","true","true","String","""android.bluetooth.adapter.action.REQUEST_ENABLE""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show a system activity that allows the user to turn on
 * Bluetooth.
 * <p>This system activity will return once Bluetooth has completed turning
 * on, or the user has decided not to turn Bluetooth on.
 * <p>Notification of the result of this activity is posted using the
 * {@link android.app.Activity#onActivityResult} callback. The
 * <code>resultCode</code>
 * will be {@link android.app.Activity#RESULT_OK} if Bluetooth has been
 * turned on or {@link android.app.Activity#RESULT_CANCELED} if the user
 * has rejected the request or an error has occurred.
 * <p>Applications can also listen for {@link #ACTION_STATE_CHANGED}
 * for global notification whenever Bluetooth is turned on or off.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH}
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.EXTRA_PREVIOUS_SCAN_MODE","true","false","false","true","true","String","""android.bluetooth.adapter.extra.PREVIOUS_SCAN_MODE""","","/**
 * Used as an int extra field in {@link #ACTION_SCAN_MODE_CHANGED}
 * intents to request the previous scan mode. Possible values are:
 * {@link #SCAN_MODE_NONE},
 * {@link #SCAN_MODE_CONNECTABLE},
 * {@link #SCAN_MODE_CONNECTABLE_DISCOVERABLE},
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.ACTION_LOCAL_NAME_CHANGED","true","false","false","true","true","String","""android.bluetooth.adapter.action.LOCAL_NAME_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The local Bluetooth adapter has changed its friendly
 * Bluetooth name.
 * <p>This name is visible to remote Bluetooth devices.
 * <p>Always contains the extra field {@link #EXTRA_LOCAL_NAME} containing
 * the name.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE","true","false","false","true","true","String","""android.bluetooth.adapter.action.REQUEST_DISCOVERABLE""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show a system activity that requests discoverable mode.
 * This activity will also request the user to turn on Bluetooth if it
 * is not currently enabled.
 * <p>Discoverable mode is equivalent to {@link
 * #SCAN_MODE_CONNECTABLE_DISCOVERABLE}. It allows remote devices to see
 * this Bluetooth adapter when they perform a discovery.
 * <p>For privacy, Android is not discoverable by default.
 * <p>The sender of this Intent can optionally use extra field {@link
 * #EXTRA_DISCOVERABLE_DURATION} to request the duration of
 * discoverability. Currently the default duration is 120 seconds, and
 * maximum duration is capped at 300 seconds for each request.
 * <p>Notification of the result of this activity is posted using the
 * {@link android.app.Activity#onActivityResult} callback. The
 * <code>resultCode</code>
 * will be the duration (in seconds) of discoverability or
 * {@link android.app.Activity#RESULT_CANCELED} if the user rejected
 * discoverability or an error has occurred.
 * <p>Applications can also listen for {@link #ACTION_SCAN_MODE_CHANGED}
 * for global notification whenever the scan mode changes. For example, an
 * application can be notified when the device has ended discoverability.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH}
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.sRandom","false","false","true","true","false","Random","","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.STATE_ON","true","false","false","true","true","int","12","","/**
 * Indicates the local Bluetooth adapter is on, and ready for use.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.STATE_OFF","true","false","false","true","true","int","10","","/**
 * Indicates the local Bluetooth adapter is off.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION","true","false","false","true","true","String","""android.bluetooth.adapter.extra.DISCOVERABLE_DURATION""","","/**
 * Used as an optional int extra field in {@link
 * #ACTION_REQUEST_DISCOVERABLE} intents to request a specific duration
 * for discoverability in seconds. The current default is 120 seconds, and
 * requests over 300 seconds will be capped. These values could change.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.ACTION_DISCOVERY_FINISHED","true","false","false","true","true","String","""android.bluetooth.adapter.action.DISCOVERY_FINISHED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The local Bluetooth adapter has finished the device
 * discovery process.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.mService","false","false","true","false","true","IBluetooth","","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.RfcommChannelPicker.RESERVED_RFCOMM_CHANNELS","false","false","true","true","true","int","new int[] { // HFAG
10, // HSAG
11, // OPUSH
12, // PBAP
19 }","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.DBG","false","false","true","true","true","boolean","false","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.TAG","false","false","true","true","true","String","""BluetoothAdapter""","","","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.STATE_TURNING_ON","true","false","false","true","true","int","11","","/**
 * Indicates the local Bluetooth adapter is turning on. However local
 * clients should wait for {@link #STATE_ON} before attempting to
 * use the adapter.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.mChannels","false","false","true","false","true","LinkedList<Integer>","","","// local list of channels left to try
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.ACTION_SCAN_MODE_CHANGED","true","false","false","true","true","String","""android.bluetooth.adapter.action.SCAN_MODE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Indicates the Bluetooth scan mode of the local Adapter
 * has changed.
 * <p>Always contains the extra fields {@link #EXTRA_SCAN_MODE} and {@link
 * #EXTRA_PREVIOUS_SCAN_MODE} containing the new and old scan modes
 * respectively.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH}
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.EXTRA_SCAN_MODE","true","false","false","true","true","String","""android.bluetooth.adapter.extra.SCAN_MODE""","","/**
 * Used as an int extra field in {@link #ACTION_SCAN_MODE_CHANGED}
 * intents to request the current scan mode. Possible values are:
 * {@link #SCAN_MODE_NONE},
 * {@link #SCAN_MODE_CONNECTABLE},
 * {@link #SCAN_MODE_CONNECTABLE_DISCOVERABLE},
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.EXTRA_PREVIOUS_STATE","true","false","false","true","true","String","""android.bluetooth.adapter.extra.PREVIOUS_STATE""","","/**
 * Used as an int extra field in {@link #ACTION_STATE_CHANGED}
 * intents to request the previous power state. Possible values are:
 * {@link #STATE_OFF},
 * {@link #STATE_TURNING_ON},
 * {@link #STATE_ON},
 * {@link #STATE_TURNING_OFF},
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.sChannels","false","false","true","true","false","LinkedList<Integer>","","","// master list of non-reserved channels
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.RfcommChannelPicker.mChannels","false","false","true","false","true","LinkedList<Integer>","","","// local list of channels left to try
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.sAdapter","false","false","true","true","false","BluetoothAdapter","","","/**
 * Lazyily initialized singleton. Guaranteed final after first object
 * constructed.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.SCAN_MODE_NONE","true","false","false","true","true","int","20","","/**
 * Indicates that both inquiry scan and page scan are disabled on the local
 * Bluetooth adapter. Therefore this device is neither discoverable
 * nor connectable from remote Bluetooth devices.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.RfcommChannelPicker.sChannels","false","false","true","true","false","LinkedList<Integer>","","","// master list of non-reserved channels
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.ACTION_STATE_CHANGED","true","false","false","true","true","String","""android.bluetooth.adapter.action.STATE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The state of the local Bluetooth adapter has been
 * changed.
 * <p>For example, Bluetooth has been turned on or off.
 * <p>Always contains the extra fields {@link #EXTRA_STATE} and {@link
 * #EXTRA_PREVIOUS_STATE} containing the new and old states
 * respectively.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.BluetoothAdapter.SCAN_MODE_CONNECTABLE","true","false","false","true","true","int","21","","/**
 * Indicates that inquiry scan is disabled, but page scan is enabled on the
 * local Bluetooth adapter. Therefore this device is not discoverable from
 * remote Bluetooth devices, but is connectable from remote devices that
 * have previously discovered this device.
 */
","\android\bluetooth\BluetoothAdapter.java"
"android.bluetooth.RfcommChannelPicker.mUuid","false","false","true","false","true","UUID","","","","\android\bluetooth\BluetoothAdapter.java"
"android.net.Downloads.DOWNLOAD_DESTINATION_CACHE_PURGEABLE","true","false","false","true","true","int","3","","/**
 * This download will be saved to the download manager's private
 * partition and will be purged as necessary to make space. This is
 * for private files (similar to CACHE_PARTITION) that aren't deleted
 * immediately after they are used, and are kept around by the download
 * manager as long as space is available.
 */
","\android\net\Downloads.java"
"android.net.Downloads.bytesSoFar","true","false","false","false","false","long","-1","","/**
 * Approximate number of bytes downloaded so far, for debugging purposes.
 */
","\android\net\Downloads.java"
"android.net.Downloads.ACTION_DOWNLOAD_COMPLETED","true","false","false","true","true","String","""android.intent.action.DOWNLOAD_COMPLETED""","","/**
 * Broadcast Action: this is sent by the download manager to the app
 * that had initiated a download when that download completes. The
 * download's content: uri is specified in the intent's data.
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOAD_DESTINATION_CACHE","true","false","false","true","true","int","2","","/**
 * This download will be saved to the download manager's private
 * partition. This is the behavior used by applications that want to
 * download private files that are used and deleted soon after they
 * get downloaded. All file types are allowed, and only the initiating
 * application can access the file (indirectly through a content
 * provider). This requires the
 * android.permission.ACCESS_DOWNLOAD_MANAGER_ADVANCED permission.
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_INVALID","false","false","true","true","true","int","0","","/**
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOADS_COLUMN_LAST_MODIFICATION","false","false","true","true","true","int","4","","/**
 * The column index for the last modification time.
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOAD_ID_INVALID","true","false","false","true","true","long","-1","","/**
 * An invalid download id
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOADS_COLUMN_URI","false","false","true","true","true","int","1","","/**
 * The column index for the URI.
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.statusCode","true","false","false","false","false","int","-1","","/**
 * An opaque status code for the download
 */
","\android\net\Downloads.java"
"android.net.StatusInfo.id","true","false","false","false","false","long","DOWNLOAD_ID_INVALID","","/**
 * An opaque id for the download
 */
","\android\net\Downloads.java"
"android.net.Downloads.COLUMN_NOTIFICATION_EXTRAS","true","false","false","true","true","String","""notificationextras""","","/**
 * If extras are specified when requesting a download they will be provided in the intent that
 * is sent to the specified class and package when a download has finished.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOADS_PROJECTION","false","false","true","true","true","String","{ BaseColumns._ID, android.provider.Downloads.Impl.COLUMN_APP_DATA, android.provider.Downloads.Impl.COLUMN_STATUS, android.provider.Downloads.Impl._DATA, android.provider.Downloads.Impl.COLUMN_LAST_MODIFICATION, android.provider.Downloads.Impl.COLUMN_CURRENT_BYTES }","","/**
 * Column projection for the query to the download manager. This must match
 * with the constants DOWNLOADS_COLUMN_*.
 * @hide
 */
","\android\net\Downloads.java"
"android.net.StatusInfo.bytesSoFar","true","false","false","false","false","long","-1","","/**
 * Approximate number of bytes downloaded so far, for debugging purposes.
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOADS_COLUMN_CURRENT_BYTES","false","false","true","true","true","int","5","","/**
 * The column index for the number of bytes downloaded so far.
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_PENDING","true","false","false","true","true","int","190","","/**
 * This download hasn't started yet
 */
","\android\net\Downloads.java"
"android.net.ByUri.QUERY_WHERE_APP_DATA_CLAUSE","false","false","true","true","true","String","android.provider.Downloads.Impl.COLUMN_APP_DATA + ""=?""","","/**
 * Query where clause by app data.
 * @hide
 */
","\android\net\Downloads.java"
"android.net.StatusInfo.statusCode","true","false","false","false","false","int","-1","","/**
 * An opaque status code for the download
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_SUCCESS","true","false","false","true","true","int","200","","/**
 * This download has successfully completed.
 * Warning: there might be other status values that indicate success
 * in the future.
 * Use isSucccess() to capture the entire category.
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_NOT_ACCEPTABLE","true","false","false","true","true","int","406","","/**
 * This download can't be performed because the content type cannot be
 * handled.
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_DOWNLOADING_UPDATE","false","false","true","true","true","int","3","","/**
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOADS_COLUMN_ID","false","false","true","true","true","int","0","","/**
 * The column index for the ID.
 * @hide
 */
","\android\net\Downloads.java"
"android.net.ByUri.PROJECTION","false","false","true","true","true","String","{ BaseColumns._ID, android.provider.Downloads.Impl.COLUMN_CURRENT_BYTES, android.provider.Downloads.Impl.COLUMN_TOTAL_BYTES }","","/**
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_UNHANDLED_REDIRECT","true","false","false","true","true","int","493","","/**
 * This download couldn't be completed because of an HTTP
 * redirect response that the download manager couldn't
 * handle.
 */
","\android\net\Downloads.java"
"android.net.StatusInfo.completed","true","false","false","false","false","boolean","false","","","\android\net\Downloads.java"
"android.net.StatusInfo.filename","true","false","false","false","false","String","null","","/**
 * The filename of the active download.
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_DOWNLOADED_UPDATE","false","false","true","true","true","int","4","","/**
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_INSUFFICIENT_SPACE_ERROR","true","false","false","true","true","int","498","","/**
 * This download couldn't be completed due to insufficient storage
 * space.  Typically, this is because the SD card is full.
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_DEVICE_NOT_FOUND_ERROR","true","false","false","true","true","int","499","","/**
 * This download couldn't be completed because no external storage
 * device was found.  Typically, this is because the SD card is not
 * mounted.
 */
","\android\net\Downloads.java"
"android.net.Downloads.QUERY_WHERE_APP_DATA_CLAUSE","false","false","true","true","true","String","android.provider.Downloads.Impl.COLUMN_APP_DATA + ""=?""","","/**
 * Query where clause by app data.
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.QUERY_WHERE_CLAUSE","false","false","true","true","true","String","android.provider.Downloads.Impl.COLUMN_NOTIFICATION_PACKAGE + ""=? AND "" + android.provider.Downloads.Impl.COLUMN_NOTIFICATION_CLASS + ""=?""","","/**
 * Query where clause for general querying.
 */
","\android\net\Downloads.java"
"android.net.ByUri.QUERY_WHERE_CLAUSE","false","false","true","true","true","String","android.provider.Downloads.Impl.COLUMN_NOTIFICATION_PACKAGE + ""=? AND "" + android.provider.Downloads.Impl.COLUMN_NOTIFICATION_CLASS + ""=?""","","/**
 * Query where clause for general querying.
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOAD_DESTINATION_EXTERNAL","true","false","false","true","true","int","1","","/**
 * This download will be saved to the external storage. This is the
 * default behavior, and should be used for any file that the user
 * can freely access, copy, delete. Even with that destination,
 * unencrypted DRM files are saved in secure internal storage.
 * Downloads to the external destination only write files for which
 * there is a registered handler. The resulting files are accessible
 * by filename to all applications.
 */
","\android\net\Downloads.java"
"android.net.Downloads.filename","true","false","false","false","false","String","null","","/**
 * The filename of the active download.
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOADS_COLUMN_FILENAME","false","false","true","true","true","int","3","","/**
 * The column index for the filename.
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_UNKNOWN_ERROR","true","false","false","true","true","int","491","","/**
 * This download has completed with an error.
 * Warning: there will be other status values that indicate errors in
 * the future. Use isStatusError() to capture the entire category.
 */
","\android\net\Downloads.java"
"android.net.Downloads.completed","true","false","false","false","false","boolean","false","","","\android\net\Downloads.java"
"android.net.Downloads.id","true","false","false","false","false","long","DOWNLOAD_ID_INVALID","","/**
 * An opaque id for the download
 */
","\android\net\Downloads.java"
"android.net.Downloads.STATUS_RUNNING","true","false","false","true","true","int","192","","/**
 * This download has started
 */
","\android\net\Downloads.java"
"android.net.Downloads.PROJECTION","false","false","true","true","true","String","{ BaseColumns._ID, android.provider.Downloads.Impl.COLUMN_CURRENT_BYTES, android.provider.Downloads.Impl.COLUMN_TOTAL_BYTES }","","/**
 * @hide
 */
","\android\net\Downloads.java"
"android.net.Downloads.DOWNLOADS_COLUMN_STATUS","false","false","true","true","true","int","2","","/**
 * The column index for the status code.
 * @hide
 */
","\android\net\Downloads.java"
"android.gesture.GestureUtils.NONUNIFORM_SCALE","false","false","true","true","true","float","(float) Math.sqrt(2)","","","\android\gesture\GestureUtils.java"
"android.gesture.GestureUtils.SCALING_THRESHOLD","false","false","true","true","true","float","0.26f","","","\android\gesture\GestureUtils.java"
"android.provider.Calls.TYPE","true","false","false","true","true","String","""type""","","/**
 * The type of the call (incoming, outgoing or missed).
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\CallLog.java"
"android.provider.Calls.MISSED_TYPE","true","false","false","true","true","int","3","","","\android\provider\CallLog.java"
"android.provider.Calls.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\CallLog.java"
"android.provider.Calls.OUTGOING_TYPE","true","false","false","true","true","int","2","","","\android\provider\CallLog.java"
"android.provider.Calls.NEW","true","false","false","true","true","String","""new""","","/**
 * Whether or not the call has been acknowledged
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.DATE","true","false","false","true","true","String","""date""","","/**
 * The date the call occured, in milliseconds since the epoch
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\CallLog.java"
"android.provider.Calls.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/calls""","","/**
 * The MIME type of {@link #CONTENT_URI} and {@link #CONTENT_FILTER_URI}
 * providing a directory of calls.
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.NEW","true","false","false","true","true","String","""new""","","/**
 * Whether or not the call has been acknowledged
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.AUTHORITY","true","false","false","true","true","String","""call_log""","","","\android\provider\CallLog.java"
"android.provider.Calls.CACHED_NUMBER_TYPE","true","false","false","true","true","String","""numbertype""","","/**
 * The cached number type (Home, Work, etc) associated with the
 * phone number, if it exists.
 * This value is not guaranteed to be current, if the contact information
 * associated with this number has changed.
 * <P>Type: INTEGER</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.NUMBER","true","false","false","true","true","String","""number""","","/**
 * The phone number as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\CallLog.java"
"android.provider.Calls.CACHED_NAME","true","false","false","true","true","String","""name""","","/**
 * The cached name associated with the phone number, if it exists.
 * This value is not guaranteed to be current, if the contact information
 * associated with this number has changed.
 * <P>Type: TEXT</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.TYPE","true","false","false","true","true","String","""type""","","/**
 * The type of the call (incoming, outgoing or missed).
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.INCOMING_TYPE","true","false","false","true","true","int","1","","","\android\provider\CallLog.java"
"android.provider.CallLog.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.parse(""content://call_log/calls/filter"")","","/**
 * The content:// style URL for filtering this table on phone numbers
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the call in seconds
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.CACHED_NUMBER_LABEL","true","false","false","true","true","String","""numberlabel""","","/**
 * The cached number label, for a custom number type, associated with the
 * phone number, if it exists.
 * This value is not guaranteed to be current, if the contact information
 * associated with this number has changed.
 * <P>Type: TEXT</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/calls""","","/**
 * The MIME type of {@link #CONTENT_URI} and {@link #CONTENT_FILTER_URI}
 * providing a directory of calls.
 */
","\android\provider\CallLog.java"
"android.provider.Calls.INCOMING_TYPE","true","false","false","true","true","int","1","","","\android\provider\CallLog.java"
"android.provider.Calls.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the call in seconds
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\CallLog.java"
"android.provider.Calls.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://call_log/calls"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.OUTGOING_TYPE","true","false","false","true","true","int","2","","","\android\provider\CallLog.java"
"android.provider.Calls.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/calls""","","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single
 * call.
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.MISSED_TYPE","true","false","false","true","true","int","3","","","\android\provider\CallLog.java"
"android.provider.Calls.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.parse(""content://call_log/calls/filter"")","","/**
 * The content:// style URL for filtering this table on phone numbers
 */
","\android\provider\CallLog.java"
"android.provider.Calls.CACHED_NUMBER_LABEL","true","false","false","true","true","String","""numberlabel""","","/**
 * The cached number label, for a custom number type, associated with the
 * phone number, if it exists.
 * This value is not guaranteed to be current, if the contact information
 * associated with this number has changed.
 * <P>Type: TEXT</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://call_log/calls"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.CACHED_NUMBER_TYPE","true","false","false","true","true","String","""numbertype""","","/**
 * The cached number type (Home, Work, etc) associated with the
 * phone number, if it exists.
 * This value is not guaranteed to be current, if the contact information
 * associated with this number has changed.
 * <P>Type: INTEGER</P>
 */
","\android\provider\CallLog.java"
"android.provider.Calls.DATE","true","false","false","true","true","String","""date""","","/**
 * The date the call occured, in milliseconds since the epoch
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\CallLog.java"
"android.provider.Calls.NUMBER","true","false","false","true","true","String","""number""","","/**
 * The phone number as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.CACHED_NAME","true","false","false","true","true","String","""name""","","/**
 * The cached name associated with the phone number, if it exists.
 * This value is not guaranteed to be current, if the contact information
 * associated with this number has changed.
 * <P>Type: TEXT</P>
 */
","\android\provider\CallLog.java"
"android.provider.CallLog.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/calls""","","/**
 * The MIME type of a {@link #CONTENT_URI} sub-directory of a single
 * call.
 */
","\android\provider\CallLog.java"
"android.provider.LiveFolders.DISPLAY_MODE_GRID","true","false","false","true","true","int","0x1","","/**
 * Displays a live folder's content in a grid.
 *
 * @see LiveFolders#EXTRA_LIVE_FOLDER_DISPLAY_MODE
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.INTENT","true","false","false","true","true","String","""intent""","","/**
 * <p>Content provider column.</p>
 * <p>Intent of the live folder item.</p>
 * <p>Optional if the live folder has a base intent.</p>
 * <p>Type: {@link android.content.Intent}.</p>
 *
 * @see LiveFolders#EXTRA_LIVE_FOLDER_BASE_INTENT
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * <p>Content provider column.</p>
 * <p>Description of the live folder item. This value is ignored if the
 * live folder's display mode is {@link LiveFolders#DISPLAY_MODE_GRID}.</p>
 * <p>Optional.</p>
 * <p>Type: String.</p>
 *
 * @see LiveFolders#EXTRA_LIVE_FOLDER_DISPLAY_MODE
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.ACTION_CREATE_LIVE_FOLDER","true","false","false","true","true","String","""android.intent.action.CREATE_LIVE_FOLDER""","@SdkConstant(SdkConstant.SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Creates a live folder.
 * <p>Input: Nothing.</p>
 * <p>Output: An Intent representing the live folder. The intent must contain four
 * extras: EXTRA_LIVE_FOLDER_NAME (value: String),
 * EXTRA_LIVE_FOLDER_ICON (value: ShortcutIconResource),
 * EXTRA_LIVE_FOLDER_URI (value: String) and
 * EXTRA_LIVE_FOLDER_DISPLAY_MODE (value: int). The Intent can optionnally contain
 * EXTRA_LIVE_FOLDER_BASE_INTENT (value: Intent).</p>
 *
 * @see #EXTRA_LIVE_FOLDER_NAME
 * @see #EXTRA_LIVE_FOLDER_ICON
 * @see #EXTRA_LIVE_FOLDER_DISPLAY_MODE
 * @see #EXTRA_LIVE_FOLDER_BASE_INTENT
 * @see android.content.Intent.ShortcutIconResource
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.EXTRA_LIVE_FOLDER_NAME","true","false","false","true","true","String","""android.intent.extra.livefolder.NAME""","","/**
 * The name of the extra used to define the name of a live folder.
 *
 * @see #ACTION_CREATE_LIVE_FOLDER
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.ICON_RESOURCE","true","false","false","true","true","String","""icon_resource""","","/**
 * <p>Content provider column.</p>
 * <p>Resource name of the live folder item. This value can be obtained easily using
 * {@link android.content.Intent.ShortcutIconResource#fromContext(android.content.Context, int)}.</p>
 * <p>Optional.</p>
 * <p>Type: String.</p>
 *
 * @see #ICON_PACKAGE
 * @see android.content.Intent.ShortcutIconResource
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.DISPLAY_MODE_LIST","true","false","false","true","true","int","0x2","","/**
 * Displays a live folder's content in a list.
 *
 * @see LiveFolders#EXTRA_LIVE_FOLDER_DISPLAY_MODE
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.EXTRA_LIVE_FOLDER_DISPLAY_MODE","true","false","false","true","true","String","""android.intent.extra.livefolder.DISPLAY_MODE""","","/**
 * The name of the extra used to define the display mode of a live folder.
 *
 * @see #ACTION_CREATE_LIVE_FOLDER
 * @see #DISPLAY_MODE_GRID
 * @see #DISPLAY_MODE_LIST
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.EXTRA_LIVE_FOLDER_BASE_INTENT","true","false","false","true","true","String","""android.intent.extra.livefolder.BASE_INTENT""","","/**
 * The name of the extra used to define the base Intent of a live folder.
 *
 * @see #ACTION_CREATE_LIVE_FOLDER
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.EXTRA_LIVE_FOLDER_ICON","true","false","false","true","true","String","""android.intent.extra.livefolder.ICON""","","/**
 * The name of the extra used to define the icon of a live folder.
 *
 * @see #ACTION_CREATE_LIVE_FOLDER
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.ICON_PACKAGE","true","false","false","true","true","String","""icon_package""","","/**
 * <p>Content provider column.</p>
 * <p>Package where to find the icon of the live folder item. This value can be
 * obtained easily using
 * {@link android.content.Intent.ShortcutIconResource#fromContext(android.content.Context, int)}.</p>
 * <p>Optional.</p>
 * <p>Type: String.</p>
 *
 * @see #ICON_RESOURCE
 * @see android.content.Intent.ShortcutIconResource
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.NAME","true","false","false","true","true","String","""name""","","/**
 * <p>Content provider column.</p>
 * <p>Name of the live folder item.</p>
 * <p>Required.</p>
 * <p>Type: String.</p>
 */
","\android\provider\LiveFolders.java"
"android.provider.LiveFolders.ICON_BITMAP","true","false","false","true","true","String","""icon_bitmap""","","/**
 * <p>Content provider column.</p>
 * <p>Icon of the live folder item, as a custom bitmap.</p>
 * <p>Optional.</p>
 * <p>Type: {@link android.graphics.Bitmap}.</p>
 */
","\android\provider\LiveFolders.java"
"android.content.pm.PermissionGroupInfo.descriptionRes","true","false","false","false","false","int","","","/**
 * A string resource identifier (in the package's resources) of this
 * permission's description.  From the ""description"" attribute or,
 * if not set, 0.
 */
","\android\content\pm\PermissionGroupInfo.java"
"android.content.pm.PermissionGroupInfo.nonLocalizedDescription","true","false","false","false","false","CharSequence","","","/**
 * The description string provided in the AndroidManifest file, if any.  You
 * probably don't want to use this, since it will be null if the description
 * is in a resource.  You probably want
 * {@link PermissionInfo#loadDescription} instead.
 */
","\android\content\pm\PermissionGroupInfo.java"
"android.content.pm.PermissionGroupInfo.CREATOR","true","false","false","true","true","Creator<PermissionGroupInfo>","new Creator<PermissionGroupInfo>() {

    public PermissionGroupInfo createFromParcel(Parcel source) {
        return new PermissionGroupInfo(source);
    }

    public PermissionGroupInfo[] newArray(int size) {
        return new PermissionGroupInfo[size];
    }
}","","","\android\content\pm\PermissionGroupInfo.java"
"android.util.PrintWriterPrinter.mPW","false","false","true","false","true","PrintWriter","","","","\android\util\PrintWriterPrinter.java"
"android.provider.Impl.STATUS_DEVICE_NOT_FOUND_ERROR","true","false","false","true","true","int","499","","/**
 * This download couldn't be completed because no external storage
 * device was found.  Typically, this is because the SD card is not
 * mounted.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.CONTROL_PAUSED","true","false","false","true","true","int","1","","/**
 * This download must pause at the first opportunity.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_NOTIFICATION_EXTRAS","true","false","false","true","true","String","""notificationextras""","","/**
 * If extras are specified when requesting a download they will be provided in the intent that
 * is sent to the specified class and package when a download has finished.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://downloads/download"")","","/**
 * The content:// URI for the data table in the provider
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_UNHANDLED_HTTP_CODE","true","false","false","true","true","int","494","","/**
 * This download couldn't be completed because of an
 * unspecified unhandled HTTP code.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_LENGTH_REQUIRED","true","false","false","true","true","int","411","","/**
 * This download cannot be performed because the length cannot be
 * determined accurately. This is the code for the HTTP error ""Length
 * Required"", which is typically used when making requests that require
 * a content length but don't have one, and it is also used in the
 * client when a response is received whose length cannot be determined
 * accurately (therefore making it impossible to know when a download
 * completes).
 */
","\android\provider\Downloads.java"
"android.provider.Impl.CONTROL_RUN","true","false","false","true","true","int","0","","/**
 * This download is allowed to run.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_BAD_REQUEST","true","false","false","true","true","int","400","","/**
 * This request couldn't be parsed. This is also used when processing
 * requests with unknown/unsupported URI schemes.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.ACTION_NOTIFICATION_CLICKED","true","false","false","true","true","String","""android.intent.action.DOWNLOAD_NOTIFICATION_CLICKED""","","/**
 * Broadcast Action: this is sent by the download manager to the app
 * that had initiated a download when the user selects the notification
 * associated with that download. The download's content: uri is specified
 * in the intent's data if the click is associated with a single download,
 * or Downloads.CONTENT_URI if the notification is associated with
 * multiple downloads.
 * Note: this is not currently sent for downloads that have completed
 * successfully.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_RUNNING","true","false","false","true","true","int","192","","/**
 * This download has started
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_DESTINATION","true","false","false","true","true","String","""destination""","","/**
 * The name of the column containing the flag that controls the destination
 * of the download. See the DESTINATION_* constants for a list of legal values.
 * <P>Type: INTEGER</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_USER_AGENT","true","false","false","true","true","String","""useragent""","","/**
 * The name of the column containing the user agent that the initiating
 * application wants the download manager to use for this download.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_TOTAL_BYTES","true","false","false","true","true","String","""total_bytes""","","/**
 * The name of the column containing the total size of the file being
 * downloaded.
 * <P>Type: INTEGER</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_DESTINATION","true","false","false","true","true","String","""destination""","","/**
 * The name of the column containing the flag that controls the destination
 * of the download. See the DESTINATION_* constants for a list of legal values.
 * <P>Type: INTEGER</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_TOTAL_BYTES","true","false","false","true","true","String","""total_bytes""","","/**
 * The name of the column containing the total size of the file being
 * downloaded.
 * <P>Type: INTEGER</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_COOKIE_DATA","true","false","false","true","true","String","""cookiedata""","","/**
 * The name of the column contain the values of the cookie to be used for
 * the download. This is used directly as the value for the Cookie: HTTP
 * header that gets sent with the request.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.DESTINATION_CACHE_PARTITION_NOROAMING","true","false","false","true","true","int","3","","/**
 * This download will be saved to the download manager's private
 * partition, as with DESTINATION_CACHE_PARTITION, but the download
 * will not proceed if the user is on a roaming data connection.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_PRECONDITION_FAILED","true","false","false","true","true","int","412","","/**
 * This download was interrupted and cannot be resumed.
 * This is the code for the HTTP error ""Precondition Failed"", and it is
 * also used in situations where the client doesn't have an ETag at all.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_BAD_REQUEST","true","false","false","true","true","int","400","","/**
 * This request couldn't be parsed. This is also used when processing
 * requests with unknown/unsupported URI schemes.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_APP_DATA","true","false","false","true","true","String","""entity""","","/**
 * The name of the column containing application-specific data.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read/Write</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_COOKIE_DATA","true","false","false","true","true","String","""cookiedata""","","/**
 * The name of the column contain the values of the cookie to be used for
 * the download. This is used directly as the value for the Cookie: HTTP
 * header that gets sent with the request.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_CURRENT_BYTES","true","false","false","true","true","String","""current_bytes""","","/**
 * The name of the column containing the size of the part of the file that
 * has been downloaded so far.
 * <P>Type: INTEGER</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.PERMISSION_SEE_ALL_EXTERNAL","true","false","false","true","true","String","""android.permission.SEE_ALL_EXTERNAL""","","/**
 * The permission to access downloads to {@link DESTINATION_EXTERNAL}
 * which were downloaded by other applications.
 * @hide
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_CONTROL","true","false","false","true","true","String","""control""","","/**
 * The name of the column containing the current control state  of the download.
 * Applications can write to this to control (pause/resume) the download.
 * the CONTROL_* constants for a list of legal values.
 * <P>Type: INTEGER</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.DESTINATION_CACHE_PARTITION","true","false","false","true","true","int","1","","/**
 * This download will be saved to the download manager's private
 * partition. This is the behavior used by applications that want to
 * download private files that are used and deleted soon after they
 * get downloaded. All file types are allowed, and only the initiating
 * application can access the file (indirectly through a content
 * provider). This requires the
 * android.permission.ACCESS_DOWNLOAD_MANAGER_ADVANCED permission.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.VISIBILITY_VISIBLE_NOTIFY_COMPLETED","true","false","false","true","true","int","1","","/**
 * This download is visible and shows in the notifications while
 * in progress and after completion.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_NOTIFICATION_PACKAGE","true","false","false","true","true","String","""notificationpackage""","","/**
 * The name of the column containing the package name of the application
 * that initiating the download. The download manager will send
 * notifications to a component in this package when the download completes.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_PENDING","true","false","false","true","true","int","190","","/**
 * This download hasn't stated yet
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.ACTION_DOWNLOAD_COMPLETED","true","false","false","true","true","String","""android.intent.action.DOWNLOAD_COMPLETED""","","/**
 * Broadcast Action: this is sent by the download manager to the app
 * that had initiated a download when that download completes. The
 * download's content: uri is specified in the intent's data.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_NO_INTEGRITY","true","false","false","true","true","String","""no_integrity""","","/**
 * The name of the column containing the flags that indicates whether
 * the initiating application is capable of verifying the integrity of
 * the downloaded file. When this flag is set, the download manager
 * performs downloads and reports success even in some situations where
 * it can't guarantee that the download has completed (e.g. when doing
 * a byte-range request without an ETag, or when it can't determine
 * whether a download fully completed).
 * <P>Type: BOOLEAN</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.VISIBILITY_HIDDEN","true","false","false","true","true","int","2","","/**
 * This download doesn't show in the UI or in the notifications.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_FILE_NAME_HINT","true","false","false","true","true","String","""hint""","","/**
 * The name of the column containing the filename that the initiating
 * application recommends. When possible, the download manager will attempt
 * to use this filename, or a variation, as the actual name for the file.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_REFERER","true","false","false","true","true","String","""referer""","","/**
 * The name of the column containing the referer (sic) that the initiating
 * application wants the download manager to use for this download.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_NOTIFICATION_PACKAGE","true","false","false","true","true","String","""notificationpackage""","","/**
 * The name of the column containing the package name of the application
 * that initiating the download. The download manager will send
 * notifications to a component in this package when the download completes.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_SUCCESS","true","false","false","true","true","int","200","","/**
 * This download has successfully completed.
 * Warning: there might be other status values that indicate success
 * in the future.
 * Use isSucccess() to capture the entire category.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_RUNNING_PAUSED","true","false","false","true","true","int","193","","/**
 * This download has started and is paused
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_APP_DATA","true","false","false","true","true","String","""entity""","","/**
 * The name of the column containing application-specific data.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read/Write</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_PENDING_PAUSED","true","false","false","true","true","int","191","","/**
 * This download hasn't stated yet and is paused
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_NOT_ACCEPTABLE","true","false","false","true","true","int","406","","/**
 * This download can't be performed because the content type cannot be
 * handled.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_NOT_ACCEPTABLE","true","false","false","true","true","int","406","","/**
 * This download can't be performed because the content type cannot be
 * handled.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_RUNNING_PAUSED","true","false","false","true","true","int","193","","/**
 * This download has started and is paused
 */
","\android\provider\Downloads.java"
"android.provider.Impl.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://downloads/download"")","","/**
 * The content:// URI for the data table in the provider
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_HTTP_EXCEPTION","true","false","false","true","true","int","496","","/**
 * This download couldn't be completed because of an
 * HttpException while setting up the request.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_PENDING","true","false","false","true","true","int","190","","/**
 * This download hasn't stated yet
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_TOO_MANY_REDIRECTS","true","false","false","true","true","int","497","","/**
 * This download couldn't be completed because there were
 * too many redirects.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.ACTION_NOTIFICATION_CLICKED","true","false","false","true","true","String","""android.intent.action.DOWNLOAD_NOTIFICATION_CLICKED""","","/**
 * Broadcast Action: this is sent by the download manager to the app
 * that had initiated a download when the user selects the notification
 * associated with that download. The download's content: uri is specified
 * in the intent's data if the click is associated with a single download,
 * or Downloads.CONTENT_URI if the notification is associated with
 * multiple downloads.
 * Note: this is not currently sent for downloads that have completed
 * successfully.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_NOTIFICATION_CLASS","true","false","false","true","true","String","""notificationclass""","","/**
 * The name of the column containing the component name of the class that
 * will receive notifications associated with the download. The
 * package/class combination is passed to
 * Intent.setClassName(String,String).
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_CURRENT_BYTES","true","false","false","true","true","String","""current_bytes""","","/**
 * The name of the column containing the size of the part of the file that
 * has been downloaded so far.
 * <P>Type: INTEGER</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.CONTROL_RUN","true","false","false","true","true","int","0","","/**
 * This download is allowed to run.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_UNHANDLED_REDIRECT","true","false","false","true","true","int","493","","/**
 * This download couldn't be completed because of an HTTP
 * redirect response that the download manager couldn't
 * handle.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.VISIBILITY_VISIBLE_NOTIFY_COMPLETED","true","false","false","true","true","int","1","","/**
 * This download is visible and shows in the notifications while
 * in progress and after completion.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.ACTION_DOWNLOAD_COMPLETED","true","false","false","true","true","String","""android.intent.action.DOWNLOAD_COMPLETED""","","/**
 * Broadcast Action: this is sent by the download manager to the app
 * that had initiated a download when that download completes. The
 * download's content: uri is specified in the intent's data.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_FILE_ERROR","true","false","false","true","true","int","492","","/**
 * This download couldn't be completed because of a storage issue.
 * Typically, that's because the filesystem is missing or full.
 * Use the more specific {@link #STATUS_INSUFFICIENT_SPACE_ERROR}
 * and {@link #STATUS_DEVICE_NOT_FOUND_ERROR} when appropriate.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_HTTP_DATA_ERROR","true","false","false","true","true","int","495","","/**
 * This download couldn't be completed because of an
 * error receiving or processing data at the HTTP level.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_DEVICE_NOT_FOUND_ERROR","true","false","false","true","true","int","499","","/**
 * This download couldn't be completed because no external storage
 * device was found.  Typically, this is because the SD card is not
 * mounted.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_UNKNOWN_ERROR","true","false","false","true","true","int","491","","/**
 * This download has completed with an error.
 * Warning: there will be other status values that indicate errors in
 * the future. Use isStatusError() to capture the entire category.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_NO_INTEGRITY","true","false","false","true","true","String","""no_integrity""","","/**
 * The name of the column containing the flags that indicates whether
 * the initiating application is capable of verifying the integrity of
 * the downloaded file. When this flag is set, the download manager
 * performs downloads and reports success even in some situations where
 * it can't guarantee that the download has completed (e.g. when doing
 * a byte-range request without an ETag, or when it can't determine
 * whether a download fully completed).
 * <P>Type: BOOLEAN</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_HTTP_DATA_ERROR","true","false","false","true","true","int","495","","/**
 * This download couldn't be completed because of an
 * error receiving or processing data at the HTTP level.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.DESTINATION_CACHE_PARTITION_PURGEABLE","true","false","false","true","true","int","2","","/**
 * This download will be saved to the download manager's private
 * partition and will be purged as necessary to make space. This is
 * for private files (similar to CACHE_PARTITION) that aren't deleted
 * immediately after they are used, and are kept around by the download
 * manager as long as space is available.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.DESTINATION_CACHE_PARTITION_NOROAMING","true","false","false","true","true","int","3","","/**
 * This download will be saved to the download manager's private
 * partition, as with DESTINATION_CACHE_PARTITION, but the download
 * will not proceed if the user is on a roaming data connection.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.DESTINATION_CACHE_PARTITION_PURGEABLE","true","false","false","true","true","int","2","","/**
 * This download will be saved to the download manager's private
 * partition and will be purged as necessary to make space. This is
 * for private files (similar to CACHE_PARTITION) that aren't deleted
 * immediately after they are used, and are kept around by the download
 * manager as long as space is available.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_URI","true","false","false","true","true","String","""uri""","","/**
 * The name of the column containing the URI of the data being downloaded.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_PENDING_PAUSED","true","false","false","true","true","int","191","","/**
 * This download hasn't stated yet and is paused
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.PERMISSION_ACCESS","true","false","false","true","true","String","""android.permission.ACCESS_DOWNLOAD_MANAGER""","","/**
 * The permission to access the download manager
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The name of the column where the initiating application can provide the
 * description of this download. The description will be displayed to the
 * user in the list of downloads.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read/Write</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_NOTIFICATION_EXTRAS","true","false","false","true","true","String","""notificationextras""","","/**
 * If extras are specified when requesting a download they will be provided in the intent that
 * is sent to the specified class and package when a download has finished.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_OTHER_UID","true","false","false","true","true","String","""otheruid""","","/**
 * The name of the column where the initiating application can provide the
 * UID of another application that is allowed to access this download. If
 * multiple applications share the same UID, all those applications will be
 * allowed to access this download. This column can be updated after the
 * download is initiated. This requires the permission
 * android.permission.ACCESS_DOWNLOAD_MANAGER_ADVANCED.
 * <P>Type: INTEGER</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_VISIBILITY","true","false","false","true","true","String","""visibility""","","/**
 * The name of the column containing the flags that controls whether the
 * download is displayed by the UI. See the VISIBILITY_* constants for
 * a list of legal values.
 * <P>Type: INTEGER</P>
 * <P>Owner can Init/Read/Write</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_MIME_TYPE","true","false","false","true","true","String","""mimetype""","","/**
 * The name of the column containing the MIME type of the downloaded data.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.VISIBILITY_VISIBLE","true","false","false","true","true","int","0","","/**
 * This download is visible but only shows in the notifications
 * while it's in progress.
 */
","\android\provider\Downloads.java"
"android.provider.Impl._DATA","true","false","false","true","true","String","""_data""","","/**
 * The name of the column containing the filename where the downloaded data
 * was actually stored.
 * <P>Type: TEXT</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_LENGTH_REQUIRED","true","false","false","true","true","int","411","","/**
 * This download cannot be performed because the length cannot be
 * determined accurately. This is the code for the HTTP error ""Length
 * Required"", which is typically used when making requests that require
 * a content length but don't have one, and it is also used in the
 * client when a response is received whose length cannot be determined
 * accurately (therefore making it impossible to know when a download
 * completes).
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.VISIBILITY_HIDDEN","true","false","false","true","true","int","2","","/**
 * This download doesn't show in the UI or in the notifications.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_UNKNOWN_ERROR","true","false","false","true","true","int","491","","/**
 * This download has completed with an error.
 * Warning: there will be other status values that indicate errors in
 * the future. Use isStatusError() to capture the entire category.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.PERMISSION_ACCESS","true","false","false","true","true","String","""android.permission.ACCESS_DOWNLOAD_MANAGER""","","/**
 * The permission to access the download manager
 */
","\android\provider\Downloads.java"
"android.provider.Impl.VISIBILITY_VISIBLE","true","false","false","true","true","int","0","","/**
 * This download is visible but only shows in the notifications
 * while it's in progress.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_LAST_MODIFICATION","true","false","false","true","true","String","""lastmod""","","/**
 * The name of the column containing the date at which some interesting
 * status changed in the download. Stored as a System.currentTimeMillis()
 * value.
 * <P>Type: BIGINT</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_TITLE","true","false","false","true","true","String","""title""","","/**
 * The name of the column where the initiating application can provided the
 * title of this download. The title will be displayed ito the user in the
 * list of downloads.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read/Write</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_FILE_NAME_HINT","true","false","false","true","true","String","""hint""","","/**
 * The name of the column containing the filename that the initiating
 * application recommends. When possible, the download manager will attempt
 * to use this filename, or a variation, as the actual name for the file.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.DESTINATION_CACHE_PARTITION","true","false","false","true","true","int","1","","/**
 * This download will be saved to the download manager's private
 * partition. This is the behavior used by applications that want to
 * download private files that are used and deleted soon after they
 * get downloaded. All file types are allowed, and only the initiating
 * application can access the file (indirectly through a content
 * provider). This requires the
 * android.permission.ACCESS_DOWNLOAD_MANAGER_ADVANCED permission.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.PERMISSION_CACHE","true","false","false","true","true","String","""android.permission.ACCESS_CACHE_FILESYSTEM""","","/**
 * The permission to directly access the download manager's cache directory
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_URI","true","false","false","true","true","String","""uri""","","/**
 * The name of the column containing the URI of the data being downloaded.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_CONTROL","true","false","false","true","true","String","""control""","","/**
 * The name of the column containing the current control state  of the download.
 * Applications can write to this to control (pause/resume) the download.
 * the CONTROL_* constants for a list of legal values.
 * <P>Type: INTEGER</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.DESTINATION_EXTERNAL","true","false","false","true","true","int","0","","/**
 * This download will be saved to the external storage. This is the
 * default behavior, and should be used for any file that the user
 * can freely access, copy, delete. Even with that destination,
 * unencrypted DRM files are saved in secure internal storage.
 * Downloads to the external destination only write files for which
 * there is a registered handler. The resulting files are accessible
 * by filename to all applications.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_CANCELED","true","false","false","true","true","int","490","","/**
 * This download was canceled
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_STATUS","true","false","false","true","true","String","""status""","","/**
 * The name of the column containing the current status of the download.
 * Applications can read this to follow the progress of each download. See
 * the STATUS_* constants for a list of legal values.
 * <P>Type: INTEGER</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_TOO_MANY_REDIRECTS","true","false","false","true","true","int","497","","/**
 * This download couldn't be completed because there were
 * too many redirects.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_SUCCESS","true","false","false","true","true","int","200","","/**
 * This download has successfully completed.
 * Warning: there might be other status values that indicate success
 * in the future.
 * Use isSucccess() to capture the entire category.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads._DATA","true","false","false","true","true","String","""_data""","","/**
 * The name of the column containing the filename where the downloaded data
 * was actually stored.
 * <P>Type: TEXT</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.PERMISSION_SEE_ALL_EXTERNAL","true","false","false","true","true","String","""android.permission.SEE_ALL_EXTERNAL""","","/**
 * The permission to access downloads to {@link DESTINATION_EXTERNAL}
 * which were downloaded by other applications.
 * @hide
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_TITLE","true","false","false","true","true","String","""title""","","/**
 * The name of the column where the initiating application can provided the
 * title of this download. The title will be displayed ito the user in the
 * list of downloads.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read/Write</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_FILE_ERROR","true","false","false","true","true","int","492","","/**
 * This download couldn't be completed because of a storage issue.
 * Typically, that's because the filesystem is missing or full.
 * Use the more specific {@link #STATUS_INSUFFICIENT_SPACE_ERROR}
 * and {@link #STATUS_DEVICE_NOT_FOUND_ERROR} when appropriate.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_REFERER","true","false","false","true","true","String","""referer""","","/**
 * The name of the column containing the referer (sic) that the initiating
 * application wants the download manager to use for this download.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.PERMISSION_SEND_INTENTS","true","false","false","true","true","String","""android.permission.SEND_DOWNLOAD_COMPLETED_INTENTS""","","/**
 * The permission to send broadcasts on download completion
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The name of the column where the initiating application can provide the
 * description of this download. The description will be displayed to the
 * user in the list of downloads.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read/Write</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.CONTROL_PAUSED","true","false","false","true","true","int","1","","/**
 * This download must pause at the first opportunity.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_STATUS","true","false","false","true","true","String","""status""","","/**
 * The name of the column containing the current status of the download.
 * Applications can read this to follow the progress of each download. See
 * the STATUS_* constants for a list of legal values.
 * <P>Type: INTEGER</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_HTTP_EXCEPTION","true","false","false","true","true","int","496","","/**
 * This download couldn't be completed because of an
 * HttpException while setting up the request.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.DESTINATION_EXTERNAL","true","false","false","true","true","int","0","","/**
 * This download will be saved to the external storage. This is the
 * default behavior, and should be used for any file that the user
 * can freely access, copy, delete. Even with that destination,
 * unencrypted DRM files are saved in secure internal storage.
 * Downloads to the external destination only write files for which
 * there is a registered handler. The resulting files are accessible
 * by filename to all applications.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_CANCELED","true","false","false","true","true","int","490","","/**
 * This download was canceled
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_VISIBILITY","true","false","false","true","true","String","""visibility""","","/**
 * The name of the column containing the flags that controls whether the
 * download is displayed by the UI. See the VISIBILITY_* constants for
 * a list of legal values.
 * <P>Type: INTEGER</P>
 * <P>Owner can Init/Read/Write</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.PERMISSION_CACHE","true","false","false","true","true","String","""android.permission.ACCESS_CACHE_FILESYSTEM""","","/**
 * The permission to directly access the download manager's cache directory
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.PERMISSION_SEND_INTENTS","true","false","false","true","true","String","""android.permission.SEND_DOWNLOAD_COMPLETED_INTENTS""","","/**
 * The permission to send broadcasts on download completion
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.PERMISSION_ACCESS_ADVANCED","true","false","false","true","true","String","""android.permission.ACCESS_DOWNLOAD_MANAGER_ADVANCED""","","/**
 * The permission to access the download manager's advanced functions
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_RUNNING","true","false","false","true","true","int","192","","/**
 * This download has started
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_OTHER_UID","true","false","false","true","true","String","""otheruid""","","/**
 * The name of the column where the initiating application can provide the
 * UID of another application that is allowed to access this download. If
 * multiple applications share the same UID, all those applications will be
 * allowed to access this download. This column can be updated after the
 * download is initiated. This requires the permission
 * android.permission.ACCESS_DOWNLOAD_MANAGER_ADVANCED.
 * <P>Type: INTEGER</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.COLUMN_MIME_TYPE","true","false","false","true","true","String","""mimetype""","","/**
 * The name of the column containing the MIME type of the downloaded data.
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_INSUFFICIENT_SPACE_ERROR","true","false","false","true","true","int","498","","/**
 * This download couldn't be completed due to insufficient storage
 * space.  Typically, this is because the SD card is full.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_PRECONDITION_FAILED","true","false","false","true","true","int","412","","/**
 * This download was interrupted and cannot be resumed.
 * This is the code for the HTTP error ""Precondition Failed"", and it is
 * also used in situations where the client doesn't have an ETag at all.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.PERMISSION_ACCESS_ADVANCED","true","false","false","true","true","String","""android.permission.ACCESS_DOWNLOAD_MANAGER_ADVANCED""","","/**
 * The permission to access the download manager's advanced functions
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_USER_AGENT","true","false","false","true","true","String","""useragent""","","/**
 * The name of the column containing the user agent that the initiating
 * application wants the download manager to use for this download.
 * <P>Type: TEXT</P>
 * <P>Owner can Init</P>
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.STATUS_INSUFFICIENT_SPACE_ERROR","true","false","false","true","true","int","498","","/**
 * This download couldn't be completed due to insufficient storage
 * space.  Typically, this is because the SD card is full.
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_UNHANDLED_REDIRECT","true","false","false","true","true","int","493","","/**
 * This download couldn't be completed because of an HTTP
 * redirect response that the download manager couldn't
 * handle.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_NOTIFICATION_CLASS","true","false","false","true","true","String","""notificationclass""","","/**
 * The name of the column containing the component name of the class that
 * will receive notifications associated with the download. The
 * package/class combination is passed to
 * Intent.setClassName(String,String).
 * <P>Type: TEXT</P>
 * <P>Owner can Init/Read</P>
 */
","\android\provider\Downloads.java"
"android.provider.Impl.STATUS_UNHANDLED_HTTP_CODE","true","false","false","true","true","int","494","","/**
 * This download couldn't be completed because of an
 * unspecified unhandled HTTP code.
 */
","\android\provider\Downloads.java"
"android.provider.Downloads.COLUMN_LAST_MODIFICATION","true","false","false","true","true","String","""lastmod""","","/**
 * The name of the column containing the date at which some interesting
 * status changed in the download. Stored as a System.currentTimeMillis()
 * value.
 * <P>Type: BIGINT</P>
 * <P>Owner can Read</P>
 */
","\android\provider\Downloads.java"
"android.webkit.JWebCoreJavaBridge.REFRESH_PLUGINS","false","false","false","true","true","int","100","","/* package */
","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.mHasInstantTimer","false","false","true","false","false","boolean","","","// immediately.
","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.mHasDeferredTimers","false","false","true","false","false","boolean","","","","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.mTimerPaused","false","false","true","false","false","boolean","","","","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.TIMER_MESSAGE","false","false","true","true","true","int","1","","// Identifier for the timer message.
","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.mNativeBridge","false","false","true","false","false","int","","","// Native object pointer for interacting in native code.
","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.mPauseTimerRefCount","false","false","true","false","false","int","","","// Reference count the pause/resume of timers
","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.mCurrentMainWebView","false","false","true","false","false","WebView","","","// can get the proper Context.
","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.FUNCPTR_MESSAGE","false","false","true","true","true","int","2","","// ID for servicing functionptr queue
","\android\webkit\JWebCoreJavaBridge.java"
"android.webkit.JWebCoreJavaBridge.LOGTAG","false","false","true","true","true","String","""webkit-timers""","","// Log system identifier.
","\android\webkit\JWebCoreJavaBridge.java"
"android.app.SearchManager.mContext","false","false","true","false","true","Context","","","","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_QUERY","true","false","false","true","true","String","""suggest_intent_query""","","/**
 * Column name for suggestions cursor.  <i>Required if action is
 * {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH}, optional otherwise.</i>  If this
 * column exists <i>and</i> this element exists at the given row, this is the data that will be
 * used when forming the suggestion's query.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_FORMAT","true","false","false","true","true","String","""suggest_format""","","/**
 * Column name for suggestions cursor.  <i>Unused - can be null or column can be omitted.</i>
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.mCancelListener","false","false","false","false","false","OnCancelListener","null","","/* package */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_MIME_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/vnd.android.search.suggest""","","/**
 * MIME type for suggestions data.  You'll use this in your suggestions content provider
 * in the getType() function.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_INTENT_COMPONENT_NAME","true","false","false","true","true","String","""suggest_intent_component""","","/**
 * TODO: Remove
 *
 * @hide
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_PARAMETER_LIMIT","true","false","false","true","true","String","""limit""","","/**
 * Query parameter added to suggestion queries to limit the number of suggestions returned.
 * This limit is only advisory and suggestion providers may chose to ignore it.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.INTENT_ACTION_NONE","true","false","false","true","true","String","""android.search.action.ZILCH""","","/**
 * If a suggestion has this value in {@link #SUGGEST_COLUMN_INTENT_ACTION},
 * the search dialog will take no action.
 *
 * @hide
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_URI_PATH_QUERY","true","false","false","true","true","String","""search_suggest_query""","","/**
 * Uri path for queried suggestions data.  This is the path that the search manager
 * will use when querying your content provider for suggestions data based on user input
 * (e.g. looking for partial matches).
 * Typically you'll use this with a URI matcher.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.DBG","false","false","true","true","true","boolean","false","","","\android\app\SearchManager.java"
"android.app.SearchManager.SEARCH_MODE","true","false","false","true","true","String","""search_mode""","","/**
 * Intent extra data key: Use {@link android.content.Intent#getBundleExtra
 * content.Intent.getBundleExtra(SEARCH_MODE)} to get the search mode used
 * to launch the intent.
 * The only current value for this is {@link #MODE_GLOBAL_SEARCH_SUGGESTION}.
 *
 * @hide
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.TAG","false","false","true","true","true","String","""SearchManager""","","","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_NEVER_MAKE_SHORTCUT","true","false","false","true","true","String","""_-1""","","/**
 * Column value for suggestion column {@link #SUGGEST_COLUMN_SHORTCUT_ID} when a suggestion
 * should not be stored as a shortcut in global search.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.INTENT_ACTION_SEARCH_SETTINGS_CHANGED","true","false","false","true","true","String","""android.search.action.SETTINGS_CHANGED""","","/**
 * Intent action broadcasted to inform that the search settings have changed in some way.
 * Either searchables have been enabled or disabled, or a different web search provider
 * has been chosen.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_INTENT_DATA","true","false","false","true","true","String","""suggest_intent_data""","","/**
 * Column name for suggestions cursor.  <i>Optional.</i>  If this column exists <i>and</i>
 * this element exists at the given row, this is the data that will be used when
 * forming the suggestion's intent.  If the element is not provided, the data will be taken
 * from the android:searchSuggestIntentData field in your XML metadata.  If neither source
 * is provided, the Intent's data field will be null.  Note:  If your data is
 * the same for all suggestions, or can be described using a constant part and a specific ID,
 * it is more efficient to specify it using XML metadata and omit it from the cursor.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.mAssociatedPackage","false","false","true","false","false","String","","","/**
 * The package associated with this seach manager.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.ACTION_KEY","true","false","false","true","true","String","""action_key""","","/**
 * Intent extra data key: Use this key with Intent.ACTION_SEARCH and
 * {@link android.content.Intent#getIntExtra content.Intent.getIntExtra()}
 * to obtain the keycode that the user used to trigger this query.  It will be zero if the
 * user simply pressed the ""GO"" button on the search UI.  This is primarily used in conjunction
 * with the keycode attribute in the actionkey element of your searchable.xml configuration
 * file.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.EXTRA_DATA_KEY","true","false","false","true","true","String","""intent_extra_data_key""","","/**
 * Intent extra data key: This key will be used for the extra populated by the
 * {@link #SUGGEST_COLUMN_INTENT_EXTRA_DATA} column.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_TEXT_2_URL","true","false","false","true","true","String","""suggest_text_2_url""","","/**
 * Column name for suggestions cursor.  <i>Optional.</i> This is a URL that will be shown
 * as the second line of text instead of {@link #SUGGEST_COLUMN_TEXT_2}. This is a separate
 * column so that the search UI knows to display the text as a URL, e.g. by using a different
 * color. If this column is absent, or has the value {@code null},
 * {@link #SUGGEST_COLUMN_TEXT_2} will be used instead.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.CONTEXT_IS_VOICE","true","false","false","true","true","String","""android.search.CONTEXT_IS_VOICE""","","/**
 * This means that context is voice, and therefore the SearchDialog should
 * continue showing the microphone until the user indicates that he/she does
 * not want to re-speak (e.g. by typing).
 *
 * @hide
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.EXTRA_SELECT_QUERY","true","false","false","true","true","String","""select_query""","","/**
 * Boolean extra data key for {@link #INTENT_ACTION_GLOBAL_SEARCH} intents. If {@code true},
 * the initial query should be selected when the global search activity is started, so
 * that the user can easily replace it with another query.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SHORTCUT_MIME_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/vnd.android.search.suggest""","","/**
 * MIME type for shortcut validation.  You'll use this in your suggestions content provider
 * in the getType() function.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_SPINNER_WHILE_REFRESHING","true","false","false","true","true","String","""suggest_spinner_while_refreshing""","","/**
 * Column name for suggestions cursor. <i>Optional.</i> This column is used to specify
 * that a spinner should be shown in lieu of an icon2 while the shortcut of this suggestion
 * is being refreshed.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.INTENT_ACTION_SEARCH_SETTINGS","true","false","false","true","true","String","""android.search.action.SEARCH_SETTINGS""","","/**
 * Intent action for starting the global search settings activity.
 * The global search provider should handle this intent.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_ICON_1","true","false","false","true","true","String","""suggest_icon_1""","","/**
 * Column name for suggestions cursor.  <i>Optional.</i>  If your cursor includes this column,
 * then all suggestions will be provided in a format that includes space for two small icons,
 * one at the left and one at the right of each suggestion.  The data in the column must
 * be a resource ID of a drawable, or a URI in one of the following formats:
 *
 * <ul>
 * <li>content ({@link android.content.ContentResolver#SCHEME_CONTENT})</li>
 * <li>android.resource ({@link android.content.ContentResolver#SCHEME_ANDROID_RESOURCE})</li>
 * <li>file ({@link android.content.ContentResolver#SCHEME_FILE})</li>
 * </ul>
 *
 * See {@link android.content.ContentResolver#openAssetFileDescriptor(Uri, String)}
 * for more information on these schemes.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_ICON_2","true","false","false","true","true","String","""suggest_icon_2""","","/**
 * Column name for suggestions cursor.  <i>Optional.</i>  If your cursor includes this column,
 * then all suggestions will be provided in a format that includes space for two small icons,
 * one at the left and one at the right of each suggestion.  The data in the column must
 * be a resource ID of a drawable, or a URI in one of the following formats:
 *
 * <ul>
 * <li>content ({@link android.content.ContentResolver#SCHEME_CONTENT})</li>
 * <li>android.resource ({@link android.content.ContentResolver#SCHEME_ANDROID_RESOURCE})</li>
 * <li>file ({@link android.content.ContentResolver#SCHEME_FILE})</li>
 * </ul>
 *
 * See {@link android.content.ContentResolver#openAssetFileDescriptor(Uri, String)}
 * for more information on these schemes.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.MENU_KEYCODE","true","false","false","true","true","int","KeyEvent.KEYCODE_S","","/**
 * This is a shortcut definition for the default menu key to use for invoking search.
 *
 * See Menu.Item.setAlphabeticShortcut() for more information.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_SHORTCUT_ID","true","false","false","true","true","String","""suggest_shortcut_id""","","/**
 * Column name for suggestions cursor. <i>Optional.</i>  This column is used to indicate whether
 * a search suggestion should be stored as a shortcut, and whether it should be refreshed.  If
 * missing, the result will be stored as a shortcut and never validated.  If set to
 * {@link #SUGGEST_NEVER_MAKE_SHORTCUT}, the result will not be stored as a shortcut.
 * Otherwise, the shortcut id will be used to check back for an up to date suggestion using
 * {@link #SUGGEST_URI_PATH_SHORTCUT}.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_TEXT_2","true","false","false","true","true","String","""suggest_text_2""","","/**
 * Column name for suggestions cursor.  <i>Optional.</i>  If your cursor includes this column,
 * then all suggestions will be provided in a two-line format.  The second line of text is in
 * a much smaller appearance.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_TEXT_1","true","false","false","true","true","String","""suggest_text_1""","","/**
 * Column name for suggestions cursor.  <i>Required.</i>  This is the primary line of text that
 * will be presented to the user as the suggestion.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.ACTION_MSG","true","false","false","true","true","String","""action_msg""","","/**
 * Intent extra data key: Use this key with Intent.ACTION_SEARCH and
 * {@link android.content.Intent#getStringExtra content.Intent.getStringExtra()}
 * to obtain the action message that was defined for a particular search action key and/or
 * suggestion.  It will be null if the search was launched by typing ""enter"", touched the the
 * ""GO"" button, or other means not involving any action key.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.INTENT_ACTION_GLOBAL_SEARCH","true","false","false","true","true","String","""android.search.action.GLOBAL_SEARCH""","","/**
 * Intent action for starting the global search activity.
 * The global search provider should handle this intent.
 *
 * Supported extra data keys: {@link #QUERY},
 * {@link #EXTRA_SELECT_QUERY},
 * {@link #APP_DATA}.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.mDismissListener","false","false","false","false","false","OnDismissListener","null","","/* package */
","\android\app\SearchManager.java"
"android.app.SearchManager.mSearchDialog","false","false","true","false","false","SearchDialog","","","","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_BACKGROUND_COLOR","true","false","false","true","true","String","""suggest_background_color""","","/**
 * Column name for suggestions cursor. <i>Optional.</i>  This column is used to specify the
 * cursor item's background color if it needs a non-default background color. A non-zero value
 * indicates a valid background color to override the default.
 *
 * @hide For internal use, not part of the public API.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.QUERY","true","false","false","true","true","String","""query""","","/**
 * Intent extra data key: Use this key with
 * {@link android.content.Intent#getStringExtra
 * content.Intent.getStringExtra()}
 * to obtain the query string from Intent.ACTION_SEARCH.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.INTENT_ACTION_WEB_SEARCH_SETTINGS","true","false","false","true","true","String","""android.search.action.WEB_SEARCH_SETTINGS""","","/**
 * Intent action for starting a web search provider's settings activity.
 * Web search providers should handle this intent if they have provider-specific
 * settings to implement.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_INTENT_EXTRA_DATA","true","false","false","true","true","String","""suggest_intent_extra_data""","","/**
 * Column name for suggestions cursor.  <i>Optional.</i>  If this column exists <i>and</i>
 * this element exists at the given row, this is the data that will be used when
 * forming the suggestion's intent. If not provided, the Intent's extra data field will be null.
 * This column allows suggestions to provide additional arbitrary data which will be included as
 * an extra under the key {@link #EXTRA_DATA_KEY}.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.MENU_KEY","true","false","false","true","true","char","'s'","","/**
 * This is a shortcut definition for the default menu key to use for invoking search.
 *
 * See Menu.Item.setAlphabeticShortcut() for more information.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.CURSOR_EXTRA_KEY_IN_PROGRESS","true","false","false","true","true","String","""in_progress""","","/**
 * Boolean extra data key for a suggestion provider to return in {@link Cursor#getExtras} to
 * indicate that the search is not complete yet. This can be used by the search UI
 * to indicate that a search is in progress. The suggestion provider can return partial results
 * this way and send a change notification on the cursor when more results are available.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.APP_DATA","true","false","false","true","true","String","""app_data""","","/**
 * Intent extra data key: Use this key with Intent.ACTION_SEARCH and
 * {@link android.content.Intent#getBundleExtra
 * content.Intent.getBundleExtra()}
 * to obtain any additional app-specific data that was inserted by the
 * activity that launched the search.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.INTENT_ACTION_SEARCHABLES_CHANGED","true","false","false","true","true","String","""android.search.action.SEARCHABLES_CHANGED""","","/**
 * Intent action broadcasted to inform that the searchables list or default have changed.
 * Components should handle this intent if they cache any searchable data and wish to stay
 * up to date on changes.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.mService","false","false","true","true","false","ISearchManager","","","/**
 * Reference to the shared system search service.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.USER_QUERY","true","false","false","true","true","String","""user_query""","","/**
 * Intent extra data key: Use this key with
 * {@link android.content.Intent#getStringExtra
 * content.Intent.getStringExtra()}
 * to obtain the query string typed in by the user.
 * This may be different from the value of {@link #QUERY}
 * if the intent is the result of selecting a suggestion.
 * In that case, {@link #QUERY} will contain the value of
 * {@link #SUGGEST_COLUMN_QUERY} for the suggestion, and
 * {@link #USER_QUERY} will contain the string typed by the
 * user.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_INTENT_ACTION","true","false","false","true","true","String","""suggest_intent_action""","","/**
 * Column name for suggestions cursor.  <i>Optional.</i>  If this column exists <i>and</i>
 * this element exists at the given row, this is the action that will be used when
 * forming the suggestion's intent.  If the element is not provided, the action will be taken
 * from the android:searchSuggestIntentAction field in your XML metadata.  <i>At least one of
 * these must be present for the suggestion to generate an intent.</i>  Note:  If your action is
 * the same for all suggestions, it is more efficient to specify it using XML metadata and omit
 * it from the cursor.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_URI_PATH_SHORTCUT","true","false","false","true","true","String","""search_suggest_shortcut""","","/**
 * Uri path for shortcut validation.  This is the path that the search manager will use when
 * querying your content provider to refresh a shortcutted suggestion result and to check if it
 * is still valid.  When asked, a source may return an up to date result, or no result.  No
 * result indicates the shortcut refers to a no longer valid sugggestion.
 *
 * @see #SUGGEST_COLUMN_SHORTCUT_ID
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.SUGGEST_COLUMN_INTENT_DATA_ID","true","false","false","true","true","String","""suggest_intent_data_id""","","/**
 * Column name for suggestions cursor.  <i>Optional.</i>  If this column exists <i>and</i>
 * this element exists at the given row, then ""/"" and this value will be appended to the data
 * field in the Intent.  This should only be used if the data field has already been set to an
 * appropriate base string.
 */
","\android\app\SearchManager.java"
"android.app.SearchManager.mHandler","false","false","false","false","true","Handler","","","/* package */
","\android\app\SearchManager.java"
"android.util.SparseIntArray.mKeys","false","false","true","false","false","int","","","","\android\util\SparseIntArray.java"
"android.util.SparseIntArray.mValues","false","false","true","false","false","int","","","","\android\util\SparseIntArray.java"
"android.util.SparseIntArray.mSize","false","false","true","false","false","int","","","","\android\util\SparseIntArray.java"
"android.os.Vibrator.mToken","false","false","true","false","true","Binder","new Binder()","","","\android\os\Vibrator.java"
"android.os.Vibrator.mService","false","false","false","false","false","IVibratorService","","","","\android\os\Vibrator.java"
"android.webkit.MockGeolocation.sMockGeolocation","false","false","true","true","false","MockGeolocation","","","// Global instance of a MockGeolocation
","\android\webkit\MockGeolocation.java"
"android.net.http.ConnectionThread.mConnectionManager","false","false","true","false","false","RequestQueue.ConnectionManager","","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.mContext","false","false","true","false","false","Context","","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.mTotalThreadTime","false","false","false","false","false","long","","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.mWaiting","false","false","true","false","false","boolean","","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.mRunning","false","false","true","false","false","boolean","true","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.mRequestFeeder","false","false","true","false","false","RequestFeeder","","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.mCurrentThreadTime","false","false","false","false","false","long","","","// Performance probe
","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.mId","false","false","true","false","false","int","","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.mConnection","false","false","false","false","false","Connection","","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.WAIT_TICK","false","false","false","true","true","int","1000","","","\android\net\http\ConnectionThread.java"
"android.net.http.ConnectionThread.WAIT_TIMEOUT","false","false","false","true","true","int","5000","","","\android\net\http\ConnectionThread.java"
"android.test.InstrumentationTestSuite.mInstrumentation","false","false","true","false","true","Instrumentation","","","","\android\test\InstrumentationTestSuite.java"
"android.content.ContentResolver.SYNC_ERROR_TOO_MANY_RETRIES","true","false","false","true","true","int","7","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_INITIALIZE","true","false","false","true","true","String","""initialize""","","/**
 * Set by the SyncManager to request that the SyncAdapter initialize itself for
 * the given account/authority pair. One required initialization step is to
 * ensure that {@link #setIsSyncable(android.accounts.Account, String, int)} has been
 * called with a >= 0 value. When this flag is set the SyncAdapter does not need to
 * do a full sync, though it is allowed to do so.
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_OBSERVER_TYPE_PENDING","true","false","false","true","true","int","1 << 1","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SLOW_THRESHOLD_MILLIS","false","false","true","true","true","int","500","","// sampled accordingly.
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_OBSERVER_TYPE_ALL","true","false","false","true","true","int","0x7fffffff","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SCHEME_ANDROID_RESOURCE","true","false","false","true","true","String","""android.resource""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_FORCE","true","false","false","true","true","String","""force""","@Deprecated","/**
 * @deprecated instead use
 * {@link #SYNC_EXTRAS_MANUAL}
 */
","\android\content\ContentResolver.java"
"android.content.ParcelFileDescriptorInner.mReleaseProviderFlag","false","false","true","false","false","boolean","false","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.sContentService","false","false","true","true","false","IContentService","","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.TAG","false","false","true","true","true","String","""ContentResolver""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS","true","false","false","true","true","int","1","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_ERROR_PARSE","true","false","false","true","true","int","4","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_IGNORE_BACKOFF","true","false","false","true","true","String","""ignore_backoff""","","/**
 * If this extra is set to true then any backoffs for the initial attempt (e.g. due to retries)
 * are ignored by the sync scheduler. If this request fails and gets rescheduled then the
 * retries will still honor the backoff.
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS","true","false","false","true","true","int","1 << 0","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS","true","false","false","true","true","String","""deletions_override""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_UPLOAD","true","false","false","true","true","String","""upload""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.mRandom","false","false","true","false","true","Random","new Random()","","// guarded by itself
","\android\content\ContentResolver.java"
"android.content.ContentResolver.mContentProvider","false","false","true","false","false","IContentProvider","","","","\android\content\ContentResolver.java"
"android.content.ParcelFileDescriptorInner.TAG","true","false","false","true","true","String","""ParcelFileDescriptorInner""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_DO_NOT_RETRY","true","false","false","true","true","String","""do_not_retry""","","/**
 * If this extra is set to true then the request will not be retried if it fails.
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_MANUAL","true","false","false","true","true","String","""force""","","/**
 * Setting this extra is the equivalent of setting both {@link #SYNC_EXTRAS_IGNORE_SETTINGS}
 * and {@link #SYNC_EXTRAS_IGNORE_BACKOFF}
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_ACCOUNT","true","false","false","true","true","String","""account""","@Deprecated","/**
 * @deprecated instead use
 * {@link #requestSync(android.accounts.Account, String, android.os.Bundle)}
 */
","\android\content\ContentResolver.java"
"android.content.CursorWrapperInner.TAG","true","false","false","true","true","String","""CursorWrapperInner""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SCHEME_CONTENT","true","false","false","true","true","String","""content""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SCHEME_FILE","true","false","false","true","true","String","""file""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_ERROR_AUTHENTICATION","true","false","false","true","true","int","2","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.r","true","false","false","false","false","Resources","","","","\android\content\ContentResolver.java"
"android.content.CursorWrapperInner.mCloseFlag","false","false","true","false","false","boolean","false","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_OBSERVER_TYPE_ACTIVE","true","false","false","true","true","int","1 << 2","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.mCloseFlag","false","false","true","false","false","boolean","false","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_ERROR_IO","true","false","false","true","true","int","3","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_EXPEDITED","true","false","false","true","true","String","""expedited""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.CONTENT_SERVICE_NAME","true","false","false","true","true","String","""content""","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.mContext","false","false","true","false","true","Context","","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS","true","false","false","true","true","String","""discard_deletions""","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_ERROR_CONFLICT","true","false","false","true","true","int","5","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.OpenResourceIdResult.id","true","false","false","false","false","int","","","","\android\content\ContentResolver.java"
"android.content.OpenResourceIdResult.r","true","false","false","false","false","Resources","","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_OBSERVER_TYPE_STATUS","true","false","false","true","true","int","1 << 3","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ParcelFileDescriptorInner.mContentProvider","false","false","true","false","false","IContentProvider","","","","\android\content\ContentResolver.java"
"android.content.CursorWrapperInner.mContentProvider","false","false","true","false","false","IContentProvider","","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_ERROR_INTERNAL","true","false","false","true","true","int","8","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.CURSOR_ITEM_BASE_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item""","","/**
 * This is the Android platform's base MIME type for a content: URI
 * containing a Cursor of a single item.  Applications should use this
 * as the base type along with their own sub-type of their content: URIs
 * that represent a particular item.  For example, hypothetical IMAP email
 * client may have a URI
 * <code>content://com.company.provider.imap/inbox/1</code> for a particular
 * message in the inbox, whose MIME type would be reported as
 * <code>CURSOR_ITEM_BASE_TYPE + ""/vnd.company.imap-msg""</code>
 *
 * <p>Compare with {@link #CURSOR_DIR_BASE_TYPE}.
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_ERROR_TOO_MANY_DELETIONS","true","false","false","true","true","int","6","","/**
 * @hide
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.SYNC_EXTRAS_IGNORE_SETTINGS","true","false","false","true","true","String","""ignore_settings""","","/**
 * If this extra is set to true then the sync settings (like getSyncAutomatically())
 * are ignored by the sync scheduler.
 */
","\android\content\ContentResolver.java"
"android.content.ContentResolver.id","true","false","false","false","false","int","","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.mReleaseProviderFlag","false","false","true","false","false","boolean","false","","","\android\content\ContentResolver.java"
"android.content.ContentResolver.CURSOR_DIR_BASE_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir""","","/**
 * This is the Android platform's base MIME type for a content: URI
 * containing a Cursor of zero or more items.  Applications should use this
 * as the base type along with their own sub-type of their content: URIs
 * that represent a directory of items.  For example, hypothetical IMAP email
 * client may have a URI
 * <code>content://com.company.provider.imap/inbox</code> for all of the
 * messages in its inbox, whose MIME type would be reported as
 * <code>CURSOR_DIR_BASE_TYPE + ""/vnd.company.imap-msg""</code>
 *
 * <p>Note how the base MIME type varies between this and
 * {@link #CURSOR_ITEM_BASE_TYPE} depending on whether there is
 * one single item or multiple items in the data set, while the sub-type
 * remains the same because in either case the data structure contained
 * in the cursor is the same.
 */
","\android\content\ContentResolver.java"
"android.pim.RecurrenceSet.rrules","true","false","false","false","false","EventRecurrence","null","","// TODO: make these final?
","\android\pim\RecurrenceSet.java"
"android.pim.RecurrenceSet.exdates","true","false","false","false","false","long","null","","","\android\pim\RecurrenceSet.java"
"android.pim.RecurrenceSet.exrules","true","false","false","false","false","EventRecurrence","null","","","\android\pim\RecurrenceSet.java"
"android.pim.RecurrenceSet.RULE_SEPARATOR","false","false","true","true","true","String","""\n""","","","\android\pim\RecurrenceSet.java"
"android.pim.RecurrenceSet.FOLDING_SEPARATOR","false","false","true","true","true","String","""\n ""","","","\android\pim\RecurrenceSet.java"
"android.pim.RecurrenceSet.TAG","false","false","true","true","true","String","""CalendarProvider""","","","\android\pim\RecurrenceSet.java"
"android.pim.RecurrenceSet.FOLD_RE","false","false","true","true","true","Pattern","Pattern.compile("".{75}"")","","","\android\pim\RecurrenceSet.java"
"android.pim.RecurrenceSet.rdates","true","false","false","false","false","long","null","","","\android\pim\RecurrenceSet.java"
"android.pim.RecurrenceSet.IGNORABLE_ICAL_WHITESPACE_RE","false","false","true","true","true","Pattern","Pattern.compile(""(?:\\r\\n?|\\n)[ \t]"")","","","\android\pim\RecurrenceSet.java"
"android.accounts.AccountAuthenticatorCache.sSerializer","false","false","true","true","true","MySerializer","new MySerializer()","","","\android\accounts\AccountAuthenticatorCache.java"
"android.accounts.AccountAuthenticatorCache.TAG","false","false","true","true","true","String","""Account""","","","\android\accounts\AccountAuthenticatorCache.java"
"android.widget.ArrayAdapter.mFieldId","false","false","true","false","false","int","0","","/**
 * If the inflated resource is not a TextView, {@link #mFieldId} is used to find
 * a TextView inside the inflated views hierarchy. This field must contain the
 * identifier that matches the one defined in the resource file.
 */
","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mNotifyOnChange","false","false","true","false","false","boolean","true","","/**
 * Indicates whether or not {@link #notifyDataSetChanged()} must be called whenever
 * {@link #mObjects} is modified.
 */
","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mDropDownResource","false","false","true","false","false","int","","","/**
 * The resource indicating what views to inflate to display the content of this
 * array adapter in a drop down widget.
 */
","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mLock","false","false","true","false","true","Object","new Object()","","/**
 * Lock used to modify the content of {@link #mObjects}. Any write operation
 * performed on the array should be synchronized on this lock. This lock is also
 * used by the filter (see {@link #getFilter()} to make a synchronized copy of
 * the original array of data.
 */
","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mFilter","false","false","true","false","false","ArrayFilter","","","","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mResource","false","false","true","false","false","int","","","/**
 * The resource indicating what views to inflate to display the content of this
 * array adapter.
 */
","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mContext","false","false","true","false","false","Context","","","","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mInflater","false","false","true","false","false","LayoutInflater","","","","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mObjects","false","false","true","false","false","List<T>","","","/**
 * Contains the list of objects that represent the data of this ArrayAdapter.
 * The content of this list is referred to as ""the array"" in the documentation.
 */
","\android\widget\ArrayAdapter.java"
"android.widget.ArrayAdapter.mOriginalValues","false","false","true","false","false","ArrayList<T>","","","","\android\widget\ArrayAdapter.java"
"com.android.internal.util.FastXmlSerializer.mOutputStream","false","false","true","false","false","OutputStream","","","","\com\android\internal\util\FastXmlSerializer.java"
"com.android.internal.util.FastXmlSerializer.mWriter","false","false","true","false","false","Writer","","","","\com\android\internal\util\FastXmlSerializer.java"
"com.android.internal.util.FastXmlSerializer.mBytes","false","false","true","false","false","ByteBuffer","ByteBuffer.allocate(BUFFER_LEN)","","","\com\android\internal\util\FastXmlSerializer.java"
"com.android.internal.util.FastXmlSerializer.mCharset","false","false","true","false","false","CharsetEncoder","","","","\com\android\internal\util\FastXmlSerializer.java"
"com.android.internal.util.FastXmlSerializer.mPos","false","false","true","false","false","int","","","","\com\android\internal\util\FastXmlSerializer.java"
"com.android.internal.util.FastXmlSerializer.BUFFER_LEN","false","false","true","true","true","int","8192","","","\com\android\internal\util\FastXmlSerializer.java"
"com.android.internal.util.FastXmlSerializer.ESCAPE_TABLE","false","false","true","true","true","String","new String[] { // 0-7
null, // 0-7
null, // 0-7
null, // 0-7
null, // 0-7
null, // 0-7
null, // 0-7
null, // 0-7
null, // 8-15
null, // 8-15
null, // 8-15
null, // 8-15
null, // 8-15
null, // 8-15
null, // 8-15
null, // 8-15
null, // 16-23
null, // 16-23
null, // 16-23
null, // 16-23
null, // 16-23
null, // 16-23
null, // 16-23
null, // 16-23
null, // 24-31
null, // 24-31
null, // 24-31
null, // 24-31
null, // 24-31
null, // 24-31
null, // 24-31
null, // 24-31
null, // 32-39
null, // 32-39
null, // 32-39
""&quot;"", // 32-39
null, // 32-39
null, // 32-39
null, // 32-39
""&amp;"", // 32-39
null, // 40-47
null, // 40-47
null, // 40-47
null, // 40-47
null, // 40-47
null, // 40-47
null, // 40-47
null, // 40-47
null, // 48-55
null, // 48-55
null, // 48-55
null, // 48-55
null, // 48-55
null, // 48-55
null, // 48-55
null, // 48-55
null, // 56-63
null, // 56-63
null, // 56-63
null, // 56-63
null, // 56-63
""&lt;"", // 56-63
null, // 56-63
""&gt;"", // 56-63
null }","","","\com\android\internal\util\FastXmlSerializer.java"
"com.android.internal.util.FastXmlSerializer.mInTag","false","false","true","false","false","boolean","","","","\com\android\internal\util\FastXmlSerializer.java"
"com.android.internal.util.FastXmlSerializer.mText","false","false","true","false","true","char","new char[BUFFER_LEN]","","","\com\android\internal\util\FastXmlSerializer.java"
"android.net.InterfaceConfiguration.interfaceFlags","true","false","false","false","false","String","","","","\android\net\InterfaceConfiguration.java"
"android.net.InterfaceConfiguration.hwAddr","true","false","false","false","false","String","","","","\android\net\InterfaceConfiguration.java"
"android.net.InterfaceConfiguration.ipAddr","true","false","false","false","false","int","","","","\android\net\InterfaceConfiguration.java"
"android.net.InterfaceConfiguration.CREATOR","true","false","false","true","true","Creator<InterfaceConfiguration>","new Creator<InterfaceConfiguration>() {

    public InterfaceConfiguration createFromParcel(Parcel in) {
        InterfaceConfiguration info = new InterfaceConfiguration();
        info.hwAddr = in.readString();
        info.ipAddr = in.readInt();
        info.netmask = in.readInt();
        info.interfaceFlags = in.readString();
        return info;
    }

    public InterfaceConfiguration[] newArray(int size) {
        return new InterfaceConfiguration[size];
    }
}","","/**
 * Implement the Parcelable interface {@hide}
 */
","\android\net\InterfaceConfiguration.java"
"android.net.InterfaceConfiguration.netmask","true","false","false","false","false","int","","","","\android\net\InterfaceConfiguration.java"
"android.net.LocalSocketAddress.namespace","false","false","true","false","true","Namespace","","","","\android\net\LocalSocketAddress.java"
"android.net.LocalSocketAddress.name","false","false","true","false","true","String","","","","\android\net\LocalSocketAddress.java"
"android.net.LocalSocketAddress.id","false","false","true","false","false","int","","","/**
 * The id matches with a #define in include/cutils/sockets.h
 */
","\android\net\LocalSocketAddress.java"
"android.text.format.DateFormat.SECONDS","true","false","false","true","true","char","'s'","","/**
 * This designator indicates the seconds of the minute.
 *
 * Examples for 7 seconds past the minute:
 * s -> 7
 * ss -> 07
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.sIs24Hour","false","false","true","true","false","boolean","","","","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.MINUTE","true","false","false","true","true","char","'m'","","/**
 * This designator indicates the minute of the hour.
 *
 * Examples for 7 minutes past the hour:
 * m -> 7
 * mm -> 07
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.TIME_ZONE","true","false","false","true","true","char","'z'","","/**
 * This designator indicates the offset of the timezone from GMT.
 *
 * Example for US/Pacific timezone:
 * z -> -0800
 * zz -> PST
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.sLocaleLock","false","false","true","true","true","Object","new Object()","","","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.CAPITAL_AM_PM","true","false","false","true","true","char","'A'","","/**
 * This designator indicates whether the <code>HOUR</code> field is before
 * or after noon.  The output is capitalized.
 *
 * Examples:
 * A -> A or P
 * AA -> AM or PM
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.DATE","true","false","false","true","true","char","'d'","","/**
 * This designator indicates the day of the month.
 *
 * Examples for the 9th of the month:
 * d -> 9
 * dd -> 09
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.HOUR_OF_DAY","true","false","false","true","true","char","'k'","","/**
 * This designator indicates the hour of the day in 24 hour format.
 *
 * Example for 3pm:
 * k -> 15
 *
 * Examples for midnight:
 * k -> 0
 * kk -> 00
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.DAY","true","false","false","true","true","char","'E'","","/**
 * This designator indicates the name of the day of the week.
 *
 * Examples for Sunday:
 * E -> Sun
 * EEEE -> Sunday
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.MONTH","true","false","false","true","true","char","'M'","","/**
 * This designator indicates the month of the year
 *
 * Examples for September:
 * M -> 9
 * MM -> 09
 * MMM -> Sep
 * MMMM -> September
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.YEAR","true","false","false","true","true","char","'y'","","/**
 * This designator indicates the year.
 *
 * Examples for 2006
 * y -> 06
 * yyyy -> 2006
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.QUOTE","true","false","false","true","true","char","'\''","","/**
 * Text in the format string that should be copied verbatim rather that
 * interpreted as formatting codes must be surrounded by the <code>QUOTE</code>
 * character.  If you need to embed a literal <code>QUOTE</code> character in
 * the output text then use two in a row.
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.AM_PM","true","false","false","true","true","char","'a'","","/**
 * This designator indicates whether the <code>HOUR</code> field is before
 * or after noon.  The output is lower-case.
 *
 * Examples:
 * a -> a or p
 * aa -> am or pm
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.HOUR","true","false","false","true","true","char","'h'","","/**
 * This designator indicates the hour of the day in 12 hour format.
 *
 * Examples for 3pm:
 * h -> 3
 * hh -> 03
 */
","\android\text\format\DateFormat.java"
"android.text.format.DateFormat.sIs24HourLocale","false","false","true","true","false","Locale","","","","\android\text\format\DateFormat.java"
"android.view.animation.CycleInterpolator.mCycles","false","false","true","false","false","float","","","","\android\view\animation\CycleInterpolator.java"
"android.text.Metrics.width","true","false","false","false","false","int","","","","\android\text\BoringLayout.java"
"android.text.BoringLayout.mEllipsizedWidth","false","false","true","false","false","int","","","","\android\text\BoringLayout.java"
"android.text.BoringLayout.FIRST_RIGHT_TO_LEFT","false","false","true","true","true","char","'\u0590'","","","\android\text\BoringLayout.java"
"android.text.BoringLayout.mPaint","false","false","true","false","false","Paint","","","","\android\text\BoringLayout.java"
"android.text.BoringLayout.mMax","false","false","true","false","false","float","","","","\android\text\BoringLayout.java"
"android.text.BoringLayout.sTemp","false","false","true","true","true","TextPaint","new TextPaint()","","","\android\text\BoringLayout.java"
"android.text.BoringLayout.mBottom","false","false","false","false","false","int","","","// for Direct
","\android\text\BoringLayout.java"
"android.text.BoringLayout.mDirect","false","false","true","false","false","String","","","","\android\text\BoringLayout.java"
"android.text.BoringLayout.mTopPadding","false","false","true","false","false","int","","","/* package */
","\android\text\BoringLayout.java"
"android.text.BoringLayout.width","true","false","false","false","false","int","","","","\android\text\BoringLayout.java"
"android.preference.PreferenceManager.TAG","false","false","true","true","true","String","""PreferenceManager""","","","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mOnPreferenceTreeClickListener","false","false","true","false","false","OnPreferenceTreeClickListener","","","","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mActivityDestroyListeners","false","false","true","false","false","List<OnActivityDestroyListener>","","","/**
 * List of activity destroy listeners.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.METADATA_KEY_PREFERENCES","true","false","false","true","true","String","""android.preference""","","/**
 * The Activity meta-data key for its XML preference hierarchy.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mSharedPreferencesMode","false","false","true","false","false","int","","","/**
 * The SharedPreferences mode that will be used for all {@link Preference}s
 * managed by this instance.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mSharedPreferences","false","false","true","false","false","SharedPreferences","","","/**
 * Cached shared preferences.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mNextRequestCode","false","false","true","false","false","int","","","/**
 * The counter for unique request codes.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mActivityStopListeners","false","false","true","false","false","List<OnActivityStopListener>","","","/**
 * List of activity stop listeners.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mContext","false","false","true","false","false","Context","","","/**
 * The context to use. This should always be set.
 *
 * @see #mActivity
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mSharedPreferencesName","false","false","true","false","false","String","","","/**
 * The SharedPreferences name that will be used for all {@link Preference}s
 * managed by this instance.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mPreferencesScreens","false","false","true","false","false","List<DialogInterface>","","","/**
 * List of dialogs that should be dismissed when we receive onNewIntent in
 * our PreferenceActivity.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mPreferenceScreen","false","false","true","false","false","PreferenceScreen","","","/**
 * The {@link PreferenceScreen} at the root of the preference hierarchy.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mNextId","false","false","true","false","false","long","0","","/**
 * The counter for unique IDs.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mEditor","false","false","true","false","false","SharedPreferences.Editor","","","/**
 * If in no-commit mode, the shared editor to give out (which will be
 * committed when exiting no-commit mode).
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mNoCommit","false","false","true","false","false","boolean","","","/**
 * Blocks commits from happening on the shared editor. This is used when
 * inflating the hierarchy. Do not set this directly, use {@link #setNoCommit(boolean)}
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mActivityResultListeners","false","false","true","false","false","List<OnActivityResultListener>","","","/**
 * List of activity result listeners.
 */
","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.KEY_HAS_SET_DEFAULT_VALUES","true","false","false","true","true","String","""_has_set_default_values""","","","\android\preference\PreferenceManager.java"
"android.preference.PreferenceManager.mActivity","false","false","true","false","false","Activity","","","/**
 * @see #getActivity()
 */
","\android\preference\PreferenceManager.java"
"com.android.internal.util.Info.orgState","false","false","true","false","false","HierarchicalState","","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.Info.state","false","false","true","false","false","HierarchicalState","","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.ProcessedMessages.orgState","false","false","true","false","false","HierarchicalState","","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.ProcessedMessages.mCount","false","false","true","false","false","int","0","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.ProcessedMessages.mMessages","false","false","true","false","false","Vector<Info>","new Vector<Info>()","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.ProcessedMessages.mMaxSize","false","false","true","false","false","int","DEFAULT_SIZE","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.ProcessedMessages.mOldestIndex","false","false","true","false","false","int","0","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.Info.what","false","false","true","false","false","int","","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.ProcessedMessages.what","false","false","true","false","false","int","","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.ProcessedMessages.state","false","false","true","false","false","HierarchicalState","","","","\com\android\internal\util\ProcessedMessages.java"
"com.android.internal.util.ProcessedMessages.DEFAULT_SIZE","true","false","false","true","true","int","20","","","\com\android\internal\util\ProcessedMessages.java"
"android.app.ContextImpl.mUiModeManager","false","false","true","false","false","UiModeManager","null","","","\android\app\ContextImpl.java"
"android.app.ApplicationPackageManager.mCachedSafeMode","false","false","false","false","false","int","-1","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mOuterContext","false","false","true","false","false","Context","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.DEBUG_ICONS","false","false","true","true","true","boolean","false","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mFile","false","false","true","false","true","File","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mMap","false","false","true","false","false","Map","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mTheme","false","false","true","false","false","Resources.Theme","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.iconId","false","false","false","false","true","int","","","","\android\app\ContextImpl.java"
"android.app.EditorImpl.mClear","false","false","true","false","false","boolean","false","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mVibrator","false","false","true","false","false","Vibrator","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mReceiverRestrictedContext","false","false","true","false","false","Context","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mAudioManager","false","false","true","false","false","AudioManager","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mListeners","false","false","true","false","false","WeakHashMap<OnSharedPreferenceChangeListener,Object>","","","","\android\app\ContextImpl.java"
"android.app.ApplicationPackageManager.mContext","false","false","true","false","true","ContextImpl","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sAlarmManager","false","false","true","true","false","AlarmManager","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mMainThread","false","false","true","false","true","ActivityThread","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mClipboardManager","false","false","true","false","false","ClipboardManager","null","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mBackupFile","false","false","true","false","true","File","","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mModified","false","false","true","false","true","Map<String,Object>","Maps.newHashMap()","","","\android\app\ContextImpl.java"
"android.app.ApplicationPackageManager.iconId","false","false","false","false","true","int","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mAccountManager","false","false","true","false","false","AccountManager","","","// protected by mSync
","\android\app\ContextImpl.java"
"android.app.ApplicationPackageManager.sSync","false","false","true","true","true","Object","new Object()","","","\android\app\ContextImpl.java"
"android.app.ApplicationPackageManager.sIconCache","false","false","true","true","false","HashMap<ResourceName,WeakReference<Drawable>>","new HashMap<ResourceName, WeakReference<Drawable>>()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mExternalFilesDir","false","false","true","false","false","File","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mMode","false","false","true","false","true","int","","","","\android\app\ContextImpl.java"
"android.app.EditorImpl.mModified","false","false","true","false","true","Map<String,Object>","Maps.newHashMap()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mSync","false","false","true","false","true","Object","new Object()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mPM","false","false","true","false","true","IPackageManager","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sSharedPrefs","false","false","true","true","true","HashMap<File,SharedPreferencesImpl>","new HashMap<File, SharedPreferencesImpl>()","","","\android\app\ContextImpl.java"
"android.app.ResourceName.packageName","false","false","false","false","true","String","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mSensorManager","false","false","true","false","false","SensorManager","null","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mMap","false","false","true","false","false","Map","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mDevicePolicyManager","false","false","true","false","false","DevicePolicyManager","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.DEBUG","false","false","true","true","true","boolean","false","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mFileStatus","false","false","true","false","true","FileStatus","new FileStatus()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mWallpaperManager","false","false","true","false","false","WallpaperManager","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sIconCache","false","false","true","true","false","HashMap<ResourceName,WeakReference<Drawable>>","new HashMap<ResourceName, WeakReference<Drawable>>()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mModified","false","false","true","false","true","Map<String,Object>","Maps.newHashMap()","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mContent","false","false","true","true","true","Object","new Object()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sLocationManager","false","false","true","true","false","LocationManager","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mClear","false","false","true","false","false","boolean","false","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.TAG","false","false","true","true","true","String","""ApplicationContext""","","","\android\app\ContextImpl.java"
"android.app.ResourceName.iconId","false","false","false","false","true","int","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mThemeResource","false","false","true","false","false","int","0","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sPowerManager","false","false","true","true","false","PowerManager","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mNotificationManager","false","false","true","false","false","NotificationManager","null","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mFile","false","false","true","false","true","File","","","","\android\app\ContextImpl.java"
"android.app.ApplicationPackageManager.packageName","false","false","false","false","true","String","","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mMode","false","false","true","false","true","int","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.packageName","false","false","false","false","true","String","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mRestricted","false","false","true","false","false","boolean","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sSync","false","false","true","true","true","Object","new Object()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mContent","false","false","true","true","true","Object","new Object()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mBackupFile","false","false","true","false","true","File","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.EMPTY_FILE_LIST","false","false","true","true","true","String","{}","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mTimestamp","false","false","true","false","false","long","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mFilesDir","false","false","true","false","false","File","","","","\android\app\ContextImpl.java"
"android.app.ApplicationPackageManager.sStringCache","false","false","true","true","false","HashMap<ResourceName,WeakReference<CharSequence>>","new HashMap<ResourceName, WeakReference<CharSequence>>()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mPackageInfo","false","false","false","false","false","ActivityThread.PackageInfo","","","/*package*/
","\android\app\ContextImpl.java"
"android.app.ContextImpl.mStorageManager","false","false","true","false","false","StorageManager","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sConnectivityManager","false","false","true","true","false","ConnectivityManager","","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mFileStatus","false","false","true","false","true","FileStatus","new FileStatus()","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mContentResolver","false","false","true","false","false","ApplicationContentResolver","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mStatusBarManager","false","false","true","false","false","StatusBarManager","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mDatabasesDir","false","false","true","false","false","File","","","","\android\app\ContextImpl.java"
"android.app.ApplicationContentResolver.mMainThread","false","false","true","false","true","ActivityThread","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mPreferencesDir","false","false","true","false","false","File","","","","\android\app\ContextImpl.java"
"android.app.ApplicationPackageManager.mPM","false","false","true","false","true","IPackageManager","","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mListeners","false","false","true","false","false","WeakHashMap<OnSharedPreferenceChangeListener,Object>","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mSearchManager","false","false","true","false","false","SearchManager","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mTelephonyManager","false","false","true","false","false","TelephonyManager","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sWifiManager","false","false","true","true","false","WifiManager","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mLayoutInflater","false","false","true","false","false","LayoutInflater","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mCachedSafeMode","false","false","false","false","false","int","-1","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mPackageManager","false","false","true","false","false","PackageManager","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sInstanceCount","false","false","true","true","false","long","0","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mDropBoxManager","false","false","true","false","false","DropBoxManager","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mCacheDir","false","false","true","false","false","File","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mContext","false","false","true","false","true","ContextImpl","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mTimestamp","false","false","true","false","false","long","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sThrottleManager","false","false","true","true","false","ThrottleManager","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mActivityManager","false","false","true","false","false","ActivityManager","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mResources","false","false","true","false","false","Resources","","","","\android\app\ContextImpl.java"
"android.app.SharedPreferencesImpl.mClear","false","false","true","false","false","boolean","false","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mActivityToken","false","false","true","false","false","IBinder","null","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.mExternalCacheDir","false","false","true","false","false","File","","","","\android\app\ContextImpl.java"
"android.app.ContextImpl.sStringCache","false","false","true","true","false","HashMap<ResourceName,WeakReference<CharSequence>>","new HashMap<ResourceName, WeakReference<CharSequence>>()","","","\android\app\ContextImpl.java"
"android.gesture.GestureOverlayView.mOnGesturePerformedListeners","false","false","true","false","true","ArrayList<OnGesturePerformedListener>","new ArrayList<OnGesturePerformedListener>()","","// TODO: Make this a list of WeakReferences
","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mOnGestureListeners","false","false","true","false","true","ArrayList<OnGestureListener>","new ArrayList<OnGestureListener>()","","// TODO: Make this a list of WeakReferences
","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.FADE_ANIMATION_RATE","false","false","true","true","true","int","16","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mGestureStrokeWidth","false","false","true","false","false","float","12.0f","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mGestureStrokeAngleThreshold","false","false","true","false","false","float","40.0f","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mFadeEnabled","false","false","true","false","false","boolean","true","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mCurveEndX","false","false","true","false","false","float","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mCurveEndY","false","false","true","false","false","float","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mHandleGestureActions","false","false","true","false","false","boolean","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.GESTURE_STROKE_TYPE_SINGLE","true","false","false","true","true","int","0","","","\android\gesture\GestureOverlayView.java"
"android.gesture.FadeOutRunnable.fireActionPerformed","false","false","false","false","false","boolean","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.ORIENTATION_HORIZONTAL","true","false","false","true","true","int","0","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mIsGesturing","false","false","true","false","false","boolean","false","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mIsFadingOut","false","false","true","false","false","boolean","false","","// fading out effect
","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mGestureStrokeType","false","false","true","false","false","int","GESTURE_STROKE_TYPE_SINGLE","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mFadingAlpha","false","false","true","false","false","float","1.0f","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mFadingStart","false","false","true","false","false","long","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mInvalidRect","false","false","true","false","true","Rect","new Rect()","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mGestureVisible","false","false","true","false","false","boolean","true","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mY","false","false","true","false","false","float","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mX","false","false","true","false","false","float","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mFadeOffset","false","false","true","false","false","long","420","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mOrientation","false","false","true","false","false","int","ORIENTATION_VERTICAL","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mPath","false","false","true","false","true","Path","new Path()","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mGestureStrokeSquarenessTreshold","false","false","true","false","false","float","0.275f","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mResetGesture","false","false","true","false","false","boolean","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mStrokeBuffer","false","false","true","false","true","ArrayList<GesturePoint>","new ArrayList<GesturePoint>(100)","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.GESTURE_STROKE_TYPE_MULTIPLE","true","false","false","true","true","int","1","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mGesturePaint","false","false","true","false","true","Paint","new Paint()","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.fireActionPerformed","false","false","false","false","false","boolean","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mInvalidateExtraBorder","false","false","true","false","false","int","10","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mUncertainGestureColor","false","false","true","false","false","int","0x48FFFF00","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mOnGesturingListeners","false","false","true","false","true","ArrayList<OnGesturingListener>","new ArrayList<OnGesturingListener>()","","// TODO: Make this a list of WeakReferences
","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mInterceptEvents","false","false","true","false","false","boolean","true","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.resetMultipleStrokes","false","false","false","false","false","boolean","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mCurrentGesture","false","false","true","false","false","Gesture","","","// current gesture
","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mFadeDuration","false","false","true","false","false","long","150","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mPreviousWasGesturing","false","false","true","false","false","boolean","false","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.DITHER_FLAG","false","false","true","true","true","boolean","true","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mCertainGestureColor","false","false","true","false","false","int","0xFFFFFF00","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mInterpolator","false","false","true","false","true","AccelerateDecelerateInterpolator","new AccelerateDecelerateInterpolator()","","","\android\gesture\GestureOverlayView.java"
"android.gesture.FadeOutRunnable.resetMultipleStrokes","false","false","false","false","false","boolean","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mFadingHasStarted","false","false","true","false","false","boolean","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mGestureStrokeLengthThreshold","false","false","true","false","false","float","50.0f","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mFadingOut","false","false","true","false","true","FadeOutRunnable","new FadeOutRunnable()","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mCurrentColor","false","false","true","false","false","int","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.GESTURE_RENDERING_ANTIALIAS","false","false","true","true","true","boolean","true","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mIsListeningForGestures","false","false","true","false","false","boolean","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.mTotalLength","false","false","true","false","false","float","","","","\android\gesture\GestureOverlayView.java"
"android.gesture.GestureOverlayView.ORIENTATION_VERTICAL","true","false","false","true","true","int","1","","","\android\gesture\GestureOverlayView.java"
"android.text.method.ReplacementCharSequence.mSource","false","false","true","false","false","CharSequence","","","","\android\text\method\ReplacementTransformationMethod.java"
"android.text.method.ReplacementTransformationMethod.mSpanned","false","false","true","false","false","Spanned","","","","\android\text\method\ReplacementTransformationMethod.java"
"android.text.method.SpannedReplacementCharSequence.mSpanned","false","false","true","false","false","Spanned","","","","\android\text\method\ReplacementTransformationMethod.java"
"android.text.method.ReplacementCharSequence.mOriginal","false","false","true","false","false","char","","","","\android\text\method\ReplacementTransformationMethod.java"
"android.text.method.ReplacementTransformationMethod.mOriginal","false","false","true","false","false","char","","","","\android\text\method\ReplacementTransformationMethod.java"
"android.text.method.ReplacementTransformationMethod.mSource","false","false","true","false","false","CharSequence","","","","\android\text\method\ReplacementTransformationMethod.java"
"android.view.accessibility.AccessibilityManager.sInstanceSync","false","false","false","true","true","Object","new Object()","","","\android\view\accessibility\AccessibilityManager.java"
"android.view.accessibility.AccessibilityManager.sInstance","false","false","true","true","false","AccessibilityManager","","","","\android\view\accessibility\AccessibilityManager.java"
"android.view.accessibility.AccessibilityManager.mService","false","false","false","false","true","IAccessibilityManager","","","","\android\view\accessibility\AccessibilityManager.java"
"android.view.accessibility.AccessibilityManager.mClient","false","false","false","false","true","IAccessibilityManagerClient.Stub","new IAccessibilityManagerClient.Stub() {

    public void setEnabled(boolean enabled) {
        mHandler.obtainMessage(DO_SET_ENABLED, enabled ? 1 : 0, 0).sendToTarget();
    }
}","","","\android\view\accessibility\AccessibilityManager.java"
"android.view.accessibility.AccessibilityManager.mHandler","false","false","false","false","true","Handler","","","","\android\view\accessibility\AccessibilityManager.java"
"android.view.accessibility.AccessibilityManager.mIsEnabled","false","false","false","false","false","boolean","","","","\android\view\accessibility\AccessibilityManager.java"
"android.view.accessibility.AccessibilityManager.LOG_TAG","false","false","true","true","true","String","""AccessibilityManager""","","","\android\view\accessibility\AccessibilityManager.java"
"android.view.accessibility.AccessibilityManager.DO_SET_ENABLED","false","false","true","true","true","int","10","","","\android\view\accessibility\AccessibilityManager.java"
"com.android.internal.service.wallpaper.ImageWallpaper.mLock","false","false","true","false","true","Object","new Object()","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.DrawableEngine.mLock","false","false","true","false","true","Object","new Object()","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.ImageWallpaper.mThread","false","false","true","false","false","HandlerThread","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.ImageWallpaper.mReceiver","false","false","true","false","false","WallpaperObserver","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.ImageWallpaper.mWallpaperManager","false","false","false","false","false","WallpaperManager","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.DrawableEngine.mBackground","false","false","false","false","false","Drawable","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.ImageWallpaper.mBackground","false","false","false","false","false","Drawable","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.ImageWallpaper.mYOffset","false","false","false","false","false","float","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.DrawableEngine.mReceiver","false","false","true","false","false","WallpaperObserver","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.ImageWallpaper.mXOffset","false","false","false","false","false","float","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.DrawableEngine.mYOffset","false","false","false","false","false","float","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"com.android.internal.service.wallpaper.DrawableEngine.mXOffset","false","false","false","false","false","float","","","","\com\android\internal\service\wallpaper\ImageWallpaper.java"
"android.webkit.WebTextView.mCharacter","false","false","true","false","false","char","new char[1]","","// KeyEvents may be determined.
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mInSetTextAndKeepSelection","false","false","true","false","false","boolean","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mWidthSpec","false","false","true","false","false","int","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mHasPerformedLongClick","false","false","true","false","false","boolean","","","// an ACTION_DOWN MotionEvent
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mSingle","false","false","true","false","false","boolean","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mScrolled","false","false","true","false","false","boolean","","","// scroll or the web page to scroll.  Gets reset after a touch down.
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mDragStartX","false","false","true","false","false","float","","","// when a drag starts
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mDragStartY","false","false","true","false","false","float","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mGotEnterDown","false","false","true","false","false","boolean","","","// the shift key from working properly.
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mFromFocusChange","false","false","true","false","false","boolean","","","// selection.
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.NO_FILTERS","false","false","true","true","true","InputFilter","new InputFilter[0]","","// is made public/protected.
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mTextView","false","false","true","false","false","TextView","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mDragSent","false","false","true","false","false","boolean","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mGotTouchDown","false","false","true","false","false","boolean","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mDragStartTime","false","false","true","false","false","long","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mMaxLength","false","false","true","false","false","int","","","","\android\webkit\WebTextView.java"
"android.webkit.AutoCompleteAdapter.mTextView","false","false","true","false","false","TextView","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mHeightSpec","false","false","true","false","false","int","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mPreChange","false","false","true","false","false","String","","","// need to send down the DOM events.
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mFromWebKit","false","false","true","false","false","boolean","","","// we do not need to pass the selection back to webkit.
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mBackground","false","false","true","false","false","Drawable","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mFromSetInputType","false","false","true","false","false","boolean","","","// do not want to pass this change to webkit.
","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.LOGTAG","false","false","false","true","true","String","""webtextview""","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mWebView","false","false","true","false","false","WebView","","","","\android\webkit\WebTextView.java"
"android.webkit.WebTextView.mNodePointer","false","false","true","false","false","int","","","","\android\webkit\WebTextView.java"
"android.widget.SlidingDrawer.mMaximumMajorVelocity","false","false","true","false","true","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.MAXIMUM_TAP_VELOCITY","false","false","true","true","true","float","100.0f","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mCurrentAnimationTime","false","false","true","false","false","long","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mMaximumTapVelocity","false","false","true","false","true","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mVertical","false","false","true","false","false","boolean","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mVelocityUnits","false","false","true","false","true","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mAnimatedAcceleration","false","false","true","false","false","float","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mHandler","false","false","true","false","true","Handler","new SlidingHandler()","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mHandleWidth","false","false","true","false","false","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.ORIENTATION_VERTICAL","true","false","false","true","true","int","1","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mHandleId","false","false","true","false","true","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.ORIENTATION_HORIZONTAL","true","false","false","true","true","int","0","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mContentId","false","false","true","false","true","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mInvalidate","false","false","true","false","true","Rect","new Rect()","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mTracking","false","false","true","false","false","boolean","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mContent","false","false","true","false","false","View","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mOnDrawerCloseListener","false","false","true","false","false","OnDrawerCloseListener","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mTapThreshold","false","false","true","false","true","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mMaximumMinorVelocity","false","false","true","false","true","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mAnimationLastTime","false","false","true","false","false","long","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.EXPANDED_FULL_OPEN","false","false","true","true","true","int","-10001","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mHandle","false","false","true","false","false","View","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mLocked","false","false","true","false","false","boolean","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mOnDrawerScrollListener","false","false","true","false","false","OnDrawerScrollListener","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mAnimating","false","false","true","false","false","boolean","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mAnimateOnClick","false","false","true","false","false","boolean","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.MAXIMUM_MINOR_VELOCITY","false","false","true","true","true","float","150.0f","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.VELOCITY_UNITS","false","false","true","true","true","int","1000","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mExpanded","false","false","true","false","false","boolean","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.MSG_ANIMATE","false","false","true","true","true","int","1000","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.ANIMATION_FRAME_DURATION","false","false","true","true","true","int","1000 / 60","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mTopOffset","false","false","true","false","false","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mAnimatedVelocity","false","false","true","false","false","float","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mOnDrawerOpenListener","false","false","true","false","false","OnDrawerOpenListener","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mTouchDelta","false","false","true","false","false","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mAllowSingleTap","false","false","true","false","false","boolean","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mVelocityTracker","false","false","true","false","false","VelocityTracker","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.COLLAPSED_FULL_CLOSED","false","false","true","true","true","int","-10002","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.TAP_THRESHOLD","false","false","true","true","true","int","6","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.MAXIMUM_MAJOR_VELOCITY","false","false","true","true","true","float","200.0f","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mMaximumAcceleration","false","false","true","false","true","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mAnimationPosition","false","false","true","false","false","float","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mBottomOffset","false","false","true","false","false","int","","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.MAXIMUM_ACCELERATION","false","false","true","true","true","float","2000.0f","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mFrame","false","false","true","false","true","Rect","new Rect()","","","\android\widget\SlidingDrawer.java"
"android.widget.SlidingDrawer.mHandleHeight","false","false","true","false","false","int","","","","\android\widget\SlidingDrawer.java"
"com.android.internal.content.PackageHelper.RECOMMEND_INSTALL_EXTERNAL","true","false","false","true","true","int","2","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.APP_INSTALL_INTERNAL","true","false","false","true","true","int","1","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.RECOMMEND_FAILED_INVALID_LOCATION","true","false","false","true","true","int","-3","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.RECOMMEND_INSTALL_INTERNAL","true","false","false","true","true","int","1","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.APP_INSTALL_EXTERNAL","true","false","false","true","true","int","2","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.RECOMMEND_FAILED_ALREADY_EXISTS","true","false","false","true","true","int","-4","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.TAG","false","false","true","true","true","String","""PackageHelper""","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.RECOMMEND_MEDIA_UNAVAILABLE","true","false","false","true","true","int","-5","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.localLOGV","false","false","true","true","true","boolean","true","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.RECOMMEND_FAILED_INSUFFICIENT_STORAGE","true","false","false","true","true","int","-1","","","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.APP_INSTALL_AUTO","true","false","false","true","true","int","0","","// App installation location settings values
","\com\android\internal\content\PackageHelper.java"
"com.android.internal.content.PackageHelper.RECOMMEND_FAILED_INVALID_APK","true","false","false","true","true","int","-2","","","\com\android\internal\content\PackageHelper.java"
"android.widget.TabSpec.mIndicatorStrategy","false","false","true","false","false","IndicatorStrategy","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mLocalActivityManager","false","true","false","false","false","LocalActivityManager","null","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\TabHost.java"
"android.widget.TabSpec.mTag","false","false","true","false","false","String","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mTabContent","false","false","true","false","false","View","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mTabWidget","false","false","true","false","false","TabWidget","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mOnTabChangeListener","false","false","true","false","false","OnTabChangeListener","","","","\android\widget\TabHost.java"
"android.widget.IntentContentStrategy.mIntent","false","false","true","false","true","Intent","","","","\android\widget\TabHost.java"
"android.widget.LabelAndIconIndicatorStrategy.mLabel","false","false","true","false","true","CharSequence","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mCurrentView","false","false","true","false","false","View","null","","","\android\widget\TabHost.java"
"android.widget.FactoryContentStrategy.mFactory","false","false","true","false","false","TabContentFactory","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mContentStrategy","false","false","true","false","false","ContentStrategy","","","","\android\widget\TabHost.java"
"android.widget.FactoryContentStrategy.mTabContent","false","false","true","false","false","View","","","","\android\widget\TabHost.java"
"android.widget.ViewIdContentStrategy.mView","false","false","true","false","true","View","","","","\android\widget\TabHost.java"
"android.widget.IntentContentStrategy.mLaunchedView","false","false","true","false","false","View","","","","\android\widget\TabHost.java"
"android.widget.ViewIndicatorStrategy.mView","false","false","true","false","true","View","","","","\android\widget\TabHost.java"
"android.widget.FactoryContentStrategy.mTag","false","false","true","false","true","CharSequence","","","","\android\widget\TabHost.java"
"android.widget.TabSpec.mContentStrategy","false","false","true","false","false","ContentStrategy","","","","\android\widget\TabHost.java"
"android.widget.IntentContentStrategy.mTag","false","false","true","false","true","String","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mIntent","false","false","true","false","true","Intent","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mView","false","false","true","false","true","View","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mFactory","false","false","true","false","false","TabContentFactory","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mLabel","false","false","true","false","true","CharSequence","","","","\android\widget\TabHost.java"
"android.widget.LabelIndicatorStrategy.mLabel","false","false","true","false","true","CharSequence","","","","\android\widget\TabHost.java"
"android.widget.LabelAndIconIndicatorStrategy.mIcon","false","false","true","false","true","Drawable","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mTabKeyListener","false","false","true","false","false","OnKeyListener","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mCurrentTab","false","true","false","false","false","int","-1","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\TabHost.java"
"android.widget.TabHost.mTabSpecs","false","false","true","false","false","List<TabSpec>","new ArrayList<TabSpec>(2)","","","\android\widget\TabHost.java"
"android.widget.TabHost.mLaunchedView","false","false","true","false","false","View","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mTag","false","false","true","false","true","String","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mIndicatorStrategy","false","false","true","false","false","IndicatorStrategy","","","","\android\widget\TabHost.java"
"android.widget.TabHost.mIcon","false","false","true","false","true","Drawable","","","","\android\widget\TabHost.java"
"android.accounts.Account.CREATOR","true","false","false","true","true","Creator<Account>","new Creator<Account>() {

    public Account createFromParcel(Parcel source) {
        return new Account(source);
    }

    public Account[] newArray(int size) {
        return new Account[size];
    }
}","","","\android\accounts\Account.java"
"android.accounts.Account.name","true","false","false","false","true","String","","","","\android\accounts\Account.java"
"android.accounts.Account.type","true","false","false","false","true","String","","","","\android\accounts\Account.java"
"android.preference.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\CheckBoxPreference.java"
"android.preference.CheckBoxPreference.mSummaryOn","false","false","true","false","false","CharSequence","","","","\android\preference\CheckBoxPreference.java"
"android.preference.SavedState.checked","false","false","false","false","false","boolean","","","","\android\preference\CheckBoxPreference.java"
"android.preference.CheckBoxPreference.mDisableDependentsState","false","false","true","false","false","boolean","","","","\android\preference\CheckBoxPreference.java"
"android.preference.CheckBoxPreference.mAccessibilityManager","false","false","true","false","false","AccessibilityManager","","","","\android\preference\CheckBoxPreference.java"
"android.preference.CheckBoxPreference.mChecked","false","false","true","false","false","boolean","","","","\android\preference\CheckBoxPreference.java"
"android.preference.CheckBoxPreference.mSendAccessibilityEventViewClickedType","false","false","true","false","false","boolean","","","","\android\preference\CheckBoxPreference.java"
"android.preference.CheckBoxPreference.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\CheckBoxPreference.java"
"android.preference.CheckBoxPreference.mSummaryOff","false","false","true","false","false","CharSequence","","","","\android\preference\CheckBoxPreference.java"
"android.preference.CheckBoxPreference.checked","false","false","false","false","false","boolean","","","","\android\preference\CheckBoxPreference.java"
"android.speech.srec.MicrophoneInputStream.mAudioRecord","false","false","true","false","false","int","0","","","\android\speech\srec\MicrophoneInputStream.java"
"android.speech.srec.MicrophoneInputStream.TAG","false","false","true","true","true","String","""MicrophoneInputStream""","","","\android\speech\srec\MicrophoneInputStream.java"
"android.speech.srec.MicrophoneInputStream.mOneByte","false","false","true","false","false","byte","new byte[1]","","","\android\speech\srec\MicrophoneInputStream.java"
"android.view.animation.AnimationSet.PROPERTY_FILL_BEFORE_MASK","false","false","true","true","true","int","0x2","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.mTempTransformation","false","false","true","false","false","Transformation","new Transformation()","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.PROPERTY_CHANGE_BOUNDS_MASK","false","false","true","true","true","int","0x80","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.mStoredOffsets","false","false","true","false","false","long","","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.PROPERTY_DURATION_MASK","false","false","true","true","true","int","0x20","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.PROPERTY_REPEAT_MODE_MASK","false","false","true","true","true","int","0x4","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.PROPERTY_MORPH_MATRIX_MASK","false","false","true","true","true","int","0x40","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.mLastEnd","false","false","true","false","false","long","","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.mFlags","false","false","true","false","false","int","0","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.PROPERTY_SHARE_INTERPOLATOR_MASK","false","false","true","true","true","int","0x10","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.mAnimations","false","false","true","false","false","ArrayList<Animation>","new ArrayList<Animation>()","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.PROPERTY_FILL_AFTER_MASK","false","false","true","true","true","int","0x1","","","\android\view\animation\AnimationSet.java"
"android.view.animation.AnimationSet.PROPERTY_START_OFFSET_MASK","false","false","true","true","true","int","0x8","","","\android\view\animation\AnimationSet.java"
"android.content.SearchRecentSuggestionsProvider.URI_MATCH_SUGGEST","false","false","true","true","true","int","1","","// Uri and query support
","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mUriMatcher","false","false","true","false","false","UriMatcher","","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.sDatabaseName","false","false","true","true","true","String","""suggestions.db""","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.TAG","false","false","true","true","true","String","""SuggestionsProvider""","","// debugging support
","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mOpenHelper","false","false","true","false","false","SQLiteOpenHelper","","","// general database configuration and tables
","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.ORDER_BY","false","false","true","true","true","String","""date DESC""","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mSuggestSuggestionClause","false","false","true","false","false","String","","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mMode","false","false","true","false","false","int","","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.DATABASE_MODE_QUERIES","true","false","false","true","true","int","1","","/**
 * This mode bit configures the database to record recent queries.  <i>required</i>
 *
 * @see #setupSuggestions(String, int)
 */
","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mSuggestionProjection","false","false","true","false","false","String","","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mNewVersion","false","false","true","false","false","int","","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mTwoLineDisplay","false","false","true","false","false","boolean","","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.DATABASE_VERSION","false","false","true","true","true","int","2 * 256","","// 1->2   added UNIQUE constraint to display1 column
","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mSuggestionsUri","false","false","true","false","false","Uri","","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.DatabaseHelper.mNewVersion","false","false","true","false","false","int","","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.DATABASE_MODE_2LINES","true","false","false","true","true","int","2","","/**
 * This mode bit configures the database to include a 2nd annotation line with each entry.
 * <i>optional</i>
 *
 * @see #setupSuggestions(String, int)
 */
","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.sSuggestions","false","false","true","true","true","String","""suggestions""","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.mAuthority","false","false","true","false","false","String","","","// client-provided configuration values
","\android\content\SearchRecentSuggestionsProvider.java"
"android.content.SearchRecentSuggestionsProvider.NULL_COLUMN","false","false","true","true","true","String","""query""","","","\android\content\SearchRecentSuggestionsProvider.java"
"android.webkit.BrowserFrame.mLoadType","false","false","true","false","false","int","","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_FORWARD","false","false","false","true","true","int","2","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mIsMainFrame","false","false","true","false","false","boolean","","","// Is this frame the main frame?
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_RELOADALLOWINGSTALEDATA","false","false","false","true","true","int","5","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.TRANSITION_SWITCH_THRESHOLD","false","false","true","true","true","int","75","","// A progress threshold to switch from history Picture to live Picture
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_INDEXEDBACKFORWARD","false","false","false","true","true","int","3","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mWindowManager","false","false","true","false","true","WindowManager","","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mWebViewCore","false","false","true","false","true","WebViewCore","","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.NODOMAIN","false","false","true","true","true","int","1","","// These ids need to be in sync with enum rawResId in PlatformBridge.h
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mCommitted","false","false","true","false","false","boolean","true","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.MAX_OUTSTANDING_REQUESTS","false","false","true","true","true","int","300","","/**
 * Cap the number of LoadListeners that will be instantiated, so
 * we don't blow the GREF count.  Attempting to queue more than
 * this many requests will prompt an error() callback on the
 * request's LoadListener
 */
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mLoadInitFromJava","false","false","false","false","false","boolean","","","/* package */
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.ORIENTATION_CHANGED","false","false","false","true","true","int","1002","","// orientation change message
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.POLICY_USE","false","false","false","true","true","int","0","","// XXX: Must match PolicyAction in FrameLoaderTypes.h in webcore
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_STANDARD","false","false","false","true","true","int","0","","// Note: need to keep these in sync with FrameLoaderTypes.h in native
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_SAME","false","false","false","true","true","int","6","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mDatabase","false","false","true","false","true","WebViewDatabase","","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_COMPLETED","false","false","false","true","true","int","1001","","// a message posted when a frame loading is completed
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.sJavaBridge","false","false","false","true","false","JWebCoreJavaBridge","","","// requests from WebCore.
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_REDIRECT","false","false","false","true","true","int","7","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mContext","false","false","true","false","true","Context","","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_BACK","false","false","false","true","true","int","1","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.sConfigCallback","false","false","false","true","false","ConfigCallback","","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.LOADERROR","false","false","true","true","true","int","2","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_RELOAD","false","false","false","true","true","int","4","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FRAME_LOADTYPE_REPLACE","false","false","false","true","true","int","8","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.FILE_UPLOAD_LABEL","false","false","true","true","true","int","4","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.SUBMIT_LABEL","false","false","true","true","true","int","6","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mFirstLayoutDone","false","false","true","false","false","boolean","true","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.DRAWABLEDIR","false","false","true","true","true","int","3","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.POLICY_FUNCTION","false","false","false","true","true","int","1003","","// a message posted when the user decides the policy
","\android\webkit\BrowserFrame.java"
"android.webkit.ConfigCallback.mWindowManager","false","false","true","false","true","WindowManager","","","","\android\webkit\BrowserFrame.java"
"android.webkit.ConfigCallback.mHandlers","false","false","true","false","true","ArrayList<WeakReference<Handler>>","new ArrayList<WeakReference<Handler>>()","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mCallbackProxy","false","false","true","false","true","CallbackProxy","","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mSettings","false","false","true","false","true","WebSettings","","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mHandlers","false","false","true","false","true","ArrayList<WeakReference<Handler>>","new ArrayList<WeakReference<Handler>>()","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mJSInterfaceMap","false","false","true","false","false","Map<String,Object>","","","// Attached Javascript interfaces
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.RESET_LABEL","false","false","true","true","true","int","5","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mNativeFrame","false","false","false","false","false","int","","","/*package*/
","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.POLICY_IGNORE","false","false","false","true","true","int","2","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.LOGTAG","false","false","true","true","true","String","""webkit""","","","\android\webkit\BrowserFrame.java"
"android.webkit.BrowserFrame.mBlockMessages","false","false","true","false","false","boolean","false","","// queue has been cleared,they are ignored.
","\android\webkit\BrowserFrame.java"
"android.text.method.LinkMovementMethod.CLICK","false","false","true","true","true","int","1","","","\android\text\method\LinkMovementMethod.java"
"android.text.method.LinkMovementMethod.sInstance","false","false","true","true","false","LinkMovementMethod","","","","\android\text\method\LinkMovementMethod.java"
"android.text.method.LinkMovementMethod.FROM_BELOW","false","false","true","true","false","Object","new NoCopySpan.Concrete()","","","\android\text\method\LinkMovementMethod.java"
"android.text.method.LinkMovementMethod.UP","false","false","true","true","true","int","2","","","\android\text\method\LinkMovementMethod.java"
"android.text.method.LinkMovementMethod.DOWN","false","false","true","true","true","int","3","","","\android\text\method\LinkMovementMethod.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mDataSetObserver","false","false","true","false","false","DataSetObserver","","","","\android\widget\AbsSpinner.java"
"android.widget.SavedState.selectedId","false","false","false","false","false","long","","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mSpinnerPadding","false","false","false","false","true","Rect","new Rect()","","","\android\widget\AbsSpinner.java"
"android.widget.SavedState.position","false","false","false","false","false","int","","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mSelectionBottomPadding","false","false","false","false","false","int","0","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.selectedId","false","false","false","false","false","long","","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mBlockLayoutRequests","false","false","false","false","false","boolean","","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mScrapHeap","false","false","true","false","true","SparseArray<View>","new SparseArray<View>()","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mTouchFrame","false","false","true","false","false","Rect","","","/**
 * Temporary frame to hold a child View's frame rectangle
 */
","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.position","false","false","false","false","false","int","","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mWidthMeasureSpec","false","false","false","false","false","int","","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mSelectionLeftPadding","false","false","false","false","false","int","0","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mRecycler","false","false","false","false","true","RecycleBin","new RecycleBin()","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mAdapter","false","false","false","false","false","SpinnerAdapter","","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mSelectionRightPadding","false","false","false","false","false","int","0","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mHeightMeasureSpec","false","false","false","false","false","int","","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.mSelectionTopPadding","false","false","false","false","false","int","0","","","\android\widget\AbsSpinner.java"
"android.widget.AbsSpinner.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\AbsSpinner.java"
"android.widget.RecycleBin.mScrapHeap","false","false","true","false","true","SparseArray<View>","new SparseArray<View>()","","","\android\widget\AbsSpinner.java"
"android.gesture.Instance.vector","false","false","false","false","true","float","","","// the feature vector
","\android\gesture\Instance.java"
"android.gesture.Instance.id","false","false","false","false","true","long","","","// the id of the instance
","\android\gesture\Instance.java"
"android.gesture.Instance.label","false","false","false","false","true","String","","","// the label can be null
","\android\gesture\Instance.java"
"android.gesture.Instance.PATCH_SAMPLE_SIZE","false","false","true","true","true","int","16","","","\android\gesture\Instance.java"
"android.gesture.Instance.SEQUENCE_SAMPLE_SIZE","false","false","true","true","true","int","16","","","\android\gesture\Instance.java"
"android.gesture.Instance.ORIENTATIONS","false","false","true","true","true","float","{ 0, (float) (Math.PI / 4), (float) (Math.PI / 2), (float) (Math.PI * 3 / 4), (float) Math.PI, -0, (float) (-Math.PI / 4), (float) (-Math.PI / 2), (float) (-Math.PI * 3 / 4), (float) -Math.PI }","","","\android\gesture\Instance.java"
"android.content.PeriodicSync.account","true","false","false","false","true","Account","","","/**
 * The account to be synced
 */
","\android\content\PeriodicSync.java"
"android.content.PeriodicSync.CREATOR","true","false","false","true","true","Creator<PeriodicSync>","new Creator<PeriodicSync>() {

    public PeriodicSync createFromParcel(Parcel source) {
        return new PeriodicSync(Account.CREATOR.createFromParcel(source), source.readString(), source.readBundle(), source.readLong());
    }

    public PeriodicSync[] newArray(int size) {
        return new PeriodicSync[size];
    }
}","","","\android\content\PeriodicSync.java"
"android.content.PeriodicSync.authority","true","false","false","false","true","String","","","/**
 * The authority of the sync
 */
","\android\content\PeriodicSync.java"
"android.content.PeriodicSync.extras","true","false","false","false","true","Bundle","","","/**
 * Any extras that parameters that are to be passed to the sync adapter.
 */
","\android\content\PeriodicSync.java"
"android.content.PeriodicSync.period","true","false","false","false","true","long","","","/**
 * How frequently the sync should be scheduled, in seconds.
 */
","\android\content\PeriodicSync.java"
"android.webkit.FrameLoader.mContentType","false","false","true","false","false","String","","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.CONTENT_TYPE","false","false","true","true","true","String","""content-type""","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mReferrer","false","false","true","false","false","String","","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mPostData","false","false","true","false","false","byte","","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.LOGTAG","false","false","true","true","true","String","""webkit""","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mListener","false","false","true","false","true","LoadListener","","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.URI_PROTOCOL","false","false","true","true","true","int","0x100","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mSettings","false","false","true","false","true","WebSettings","","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mNetwork","false","false","true","false","false","Network","","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mAboutBlank","false","false","true","true","true","String","""<!DOCTYPE html PUBLIC \""-//W3C//DTD HTML 4.01 Transitional//EB\"">"" + ""<html><head><title>about:blank</title></head><body></body></html>""","","// Contents of an about:blank page
","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mHeaders","false","false","true","false","false","Map<String,String>","","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mCacheMode","false","false","true","false","false","int","","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.HEADER_STR","false","false","false","true","true","String","""text/xml, text/html, "" + ""application/xhtml+xml, image/png, text/plain, */*;q=0.8""","","","\android\webkit\FrameLoader.java"
"android.webkit.FrameLoader.mMethod","false","false","true","false","true","String","","","","\android\webkit\FrameLoader.java"
"com.google.android.mms.pdu.PduContentTypes.contentTypes","false","false","false","true","true","String","{ ""*/*"", /* 0x00 */
""text/*"", /* 0x01 */
""text/html"", /* 0x02 */
""text/plain"", /* 0x03 */
""text/x-hdml"", /* 0x04 */
""text/x-ttml"", /* 0x05 */
""text/x-vCalendar"", /* 0x06 */
""text/x-vCard"", /* 0x07 */
""text/vnd.wap.wml"", /* 0x08 */
""text/vnd.wap.wmlscript"", /* 0x09 */
""text/vnd.wap.wta-event"", /* 0x0A */
""multipart/*"", /* 0x0B */
""multipart/mixed"", /* 0x0C */
""multipart/form-data"", /* 0x0D */
""multipart/byterantes"", /* 0x0E */
""multipart/alternative"", /* 0x0F */
""application/*"", /* 0x10 */
""application/java-vm"", /* 0x11 */
""application/x-www-form-urlencoded"", /* 0x12 */
""application/x-hdmlc"", /* 0x13 */
""application/vnd.wap.wmlc"", /* 0x14 */
""application/vnd.wap.wmlscriptc"", /* 0x15 */
""application/vnd.wap.wta-eventc"", /* 0x16 */
""application/vnd.wap.uaprof"", /* 0x17 */
""application/vnd.wap.wtls-ca-certificate"", /* 0x18 */
""application/vnd.wap.wtls-user-certificate"", /* 0x19 */
""application/x-x509-ca-cert"", /* 0x1A */
""application/x-x509-user-cert"", /* 0x1B */
""image/*"", /* 0x1C */
""image/gif"", /* 0x1D */
""image/jpeg"", /* 0x1E */
""image/tiff"", /* 0x1F */
""image/png"", /* 0x20 */
""image/vnd.wap.wbmp"", /* 0x21 */
""application/vnd.wap.multipart.*"", /* 0x22 */
""application/vnd.wap.multipart.mixed"", /* 0x23 */
""application/vnd.wap.multipart.form-data"", /* 0x24 */
""application/vnd.wap.multipart.byteranges"", /* 0x25 */
""application/vnd.wap.multipart.alternative"", /* 0x26 */
""application/xml"", /* 0x27 */
""text/xml"", /* 0x28 */
""application/vnd.wap.wbxml"", /* 0x29 */
""application/x-x968-cross-cert"", /* 0x2A */
""application/x-x968-ca-cert"", /* 0x2B */
""application/x-x968-user-cert"", /* 0x2C */
""text/vnd.wap.si"", /* 0x2D */
""application/vnd.wap.sic"", /* 0x2E */
""text/vnd.wap.sl"", /* 0x2F */
""application/vnd.wap.slc"", /* 0x30 */
""text/vnd.wap.co"", /* 0x31 */
""application/vnd.wap.coc"", /* 0x32 */
""application/vnd.wap.multipart.related"", /* 0x33 */
""application/vnd.wap.sia"", /* 0x34 */
""text/vnd.wap.connectivity-xml"", /* 0x35 */
""application/vnd.wap.connectivity-wbxml"", /* 0x36 */
""application/pkcs7-mime"", /* 0x37 */
""application/vnd.wap.hashed-certificate"", /* 0x38 */
""application/vnd.wap.signed-certificate"", /* 0x39 */
""application/vnd.wap.cert-response"", /* 0x3A */
""application/xhtml+xml"", /* 0x3B */
""application/wml+xml"", /* 0x3C */
""text/css"", /* 0x3D */
""application/vnd.wap.mms-message"", /* 0x3E */
""application/vnd.wap.rollover-certificate"", /* 0x3F */
""application/vnd.wap.locc+wbxml"", /* 0x40 */
""application/vnd.wap.loc+xml"", /* 0x41 */
""application/vnd.syncml.dm+wbxml"", /* 0x42 */
""application/vnd.syncml.dm+xml"", /* 0x43 */
""application/vnd.syncml.notification"", /* 0x44 */
""application/vnd.wap.xhtml+xml"", /* 0x45 */
""application/vnd.wv.csp.cir"", /* 0x46 */
""application/vnd.oma.dd+xml"", /* 0x47 */
""application/vnd.oma.drm.message"", /* 0x48 */
""application/vnd.oma.drm.content"", /* 0x49 */
""application/vnd.oma.drm.rights+xml"", /* 0x4A */
""application/vnd.oma.drm.rights+wbxml"", /* 0x4B */
""application/vnd.wv.csp+xml"", /* 0x4C */
""application/vnd.wv.csp+wbxml"", /* 0x4D */
""application/vnd.syncml.ds.notification"", /* 0x4E */
""audio/*"", /* 0x4F */
""video/*"", /* 0x50 */
""application/vnd.oma.dd2+xml"", /* 0x51 */
""application/mikey"" }","","/**
 * All content types. From:
 * http://www.openmobilealliance.org/tech/omna/omna-wsp-content-type.htm
 */
","\com\google\android\mms\pdu\PduContentTypes.java"
"android.inputmethodservice.Keyboard.verticalGap","true","false","false","false","false","int","","","/**
 * Vertical gap following this row.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.label","true","false","false","false","false","CharSequence","","","/**
 * Label to display
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mTotalWidth","false","false","true","false","false","int","","","/**
 * Total width of the keyboard, including left side gaps and keys, but not any gaps on the
 * right side.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEY_STATE_NORMAL_ON","false","false","true","true","true","int","{ android.R.attr.state_checkable, android.R.attr.state_checked }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.EDGE_RIGHT","true","false","false","true","true","int","0x02","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.rowEdgeFlags","true","false","false","false","false","int","","","/**
 * Edge flags for this row of keys. Possible values that can be assigned are
 * {@link Keyboard#EDGE_TOP EDGE_TOP} and {@link Keyboard#EDGE_BOTTOM EDGE_BOTTOM}
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mTotalHeight","false","false","true","false","false","int","","","/**
 * Total height of the keyboard, including the padding and keys
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.TAG_KEYBOARD","false","false","true","true","true","String","""Keyboard""","","// Keyboard XML Tags
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.popupResId","true","false","false","false","false","int","","","/**
 * If this key pops up a mini keyboard, this is the resource id for the XML layout for that
 * keyboard.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.pressed","true","false","false","false","false","boolean","","","/**
 * The current pressed state of this key
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.sticky","true","false","false","false","false","boolean","","","/**
 * Whether this key is sticky, i.e., a toggle key
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.KEY_STATE_PRESSED_ON","false","false","true","true","true","int","{ android.R.attr.state_pressed, android.R.attr.state_checkable, android.R.attr.state_checked }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.TAG","false","false","false","true","true","String","""Keyboard""","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.popupResId","true","false","false","false","false","int","","","/**
 * If this key pops up a mini keyboard, this is the resource id for the XML layout for that
 * keyboard.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.gap","true","false","false","false","false","int","","","/**
 * The horizontal gap before this key
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.width","true","false","false","false","false","int","","","/**
 * Width of the key, not including the gap
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.keyboard","false","false","true","false","false","Keyboard","","","/**
 * The keyboard that this key belongs to
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEYCODE_CANCEL","true","false","false","true","true","int","-3","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEY_STATE_PRESSED_OFF","false","false","true","true","true","int","{ android.R.attr.state_pressed, android.R.attr.state_checkable }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.edgeFlags","true","false","false","false","false","int","","","/**
 * Flags that specify the anchoring to edges of the keyboard for detecting touch events
 * that are just out of the boundary of the key. This is a bit mask of
 * {@link Keyboard#EDGE_LEFT}, {@link Keyboard#EDGE_RIGHT}, {@link Keyboard#EDGE_TOP} and
 * {@link Keyboard#EDGE_BOTTOM}.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.TAG_KEY","false","false","true","true","true","String","""Key""","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.popupCharacters","true","false","false","false","false","CharSequence","","","/**
 * Popup characters
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.y","true","false","false","false","false","int","","","/**
 * Y coordinate of the key in the keyboard layout
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.x","true","false","false","false","false","int","","","/**
 * X coordinate of the key in the keyboard layout
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Row.defaultHeight","true","false","false","false","false","int","","","/**
 * Default height of a key in this row.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.EDGE_BOTTOM","true","false","false","true","true","int","0x08","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mKeyHeight","false","false","true","false","false","int","","","/**
 * Current key height, while loading the keyboard
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.parent","false","false","true","false","false","Keyboard","","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Row.verticalGap","true","false","false","false","false","int","","","/**
 * Vertical gap following this row.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.on","true","false","false","false","false","boolean","","","/**
 * If this is a sticky key, is it on?
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.height","true","false","false","false","false","int","","","/**
 * Height of the key, not including the gap
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mLabel","false","false","true","false","false","CharSequence","","","/**
 * Keyboard label *
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.gap","true","false","false","false","false","int","","","/**
 * The horizontal gap before this key
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.KEY_STATE_PRESSED","false","false","true","true","true","int","{ android.R.attr.state_pressed }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEYCODE_SHIFT","true","false","false","true","true","int","-1","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mCellWidth","false","false","true","false","false","int","","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mDisplayHeight","false","false","true","false","false","int","","","/**
 * Height of the screen
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEYCODE_DELETE","true","false","false","true","true","int","-5","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.TAG_ROW","false","false","true","true","true","String","""Row""","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.height","true","false","false","false","false","int","","","/**
 * Height of the key, not including the gap
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mDefaultVerticalGap","false","false","true","false","false","int","","","/**
 * Default gap between rows
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mDefaultHorizontalGap","false","false","true","false","false","int","","","/**
 * Horizontal gap default for all rows
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.popupCharacters","true","false","false","false","false","CharSequence","","","/**
 * Popup characters
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mCellHeight","false","false","true","false","false","int","","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEY_STATE_PRESSED","false","false","true","true","true","int","{ android.R.attr.state_pressed }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mKeys","false","false","true","false","false","List<Key>","","","/**
 * List of keys in this keyboard
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.pressed","true","false","false","false","false","boolean","","","/**
 * The current pressed state of this key
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.icon","true","false","false","false","false","Drawable","","","/**
 * Icon to display instead of a label. Icon takes precedence over a label
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.KEY_STATE_PRESSED_OFF","false","false","true","true","true","int","{ android.R.attr.state_pressed, android.R.attr.state_checkable }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.codes","true","false","false","false","false","int","","","/**
 * All the key codes (unicode or custom code) that this key could generate, zero'th
 * being the most important.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mShiftKey","false","false","true","false","false","Key","","","/**
 * Key instance for the shift key, if present
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.sticky","true","false","false","false","false","boolean","","","/**
 * Whether this key is sticky, i.e., a toggle key
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mShifted","false","false","true","false","false","boolean","","","/**
 * Is the keyboard in the shifted state
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.KEY_STATE_NORMAL_ON","false","false","true","true","true","int","{ android.R.attr.state_checkable, android.R.attr.state_checked }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.width","true","false","false","false","false","int","","","/**
 * Width of the key, not including the gap
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Row.parent","false","false","true","false","false","Keyboard","","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mDisplayWidth","false","false","true","false","false","int","","","/**
 * Width of the screen available to fit the keyboard
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEYCODE_ALT","true","false","false","true","true","int","-6","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.x","true","false","false","false","false","int","","","/**
 * X coordinate of the key in the keyboard layout
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.y","true","false","false","false","false","int","","","/**
 * Y coordinate of the key in the keyboard layout
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mShiftKeyIndex","false","false","true","false","false","int","-1","","/**
 * Key index for the shift key, if present
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.EDGE_LEFT","true","false","false","true","true","int","0x01","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.repeatable","true","false","false","false","false","boolean","","","/**
 * Whether this key repeats itself when held down
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.text","true","false","false","false","false","CharSequence","","","/**
 * Text to output when pressed. This can be multiple characters, like "".com""
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.codes","true","false","false","false","false","int","","","/**
 * All the key codes (unicode or custom code) that this key could generate, zero'th
 * being the most important.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.KEY_STATE_NORMAL_OFF","false","false","true","true","true","int","{ android.R.attr.state_checkable }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Row.mode","true","false","false","false","false","int","","","/**
 * The keyboard mode for this row
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.keyboard","false","false","true","false","false","Keyboard","","","/**
 * The keyboard that this key belongs to
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mModifierKeys","false","false","true","false","false","List<Key>","","","/**
 * List of modifier keys such as Shift & Alt, if any
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mDefaultHeight","false","false","true","false","false","int","","","/**
 * Default key height
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.label","true","false","false","false","false","CharSequence","","","/**
 * Label to display
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mDefaultWidth","false","false","true","false","false","int","","","/**
 * Default key width
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.EDGE_TOP","true","false","false","true","true","int","0x04","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEYCODE_DONE","true","false","false","true","true","int","-4","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mKeyWidth","false","false","true","false","false","int","","","/**
 * Current key width, while loading the keyboard
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mKeyboardMode","false","false","true","false","false","int","","","/**
 * Keyboard mode, or zero, if none.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.GRID_HEIGHT","false","false","true","true","true","int","5","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.defaultHeight","true","false","false","false","false","int","","","/**
 * Default height of a key in this row.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.edgeFlags","true","false","false","false","false","int","","","/**
 * Flags that specify the anchoring to edges of the keyboard for detecting touch events
 * that are just out of the boundary of the key. This is a bit mask of
 * {@link Keyboard#EDGE_LEFT}, {@link Keyboard#EDGE_RIGHT}, {@link Keyboard#EDGE_TOP} and
 * {@link Keyboard#EDGE_BOTTOM}.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEYCODE_MODE_CHANGE","true","false","false","true","true","int","-2","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.iconPreview","true","false","false","false","false","Drawable","","","/**
 * Preview version of the icon, for the preview popup
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.modifier","true","false","false","false","false","boolean","","","/**
 * Whether this is a modifier key, such as Shift or Alt
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mode","true","false","false","false","false","int","","","/**
 * The keyboard mode for this row
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.SEARCH_DISTANCE","false","false","true","true","false","float","1.8f","","/**
 * Number of key widths from current touch point to search for nearest keys.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.GRID_WIDTH","false","false","true","true","true","int","10","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.icon","true","false","false","false","false","Drawable","","","/**
 * Icon to display instead of a label. Icon takes precedence over a label
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.KEY_STATE_NORMAL","false","false","true","true","true","int","{}","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEY_STATE_NORMAL","false","false","true","true","true","int","{}","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Row.defaultHorizontalGap","true","false","false","false","false","int","","","/**
 * Default horizontal gap between keys in this row.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.defaultWidth","true","false","false","false","false","int","","","/**
 * Default width of a key in this row.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Row.defaultWidth","true","false","false","false","false","int","","","/**
 * Default width of a key in this row.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.modifier","true","false","false","false","false","boolean","","","/**
 * Whether this is a modifier key, such as Shift or Alt
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.defaultHorizontalGap","true","false","false","false","false","int","","","/**
 * Default horizontal gap between keys in this row.
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.repeatable","true","false","false","false","false","boolean","","","/**
 * Whether this key repeats itself when held down
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.text","true","false","false","false","false","CharSequence","","","/**
 * Text to output when pressed. This can be multiple characters, like "".com""
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mGridNeighbors","false","false","true","false","false","int","","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Row.rowEdgeFlags","true","false","false","false","false","int","","","/**
 * Edge flags for this row of keys. Possible values that can be assigned are
 * {@link Keyboard#EDGE_TOP EDGE_TOP} and {@link Keyboard#EDGE_BOTTOM EDGE_BOTTOM}
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.GRID_SIZE","false","false","true","true","true","int","GRID_WIDTH * GRID_HEIGHT","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.iconPreview","true","false","false","false","false","Drawable","","","/**
 * Preview version of the icon, for the preview popup
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.mProximityThreshold","false","false","true","false","false","int","","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEY_STATE_NORMAL_OFF","false","false","true","true","true","int","{ android.R.attr.state_checkable }","","","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Key.on","true","false","false","false","false","boolean","","","/**
 * If this is a sticky key, is it on?
 */
","\android\inputmethodservice\Keyboard.java"
"android.inputmethodservice.Keyboard.KEY_STATE_PRESSED_ON","false","false","true","true","true","int","{ android.R.attr.state_pressed, android.R.attr.state_checkable, android.R.attr.state_checked }","","","\android\inputmethodservice\Keyboard.java"
"android.widget.CheckedTextView.mCheckMarkResource","false","false","true","false","false","int","","","","\android\widget\CheckedTextView.java"
"android.widget.CheckedTextView.mCheckMarkWidth","false","false","true","false","false","int","","","","\android\widget\CheckedTextView.java"
"android.widget.CheckedTextView.CHECKED_STATE_SET","false","false","true","true","true","int","{ R.attr.state_checked }","","","\android\widget\CheckedTextView.java"
"android.widget.CheckedTextView.mChecked","false","false","true","false","false","boolean","","","","\android\widget\CheckedTextView.java"
"android.widget.CheckedTextView.mCheckMarkDrawable","false","false","true","false","false","Drawable","","","","\android\widget\CheckedTextView.java"
"android.widget.CheckedTextView.mBasePaddingRight","false","false","true","false","false","int","","","","\android\widget\CheckedTextView.java"
"android.content.DefaultDataHandler.DEL","false","false","true","true","true","String","""del""","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.mValues","false","false","true","false","false","ContentValues","","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.SELECT","false","false","true","true","true","String","""select""","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.POSTFIX","false","false","true","true","true","String","""postfix""","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.ROW","false","false","true","true","true","String","""row""","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.mContentResolver","false","false","true","false","false","ContentResolver","","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.ARG","false","false","true","true","true","String","""arg""","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.mUris","false","false","true","false","false","Stack<Uri>","new Stack<Uri>()","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.URI_STR","false","false","true","true","true","String","""uri""","","","\android\content\DefaultDataHandler.java"
"android.content.DefaultDataHandler.COL","false","false","true","true","true","String","""col""","","","\android\content\DefaultDataHandler.java"
"android.view.SoundEffectConstants.NAVIGATION_LEFT","true","false","false","true","true","int","1","","","\android\view\SoundEffectConstants.java"
"android.view.SoundEffectConstants.CLICK","true","false","false","true","true","int","0","","","\android\view\SoundEffectConstants.java"
"android.view.SoundEffectConstants.NAVIGATION_DOWN","true","false","false","true","true","int","4","","","\android\view\SoundEffectConstants.java"
"android.view.SoundEffectConstants.NAVIGATION_RIGHT","true","false","false","true","true","int","3","","","\android\view\SoundEffectConstants.java"
"android.view.SoundEffectConstants.NAVIGATION_UP","true","false","false","true","true","int","2","","","\android\view\SoundEffectConstants.java"
"android.view.WindowManagerImpl.ADD_NOT_APP_TOKEN","true","false","false","true","true","int","-3","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_FLAG_APP_VISIBLE","true","false","false","true","true","int","0x2","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.RELAYOUT_IN_TOUCH_MODE","true","false","false","true","true","int","0x1","","/**
 * The user is navigating with keys (not the touch screen), so
 * navigational focus should be shown.
 */
","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_APP_EXITING","true","false","false","true","true","int","-4","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_BAD_APP_TOKEN","true","false","false","true","true","int","-1","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_OKAY","true","false","false","true","true","int","0","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_DUPLICATE_ADD","true","false","false","true","true","int","-5","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.mWindowManager","false","false","true","true","false","WindowManagerImpl","new WindowManagerImpl()","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.mViews","false","false","true","false","false","View","","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_STARTING_NOT_NEEDED","true","false","false","true","true","int","-6","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_PERMISSION_DENIED","true","false","false","true","true","int","-8","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.mRoots","false","false","true","false","false","ViewRoot","","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_MULTIPLE_SINGLETON","true","false","false","true","true","int","-7","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.mParams","false","false","true","false","false","WindowManager.LayoutParams","","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_FLAG_IN_TOUCH_MODE","true","false","false","true","true","int","RELAYOUT_IN_TOUCH_MODE","","","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.RELAYOUT_FIRST_TIME","true","false","false","true","true","int","0x2","","/**
 * This is the first time the window is being drawn,
 * so the client must call drawingFinished() when done
 */
","\android\view\WindowManagerImpl.java"
"android.view.WindowManagerImpl.ADD_BAD_SUBWINDOW_TOKEN","true","false","false","true","true","int","-2","","","\android\view\WindowManagerImpl.java"
"android.text.style.AbsoluteSizeSpan.mDip","false","false","true","false","false","boolean","","","","\android\text\style\AbsoluteSizeSpan.java"
"android.text.style.AbsoluteSizeSpan.mSize","false","false","true","false","true","int","","","","\android\text\style\AbsoluteSizeSpan.java"
"android.content.IContentProvider.CALL_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 20","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.DELETE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 3","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.BULK_INSERT_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 12","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.UPDATE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 9","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.APPLY_BATCH_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 19","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.OPEN_FILE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 13","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.descriptor","false","false","false","true","true","String","""android.content.IContentProvider""","","/* IPC constants */
","\android\content\IContentProvider.java"
"android.content.IContentProvider.OPEN_ASSET_FILE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 14","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.QUERY_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.INSERT_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 2","","","\android\content\IContentProvider.java"
"android.content.IContentProvider.GET_TYPE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 1","","","\android\content\IContentProvider.java"
"android.app.admin.DeviceAdminReceiver.DEBUG","false","false","true","true","false","boolean","false","","","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_DISABLED","true","false","false","true","true","String","""android.app.action.DEVICE_ADMIN_DISABLED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Action sent to a device administrator when the user has disabled
 * it.  Upon return, the application no longer has access to the
 * protected device policy manager APIs.  You will generally
 * handle this in {@link DeviceAdminReceiver#onDisabled(Context, Intent)}.  Note
 * that this action will be
 * sent the receiver regardless of whether it is explicitly listed in
 * its intent filter.
 */
","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_CHANGED","true","false","false","true","true","String","""android.app.action.ACTION_PASSWORD_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Action sent to a device administrator when the user has changed the
 * password of their device.  You can at this point check the characteristics
 * of the new password with {@link DevicePolicyManager#isActivePasswordSufficient()
 * DevicePolicyManager.isActivePasswordSufficient()}.
 * You will generally
 * handle this in {@link DeviceAdminReceiver#onPasswordChanged}.
 *
 * <p>The calling device admin must have requested
 * {@link DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD} to receive
 * this broadcast.
 */
","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.DEVICE_ADMIN_META_DATA","true","false","false","true","true","String","""android.app.device_admin""","","/**
 * Name under which an DevicePolicy component publishes information
 * about itself.  This meta-data must reference an XML resource containing
 * a device-admin tag.  XXX TO DO: describe syntax.
 */
","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.mWho","false","false","true","false","false","ComponentName","","","","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_DISABLE_REQUESTED","true","false","false","true","true","String","""android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Action sent to a device administrator when the user has requested to
 * disable it, but before this has actually been done.  This gives you
 * a chance to supply a message to the user about the impact of
 * disabling your admin, by setting the extra field
 * {@link #EXTRA_DISABLE_WARNING} in the result Intent.  If not set,
 * no warning will be displayed.  If set, the given text will be shown
 * to the user before they disable your admin.
 */
","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.mManager","false","false","true","false","false","DevicePolicyManager","","","","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.TAG","false","false","true","true","false","String","""DevicePolicy""","","","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_SUCCEEDED","true","false","false","true","true","String","""android.app.action.ACTION_PASSWORD_SUCCEEDED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Action sent to a device administrator when the user has successfully
 * entered their password, after failing one or more times.
 *
 * <p>The calling device admin must have requested
 * {@link DeviceAdminInfo#USES_POLICY_WATCH_LOGIN} to receive
 * this broadcast.
 */
","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_FAILED","true","false","false","true","true","String","""android.app.action.ACTION_PASSWORD_FAILED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Action sent to a device administrator when the user has failed at
 * attempted to enter the password.  You can at this point check the
 * number of failed password attempts there have been with
 * {@link DevicePolicyManager#getCurrentFailedPasswordAttempts
 * DevicePolicyManager.getCurrentFailedPasswordAttempts()}.  You will generally
 * handle this in {@link DeviceAdminReceiver#onPasswordFailed}.
 *
 * <p>The calling device admin must have requested
 * {@link DeviceAdminInfo#USES_POLICY_WATCH_LOGIN} to receive
 * this broadcast.
 */
","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.EXTRA_DISABLE_WARNING","true","false","false","true","true","String","""android.app.extra.DISABLE_WARNING""","","/**
 * A CharSequence that can be shown to the user informing them of the
 * impact of disabling your admin.
 *
 * @see #ACTION_DEVICE_ADMIN_DISABLE_REQUESTED
 */
","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_ENABLED","true","false","false","true","true","String","""android.app.action.DEVICE_ADMIN_ENABLED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * This is the primary action that a device administrator must implement to be
 * allowed to manage a device.  This will be set to the receiver
 * when the user enables it for administration.  You will generally
 * handle this in {@link DeviceAdminReceiver#onEnabled(Context, Intent)}.  To be
 * supported, the receiver must also require the
 * {@link android.Manifest.permission#BIND_DEVICE_ADMIN} permission so
 * that other applications can not abuse it.
 */
","\android\app\admin\DeviceAdminReceiver.java"
"android.app.admin.DeviceAdminReceiver.localLOGV","false","false","true","true","false","boolean","DEBUG || android.util.Config.LOGV","","","\android\app\admin\DeviceAdminReceiver.java"
"android.widget.MultiAutoCompleteTextView.mTokenizer","false","false","true","false","false","Tokenizer","","","","\android\widget\MultiAutoCompleteTextView.java"
"android.net.http.Headers.IDX_TRANSFER_ENCODING","false","false","true","true","true","int","0","","// string array
","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_ACCEPT_RANGES","false","false","true","true","true","int","10","","","\android\net\http\Headers.java"
"android.net.http.Headers.CACHE_CONTROL","true","false","false","true","true","String","""cache-control""","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_CONTENT_DISPOSITION","false","false","true","true","true","int","-1267267485","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_PRAGMA","false","false","true","true","true","int","16","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_ETAG","false","false","true","true","true","int","14","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_TRANSFER_ENCODING","false","false","true","true","true","int","1274458357","","// following hash are generated by String.hashCode()
","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_CONTENT_DISPOSITION","false","false","true","true","true","int","9","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_PROXY_AUTHENTICATE","false","false","true","true","true","int","-301767724","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_X_PERMITTED_CROSS_DOMAIN_POLICIES","false","false","true","true","true","int","-1345594014","","","\android\net\http\Headers.java"
"android.net.http.Headers.LAST_MODIFIED","true","false","false","true","true","String","""last-modified""","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_CONTENT_TYPE","false","false","true","true","true","int","2","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_LOCATION","false","false","true","true","true","int","1901043637","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_PROXY_CONNECTION","false","false","true","true","true","int","6","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_ACCEPT_RANGES","false","false","true","true","true","int","1397189435","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_LAST_MODIFIED","false","false","true","true","true","int","150043680","","","\android\net\http\Headers.java"
"android.net.http.Headers.CONTENT_LEN","true","false","false","true","true","String","""content-length""","","","\android\net\http\Headers.java"
"android.net.http.Headers.mHeaders","false","false","true","false","false","String","new String[HEADER_COUNT]","","","\android\net\http\Headers.java"
"android.net.http.Headers.mExtraHeaderValues","false","false","true","false","false","ArrayList<String>","new ArrayList<String>(4)","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_CACHE_CONTROL","false","false","true","true","true","int","-208775662","","","\android\net\http\Headers.java"
"android.net.http.Headers.TRANSFER_ENCODING","true","false","false","true","true","String","""transfer-encoding""","","// header strings
","\android\net\http\Headers.java"
"android.net.http.Headers.CONN_KEEP_ALIVE","true","false","false","true","true","int","2","","/**
 * indicate HTTP 1.1 connection keep alive
 */
","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_PROXY_AUTHENTICATE","false","false","true","true","true","int","8","","","\android\net\http\Headers.java"
"android.net.http.Headers.PROXY_AUTHENTICATE","true","false","false","true","true","String","""proxy-authenticate""","","","\android\net\http\Headers.java"
"android.net.http.Headers.CONTENT_TYPE","true","false","false","true","true","String","""content-type""","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_CONTENT_ENCODING","false","false","true","true","true","int","2095084583","","","\android\net\http\Headers.java"
"android.net.http.Headers.CONTENT_ENCODING","true","false","false","true","true","String","""content-encoding""","","","\android\net\http\Headers.java"
"android.net.http.Headers.PRAGMA","true","false","false","true","true","String","""pragma""","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_SET_COOKIE","false","false","true","true","true","int","1237214767","","","\android\net\http\Headers.java"
"android.net.http.Headers.X_PERMITTED_CROSS_DOMAIN_POLICIES","true","false","false","true","true","String","""x-permitted-cross-domain-policies""","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_LAST_MODIFIED","false","false","true","true","true","int","13","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_CONTENT_TYPE","false","false","true","true","true","int","785670158","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_EXPIRES","false","false","true","true","true","int","-1309235404","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_REFRESH","false","false","true","true","true","int","17","","","\android\net\http\Headers.java"
"android.net.http.Headers.NO_TRANSFER_ENCODING","true","false","false","true","true","long","0","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_EXPIRES","false","false","true","true","true","int","11","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_WWW_AUTHENTICATE","false","false","true","true","true","int","7","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_REFRESH","false","false","true","true","true","int","1085444827","","","\android\net\http\Headers.java"
"android.net.http.Headers.CONTENT_DISPOSITION","true","false","false","true","true","String","""content-disposition""","","","\android\net\http\Headers.java"
"android.net.http.Headers.mExtraHeaderNames","false","false","true","false","false","ArrayList<String>","new ArrayList<String>(4)","","// Catch-all for headers not explicitly handled
","\android\net\http\Headers.java"
"android.net.http.Headers.HEADER_COUNT","false","false","true","true","true","int","19","","","\android\net\http\Headers.java"
"android.net.http.Headers.ETAG","true","false","false","true","true","String","""etag""","","","\android\net\http\Headers.java"
"android.net.http.Headers.CONN_CLOSE","true","false","false","true","true","int","1","","/**
 * indicate HTTP 1.0 connection close after the response
 */
","\android\net\http\Headers.java"
"android.net.http.Headers.transferEncoding","false","false","true","false","false","long","","","/* parsed values */
","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_PRAGMA","false","false","true","true","true","int","-980228804","","","\android\net\http\Headers.java"
"android.net.http.Headers.connectionType","false","false","true","false","false","int","","","","\android\net\http\Headers.java"
"android.net.http.Headers.EXPIRES","true","false","false","true","true","String","""expires""","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_CONTENT_LEN","false","false","true","true","true","int","-1132779846","","","\android\net\http\Headers.java"
"android.net.http.Headers.LOCATION","true","false","false","true","true","String","""location""","","","\android\net\http\Headers.java"
"android.net.http.Headers.NO_CONTENT_LENGTH","true","false","false","true","true","long","-1","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_SET_COOKIE","false","false","true","true","true","int","15","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_LOCATION","false","false","true","true","true","int","5","","","\android\net\http\Headers.java"
"android.net.http.Headers.sHeaderNames","false","false","true","true","true","String","{ TRANSFER_ENCODING, CONTENT_LEN, CONTENT_TYPE, CONTENT_ENCODING, CONN_DIRECTIVE, LOCATION, PROXY_CONNECTION, WWW_AUTHENTICATE, PROXY_AUTHENTICATE, CONTENT_DISPOSITION, ACCEPT_RANGES, EXPIRES, CACHE_CONTROL, LAST_MODIFIED, ETAG, SET_COOKIE, PRAGMA, REFRESH, X_PERMITTED_CROSS_DOMAIN_POLICIES }","","","\android\net\http\Headers.java"
"android.net.http.Headers.contentLength","false","false","true","false","false","long","","","// Content length of the incoming data
","\android\net\http\Headers.java"
"android.net.http.Headers.cookies","false","false","true","false","false","ArrayList<String>","new ArrayList<String>(2)","","","\android\net\http\Headers.java"
"android.net.http.Headers.SET_COOKIE","true","false","false","true","true","String","""set-cookie""","","","\android\net\http\Headers.java"
"android.net.http.Headers.NO_CONN_TYPE","true","false","false","true","true","int","0","","// initial values.
","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_WWW_AUTHENTICATE","false","false","true","true","true","int","-243037365","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_CONTENT_ENCODING","false","false","true","true","true","int","3","","","\android\net\http\Headers.java"
"android.net.http.Headers.ACCEPT_RANGES","true","false","false","true","true","String","""accept-ranges""","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_ETAG","false","false","true","true","true","int","3123477","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_CONN_DIRECTIVE","false","false","true","true","true","int","4","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_CACHE_CONTROL","false","false","true","true","true","int","12","","","\android\net\http\Headers.java"
"android.net.http.Headers.REFRESH","true","false","false","true","true","String","""refresh""","","","\android\net\http\Headers.java"
"android.net.http.Headers.CONN_DIRECTIVE","true","false","false","true","true","String","""connection""","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_CONN_DIRECTIVE","false","false","true","true","true","int","-775651618","","","\android\net\http\Headers.java"
"android.net.http.Headers.PROXY_CONNECTION","true","false","false","true","true","String","""proxy-connection""","","","\android\net\http\Headers.java"
"android.net.http.Headers.WWW_AUTHENTICATE","true","false","false","true","true","String","""www-authenticate""","","","\android\net\http\Headers.java"
"android.net.http.Headers.HASH_PROXY_CONNECTION","false","false","true","true","true","int","285929373","","","\android\net\http\Headers.java"
"android.net.http.Headers.LOGTAG","false","false","true","true","true","String","""Http""","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_X_PERMITTED_CROSS_DOMAIN_POLICIES","false","false","true","true","true","int","18","","","\android\net\http\Headers.java"
"android.net.http.Headers.IDX_CONTENT_LEN","false","false","true","true","true","int","1","","","\android\net\http\Headers.java"
"com.google.android.mms.pdu.QuotedPrintable.ESCAPE_CHAR","false","false","true","true","false","byte","'='","","","\com\google\android\mms\pdu\QuotedPrintable.java"
"android.accounts.AccountAuthenticatorActivity.mResultBundle","false","false","true","false","false","Bundle","null","","","\android\accounts\AccountAuthenticatorActivity.java"
"android.accounts.AccountAuthenticatorActivity.mAccountAuthenticatorResponse","false","false","true","false","false","AccountAuthenticatorResponse","null","","","\android\accounts\AccountAuthenticatorActivity.java"
"android.widget.BaseAdapter.mDataSetObservable","false","false","true","false","true","DataSetObservable","new DataSetObservable()","","","\android\widget\BaseAdapter.java"
"android.content.SyncOperation.earliestRunTime","true","false","false","false","false","long","","","","\android\content\SyncOperation.java"
"android.content.SyncOperation.expedited","true","false","false","false","false","boolean","","","","\android\content\SyncOperation.java"
"android.content.SyncOperation.syncSource","true","false","false","false","false","int","","","","\android\content\SyncOperation.java"
"android.content.SyncOperation.extras","true","false","false","false","false","Bundle","","","","\android\content\SyncOperation.java"
"android.content.SyncOperation.key","true","false","false","false","true","String","","","","\android\content\SyncOperation.java"
"android.content.SyncOperation.authority","true","false","false","false","false","String","","","","\android\content\SyncOperation.java"
"android.content.SyncOperation.pendingOperation","true","false","false","false","false","SyncStorageEngine.PendingOperation","","","","\android\content\SyncOperation.java"
"android.content.SyncOperation.account","true","false","false","false","true","Account","","","","\android\content\SyncOperation.java"
"com.android.internal.app.ResolverActivity.displayIcon","false","false","false","false","false","Drawable","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.DisplayResolveInfo.extendedInfo","false","false","false","false","false","CharSequence","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolveListAdapter.mList","false","false","true","false","false","List<DisplayResolveInfo>","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.origIntent","false","false","false","false","false","Intent","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.mPm","false","false","true","false","false","PackageManager","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.ri","false","false","false","false","false","ResolveInfo","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.mInflater","false","false","true","false","true","LayoutInflater","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.extendedInfo","false","false","false","false","false","CharSequence","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.mAdapter","false","false","true","false","false","ResolveListAdapter","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolveListAdapter.mIntent","false","false","true","false","true","Intent","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.DisplayResolveInfo.displayLabel","false","false","false","false","false","CharSequence","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.DisplayResolveInfo.ri","false","false","false","false","false","ResolveInfo","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.mList","false","false","true","false","false","List<DisplayResolveInfo>","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.displayLabel","false","false","false","false","false","CharSequence","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.mClearDefaultHint","false","false","true","false","false","TextView","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolveListAdapter.mInflater","false","false","true","false","true","LayoutInflater","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.DisplayResolveInfo.displayIcon","false","false","false","false","false","Drawable","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.mAlwaysCheck","false","false","true","false","false","CheckBox","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.DisplayResolveInfo.origIntent","false","false","false","false","false","Intent","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.app.ResolverActivity.mIntent","false","false","true","false","true","Intent","","","","\com\android\internal\app\ResolverActivity.java"
"com.android.internal.widget.StyledTextDialog.mColorTitle","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.STATE_SELECT_OFF","true","false","false","true","true","int","0","","/**
 * The state that selection isn't started.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.HINT_MSG_SELECT_END","true","false","false","true","true","int","3","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mBuilder","false","false","false","false","false","Builder","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mView","false","false","true","false","false","View","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mCurStart","false","false","true","false","false","int","0","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.MODE_CUT","true","false","false","true","true","int","7","","/**
 * The mode of changing cut.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mAlignTitle","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.DEFAULT_BACKGROUND_COLOR","true","false","false","true","true","int","0x00FFFFFF","","/**
 * The help message strings.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mColorTitle","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mEditFlag","false","false","true","false","false","boolean","false","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mSizeTitle","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.MODE_PASTE","true","false","false","true","true","int","2","","/**
 * The mode of paste.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mESTInterface","false","false","true","false","false","EditStyledTextNotifier","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mEST","false","false","false","false","false","EditStyledText","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mSizeTitle","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditorManager.mEditFlag","false","false","true","false","false","boolean","false","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mSizeSendInts","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mMode","false","false","true","false","false","int","0","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mColorNames","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.DBG","false","false","true","true","true","boolean","false","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mEST","false","false","false","false","false","EditStyledText","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mSoftKeyBlockFlag","false","false","true","false","false","boolean","false","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mSizeSendInts","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mConverter","false","false","true","false","false","StyledTextConverter","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mManager","false","false","false","false","false","EditorManager","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mBuilder","false","false","false","false","false","Builder","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mSizeNames","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.MODE_ALIGN","true","false","false","true","true","int","6","","/**
 * The mode of changing alignment.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditorManager.mCurEnd","false","false","true","false","false","int","0","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.MODE_COLOR","true","false","false","true","true","int","4","","/**
 * The mode of changing color.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mColorNames","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.LOG_TAG","false","false","true","true","true","String","""EditStyledText""","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.MODE_SIZE","true","false","false","true","true","int","3","","/**
 * The mode of changing size.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditorManager.mEST","false","false","true","false","false","EditStyledText","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mSizeDisplayInts","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.HINT_MSG_COPY_BUF_BLANK","true","false","false","true","true","int","1","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditorManager.mSoftKeyBlockFlag","false","false","true","false","false","boolean","false","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditorManager.mCurStart","false","false","true","false","false","int","0","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mColorInts","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.HorizontalLineDrawable.mView","false","false","true","false","false","View","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.HINT_MSG_NULL","true","false","false","true","true","int","0","","/**
 * The help message strings.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.MODE_NOTHING","true","false","false","true","true","int","0","","/**
 * The mode that no editing action is done.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.MODE_SELECT","true","false","false","true","true","int","5","","/**
 * The mode of selection.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mSizeNames","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mSizeDisplayInts","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditorManager.mState","false","false","true","false","false","int","0","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextConverter.mEST","false","false","true","false","false","EditStyledText","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mState","false","false","true","false","false","int","0","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mColorInts","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mDialog","false","false","true","false","false","StyledTextDialog","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mDefaultBackground","false","false","true","false","false","Drawable","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mAlignNames","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.HINT_MSG_SELECT_START","true","false","false","true","true","int","2","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mCurEnd","false","false","true","false","false","int","0","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.STATE_SELECTED","true","false","false","true","true","int","2","","/**
 * The state that selection is done, but not fixed.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.HINT_MSG_PUSH_COMPETE","true","false","false","true","true","int","4","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.STATE_SELECT_FIX","true","false","false","true","true","int","3","","/**
 * The state that selection is done and not fixed.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditorManager.mMode","false","false","true","false","false","int","0","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.MODE_COPY","true","false","false","true","true","int","1","","/**
 * The mode of copy.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mAlignTitle","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextArrowKeyMethod.mManager","false","false","false","false","false","EditorManager","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.StyledTextDialog.mAlignNames","false","false","false","false","false","CharSequence","","","","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.STATE_SELECT_ON","true","false","false","true","true","int","1","","/**
 * The state that selection is started.
 */
","\com\android\internal\widget\EditStyledText.java"
"com.android.internal.widget.EditStyledText.mBackgroundColor","false","false","true","false","false","int","","","","\com\android\internal\widget\EditStyledText.java"
"android.view.inputmethod.ExtractedTextRequest.hintMaxChars","true","false","false","false","false","int","","","/**
 * Hint for the maximum number of characters to return.
 */
","\android\view\inputmethod\ExtractedTextRequest.java"
"android.view.inputmethod.ExtractedTextRequest.token","true","false","false","false","false","int","","","/**
 * Arbitrary integer that can be supplied in the request, which will be
 * delivered back when reporting updates.
 */
","\android\view\inputmethod\ExtractedTextRequest.java"
"android.view.inputmethod.ExtractedTextRequest.hintMaxLines","true","false","false","false","false","int","","","/**
 * Hint for the maximum number of lines to return.
 */
","\android\view\inputmethod\ExtractedTextRequest.java"
"android.view.inputmethod.ExtractedTextRequest.flags","true","false","false","false","false","int","","","/**
 * Additional request flags, having the same possible values as the
 * flags parameter of {@link InputConnection#getTextBeforeCursor
 * InputConnection.getTextBeforeCursor()}.
 */
","\android\view\inputmethod\ExtractedTextRequest.java"
"android.view.inputmethod.ExtractedTextRequest.CREATOR","true","false","false","true","true","Parcelable.Creator<ExtractedTextRequest>","new Parcelable.Creator<ExtractedTextRequest>() {

    public ExtractedTextRequest createFromParcel(Parcel source) {
        ExtractedTextRequest res = new ExtractedTextRequest();
        res.token = source.readInt();
        res.flags = source.readInt();
        res.hintMaxLines = source.readInt();
        res.hintMaxChars = source.readInt();
        return res;
    }

    public ExtractedTextRequest[] newArray(int size) {
        return new ExtractedTextRequest[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\android\view\inputmethod\ExtractedTextRequest.java"
"android.pim.vcard.VCardInterpreterCollection.mInterpreterCollection","false","false","true","false","true","Collection<VCardInterpreter>","","","","\android\pim\vcard\VCardInterpreterCollection.java"
"android.server.search.SearchManagerService.TAG","false","false","true","true","true","String","""SearchManagerService""","","// general debugging support
","\android\server\search\SearchManagerService.java"
"android.server.search.SearchManagerService.mContext","false","false","true","false","true","Context","","","// Context that the service is running in.
","\android\server\search\SearchManagerService.java"
"android.server.search.SearchManagerService.mSearchables","false","false","true","false","false","Searchables","","","// This field is initialized lazily in getSearchables(), and then never modified.
","\android\server\search\SearchManagerService.java"
"android.text.ClipboardManager.sService","false","false","true","true","false","IClipboard","","","","\android\text\ClipboardManager.java"
"android.text.ClipboardManager.mContext","false","false","true","false","false","Context","","","","\android\text\ClipboardManager.java"
"android.text.method.DialerKeyListener.sInstance","false","false","true","true","false","DialerKeyListener","","","","\android\text\method\DialerKeyListener.java"
"android.text.method.DialerKeyListener.CHARACTERS","true","false","false","true","true","char","new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '#', '*', '+', '-', '(', ')', ',', '/', 'N', '.', ' ', ';' }","","/**
 * The characters that are used.
 *
 * @see KeyEvent#getMatch
 * @see #getAcceptedChars
 */
","\android\text\method\DialerKeyListener.java"
"android.app.IActivityManager.FINISH_SUB_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 31","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.result","true","false","false","false","false","int","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.WAKING_UP_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 40","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_NOT_ACTIVITY","true","false","false","true","true","int","-5","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.KILL_APPLICATION_WITH_UID_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 95","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.REPORT_THUMBNAIL_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 27","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.PUBLISH_CONTENT_PROVIDERS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 29","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.KILL_APPLICATION_PROCESS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 98","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.REPORT_PSS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 81","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.STOP_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 34","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_ACTIVITY_WITH_CONFIG_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 106","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.who","true","false","false","false","false","ComponentName","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_CALLING_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 21","","","\android\app\IActivityManager.java"
"android.app.ContentProviderHolder.info","true","false","false","false","true","ProviderInfo","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_INSTRUMENTATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 43","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.FINISH_RECEIVER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 15","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_PROCESS_LIMIT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 51","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SET_PROCESS_FOREGROUND_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 72","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.FORCE_STOP_PACKAGE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 78","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.BACKUP_AGENT_CREATED_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 90","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.STOP_SERVICE_TOKEN_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 47","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_RUNNING_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION","","// sent by C++ code.
","\android\app\IActivityManager.java"
"android.app.IActivityManager.MOVE_TASK_TO_BACK_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 24","","","\android\app\IActivityManager.java"
"android.app.ContentProviderHolder.noReleaseNeeded","true","false","false","false","false","boolean","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_CONTENT_PROVIDER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 28","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SET_SERVICE_FOREGROUND_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 73","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_CLASS_NOT_FOUND","true","false","false","true","true","int","-2","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_CALLING_PACKAGE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 20","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_INTENT_NOT_RESOLVED","true","false","false","true","true","int","-1","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_ACTIVITY_CLASS_FOR_TOKEN_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 48","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.INTENT_SENDER_ACTIVITY","true","false","false","true","true","int","2","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SET_DEBUG_APP_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 41","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.REGISTER_ACTIVITY_WATCHER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 92","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.REGISTER_RECEIVER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 11","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.WILL_ACTIVITY_BE_VISIBLE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 105","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.INTENT_SENDER_BROADCAST","true","false","false","true","true","int","1","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.INTENT_SENDER_SERVICE","true","false","false","true","true","int","4","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GOING_TO_SLEEP_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 39","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_RUNNING_APP_PROCESSES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 82","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_TASK_FOR_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 26","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.CHECK_URI_PERMISSION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 53","","","\android\app\IActivityManager.java"
"android.app.WaitResult.totalTime","true","false","false","false","false","long","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_ACTIVITY_AND_WAIT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 104","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SERVICE_DONE_EXECUTING_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 60","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SET_ALWAYS_FINISH_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 42","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_TASKS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 22","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.HANDLE_APPLICATION_CRASH_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 1","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.CHECK_PERMISSION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 52","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 33","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.IS_USER_A_MONKEY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 103","","","\android\app\IActivityManager.java"
"android.app.WaitResult.thisTime","true","false","false","false","false","long","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_ACTIVITY_INTENT_SENDER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 99","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_INTENT_SENDER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 62","","","\android\app\IActivityManager.java"
"android.app.WaitResult.who","true","false","false","false","false","ComponentName","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_SWITCHES_CANCELED","true","false","false","true","true","int","4","","/**
 * Returned by startActivity() if the start request was canceled because
 * app switches are temporarily canceled to ensure the user's last request
 * (such as pressing home) is performed.
 */
","\android\app\IActivityManager.java"
"android.app.IActivityManager.UNBROADCAST_INTENT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 14","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.BROADCAST_STICKY_CANT_HAVE_PERMISSION","true","false","false","true","true","int","-1","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.UNBIND_FINISHED_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 71","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_TASK_TO_FRONT","true","false","false","true","true","int","2","","/**
 * Returned by startActivity() if an activity wasn't really started, but
 * a task was simply brought to the foreground.
 */
","\android\app\IActivityManager.java"
"android.app.IActivityManager.HANDLE_APPLICATION_WTF_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 101","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GRANT_URI_PERMISSION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 54","","","\android\app\IActivityManager.java"
"android.app.WaitResult.result","true","false","false","false","false","int","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 2","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_REQUESTED_ORIENTATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 70","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.RESUME_APP_SWITCHES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 88","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.ENTER_SAFE_MODE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 65","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.OPEN_CONTENT_URI_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 4","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.MOVE_ACTIVITY_TASK_TO_BACK_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 74","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.OVERRIDE_PENDING_TRANSITION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 100","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_PERMISSION_DENIED","true","false","false","true","true","int","-4","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.FINISH_INSTRUMENTATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 44","","","\android\app\IActivityManager.java"
"android.app.ContentProviderHolder.CREATOR","true","false","false","true","true","Parcelable.Creator<ContentProviderHolder>","new Parcelable.Creator<ContentProviderHolder>() {

    public ContentProviderHolder createFromParcel(Parcel source) {
        return new ContentProviderHolder(source);
    }

    public ContentProviderHolder[] newArray(int size) {
        return new ContentProviderHolder[size];
    }
}","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SET_PROCESS_LIMIT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 50","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.ACTIVITY_STOPPED_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 19","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_PROCESS_MEMORY_INFO_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 97","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.MOVE_TASK_TO_FRONT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 23","","","\android\app\IActivityManager.java"
"android.app.ContentProviderHolder.permissionFailure","true","false","false","false","true","String","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.ACTIVITY_PAUSED_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 18","","","\android\app\IActivityManager.java"
"android.app.ContentProviderHolder.provider","true","false","false","false","false","IContentProvider","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.UNBIND_BACKUP_AGENT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 91","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SET_PERSISTENT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 30","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_PROCESSES_IN_ERROR_STATE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 76","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SHUTDOWN_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 86","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_PACKAGE_FOR_INTENT_SENDER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 64","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_CONFIGURATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 45","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.REMOVE_CONTENT_PROVIDER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 68","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.STOP_APP_SWITCHES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 87","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_MEMORY_INFO_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 75","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_SERVICES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 80","","","\android\app\IActivityManager.java"
"android.app.WaitResult.CREATOR","true","false","false","true","true","Parcelable.Creator<WaitResult>","new Parcelable.Creator<WaitResult>() {

    public WaitResult createFromParcel(Parcel source) {
        return new WaitResult(source);
    }

    public WaitResult[] newArray(int size) {
        return new WaitResult[size];
    }
}","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_PACKAGE_FOR_TOKEN_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 49","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.descriptor","false","false","false","false","false","String","""android.app.IActivityManager""","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_DEVICE_CONFIGURATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 83","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.ATTACH_APPLICATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 16","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.UNREGISTER_RECEIVER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 12","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_RETURN_INTENT_TO_CALLER","true","false","false","true","true","int","1","","/**
 * Returned by startActivity() if the caller asked that the Intent not
 * be executed if it is the recipient, and that is indeed the case.
 */
","\android\app\IActivityManager.java"
"android.app.IActivityManager.INTENT_SENDER_ACTIVITY_RESULT","true","false","false","true","true","int","3","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.BIND_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 35","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.CREATOR","true","false","false","true","true","Parcelable.Creator<WaitResult>","new Parcelable.Creator<WaitResult>() {

    public WaitResult createFromParcel(Parcel source) {
        return new WaitResult(source);
    }

    public WaitResult[] newArray(int size) {
        return new WaitResult[size];
    }
}","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.thisTime","true","false","false","false","false","long","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.PUBLISH_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 37","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_RUNNING_EXTERNAL_APPLICATIONS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 107","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_CANCELED","true","false","false","true","true","int","-6","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.UNHANDLED_BACK_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 3","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.FINISH_OTHER_INSTANCES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 38","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.BROADCAST_INTENT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 13","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_ACTIVITY_IN_PACKAGE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 94","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.ACTIVITY_IDLE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 17","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.REVOKE_URI_PERMISSION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 55","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.noReleaseNeeded","true","false","false","false","false","boolean","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.UNREGISTER_ACTIVITY_WATCHER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 93","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_RECENT_TASKS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 59","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.UNBIND_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 36","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.permissionFailure","true","false","false","false","true","String","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.CLEAR_APP_DATA_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 77","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SIGNAL_PERSISTENT_PROCESSES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 58","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.GET_RUNNING_SERVICE_CONTROL_PANEL_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 32","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SHOW_WAITING_FOR_DEBUGGER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 57","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.PROFILE_CONTROL_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 85","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.UPDATE_CONFIGURATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 46","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.info","true","false","false","false","true","ProviderInfo","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_BACKUP_AGENT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 89","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_NEXT_MATCHING_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 66","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SET_ACTIVITY_CONTROLLER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 56","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.KILL_BACKGROUND_PROCESSES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 102","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.totalTime","true","false","false","false","false","long","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.KILL_PIDS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 79","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_DELIVERED_TO_TOP","true","false","false","true","true","int","3","","/**
 * Returned by startActivity() if an activity wasn't really started, but
 * the given Intent was given to the existing top activity.
 */
","\android\app\IActivityManager.java"
"android.app.WaitResult.timeout","true","false","false","false","false","boolean","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.provider","true","false","false","false","false","IContentProvider","","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.FINISH_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 10","","// Remaining non-native transaction codes.
","\android\app\IActivityManager.java"
"android.app.IActivityManager.ACTIVITY_DESTROYED_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 61","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.CLOSE_SYSTEM_DIALOGS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 96","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.BROADCAST_SUCCESS","true","false","false","true","true","int","0","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.NOTE_WAKEUP_ALARM_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 67","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_FORWARD_AND_REQUEST_CONFLICT","true","false","false","true","true","int","-3","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.SET_REQUESTED_ORIENTATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 69","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.CANCEL_INTENT_SENDER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 63","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.START_SUCCESS","true","false","false","true","true","int","0","","/**
 * Activity was started successfully as normal.
 */
","\android\app\IActivityManager.java"
"android.app.IActivityManager.PEEK_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 84","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.MOVE_TASK_BACKWARDS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 25","","","\android\app\IActivityManager.java"
"android.app.IActivityManager.timeout","true","false","false","false","false","boolean","","","","\android\app\IActivityManager.java"
"android.webkit.WebHistoryItem.mId","false","false","true","false","true","int","","","// Unique identifier.
","\android\webkit\WebHistoryItem.java"
"android.webkit.WebHistoryItem.mCustomData","false","false","true","false","false","Object","","","// Custom client data that is not flattened or read by native code.
","\android\webkit\WebHistoryItem.java"
"android.webkit.WebHistoryItem.sNextId","false","false","true","true","false","int","0","","// Global identifier count.
","\android\webkit\WebHistoryItem.java"
"android.webkit.WebHistoryItem.mFavicon","false","false","true","false","false","Bitmap","","","// The favicon for this item.
","\android\webkit\WebHistoryItem.java"
"android.webkit.WebHistoryItem.mUrl","false","false","true","false","false","String","","","// The base url of this item.
","\android\webkit\WebHistoryItem.java"
"android.webkit.WebHistoryItem.mOriginalUrl","false","false","true","false","false","String","","","// The original requested url of this item.
","\android\webkit\WebHistoryItem.java"
"android.webkit.WebHistoryItem.mFlattenedData","false","false","true","false","false","byte","","","// The pre-flattened data used for saving the state.
","\android\webkit\WebHistoryItem.java"
"android.webkit.WebHistoryItem.mTitle","false","false","true","false","false","String","","","// The title of this item's document.
","\android\webkit\WebHistoryItem.java"
"android.webkit.WebHistoryItem.mTouchIconUrl","false","false","true","false","false","String","","","// The apple-touch-icon url for use when adding the site to the home screen
","\android\webkit\WebHistoryItem.java"
"com.android.internal.app.RingtonePickerActivity.mDefaultRingtonePos","false","false","true","false","false","int","-1","","/**
 * The position in the list of the 'Default' item.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mUriForDefaultItem","false","false","true","false","false","Uri","","","/**
 * The Uri to play when the 'Default' item is clicked.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mCursor","false","false","true","false","false","Cursor","","","","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mHasSilentItem","false","false","true","false","false","boolean","","","/**
 * Whether this list has the 'Silent' item.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mSampleRingtonePos","false","false","true","false","false","int","-1","","/**
 * The position in the list of the ringtone to sample.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mClickedPos","false","false","true","false","false","int","-1","","/**
 * The position in the list of the last clicked item.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mDefaultRingtone","false","false","true","false","false","Ringtone","","","/**
 * A Ringtone for the default ringtone. In most cases, the RingtoneManager
 * will stop the previous ringtone. However, the RingtoneManager doesn't
 * manage the default ringtone for us, so we should stop this one manually.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mExistingUri","false","false","true","false","false","Uri","","","/**
 * The Uri to place a checkmark next to.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mHandler","false","false","true","false","false","Handler","","","","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mSilentPos","false","false","true","false","false","int","-1","","/**
 * The position in the list of the 'Silent' item.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mStaticItemCount","false","false","true","false","false","int","","","/**
 * The number of static items in the list.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.TAG","false","false","true","true","true","String","""RingtonePickerActivity""","","","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mRingtoneClickListener","false","false","true","false","false","DialogInterface.OnClickListener","new DialogInterface.OnClickListener() {

    /*
         * On item clicked
         */
    public void onClick(DialogInterface dialog, int which) {
        // Save the position of most recently clicked item
        mClickedPos = which;
        // Play clip
        playRingtone(which, 0);
    }
}","","","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mRingtoneManager","false","false","true","false","false","RingtoneManager","","","","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.mHasDefaultItem","false","false","true","false","false","boolean","","","/**
 * Whether this list has the 'Default' item.
 */
","\com\android\internal\app\RingtonePickerActivity.java"
"com.android.internal.app.RingtonePickerActivity.DELAY_MS_SELECTION_PLAYED","false","false","true","true","true","int","300","","","\com\android\internal\app\RingtonePickerActivity.java"
"android.widget.MediaController.mPauseButton","false","false","true","false","false","ImageButton","","","","\android\widget\MediaController.java"
"android.widget.MediaController.FADE_OUT","false","false","true","true","true","int","1","","","\android\widget\MediaController.java"
"android.widget.MediaController.mUseFastForward","false","false","true","false","false","boolean","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mAnchor","false","false","true","false","false","View","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mWindow","false","false","true","false","false","Window","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mContext","false","false","true","false","false","Context","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mRoot","false","false","true","false","false","View","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mShowing","false","false","true","false","false","boolean","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mTouchListener","false","false","true","false","false","OnTouchListener","new OnTouchListener() {

    public boolean onTouch(View v, MotionEvent event) {
        if (event.getAction() == MotionEvent.ACTION_DOWN) {
            if (mShowing) {
                hide();
            }
        }
        return false;
    }
}","","","\android\widget\MediaController.java"
"android.widget.MediaController.mFfwdListener","false","false","true","false","false","View.OnClickListener","new View.OnClickListener() {

    public void onClick(View v) {
        int pos = mPlayer.getCurrentPosition();
        // milliseconds
        pos += 15000;
        mPlayer.seekTo(pos);
        setProgress();
        show(sDefaultTimeout);
    }
}","","","\android\widget\MediaController.java"
"android.widget.MediaController.mPrevButton","false","false","true","false","false","ImageButton","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mNextListener","false","false","true","false","false","View.OnClickListener","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mHandler","false","false","true","false","false","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        int pos;
        switch(msg.what) {
            case FADE_OUT:
                hide();
                break;
            case SHOW_PROGRESS:
                pos = setProgress();
                if (!mDragging && mShowing && mPlayer.isPlaying()) {
                    msg = obtainMessage(SHOW_PROGRESS);
                    sendMessageDelayed(msg, 1000 - (pos % 1000));
                }
                break;
        }
    }
}","","","\android\widget\MediaController.java"
"android.widget.MediaController.mEndTime","false","false","true","false","false","TextView","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mSeekListener","false","false","true","false","false","OnSeekBarChangeListener","new OnSeekBarChangeListener() {

    public void onStartTrackingTouch(SeekBar bar) {
        show(3600000);
        mDragging = true;
        // By removing these pending progress messages we make sure
        // that a) we won't update the progress while the user adjusts
        // the seekbar and b) once the user is done dragging the thumb
        // we will post one of these messages to the queue again and
        // this ensures that there will be exactly one message queued up.
        mHandler.removeMessages(SHOW_PROGRESS);
    }

    public void onProgressChanged(SeekBar bar, int progress, boolean fromuser) {
        if (!fromuser) {
            // the progress bar's position.
            return;
        }
        long duration = mPlayer.getDuration();
        long newposition = (duration * progress) / 1000L;
        mPlayer.seekTo((int) newposition);
        if (mCurrentTime != null)
            mCurrentTime.setText(stringForTime((int) newposition));
    }

    public void onStopTrackingTouch(SeekBar bar) {
        mDragging = false;
        setProgress();
        updatePausePlay();
        show(sDefaultTimeout);
        // Ensure that progress is properly updated in the future,
        // the call to show() does not guarantee this because it is a
        // no-op if we are already showing.
        mHandler.sendEmptyMessage(SHOW_PROGRESS);
    }
}","","// we will simply apply the updated position without suspending regular updates.
","\android\widget\MediaController.java"
"android.widget.MediaController.mWindowManager","false","false","true","false","false","WindowManager","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mDecor","false","false","true","false","false","View","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mFormatBuilder","false","false","false","false","false","StringBuilder","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mProgress","false","false","true","false","false","ProgressBar","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mNextButton","false","false","true","false","false","ImageButton","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mFromXml","false","false","true","false","false","boolean","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mDragging","false","false","true","false","false","boolean","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mPlayer","false","false","true","false","false","MediaPlayerControl","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mListenersSet","false","false","true","false","false","boolean","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mFormatter","false","false","false","false","false","Formatter","","","","\android\widget\MediaController.java"
"android.widget.MediaController.SHOW_PROGRESS","false","false","true","true","true","int","2","","","\android\widget\MediaController.java"
"android.widget.MediaController.mRewButton","false","false","true","false","false","ImageButton","","","","\android\widget\MediaController.java"
"android.widget.MediaController.mRewListener","false","false","true","false","false","View.OnClickListener","new View.OnClickListener() {

    public void onClick(View v) {
        int pos = mPlayer.getCurrentPosition();
        // milliseconds
        pos -= 5000;
        mPlayer.seekTo(pos);
        setProgress();
        show(sDefaultTimeout);
    }
}","","","\android\widget\MediaController.java"
"android.widget.MediaController.mPauseListener","false","false","true","false","false","View.OnClickListener","new View.OnClickListener() {

    public void onClick(View v) {
        doPauseResume();
        show(sDefaultTimeout);
    }
}","","","\android\widget\MediaController.java"
"android.widget.MediaController.mFfwdButton","false","false","true","false","false","ImageButton","","","","\android\widget\MediaController.java"
"android.widget.MediaController.sDefaultTimeout","false","false","true","true","true","int","3000","","","\android\widget\MediaController.java"
"android.os.StatFs.mNativeContext","false","false","true","false","false","int","","","","\android\os\StatFs.java"
"android.view.SurfaceView.mUpdateWindowNeeded","false","false","false","false","false","boolean","","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.KEEP_SCREEN_ON_MSG","false","false","false","true","true","int","1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mWindowType","false","false","false","false","false","int","WindowManager.LayoutParams.TYPE_APPLICATION_MEDIA","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mCurWidth","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mContentInsets","false","false","false","false","true","Rect","new Rect()","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mRequestedFormat","false","false","false","false","false","int","PixelFormat.OPAQUE","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mLastSurfaceWidth","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mConfiguration","false","false","false","false","true","Configuration","new Configuration()","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mLocation","false","false","false","false","true","int","new int[2]","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mWinFrame","false","false","false","false","true","Rect","new Rect()","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mSurfaceView","false","false","true","false","true","WeakReference<SurfaceView>","","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mType","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mFormat","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mLeft","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mTop","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mLastLockTime","false","false","false","false","false","long","0","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mWindowVisibility","false","false","false","false","false","boolean","false","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mSurfaceHolder","false","false","true","false","false","SurfaceHolder","new SurfaceHolder() {

    private static final String LOG_TAG = ""SurfaceHolder"";

    private int mSaveCount;

    public boolean isCreating() {
        return mIsCreating;
    }

    public void addCallback(Callback callback) {
        synchronized (mCallbacks) {
            // have only a couple callbacks, so it doesn't matter.
            if (mCallbacks.contains(callback) == false) {
                mCallbacks.add(callback);
            }
        }
    }

    public void removeCallback(Callback callback) {
        synchronized (mCallbacks) {
            mCallbacks.remove(callback);
        }
    }

    public void setFixedSize(int width, int height) {
        if (mRequestedWidth != width || mRequestedHeight != height) {
            mRequestedWidth = width;
            mRequestedHeight = height;
            requestLayout();
        }
    }

    public void setSizeFromLayout() {
        if (mRequestedWidth != -1 || mRequestedHeight != -1) {
            mRequestedWidth = mRequestedHeight = -1;
            requestLayout();
        }
    }

    public void setFormat(int format) {
        mRequestedFormat = format;
        if (mWindow != null) {
            updateWindow(false);
        }
    }

    public void setType(int type) {
        switch(type) {
            case SURFACE_TYPE_HARDWARE:
            case SURFACE_TYPE_GPU:
                // these are deprecated, treat as ""NORMAL""
                type = SURFACE_TYPE_NORMAL;
                break;
        }
        switch(type) {
            case SURFACE_TYPE_NORMAL:
            case SURFACE_TYPE_PUSH_BUFFERS:
                mRequestedType = type;
                if (mWindow != null) {
                    updateWindow(false);
                }
                break;
        }
    }

    public void setKeepScreenOn(boolean screenOn) {
        Message msg = mHandler.obtainMessage(KEEP_SCREEN_ON_MSG);
        msg.arg1 = screenOn ? 1 : 0;
        mHandler.sendMessage(msg);
    }

    public Canvas lockCanvas() {
        return internalLockCanvas(null);
    }

    public Canvas lockCanvas(Rect dirty) {
        return internalLockCanvas(dirty);
    }

    private final Canvas internalLockCanvas(Rect dirty) {
        if (mType == SURFACE_TYPE_PUSH_BUFFERS) {
            throw new BadSurfaceTypeException(""Surface type is SURFACE_TYPE_PUSH_BUFFERS"");
        }
        mSurfaceLock.lock();
        if (localLOGV)
            Log.i(TAG, ""Locking canvas... stopped="" + mDrawingStopped + "", win="" + mWindow);
        Canvas c = null;
        if (!mDrawingStopped && mWindow != null) {
            Rect frame = dirty != null ? dirty : mSurfaceFrame;
            try {
                c = mSurface.lockCanvas(frame);
            } catch (Exception e) {
                Log.e(LOG_TAG, ""Exception locking surface"", e);
            }
        }
        if (localLOGV)
            Log.i(TAG, ""Returned canvas: "" + c);
        if (c != null) {
            mLastLockTime = SystemClock.uptimeMillis();
            return c;
        }
        // If the Surface is not ready to be drawn, then return null,
        // but throttle calls to this function so it isn't called more
        // than every 100ms.
        long now = SystemClock.uptimeMillis();
        long nextTime = mLastLockTime + 100;
        if (nextTime > now) {
            try {
                Thread.sleep(nextTime - now);
            } catch (InterruptedException e) {
            }
            now = SystemClock.uptimeMillis();
        }
        mLastLockTime = now;
        mSurfaceLock.unlock();
        return null;
    }

    public void unlockCanvasAndPost(Canvas canvas) {
        mSurface.unlockCanvasAndPost(canvas);
        mSurfaceLock.unlock();
    }

    public Surface getSurface() {
        return mSurface;
    }

    public Rect getSurfaceFrame() {
        return mSurfaceFrame;
    }
}","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mSurfaceLock","false","false","false","false","true","ReentrantLock","new ReentrantLock()","","","\android\view\SurfaceView.java"
"android.view.MyWindow.mSurfaceView","false","false","true","false","true","WeakReference<SurfaceView>","","","","\android\view\SurfaceView.java"
"android.view.MyWindow.mCurWidth","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mSaveCount","false","false","true","false","false","int","","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mHaveFrame","false","false","false","false","false","boolean","false","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mHandler","false","false","false","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        switch(msg.what) {
            case KEEP_SCREEN_ON_MSG:
                {
                    setKeepScreenOn(msg.arg1 != 0);
                }
                break;
            case GET_NEW_SURFACE_MSG:
                {
                    handleGetNewSurface();
                }
                break;
            case UPDATE_WINDOW_MSG:
                {
                    updateWindow(false);
                }
                break;
        }
    }
}","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.UPDATE_WINDOW_MSG","false","false","false","true","true","int","3","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mRequestedWidth","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mCurHeight","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mDrawingStopped","false","false","false","false","false","boolean","true","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mRequestedVisible","false","false","false","false","false","boolean","false","","","\android\view\SurfaceView.java"
"android.view.MyWindow.mCurHeight","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mSession","false","false","false","false","false","IWindowSession","","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.GET_NEW_SURFACE_MSG","false","false","false","true","true","int","2","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mRequestedHeight","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mWidth","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mVisible","false","false","false","false","false","boolean","false","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mCallbacks","false","false","false","false","true","ArrayList<SurfaceHolder.Callback>","new ArrayList<SurfaceHolder.Callback>()","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.localLOGV","false","false","true","true","true","boolean","DEBUG ? true : Config.LOGV","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mNewSurfaceNeeded","false","false","false","false","false","boolean","false","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mHeight","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.TAG","false","false","true","true","true","String","""SurfaceView""","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mDestroyReportNeeded","false","false","false","false","false","boolean","false","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mWindow","false","false","false","false","false","MyWindow","","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mRequestedType","false","false","false","false","false","int","-1","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mVisibleInsets","false","false","false","false","true","Rect","new Rect()","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mSurface","false","false","false","false","true","Surface","new Surface()","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mIsCreating","false","false","false","false","false","boolean","false","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mSurfaceFrame","false","false","false","false","true","Rect","new Rect()","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.DEBUG","false","false","true","true","true","boolean","false","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.LOG_TAG","false","false","true","true","true","String","""SurfaceHolder""","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mTranslator","false","false","true","false","false","Translator","","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mLayout","false","false","false","false","true","WindowManager.LayoutParams","new WindowManager.LayoutParams()","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mScrollChangedListener","false","false","false","false","true","ViewTreeObserver.OnScrollChangedListener","new ViewTreeObserver.OnScrollChangedListener() {

    public void onScrollChanged() {
        updateWindow(false);
    }
}","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mReportDrawNeeded","false","false","false","false","false","boolean","","","","\android\view\SurfaceView.java"
"android.view.SurfaceView.mViewVisibility","false","false","false","false","false","boolean","false","","","\android\view\SurfaceView.java"
"com.android.internal.util.ArrayUtils.CACHE_SIZE","false","false","true","true","true","int","73","","","\com\android\internal\util\ArrayUtils.java"
"com.android.internal.util.ArrayUtils.EMPTY","false","false","true","true","false","Object","new Object[0]","","","\com\android\internal\util\ArrayUtils.java"
"com.android.internal.util.ArrayUtils.sCache","false","false","true","true","false","Object","new Object[CACHE_SIZE]","","","\com\android\internal\util\ArrayUtils.java"
"android.pim.ContactsAsyncHelper.displayMode","false","false","true","false","false","int","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.DISPLAY_DEFAULT","true","false","false","true","true","int","-2","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.DBG","false","false","true","true","true","boolean","false","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.defaultResource","true","false","false","false","false","int","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.result","true","false","false","false","false","Object","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.context","true","false","false","false","false","Context","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ImageTracker.DISPLAY_DEFAULT","true","false","false","true","true","int","-2","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.sThreadHandler","false","false","true","true","false","Handler","","","// static objects
","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.DEFAULT_TOKEN","false","false","true","true","true","int","-1","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.WorkerArgs.uri","true","false","false","false","false","Uri","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.DISPLAY_UNDEFINED","true","false","false","true","true","int","0","","// Image display states
","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.info","true","false","false","false","false","CallerInfo","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.WorkerArgs.view","true","false","false","false","false","ImageView","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ImageTracker.DISPLAY_UNDEFINED","true","false","false","true","true","int","0","","// Image display states
","\android\pim\ContactsAsyncHelper.java"
"android.pim.WorkerArgs.cookie","true","false","false","false","false","Object","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ImageTracker.displayMode","false","false","true","false","false","int","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.uri","true","false","false","false","false","Uri","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.WorkerArgs.defaultResource","true","false","false","false","false","int","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.LOG_TAG","false","false","true","true","true","String","""ContactsAsyncHelper""","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ImageTracker.mCurrentCallerInfo","false","false","true","false","false","CallerInfo","","","// State of the image on the imageview.
","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.sInstance","false","false","true","true","false","ContactsAsyncHelper","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.WorkerArgs.listener","true","false","false","false","false","OnImageLoadCompleteListener","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.listener","true","false","false","false","false","OnImageLoadCompleteListener","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.WorkerArgs.result","true","false","false","false","false","Object","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ImageTracker.DISPLAY_IMAGE","true","false","false","true","true","int","-1","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.EVENT_LOAD_IMAGE","false","false","true","true","true","int","1","","// constants
","\android\pim\ContactsAsyncHelper.java"
"android.pim.WorkerArgs.info","true","false","false","false","false","CallerInfo","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.view","true","false","false","false","false","ImageView","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.WorkerArgs.context","true","false","false","false","false","Context","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.cookie","true","false","false","false","false","Object","","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.DISPLAY_IMAGE","true","false","false","true","true","int","-1","","","\android\pim\ContactsAsyncHelper.java"
"android.pim.ContactsAsyncHelper.mCurrentCallerInfo","false","false","true","false","false","CallerInfo","","","// State of the image on the imageview.
","\android\pim\ContactsAsyncHelper.java"
"android.text.Annotation.mKey","false","false","true","false","true","String","","","","\android\text\Annotation.java"
"android.text.Annotation.mValue","false","false","true","false","true","String","","","","\android\text\Annotation.java"
"android.webkit.CacheLoader.mCacheResult","false","false","false","false","false","CacheManager.CacheResult","","","// Content source
","\android\webkit\CacheLoader.java"
"android.database.sqlite.SqliteWrapper.TAG","false","false","true","true","true","String","""SqliteWrapper""","","","\android\database\sqlite\SqliteWrapper.java"
"android.database.sqlite.SqliteWrapper.SQLITE_EXCEPTION_DETAIL_MESSAGE","false","false","true","true","true","String","""unable to open database file""","","","\android\database\sqlite\SqliteWrapper.java"
"android.accessibilityservice.AccessibilityService.DO_SET_SET_CONNECTION","false","false","true","true","true","int","10","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.AccessibilityService.LOG_TAG","false","false","true","true","true","String","""AccessibilityService""","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.AccessibilityService.mCaller","false","false","true","false","true","HandlerCaller","","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.AccessibilityService.DO_ON_ACCESSIBILITY_EVENT","false","false","true","true","true","int","30","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.IEventListenerWrapper.mCaller","false","false","true","false","true","HandlerCaller","","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.IEventListenerWrapper.DO_ON_INTERRUPT","false","false","true","true","true","int","20","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.AccessibilityService.mConnection","false","false","false","false","false","IAccessibilityServiceConnection","","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.IEventListenerWrapper.DO_ON_ACCESSIBILITY_EVENT","false","false","true","true","true","int","30","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.AccessibilityService.SERVICE_INTERFACE","true","false","false","true","true","String","""android.accessibilityservice.AccessibilityService""","","/**
 * The {@link Intent} that must be declared as handled by the service.
 */
","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.IEventListenerWrapper.mTarget","false","false","true","false","true","AccessibilityService","","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.AccessibilityService.mInfo","false","false","true","false","false","AccessibilityServiceInfo","","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.AccessibilityService.DO_ON_INTERRUPT","false","false","true","true","true","int","20","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.AccessibilityService.mTarget","false","false","true","false","true","AccessibilityService","","","","\android\accessibilityservice\AccessibilityService.java"
"android.accessibilityservice.IEventListenerWrapper.DO_SET_SET_CONNECTION","false","false","true","true","true","int","10","","","\android\accessibilityservice\AccessibilityService.java"
"android.view.animation.AnticipateInterpolator.mTension","false","false","true","false","true","float","","","","\android\view\animation\AnticipateInterpolator.java"
"android.webkit.GeolocationPermissions.ALLOWED","false","false","true","true","true","String","""allowed""","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.ALLOW","false","false","false","true","true","int","3","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.mUIHandler","false","false","true","false","false","Handler","","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.sInstance","false","false","true","true","false","GeolocationPermissions","","","// Global instance
","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.RETURN_ALLOWED","false","false","false","true","true","int","1","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.RETURN_ORIGINS","false","false","false","true","true","int","0","","// Message ids on the UI thread
","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.CLEAR","false","false","false","true","true","int","2","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.GET_ORIGINS","false","false","false","true","true","int","0","","// Message ids
","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.GET_ALLOWED","false","false","false","true","true","int","1","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.TAG","false","false","true","true","true","String","""geolocationPermissions""","","// Log tag
","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.CALLBACK","false","false","true","true","true","String","""callback""","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.ORIGIN","false","false","true","true","true","String","""origin""","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.mQueuedMessages","false","false","true","false","false","Vector<Message>","","","// A queue to store messages until the handler is ready.
","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.mHandler","false","false","true","false","false","Handler","","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.ORIGINS","false","false","true","true","true","String","""origins""","","","\android\webkit\GeolocationPermissions.java"
"android.webkit.GeolocationPermissions.CLEAR_ALL","false","false","false","true","true","int","4","","","\android\webkit\GeolocationPermissions.java"
"android.view.CompatibleDisplay.mMetrics","false","false","true","false","true","DisplayMetrics","","","","\android\view\Display.java"
"android.view.Display.mMetrics","false","false","true","false","true","DisplayMetrics","","","","\android\view\Display.java"
"android.view.Display.DEFAULT_DISPLAY","true","false","false","true","true","int","0","","/**
 * Specify the default Display
 */
","\android\view\Display.java"
"android.view.Display.mInitialized","false","false","true","true","false","boolean","false","","","\android\view\Display.java"
"android.view.Display.mDpiY","false","false","true","false","false","float","","","","\android\view\Display.java"
"android.view.Display.mDpiX","false","false","true","false","false","float","","","","\android\view\Display.java"
"android.view.Display.mPixelFormat","false","false","true","false","false","int","","","// Following fields are initialized from native code
","\android\view\Display.java"
"android.view.Display.mRefreshRate","false","false","true","false","false","float","","","","\android\view\Display.java"
"android.view.Display.mDisplay","false","false","true","false","false","int","","","","\android\view\Display.java"
"android.view.Display.mDensity","false","false","true","false","false","float","","","","\android\view\Display.java"
"android.view.Display.mStaticInit","false","false","true","true","true","Object","new Object()","","","\android\view\Display.java"
"android.view.inputmethod.InputMethodInfo.TAG","false","false","false","true","true","String","""InputMethodInfo""","","","\android\view\inputmethod\InputMethodInfo.java"
"android.view.inputmethod.InputMethodInfo.mIsDefaultResId","false","false","false","false","true","int","","","/**
 * The resource in the input method's .apk that holds a boolean indicating
 * whether it should be considered the default input method for this
 * system.  This is a resource ID instead of the final value so that it
 * can change based on the configuration (in particular locale).
 */
","\android\view\inputmethod\InputMethodInfo.java"
"android.view.inputmethod.InputMethodInfo.mService","false","false","false","false","true","ResolveInfo","","","/**
 * The Service that implements this input method component.
 */
","\android\view\inputmethod\InputMethodInfo.java"
"android.view.inputmethod.InputMethodInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<InputMethodInfo>","new Parcelable.Creator<InputMethodInfo>() {

    public InputMethodInfo createFromParcel(Parcel source) {
        return new InputMethodInfo(source);
    }

    public InputMethodInfo[] newArray(int size) {
        return new InputMethodInfo[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\android\view\inputmethod\InputMethodInfo.java"
"android.view.inputmethod.InputMethodInfo.mSettingsActivityName","false","false","false","false","true","String","","","/**
 * The input method setting activity's name, used by the system settings to
 * launch the setting activity of this input method.
 */
","\android\view\inputmethod\InputMethodInfo.java"
"android.view.inputmethod.InputMethodInfo.mId","false","false","false","false","true","String","","","/**
 * The unique string Id to identify the input method.  This is generated
 * from the input method component.
 */
","\android\view\inputmethod\InputMethodInfo.java"
"android.webkit.HttpAuthHandler.mRequestInFlightLock","false","false","false","false","false","Object","new Object()","","// both the lock and the state, because Boolean is immutable.
","\android\webkit\HttpAuthHandler.java"
"android.webkit.HttpAuthHandler.LOGTAG","false","false","true","true","true","String","""network""","","","\android\webkit\HttpAuthHandler.java"
"android.webkit.HttpAuthHandler.mUsername","false","false","false","false","false","String","","","","\android\webkit\HttpAuthHandler.java"
"android.webkit.HttpAuthHandler.mNetwork","false","false","true","false","false","Network","","","/**
 * Network.
 */
","\android\webkit\HttpAuthHandler.java"
"android.webkit.HttpAuthHandler.mLoaderQueue","false","false","true","false","false","LinkedList<LoadListener>","","","/**
 * Loader queue.
 */
","\android\webkit\HttpAuthHandler.java"
"android.webkit.HttpAuthHandler.mRequestInFlight","false","false","false","false","false","boolean","","","","\android\webkit\HttpAuthHandler.java"
"android.webkit.HttpAuthHandler.AUTH_CANCEL","false","false","true","true","true","int","200","","","\android\webkit\HttpAuthHandler.java"
"android.webkit.HttpAuthHandler.mPassword","false","false","false","false","false","String","","","","\android\webkit\HttpAuthHandler.java"
"android.webkit.HttpAuthHandler.AUTH_PROCEED","false","false","true","true","true","int","100","","// Message id for handling the user response
","\android\webkit\HttpAuthHandler.java"
"android.webkit.WebSyncManager.SYNC_LATER_INTERVAL","false","false","true","true","false","int","5 * 60 * 1000","","// 5 minutes
","\android\webkit\WebSyncManager.java"
"android.webkit.WebSyncManager.mHandler","false","true","false","false","false","Handler","","","// handler of the sync thread
","\android\webkit\WebSyncManager.java"
"android.webkit.WebSyncManager.LOGTAG","false","true","false","true","true","String","""websync""","","// log tag
","\android\webkit\WebSyncManager.java"
"android.webkit.WebSyncManager.mSyncThread","false","false","true","false","false","Thread","","","// thread for syncing
","\android\webkit\WebSyncManager.java"
"android.webkit.WebSyncManager.SYNC_MESSAGE","false","false","true","true","true","int","101","","// message code for sync message
","\android\webkit\WebSyncManager.java"
"android.webkit.WebSyncManager.SYNC_NOW_INTERVAL","false","false","true","true","false","int","100","","// 100 millisec
","\android\webkit\WebSyncManager.java"
"android.webkit.WebSyncManager.mThreadName","false","false","true","false","false","String","","","// Name of thread
","\android\webkit\WebSyncManager.java"
"android.webkit.WebSyncManager.mDataBase","false","true","false","false","false","WebViewDatabase","","","// database for the persistent storage
","\android\webkit\WebSyncManager.java"
"android.webkit.WebSyncManager.mStartSyncRefCount","false","false","true","false","false","int","","","// Ref count for calls to start/stop sync
","\android\webkit\WebSyncManager.java"
"android.view.animation.OvershootInterpolator.mTension","false","false","true","false","true","float","","","","\android\view\animation\OvershootInterpolator.java"
"android.database.AbstractWindowedCursor.mWindow","false","true","false","false","false","CursorWindow","","","/**
 * This needs be updated in {@link #onMove} by subclasses, and
 * needs to be set to NULL when the contents of the cursor change.
 */
","\android\database\AbstractWindowedCursor.java"
"android.net.http.SslError.SSL_NOTYETVALID","true","false","false","true","true","int","0","","/**
 * The certificate is not yet valid
 */
","\android\net\http\SslError.java"
"android.net.http.SslError.mErrors","false","false","false","false","false","int","","","/**
 * The SSL error set bitfield (each individual error is an bit index;
 * multiple individual errors can be OR-ed)
 */
","\android\net\http\SslError.java"
"android.net.http.SslError.SSL_EXPIRED","true","false","false","true","true","int","1","","/**
 * The certificate has expired
 */
","\android\net\http\SslError.java"
"android.net.http.SslError.mCertificate","false","false","false","false","false","SslCertificate","","","/**
 * The SSL certificate associated with the error set
 */
","\android\net\http\SslError.java"
"android.net.http.SslError.SSL_IDMISMATCH","true","false","false","true","true","int","2","","/**
 * Hostname mismatch
 */
","\android\net\http\SslError.java"
"android.net.http.SslError.SSL_MAX_ERROR","true","false","false","true","true","int","4","","/**
 * The number of different SSL errors (update if you add a new SSL error!!!)
 */
","\android\net\http\SslError.java"
"android.net.http.SslError.SSL_UNTRUSTED","true","false","false","true","true","int","3","","/**
 * The certificate authority is not trusted
 */
","\android\net\http\SslError.java"
"android.view.inputmethod.InputBinding.mPid","false","false","false","false","true","int","","","/**
 * The PID where this binding came from.
 */
","\android\view\inputmethod\InputBinding.java"
"android.view.inputmethod.InputBinding.TAG","false","false","false","true","true","String","""InputBinding""","","","\android\view\inputmethod\InputBinding.java"
"android.view.inputmethod.InputBinding.mConnection","false","false","false","false","true","InputConnection","","","/**
 * The connection back to the client.
 */
","\android\view\inputmethod\InputBinding.java"
"android.view.inputmethod.InputBinding.CREATOR","true","false","false","true","true","Parcelable.Creator<InputBinding>","new Parcelable.Creator<InputBinding>() {

    public InputBinding createFromParcel(Parcel source) {
        return new InputBinding(source);
    }

    public InputBinding[] newArray(int size) {
        return new InputBinding[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\android\view\inputmethod\InputBinding.java"
"android.view.inputmethod.InputBinding.mUid","false","false","false","false","true","int","","","/**
 * The UID where this binding came from.
 */
","\android\view\inputmethod\InputBinding.java"
"android.view.inputmethod.InputBinding.mConnectionToken","false","false","false","false","true","IBinder","","","/**
 * A remotable token for the connection back to the client.
 */
","\android\view\inputmethod\InputBinding.java"
"android.net.http.RequestHandle.mHeaders","false","false","true","false","false","Map<String,String>","","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.PROXY_AUTHORIZATION_HEADER","false","false","true","true","true","String","""Proxy-Authorization""","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mRequest","false","false","true","false","false","Request","","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mRequestQueue","false","false","true","false","false","RequestQueue","","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mBodyProvider","false","false","true","false","false","InputStream","","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.MAX_REDIRECT_COUNT","true","false","false","true","true","int","16","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mRedirectCount","false","false","true","false","false","int","0","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mBodyLength","false","false","true","false","false","int","","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mConnection","false","false","true","false","false","Connection","","","// Used only with synchronous requests.
","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.AUTHORIZATION_HEADER","false","false","true","true","true","String","""Authorization""","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mMethod","false","false","true","false","false","String","","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mUrl","false","false","true","false","false","String","","","","\android\net\http\RequestHandle.java"
"android.net.http.RequestHandle.mUri","false","false","true","false","false","WebAddress","","","","\android\net\http\RequestHandle.java"
"android.text.method.DateKeyListener.sInstance","false","false","true","true","false","DateKeyListener","","","","\android\text\method\DateKeyListener.java"
"android.text.method.DateKeyListener.CHARACTERS","true","false","false","true","true","char","new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '/', '-', '.' }","","/**
 * The characters that are used.
 *
 * @see KeyEvent#getMatch
 * @see #getAcceptedChars
 */
","\android\text\method\DateKeyListener.java"
"android.pim.vcard.JapaneseUtils.sHalfWidthMap","false","false","true","true","true","Map<Character,String>","new HashMap<Character, String>()","","","\android\pim\vcard\JapaneseUtils.java"
"android.widget.LayoutParams.x","true","false","false","false","false","int","","","/**
 * The horizontal, or X, location of the child within the view group.
 */
","\android\widget\AbsoluteLayout.java"
"android.widget.LayoutParams.y","true","false","false","false","false","int","","","/**
 * The vertical, or Y, location of the child within the view group.
 */
","\android\widget\AbsoluteLayout.java"
"android.widget.AbsoluteLayout.x","true","false","false","false","false","int","","","/**
 * The horizontal, or X, location of the child within the view group.
 */
","\android\widget\AbsoluteLayout.java"
"android.widget.AbsoluteLayout.y","true","false","false","false","false","int","","","/**
 * The vertical, or Y, location of the child within the view group.
 */
","\android\widget\AbsoluteLayout.java"
"android.util.FinitePool.mPoolCount","false","false","true","false","false","int","","","/**
 * Number of objects in the pool
 */
","\android\util\FinitePool.java"
"android.util.FinitePool.mInfinite","false","false","true","false","true","boolean","","","/**
 * If true, mLimit is ignored
 */
","\android\util\FinitePool.java"
"android.util.FinitePool.mRoot","false","false","true","false","false","T","","","/**
 * Next object to acquire
 */
","\android\util\FinitePool.java"
"android.util.FinitePool.mManager","false","false","true","false","true","PoolableManager<T>","","","/**
 * Factory used to create new pool objects
 */
","\android\util\FinitePool.java"
"android.util.FinitePool.mLimit","false","false","true","false","true","int","","","/**
 * Maximum number of objects in the pool
 */
","\android\util\FinitePool.java"
"android.net.MobileDataStateTracker.DBG","false","false","true","true","true","boolean","true","","","\android\net\MobileDataStateTracker.java"
"android.net.MobileDataStateTracker.TAG","false","false","true","true","true","String","""MobileDataStateTracker""","","","\android\net\MobileDataStateTracker.java"
"android.net.MobileDataStateTracker.mStateReceiver","false","false","true","false","false","BroadcastReceiver","","","","\android\net\MobileDataStateTracker.java"
"android.net.MobileDataStateTracker.mApnName","false","false","true","false","false","String","","","","\android\net\MobileDataStateTracker.java"
"android.net.MobileDataStateTracker.mApnType","false","false","true","false","false","String","","","","\android\net\MobileDataStateTracker.java"
"android.net.MobileDataStateTracker.mApnTypeToWatchFor","false","false","true","false","false","String","","","","\android\net\MobileDataStateTracker.java"
"android.net.MobileDataStateTracker.mEnabled","false","false","true","false","false","boolean","","","","\android\net\MobileDataStateTracker.java"
"android.net.MobileDataStateTracker.mMobileDataState","false","false","true","false","false","Phone.DataState","","","","\android\net\MobileDataStateTracker.java"
"android.net.MobileDataStateTracker.mPhoneService","false","false","true","false","false","ITelephony","","","","\android\net\MobileDataStateTracker.java"
"com.google.android.mms.pdu.PduPart.P_START_INFO","true","false","false","true","true","int","0x9A","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_BASE64","true","false","false","true","true","String","""base64""","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DEP_START","true","false","false","true","true","int","0x8A","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DEP_COMMENT","true","false","false","true","true","int","0x8C","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.mPartHeader","false","false","true","false","false","Map<Integer,Object>","null","","/**
 * Header of part.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.CONTENT_TRANSFER_ENCODING","true","false","false","true","true","String","""Content-Transfer-Encoding""","","/**
 * Content=Transfer-Encoding string.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_CONTENT_TRANSFER_ENCODING","true","false","false","true","true","int","0xC8","","// The next header is unassigned header, use reserved header(0x48) value.
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_CONTENT_ID","true","false","false","true","true","int","0xC0","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DIFFERENCES","true","false","false","true","true","int","0x87","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_SEC","true","false","false","true","true","int","0x91","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_LEVEL","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_CONTENT_TYPE","true","false","false","true","true","int","0x91","","/**
 * Header field names.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DEP_PATH","true","false","false","true","true","int","0x8F","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_TYPE","true","false","false","true","true","int","0x83","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.TAG","false","false","true","true","true","String","""PduPart""","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_COMMENT","true","false","false","true","true","int","0x9B","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DISPOSITION_INLINE","true","false","false","true","true","int","0x82","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_PATH","true","false","false","true","true","int","0x9D","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_SIZE","true","false","false","true","true","int","0x96","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_MAC","true","false","false","true","true","int","0x92","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_READ_DATE","true","false","false","true","true","int","0x95","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_CONTENT_LOCATION","true","false","false","true","true","int","0x8E","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DEP_CONTENT_DISPOSITION","true","false","false","true","true","int","0xAE","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_QUOTED_PRINTABLE","true","false","false","true","true","String","""quoted-printable""","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_NAME","true","false","false","true","true","int","0x97","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.mUri","false","false","true","false","false","Uri","null","","/**
 * Data uri.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_BINARY","true","false","false","true","true","String","""binary""","","/**
 * Value of Content-Transfer-Encoding.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_PADDING","true","false","false","true","true","int","0x88","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_Q","true","false","false","true","true","int","0x80","","/**
 * Well-Known Parameters.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DEP_FILENAME","true","false","false","true","true","int","0x86","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_CONTENT_DISPOSITION","true","false","false","true","true","int","0xC5","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.DISPOSITION_ATTACHMENT","false","false","false","true","true","byte","""attachment"".getBytes()","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DISPOSITION_FROM_DATA","true","false","false","true","true","int","0x80","","/**
 * Content-Disposition value.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_MODIFICATION_DATE","true","false","false","true","true","int","0x94","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.DISPOSITION_FROM_DATA","false","false","false","true","true","byte","""from-data"".getBytes()","","/**
 * Value of disposition can be set to PduPart when the value is octet in
 * the PDU.
 * ""from-data"" instead of Form-data<Octet 128>.
 * ""attachment"" instead of Attachment<Octet 129>.
 * ""inline"" instead of Inline<Octet 130>.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_7BIT","true","false","false","true","true","String","""7bit""","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_SECURE","true","false","false","true","true","int","0x90","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_CREATION_DATE","true","false","false","true","true","int","0x93","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DEP_START_INFO","true","false","false","true","true","int","0x8B","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.DISPOSITION_INLINE","false","false","false","true","true","byte","""inline"".getBytes()","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DEP_DOMAIN","true","false","false","true","true","int","0x8D","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.mPartData","false","false","true","false","false","byte","null","","/**
 * Part data.
 */
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_MAX_AGE","true","false","false","true","true","int","0x8E","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_8BIT","true","false","false","true","true","String","""8bit""","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_FILENAME","true","false","false","true","true","int","0x98","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_CT_MR_TYPE","true","false","false","true","true","int","0x89","","// This value of ""TYPE"" s used with Content-Type: multipart/related
","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_START","true","false","false","true","true","int","0x99","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DEP_NAME","true","false","false","true","true","int","0x85","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DOMAIN","true","false","false","true","true","int","0x9C","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_CHARSET","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.PduPart.P_DISPOSITION_ATTACHMENT","true","false","false","true","true","int","0x81","","","\com\google\android\mms\pdu\PduPart.java"
"com.google.android.mms.pdu.EncodedStringValue.mData","false","false","true","false","false","byte","","","/**
 * The Text-string value.
 */
","\com\google\android\mms\pdu\EncodedStringValue.java"
"com.google.android.mms.pdu.EncodedStringValue.TAG","false","false","true","true","true","String","""EncodedStringValue""","","","\com\google\android\mms\pdu\EncodedStringValue.java"
"com.google.android.mms.pdu.EncodedStringValue.LOCAL_LOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\com\google\android\mms\pdu\EncodedStringValue.java"
"com.google.android.mms.pdu.EncodedStringValue.mCharacterSet","false","false","true","false","false","int","","","/**
 * The Char-set value.
 */
","\com\google\android\mms\pdu\EncodedStringValue.java"
"com.google.android.mms.pdu.EncodedStringValue.DEBUG","false","false","true","true","true","boolean","false","","","\com\google\android\mms\pdu\EncodedStringValue.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\ListView.java"
"android.widget.ListView.mClipDivider","false","false","true","false","false","boolean","","","","\android\widget\ListView.java"
"android.widget.ListView.mAreAllItemsSelectable","false","false","true","false","false","boolean","true","","","\android\widget\ListView.java"
"android.widget.ListView.mFocusSelector","false","false","true","false","false","FocusSelector","","","// Keeps focused children visible through resizes
","\android\widget\ListView.java"
"android.widget.ListView.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\ListView.java"
"android.widget.ListView.mCheckedIdStates","false","false","true","false","false","LongSparseArray<Boolean>","","","","\android\widget\ListView.java"
"android.widget.ListView.mDivider","false","false","false","false","false","Drawable","","","","\android\widget\ListView.java"
"android.widget.ListView.NO_POSITION","false","false","false","true","true","int","-1","","/**
 * Used to indicate a no preference for a position type.
 */
","\android\widget\ListView.java"
"android.widget.SavedState.checkState","false","false","false","false","false","SparseBooleanArray","","","","\android\widget\ListView.java"
"android.widget.ListView.checkIdState","false","false","false","false","false","LongSparseArray<Boolean>","","","","\android\widget\ListView.java"
"android.widget.ListView.mItemsCanFocus","false","false","true","false","false","boolean","false","","","\android\widget\ListView.java"
"android.widget.ListView.mFooterViewInfos","false","false","true","false","false","ArrayList<FixedViewInfo>","Lists.newArrayList()","","","\android\widget\ListView.java"
"android.widget.ListView.mCheckStates","false","false","true","false","false","SparseBooleanArray","","","","\android\widget\ListView.java"
"android.widget.ListView.data","true","false","false","false","false","Object","","","/**
 * The data backing the view. This is returned from {@link ListAdapter#getItem(int)}.
 */
","\android\widget\ListView.java"
"android.widget.ListView.mHeaderDividersEnabled","false","false","true","false","false","boolean","","","","\android\widget\ListView.java"
"android.widget.ListView.mDividerIsOpaque","false","false","true","false","false","boolean","","","","\android\widget\ListView.java"
"android.widget.ListView.mPosition","false","false","true","false","false","int","","","","\android\widget\ListView.java"
"android.widget.ListView.CHOICE_MODE_SINGLE","true","false","false","true","true","int","1","","/**
 * The list allows up to one choice
 */
","\android\widget\ListView.java"
"android.widget.ArrowScrollFocusResult.mAmountToScroll","false","false","true","false","false","int","","","","\android\widget\ListView.java"
"android.widget.ListView.view","true","false","false","false","false","View","","","/**
 * The view to add to the list
 */
","\android\widget\ListView.java"
"android.widget.ListView.mIsCacheColorOpaque","false","false","true","false","false","boolean","","","","\android\widget\ListView.java"
"android.widget.ArrowScrollFocusResult.mSelectedPosition","false","false","true","false","false","int","","","","\android\widget\ListView.java"
"android.widget.ListView.mArrowScrollFocusResult","false","false","true","false","true","ArrowScrollFocusResult","new ArrowScrollFocusResult()","","// allocating these thingies too often.
","\android\widget\ListView.java"
"android.widget.ListView.mChoiceMode","false","false","true","false","false","int","CHOICE_MODE_NONE","","","\android\widget\ListView.java"
"android.widget.FixedViewInfo.view","true","false","false","false","false","View","","","/**
 * The view to add to the list
 */
","\android\widget\ListView.java"
"android.widget.ListView.CHOICE_MODE_MULTIPLE","true","false","false","true","true","int","2","","/**
 * The list allows multiple choices
 */
","\android\widget\ListView.java"
"android.widget.ListView.mDividerHeight","false","false","false","false","false","int","","","","\android\widget\ListView.java"
"android.widget.ListView.MAX_SCROLL_FACTOR","false","false","true","true","true","float","0.33f","","/**
 * When arrow scrolling, ListView will never scroll more than this factor
 * times the height of the list.
 */
","\android\widget\ListView.java"
"android.widget.ListView.mHeaderViewInfos","false","false","true","false","false","ArrayList<FixedViewInfo>","Lists.newArrayList()","","","\android\widget\ListView.java"
"android.widget.ListView.mDividerPaint","false","false","true","false","false","Paint","","","","\android\widget\ListView.java"
"android.widget.FocusSelector.mPositionTop","false","false","true","false","false","int","","","","\android\widget\ListView.java"
"android.widget.ListView.mTempRect","false","false","true","false","true","Rect","new Rect()","","// used for temporary calculations.
","\android\widget\ListView.java"
"android.widget.ListView.checkState","false","false","false","false","false","SparseBooleanArray","","","","\android\widget\ListView.java"
"android.widget.ListView.mAmountToScroll","false","false","true","false","false","int","","","","\android\widget\ListView.java"
"android.widget.ListView.CHOICE_MODE_NONE","true","false","false","true","true","int","0","","/**
 * Normal list that does not indicate choices
 */
","\android\widget\ListView.java"
"android.widget.ListView.mPositionTop","false","false","true","false","false","int","","","","\android\widget\ListView.java"
"android.widget.ListView.MIN_SCROLL_PREVIEW_PIXELS","false","false","true","true","true","int","2","","/**
 * When arrow scrolling, need a certain amount of pixels to preview next
 * items.  This is usually the fading edge, but if that is small enough,
 * we want to make sure we preview at least this many pixels.
 */
","\android\widget\ListView.java"
"android.widget.ListView.isSelectable","true","false","false","false","false","boolean","","","/**
 * <code>true</code> if the fixed view should be selectable in the list
 */
","\android\widget\ListView.java"
"android.widget.SavedState.checkIdState","false","false","false","false","false","LongSparseArray<Boolean>","","","","\android\widget\ListView.java"
"android.widget.FixedViewInfo.data","true","false","false","false","false","Object","","","/**
 * The data backing the view. This is returned from {@link ListAdapter#getItem(int)}.
 */
","\android\widget\ListView.java"
"android.widget.ListView.mSelectedPosition","false","false","true","false","false","int","","","","\android\widget\ListView.java"
"android.widget.ListView.mFooterDividersEnabled","false","false","true","false","false","boolean","","","","\android\widget\ListView.java"
"android.widget.FixedViewInfo.isSelectable","true","false","false","false","false","boolean","","","/**
 * <code>true</code> if the fixed view should be selectable in the list
 */
","\android\widget\ListView.java"
"android.widget.FocusSelector.mPosition","false","false","true","false","false","int","","","","\android\widget\ListView.java"
"android.widget.TableRow.mChildrenTracker","false","false","true","false","false","ChildrenTracker","","","","\android\widget\TableRow.java"
"android.widget.TableRow.mNumColumns","false","false","true","false","false","int","0","","","\android\widget\TableRow.java"
"android.widget.ChildrenTracker.listener","false","false","true","false","false","OnHierarchyChangeListener","","","","\android\widget\TableRow.java"
"android.widget.TableRow.listener","false","false","true","false","false","OnHierarchyChangeListener","","","","\android\widget\TableRow.java"
"android.widget.LayoutParams.column","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * <p>The column index of the cell represented by the widget.</p>
 */
","\android\widget\TableRow.java"
"android.widget.TableRow.span","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * <p>The number of columns the widgets spans over.</p>
 */
","\android\widget\TableRow.java"
"android.widget.LayoutParams.LOCATION","false","false","true","true","true","int","0","","","\android\widget\TableRow.java"
"android.widget.TableRow.mColumnWidths","false","false","true","false","false","int","","","","\android\widget\TableRow.java"
"android.widget.TableRow.LOCATION_NEXT","false","false","true","true","true","int","1","","","\android\widget\TableRow.java"
"android.widget.LayoutParams.mOffset","false","false","true","false","false","int","new int[2]","","","\android\widget\TableRow.java"
"android.widget.LayoutParams.span","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * <p>The number of columns the widgets spans over.</p>
 */
","\android\widget\TableRow.java"
"android.widget.TableRow.mConstrainedColumnWidths","false","false","true","false","false","int","","","","\android\widget\TableRow.java"
"android.widget.LayoutParams.LOCATION_NEXT","false","false","true","true","true","int","1","","","\android\widget\TableRow.java"
"android.widget.TableRow.mOffset","false","false","true","false","false","int","new int[2]","","","\android\widget\TableRow.java"
"android.widget.TableRow.column","true","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * <p>The column index of the cell represented by the widget.</p>
 */
","\android\widget\TableRow.java"
"android.widget.TableRow.mColumnToChildIndex","false","false","true","false","false","SparseIntArray","","","","\android\widget\TableRow.java"
"android.widget.TableRow.LOCATION","false","false","true","true","true","int","0","","","\android\widget\TableRow.java"
"android.os.BatteryManager.BATTERY_PLUGGED_USB","true","false","false","true","true","int","2","","/**
 * Power source is a USB port.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_STATUS_NOT_CHARGING","true","false","false","true","true","int","4","","","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_STATUS_UNKNOWN","true","false","false","true","true","int","1","","// values for ""status"" field in the ACTION_BATTERY_CHANGED Intent
","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_HEALTH_UNKNOWN","true","false","false","true","true","int","1","","// values for ""health"" field in the ACTION_BATTERY_CHANGED Intent
","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_VOLTAGE","true","false","false","true","true","String","""voltage""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * integer containing the current battery voltage level.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_HEALTH_OVER_VOLTAGE","true","false","false","true","true","int","5","","","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_LEVEL","true","false","false","true","true","String","""level""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * integer field containing the current battery level, from 0 to
 * {@link #EXTRA_SCALE}.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_PLUGGED_AC","true","false","false","true","true","int","1","","/**
 * Power source is an AC charger.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_TECHNOLOGY","true","false","false","true","true","String","""technology""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * String describing the technology of the current battery.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_HEALTH_UNSPECIFIED_FAILURE","true","false","false","true","true","int","6","","","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_HEALTH_DEAD","true","false","false","true","true","int","4","","","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_HEALTH_GOOD","true","false","false","true","true","int","2","","","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_STATUS_CHARGING","true","false","false","true","true","int","2","","","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_STATUS","true","false","false","true","true","String","""status""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * integer containing the current status constant.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_TEMPERATURE","true","false","false","true","true","String","""temperature""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * integer containing the current battery temperature.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_HEALTH_OVERHEAT","true","false","false","true","true","int","3","","","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_PRESENT","true","false","false","true","true","String","""present""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * boolean indicating whether a battery is present.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_SCALE","true","false","false","true","true","String","""scale""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * integer containing the maximum battery level.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_ICON_SMALL","true","false","false","true","true","String","""icon-small""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * integer containing the resource ID of a small status bar icon
 * indicating the current battery state.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_STATUS_FULL","true","false","false","true","true","int","5","","","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_PLUGGED","true","false","false","true","true","String","""plugged""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * integer indicating whether the device is plugged in to a power
 * source; 0 means it is on battery, other constants are different
 * types of power sources.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.EXTRA_HEALTH","true","false","false","true","true","String","""health""","","/**
 * Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
 * integer containing the current health constant.
 */
","\android\os\BatteryManager.java"
"android.os.BatteryManager.BATTERY_STATUS_DISCHARGING","true","false","false","true","true","int","3","","","\android\os\BatteryManager.java"
"android.widget.NumberPickerButton.mNumberPicker","false","false","true","false","false","NumberPicker","","","","\android\widget\NumberPickerButton.java"
"android.app.SuggestionsAdapter.mIconName2Col","false","false","true","false","false","int","","","","\android\app\SuggestionsAdapter.java"
"android.app.ChildViewCache.mIcon1","true","false","false","false","true","ImageView","","","","\android\app\SuggestionsAdapter.java"
"android.app.ChildViewCache.mIcon2","true","false","false","false","true","ImageView","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mIconName1Col","false","false","true","false","false","int","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mProviderContext","false","false","true","false","false","Context","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mText1","true","false","false","false","true","TextView","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mText2","true","false","false","false","true","TextView","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.QUERY_LIMIT","false","false","true","true","true","int","50","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mText2Col","false","false","true","false","false","int","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mSearchable","false","false","true","false","false","SearchableInfo","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mText2UrlCol","false","false","true","false","false","int","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mSearchDialog","false","false","true","false","false","SearchDialog","","","","\android\app\SuggestionsAdapter.java"
"android.app.ChildViewCache.mText1","true","false","false","false","true","TextView","","","","\android\app\SuggestionsAdapter.java"
"android.app.ChildViewCache.mText2","true","false","false","false","true","TextView","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mText1Col","false","false","true","false","false","int","","","// Cached column indexes, updated when the cursor changes.
","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mBackgroundsCache","false","false","true","false","false","SparseArray<Drawable.ConstantState>","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mSearchManager","false","false","true","false","false","SearchManager","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mStopSpinnerRunnable","false","false","true","false","true","Runnable","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mPreviousLength","false","false","true","false","false","int","0","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mOutsideDrawablesCache","false","false","true","false","false","WeakHashMap<String,Drawable.ConstantState>","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.DBG","false","false","true","true","true","boolean","false","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.DELETE_KEY_POST_DELAY","false","false","true","true","true","long","500L","","/**
 * The amount of time we delay in the filter when the user presses the delete key.
 * @see Filter#setDelayer(android.widget.Filter.Delayer).
 */
","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mBackgroundColorCol","false","false","true","false","false","int","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.NONE","false","false","false","true","true","int","-1","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mClosed","false","false","true","false","false","boolean","false","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mUrlColor","false","false","true","false","false","ColorStateList","","","// URL color
","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.LOG_TAG","false","false","true","true","true","String","""SuggestionsAdapter""","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mStartSpinnerRunnable","false","false","true","false","true","Runnable","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mIcon1","true","false","false","false","true","ImageView","","","","\android\app\SuggestionsAdapter.java"
"android.app.SuggestionsAdapter.mIcon2","true","false","false","false","true","ImageView","","","","\android\app\SuggestionsAdapter.java"
"android.widget.PopupWindow.mTouchable","false","false","true","false","false","boolean","true","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mAboveAnchorBackgroundDrawable","false","false","true","false","false","Drawable","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mWidthMode","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.INPUT_METHOD_NEEDED","true","false","false","true","true","int","1","","/**
 * Mode for {@link #setInputMethodMode(int)}: this popup always needs to
 * work with an input method, regardless of whether it is focusable.  This
 * means that it will always be displayed so that the user can also operate
 * the input method while it is shown.
 */
","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mHeight","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mContentView","false","false","true","false","false","View","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mLastHeight","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mBackground","false","false","true","false","false","Drawable","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mTouchInterceptor","false","false","true","false","false","OnTouchListener","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mHeightMode","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mAnchor","false","false","true","false","false","WeakReference<View>","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.INPUT_METHOD_NOT_NEEDED","true","false","false","true","true","int","2","","/**
 * Mode for {@link #setInputMethodMode(int)}: this popup never needs to
 * work with an input method, regardless of whether it is focusable.  This
 * means that it will always be displayed to use as much space on the
 * screen as needed, regardless of whether this covers the input method.
 */
","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mInputMethodMode","false","false","true","false","false","int","INPUT_METHOD_FROM_FOCUSABLE","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mIgnoreCheekPress","false","false","true","false","false","boolean","false","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mAnchorXoff","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mIsShowing","false","false","true","false","false","boolean","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mOnDismissListener","false","false","true","false","false","OnDismissListener","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mBelowAnchorBackgroundDrawable","false","false","true","false","false","Drawable","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mClippingEnabled","false","false","true","false","false","boolean","true","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mFocusable","false","false","true","false","false","boolean","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mTempRect","false","false","true","false","false","Rect","new Rect()","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mLastWidth","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mPopupHeight","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mContext","false","false","true","false","false","Context","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mDrawingLocation","false","false","true","false","false","int","new int[2]","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.INPUT_METHOD_FROM_FOCUSABLE","true","false","false","true","true","int","0","","/**
 * Mode for {@link #setInputMethodMode(int)}: the requirements for the
 * input method should be based on the focusability of the popup.  That is
 * if it is focusable than it needs to work with the input method, else
 * it doesn't.
 */
","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mPopupView","false","false","true","false","false","View","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mPopupWidth","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mOnScrollChangedListener","false","false","true","false","false","OnScrollChangedListener","new OnScrollChangedListener() {

    public void onScrollChanged() {
        View anchor = mAnchor.get();
        if (anchor != null && mPopupView != null) {
            WindowManager.LayoutParams p = (WindowManager.LayoutParams) mPopupView.getLayoutParams();
            updateAboveAnchor(findDropDownPosition(anchor, p, mAnchorXoff, mAnchorYoff));
            update(p.x, p.y, -1, -1, true);
        }
    }
}","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mScreenLocation","false","false","true","false","false","int","new int[2]","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mOutsideTouchable","false","false","true","false","false","boolean","false","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mWidth","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mSoftInputMode","false","false","true","false","false","int","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mIsDropdown","false","false","true","false","false","boolean","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mWindowManager","false","false","true","false","false","WindowManager","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mAnimationStyle","false","false","true","false","false","int","-1","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.mAboveAnchor","false","false","true","false","false","boolean","","","","\android\widget\PopupWindow.java"
"android.widget.PopupWindow.ABOVE_ANCHOR_STATE_SET","false","false","true","true","true","int","new int[] { com.android.internal.R.attr.state_above_anchor }","","","\android\widget\PopupWindow.java"
"android.view.animation.AccelerateInterpolator.mFactor","false","false","true","false","true","float","","","","\android\view\animation\AccelerateInterpolator.java"
"android.view.animation.AccelerateInterpolator.mDoubleFactor","false","false","true","false","true","double","","","","\android\view\animation\AccelerateInterpolator.java"
"android.text.StaticLayout.DESCENT","false","false","true","true","true","int","2","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.ELLIPSIS_START","false","false","true","true","true","int","3","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mEllipsizedWidth","false","false","true","false","false","int","","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.TOP","false","false","true","true","true","int","1","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.DIR_MASK","false","false","true","true","true","int","0xC0000000","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mChdirs","false","false","true","false","false","byte","","","/*
     * These are reused across calls to generate()
     */
","\android\text\StaticLayout.java"
"android.text.StaticLayout.FIRST_CJK","false","false","true","true","true","char","'\u2E80'","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.START","false","false","true","true","true","int","0","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mLineDirections","false","false","true","false","false","Directions","","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.ELLIPSIS_COUNT","false","false","true","true","true","int","4","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.COLUMNS_ELLIPSIZE","false","false","true","true","true","int","5","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mChs","false","false","true","false","false","char","","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mLines","false","false","true","false","false","int","","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mLineCount","false","false","true","false","false","int","","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.FIRST_RIGHT_TO_LEFT","false","false","true","true","true","char","'\u0590'","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.START_MASK","false","false","true","true","true","int","0x1FFFFFFF","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.TAB_MASK","false","false","true","true","true","int","0x20000000","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mTopPadding","false","false","true","false","false","int","","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mWidths","false","false","true","false","false","float","","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.TAB","false","false","true","true","true","int","START","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mColumns","false","false","true","false","false","int","","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.COLUMNS_NORMAL","false","false","true","true","true","int","3","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.DIR_SHIFT","false","false","true","true","true","int","30","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.mFontMetricsInt","false","false","true","false","false","Paint.FontMetricsInt","new Paint.FontMetricsInt()","","","\android\text\StaticLayout.java"
"android.text.StaticLayout.DIR","false","false","true","true","true","int","START","","","\android\text\StaticLayout.java"
"android.app.backup.BackupDataInput.mHeaderReady","false","false","true","false","false","boolean","","","","\android\app\backup\BackupDataInput.java"
"android.app.backup.BackupDataInput.mBackupReader","false","false","false","false","false","int","","","","\android\app\backup\BackupDataInput.java"
"android.app.backup.BackupDataInput.key","false","false","false","false","false","String","","","","\android\app\backup\BackupDataInput.java"
"android.app.backup.BackupDataInput.mHeader","false","false","true","false","false","EntityHeader","new EntityHeader()","","","\android\app\backup\BackupDataInput.java"
"android.app.backup.EntityHeader.key","false","false","false","false","false","String","","","","\android\app\backup\BackupDataInput.java"
"android.app.backup.BackupDataInput.dataSize","false","false","false","false","false","int","","","","\android\app\backup\BackupDataInput.java"
"android.app.backup.EntityHeader.dataSize","false","false","false","false","false","int","","","","\android\app\backup\BackupDataInput.java"
"android.database.CharArrayBuffer.sizeCopied","true","false","false","false","false","int","","","// Out parameter
","\android\database\CharArrayBuffer.java"
"android.database.CharArrayBuffer.data","true","false","false","false","false","char","","","// In and out parameter
","\android\database\CharArrayBuffer.java"
"android.content.ObserverCall.mNode","false","false","false","false","true","ObserverNode","","","","\android\content\ContentService.java"
"android.content.ContentService.mFactoryTest","false","false","true","false","false","boolean","","","","\android\content\ContentService.java"
"android.content.ContentService.mObservers","false","false","true","false","false","ArrayList<ObserverEntry>","new ArrayList<ObserverEntry>()","","","\android\content\ContentService.java"
"android.content.ContentService.notifyForDescendents","true","false","false","false","true","boolean","","","","\android\content\ContentService.java"
"android.content.ObserverNode.DELETE_TYPE","true","false","false","true","true","int","2","","","\android\content\ContentService.java"
"android.content.ObserverNode.mChildren","false","false","true","false","false","ArrayList<ObserverNode>","new ArrayList<ObserverNode>()","","","\android\content\ContentService.java"
"android.content.ContentService.mSyncManager","false","false","true","false","false","SyncManager","null","","","\android\content\ContentService.java"
"android.content.ObserverCall.mObserver","false","false","false","false","true","IContentObserver","","","","\android\content\ContentService.java"
"android.content.ContentService.mSelfNotify","false","false","false","false","true","boolean","","","","\android\content\ContentService.java"
"android.content.ObserverCall.mSelfNotify","false","false","false","false","true","boolean","","","","\android\content\ContentService.java"
"android.content.ContentService.mSyncManagerLock","false","false","true","false","true","Object","new Object()","","","\android\content\ContentService.java"
"android.content.ContentService.TAG","false","false","true","true","true","String","""ContentService""","","","\android\content\ContentService.java"
"android.content.ContentService.DELETE_TYPE","true","false","false","true","true","int","2","","","\android\content\ContentService.java"
"android.content.ObserverNode.notifyForDescendents","true","false","false","false","true","boolean","","","","\android\content\ContentService.java"
"android.content.ContentService.mObserver","false","false","false","false","true","IContentObserver","","","","\android\content\ContentService.java"
"android.content.ObserverEntry.observersLock","false","false","true","false","true","Object","","","","\android\content\ContentService.java"
"android.content.ContentService.INSERT_TYPE","true","false","false","true","true","int","0","","","\android\content\ContentService.java"
"android.content.ContentService.UPDATE_TYPE","true","false","false","true","true","int","1","","","\android\content\ContentService.java"
"android.content.ObserverEntry.observer","true","false","false","false","true","IContentObserver","","","","\android\content\ContentService.java"
"android.content.ContentService.mNode","false","false","false","false","true","ObserverNode","","","","\android\content\ContentService.java"
"android.content.ContentService.observer","true","false","false","false","true","IContentObserver","","","","\android\content\ContentService.java"
"android.content.ContentService.mChildren","false","false","true","false","false","ArrayList<ObserverNode>","new ArrayList<ObserverNode>()","","","\android\content\ContentService.java"
"android.content.ObserverNode.observer","true","false","false","false","true","IContentObserver","","","","\android\content\ContentService.java"
"android.content.ObserverNode.observersLock","false","false","true","false","true","Object","","","","\android\content\ContentService.java"
"android.content.ContentService.observersLock","false","false","true","false","true","Object","","","","\android\content\ContentService.java"
"android.content.ContentService.mContext","false","false","true","false","false","Context","","","","\android\content\ContentService.java"
"android.content.ObserverNode.mObservers","false","false","true","false","false","ArrayList<ObserverEntry>","new ArrayList<ObserverEntry>()","","","\android\content\ContentService.java"
"android.content.ContentService.mName","false","false","true","false","false","String","","","","\android\content\ContentService.java"
"android.content.ObserverNode.UPDATE_TYPE","true","false","false","true","true","int","1","","","\android\content\ContentService.java"
"android.content.ContentService.mRootNode","false","false","true","false","true","ObserverNode","new ObserverNode("""")","","","\android\content\ContentService.java"
"android.content.ObserverNode.INSERT_TYPE","true","false","false","true","true","int","0","","","\android\content\ContentService.java"
"android.content.ObserverEntry.notifyForDescendents","true","false","false","false","true","boolean","","","","\android\content\ContentService.java"
"android.content.ObserverNode.mName","false","false","true","false","false","String","","","","\android\content\ContentService.java"
"android.os.IBinder.FLAG_ONEWAY","false","false","false","false","false","int","0x00000001","","/**
 * Flag to {@link #transact}: this is a one-way call, meaning that the
 * caller returns immediately, without waiting for a result from the
 * callee. Applies only if the caller and callee are in different
 * processes.
 */
","\android\os\IBinder.java"
"android.os.IBinder.FIRST_CALL_TRANSACTION","false","false","false","false","false","int","0x00000001","","/**
 * The first transaction code available for user commands.
 */
","\android\os\IBinder.java"
"android.os.IBinder.INTERFACE_TRANSACTION","false","false","false","false","false","int","('_' << 24) | ('N' << 16) | ('T' << 8) | 'F'","","/**
 * IBinder protocol transaction code: interrogate the recipient side
 * of the transaction for its canonical interface descriptor.
 */
","\android\os\IBinder.java"
"android.os.IBinder.PING_TRANSACTION","false","false","false","false","false","int","('_' << 24) | ('P' << 16) | ('N' << 8) | 'G'","","/**
 * IBinder protocol transaction code: pingBinder().
 */
","\android\os\IBinder.java"
"android.os.IBinder.LAST_CALL_TRANSACTION","false","false","false","false","false","int","0x00ffffff","","/**
 * The last transaction code available for user commands.
 */
","\android\os\IBinder.java"
"android.os.IBinder.DUMP_TRANSACTION","false","false","false","false","false","int","('_' << 24) | ('D' << 16) | ('M' << 8) | 'P'","","/**
 * IBinder protocol transaction code: dump internal state.
 */
","\android\os\IBinder.java"
"android.view.Surface.mCompatibleDisplayMetrics","false","false","true","false","false","DisplayMetrics","","","// running in compatibility mode. This is set to null for non compatibility mode.
","\android\view\Surface.java"
"android.view.Surface.SURFACE_FROZEN","true","false","false","true","true","int","0x02","","/**
 * Freeze the surface. Equivalent to calling freeze()
 */
","\android\view\Surface.java"
"android.view.Surface.FX_SURFACE_DIM","true","false","false","true","true","int","0x00020000","","/**
 * Creates a Dim surface. Everything behind this surface is dimmed
 * by the amount specified in setAlpha().
 * It is an error to lock a Dim surface, since it doesn't have
 * a backing store.
 */
","\android\view\Surface.java"
"android.view.Surface.PUSH_BUFFERS","true","false","false","true","true","int","0x00000200","","/**
 * Creates a surface without a rendering buffer. Instead, the content
 * of the surface must be pushed by an external entity. This is type
 * of surface can be used for efficient camera preview or movie
 * play back.
 */
","\android\view\Surface.java"
"android.view.Surface.LOG_TAG","false","false","true","true","true","String","""Surface""","","","\android\view\Surface.java"
"android.view.Surface.ROTATION_270","true","false","false","true","true","int","3","","","\android\view\Surface.java"
"android.view.Surface.mCreationStack","false","false","true","false","false","Exception","","@SuppressWarnings(""unused"")","","\android\view\Surface.java"
"android.view.Surface.CREATOR","true","false","false","true","true","Parcelable.Creator<Surface>","new Parcelable.Creator<Surface>() {

    public Surface createFromParcel(Parcel source) {
        try {
            return new Surface(source);
        } catch (Exception e) {
            Log.e(LOG_TAG, ""Exception creating surface from parcel"", e);
        }
        return null;
    }

    public Surface[] newArray(int size) {
        return new Surface[size];
    }
}","","","\android\view\Surface.java"
"android.view.Surface.mCompatibleMatrix","false","false","true","false","false","Matrix","","","// non compatibility mode.
","\android\view\Surface.java"
"android.view.Surface.HARDWARE","true","false","false","true","true","int","0x00000010","@Deprecated","/**
 * The surface is to be used by hardware accelerators or DMA engines
 * @deprecated this is ignored, this value is set automatically when needed.
 */
","\android\view\Surface.java"
"android.view.Surface.ROTATION_180","true","false","false","true","true","int","2","","","\android\view\Surface.java"
"android.view.Surface.SURFACE_HIDDEN","true","false","false","true","true","int","0x01","","/**
 * Hide the surface. Equivalent to calling hide()
 */
","\android\view\Surface.java"
"android.view.Surface.mOrigMatrix","false","false","true","false","false","Matrix","null","","// A temp matrix to remember what an application obtained via {@link getMatrix}
","\android\view\Surface.java"
"android.view.Surface.SURFACE_DITHER","true","false","false","true","true","int","0x04","","/**
 * Enable dithering when compositing this surface
 */
","\android\view\Surface.java"
"android.view.Surface.HIDDEN","true","false","false","true","true","int","0x00000004","","/**
 * Surface is created hidden
 */
","\android\view\Surface.java"
"android.view.Surface.DEBUG_RELEASE","false","false","true","true","true","boolean","false","","","\android\view\Surface.java"
"android.view.Surface.mSurface","false","false","true","false","false","int","","@SuppressWarnings(""unused"")","","\android\view\Surface.java"
"android.view.Surface.GPU","true","false","false","true","true","int","0x00000028","@Deprecated","/**
 * Implies ""HARDWARE"", the surface is to be used by the GPU
 * additionally the backbuffer is never preserved for these
 * surfaces.
 * @deprecated this is ignored, this value is set automatically when needed.
 */
","\android\view\Surface.java"
"android.view.Surface.mName","false","false","true","false","false","String","","","","\android\view\Surface.java"
"android.view.Surface.SURACE_FROZEN","true","false","false","true","true","int","0x02","@Deprecated","/**
 * @deprecated use {@link #SURFACE_FROZEN} instead.
 */
","\android\view\Surface.java"
"android.view.Surface.NON_PREMULTIPLIED","true","false","false","true","true","int","0x00000100","","/**
 * Creates a surface where color components are interpreted as
 * ""non pre-multiplied"" by their alpha channel. Of course this flag is
 * meaningless for surfaces without an alpha channel. By default
 * surfaces are pre-multiplied, which means that each color component is
 * already multiplied by its alpha value. In this case the blending
 * equation used is:
 *
 * DEST = SRC + DEST * (1-SRC_ALPHA)
 *
 * By contrast, non pre-multiplied surfaces use the following equation:
 *
 * DEST = SRC * SRC_ALPHA * DEST * (1-SRC_ALPHA)
 *
 * pre-multiplied surfaces must always be used if transparent pixels are
 * composited on top of each-other into the surface. A pre-multiplied
 * surface can never lower the value of the alpha component of a given
 * pixel.
 *
 * In some rare situations, a non pre-multiplied surface is preferable.
 */
","\android\view\Surface.java"
"android.view.Surface.SURFACE_BLUR_FREEZE","true","false","false","true","true","int","0x10","","","\android\view\Surface.java"
"android.view.Surface.FX_SURFACE_MASK","true","false","false","true","true","int","0x000F0000","","/**
 * Mask used for FX values above
 */
","\android\view\Surface.java"
"android.view.Surface.ROTATION_90","true","false","false","true","true","int","1","","","\android\view\Surface.java"
"android.view.Surface.mSaveCount","false","false","true","false","false","int","","@SuppressWarnings(""unused"")","","\android\view\Surface.java"
"android.view.Surface.FX_SURFACE_BLUR","true","false","false","true","true","int","0x00010000","","/**
 * Creates a Blur surface. Everything behind this surface is blurred
 * by some amount. The quality and refresh speed of the blur effect
 * is not settable or guaranteed.
 * It is an error to lock a Blur surface, since it doesn't have
 * a backing store.
 */
","\android\view\Surface.java"
"android.view.Surface.mSurfaceControl","false","false","true","false","false","int","","@SuppressWarnings(""unused"")","","\android\view\Surface.java"
"android.view.Surface.FLAGS_ORIENTATION_ANIMATION_DISABLE","true","false","false","true","true","int","0x000000001","","/**
 * Disable the orientation animation
 * {@hide}
 */
","\android\view\Surface.java"
"android.view.CompatibleCanvas.mOrigMatrix","false","false","true","false","false","Matrix","null","","// A temp matrix to remember what an application obtained via {@link getMatrix}
","\android\view\Surface.java"
"android.view.Surface.ROTATION_0","true","false","false","true","true","int","0","","/* orientations for setOrientation() */
","\android\view\Surface.java"
"android.view.Surface.FX_SURFACE_NORMAL","true","false","false","true","true","int","0x00000000","","/**
 * Creates a normal surface. This is the default
 */
","\android\view\Surface.java"
"android.view.Surface.SECURE","true","false","false","true","true","int","0x00000080","","/**
 * The surface contains secure content, special measures will
 * be taken to disallow the surface's content to be copied from
 * another process. In particular, screenshots and VNC servers will
 * be disabled, but other measures can take place, for instance the
 * surface might not be hardware accelerated.
 */
","\android\view\Surface.java"
"android.view.Surface.mCanvas","false","false","true","false","false","Canvas","","@SuppressWarnings(""unused"")","","\android\view\Surface.java"
"android.text.method.MetaKeyKeyListener.META_SELECTING","true","false","false","true","true","int","1 << 16","","/**
 * @hide pending API review
 */
","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_ALT_LOCKED","true","false","false","true","true","int","KeyEvent.META_ALT_ON << LOCKED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_CAP_LOCKED","true","false","false","true","true","int","KeyEvent.META_SHIFT_ON << LOCKED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_SYM_LOCKED","true","false","false","true","true","int","KeyEvent.META_SYM_ON << LOCKED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_SYM_MASK","false","false","true","true","true","long","META_SYM_ON | META_SYM_LOCKED | META_SYM_USED | META_SYM_PRESSED | META_SYM_RELEASED","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.CAP","false","false","true","true","true","Object","new NoCopySpan.Concrete()","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_SYM_RELEASED","false","false","true","true","true","long","((long) KeyEvent.META_SYM_ON) << RELEASED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_SYM_ON","true","false","false","true","true","int","KeyEvent.META_SYM_ON","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.LOCKED_SHIFT","false","false","true","true","true","int","8","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.PRESSED","false","false","true","true","true","int","Spannable.SPAN_MARK_MARK | (1 << Spannable.SPAN_USER_SHIFT)","","/**
 * The meta key has been pressed but has not yet been used.
 */
","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.LOCKED","false","false","true","true","true","int","Spannable.SPAN_MARK_MARK | (4 << Spannable.SPAN_USER_SHIFT)","","/**
 * The meta key has been pressed and released without use, and then
 * pressed again; it may also have been released again.
 */
","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.SELECTING","false","false","true","true","true","Object","new NoCopySpan.Concrete()","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_SHIFT_MASK","false","false","true","true","true","long","META_SHIFT_ON | META_CAP_LOCKED | META_CAP_USED | META_CAP_PRESSED | META_CAP_RELEASED","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.RELEASED_SHIFT","false","false","true","true","true","int","40","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_ALT_ON","true","false","false","true","true","int","KeyEvent.META_ALT_ON","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_ALT_PRESSED","false","false","true","true","true","long","((long) KeyEvent.META_ALT_ON) << PRESSED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_CAP_USED","false","false","true","true","true","long","((long) KeyEvent.META_SHIFT_ON) << USED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.ALT","false","false","true","true","true","Object","new NoCopySpan.Concrete()","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_CAP_PRESSED","false","false","true","true","true","long","((long) KeyEvent.META_SHIFT_ON) << PRESSED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_SHIFT_ON","true","false","false","true","true","int","KeyEvent.META_SHIFT_ON","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_ALT_USED","false","false","true","true","true","long","((long) KeyEvent.META_ALT_ON) << USED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.PRESSED_SHIFT","false","false","true","true","true","int","32","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_SYM_PRESSED","false","false","true","true","true","long","((long) KeyEvent.META_SYM_ON) << PRESSED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_CAP_RELEASED","false","false","true","true","true","long","((long) KeyEvent.META_SHIFT_ON) << RELEASED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.USED_SHIFT","false","false","true","true","true","int","24","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.USED","false","false","true","true","true","int","Spannable.SPAN_MARK_MARK | (3 << Spannable.SPAN_USER_SHIFT)","","/**
 * The meta key has been pressed and used but has not yet been released.
 */
","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.SYM","false","false","true","true","true","Object","new NoCopySpan.Concrete()","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_ALT_MASK","false","false","true","true","true","long","META_ALT_ON | META_ALT_LOCKED | META_ALT_USED | META_ALT_PRESSED | META_ALT_RELEASED","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_SYM_USED","false","false","true","true","true","long","((long) KeyEvent.META_SYM_ON) << USED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.RELEASED","false","false","true","true","true","int","Spannable.SPAN_MARK_MARK | (2 << Spannable.SPAN_USER_SHIFT)","","/**
 * The meta key has been pressed and released but has still
 * not yet been used.
 */
","\android\text\method\MetaKeyKeyListener.java"
"android.text.method.MetaKeyKeyListener.META_ALT_RELEASED","false","false","true","true","true","long","((long) KeyEvent.META_ALT_ON) << RELEASED_SHIFT","","","\android\text\method\MetaKeyKeyListener.java"
"com.android.internal.widget.ContactHeaderWidget.mContentResolver","false","true","false","false","false","ContentResolver","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.TOKEN_PHONE_LOOKUP","false","false","true","true","true","int","1","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.COLUMNS","false","false","false","false","false","String","new String[] { Contacts._ID, Contacts.LOOKUP_KEY, Contacts.PHOTO_ID, Contacts.DISPLAY_NAME, Contacts.PHONETIC_NAME, Contacts.STARRED, Contacts.CONTACT_PRESENCE, Contacts.CONTACT_STATUS, Contacts.CONTACT_STATUS_TIMESTAMP, Contacts.CONTACT_STATUS_RES_PACKAGE, Contacts.CONTACT_STATUS_LABEL }","","// Projection used for the summary info in the header.
","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.TAG","false","false","true","true","true","String","""ContactHeaderWidget""","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mPhoneticNameView","false","false","true","false","false","TextView","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.PHONETIC_NAME","false","false","false","false","false","int","4","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.CONTACT_LOOKUP_PROJECTION","false","true","false","true","true","String","new String[] { Contacts._ID }","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mListener","false","false","true","false","false","ContactHeaderListener","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.TOKEN_EMAIL_LOOKUP","false","false","true","true","true","int","2","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.EMAIL_LOOKUP_CONTACT_LOOKUP_KEY_COLUMN_INDEX","false","true","false","true","true","int","1","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.STARRED","false","false","false","false","false","int","5","","// static final int HEADER_PHONETIC_NAME_COLUMN_INDEX
","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.CONTACT_STATUS_TIMESTAMP","false","false","false","false","false","int","8","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.PHOTO","false","false","false","false","false","int","0","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.CONTACT_PRESENCE_STATUS","false","false","false","false","false","int","6","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.PhotoQuery.COLUMNS","false","false","false","false","false","String","new String[] { Photo.PHOTO }","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.CONTACT_STATUS_RES_PACKAGE","false","false","false","false","false","int","9","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.PHOTO_ID","false","false","false","false","false","int","2","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.CONTACT_STATUS_LABEL","false","false","false","false","false","int","10","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mAggregateBadge","false","false","true","false","false","View","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.STARRED","false","false","false","false","false","int","5","","// static final int HEADER_PHONETIC_NAME_COLUMN_INDEX
","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mStatusView","false","false","true","false","false","TextView","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mStarredView","false","false","true","false","false","CheckBox","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.EMAIL_LOOKUP_PROJECTION","false","true","false","true","true","String","new String[] { RawContacts.CONTACT_ID, Contacts.LOOKUP_KEY }","","// Projection used for looking up contact id from email address
","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.CONTACT_PRESENCE_STATUS","false","false","false","false","false","int","6","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.DISPLAY_NAME","false","false","false","false","false","int","3","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mNoPhotoResource","false","false","true","false","false","int","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.PHONETIC_NAME","false","false","false","false","false","int","4","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.COLUMNS","false","false","false","false","false","String","new String[] { Photo.PHOTO }","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.PHONE_LOOKUP_PROJECTION","false","true","false","true","true","String","new String[] { PhoneLookup._ID, PhoneLookup.LOOKUP_KEY }","","// Projection used for looking up contact id from phone number
","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mPhotoView","false","false","true","false","false","QuickContactBadge","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.CONTACT_STATUS_LABEL","false","false","false","false","false","int","10","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.PHONE_LOOKUP_CONTACT_ID_COLUMN_INDEX","false","true","false","true","true","int","0","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.TOKEN_PHOTO_QUERY","false","false","true","true","true","int","3","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.CONTACT_STATUS","false","false","false","false","false","int","7","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.CONTACT_STATUS","false","false","false","false","false","int","7","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mQueryHandler","false","false","true","false","false","QueryHandler","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.CONTACT_LOOKUP_ID_COLUMN_INDEX","false","true","false","true","true","int","0","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.EMAIL_LOOKUP_CONTACT_ID_COLUMN_INDEX","false","true","false","true","true","int","0","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.LOOKUP_KEY","false","false","false","false","false","int","1","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget._ID","false","false","false","false","false","int","0","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.DISPLAY_NAME","false","false","false","false","false","int","3","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mStatusAttributionView","false","false","true","false","false","TextView","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery._ID","false","false","false","false","false","int","0","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.CONTACT_STATUS_TIMESTAMP","false","false","false","false","false","int","8","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.TOKEN_CONTACT_INFO","false","false","true","true","true","int","0","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.CONTACT_STATUS_RES_PACKAGE","false","false","false","false","false","int","9","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.LOOKUP_KEY","false","false","false","false","false","int","1","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mPresenceView","false","false","true","false","false","ImageView","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mDisplayNameView","false","false","true","false","false","TextView","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mContactUri","false","true","false","false","false","Uri","","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.mExcludeMimes","false","true","false","false","false","String","null","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactQuery.PHOTO_ID","false","false","false","false","false","int","2","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.PhotoQuery.PHOTO","false","false","false","false","false","int","0","","","\com\android\internal\widget\ContactHeaderWidget.java"
"com.android.internal.widget.ContactHeaderWidget.PHONE_LOOKUP_CONTACT_LOOKUP_KEY_COLUMN_INDEX","false","true","false","true","true","int","1","","","\com\android\internal\widget\ContactHeaderWidget.java"
"android.provider.Sms.RESULT_SMS_GENERIC_ERROR","true","false","false","true","true","int","2","","/**
 * Set by BroadcastReceiver. Indicates a generic error while
 * processing the message.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.PREVIOUSLY_SENT_BY","true","false","false","true","true","String","""p_s_by""","","/**
 * The previously-sent-by of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.STATUS_PENDING","true","false","false","true","true","int","64","","","\android\provider\Telephony.java"
"android.provider.Telephony.DELIVERY_REPORT","true","false","false","true","true","String","""d_rpt""","","/**
 * The delivery-report of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.ERROR_CODE","true","false","false","true","true","String","""err_code""","","/**
 * The error code of sending/retrieving process.
 * <P>Type:  INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.SUBJECT_CHARSET","true","false","false","true","true","String","""sub_cs""","","/**
 * The character set of the subject, if present.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.PORT","true","false","false","true","true","String","""port""","","","\android\provider\Telephony.java"
"android.provider.Addr.ADDRESS","true","false","false","true","true","String","""address""","","/**
 * The address text.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.REPLY_CHARGING_ID","true","false","false","true","true","String","""r_chg_id""","","/**
 * The reply-charging-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_LOCKED_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/locked"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_COUNT","true","false","false","true","true","String","""message_count""","","/**
 * The message count of the thread.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_SIZE","true","false","false","true","true","String","""m_size""","","/**
 * The size of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.PROTO_TYPE","true","false","false","true","true","String","""proto_type""","","/**
 * The type of transport protocol(MMS or SMS).
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Sms.DATA_SMS_RECEIVED_ACTION","true","false","false","true","true","String","""android.intent.action.DATA_SMS_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new data based SMS message has been received
 * by the device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>pdus</em> - An Object[] od byte[]s containing the PDUs
 * that make up the message.</li>
 * </ul>
 *
 * <p>The extra values can be extracted using
 * {@link #getMessagesFromIntent(Intent)}.</p>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.Part._DATA","true","false","false","true","true","String","""_data""","","/**
 * The location(on filesystem) of the binary data of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.DELETED_CONTENTS","true","false","false","true","true","String","""deleted_contents""","","/**
 * An extra field which stores the URI of deleted contents.
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.PORT","true","false","false","true","true","String","""port""","","","\android\provider\Telephony.java"
"android.provider.Telephony.SERVICE_CENTER","true","false","false","true","true","String","""service_center""","","/**
 * The service center (SC) through which to send the message, if present
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.READ_STATUS","true","false","false","true","true","String","""read_status""","","/**
 * The read-status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_TYPE_QUEUED","true","false","false","true","true","int","6","","// for messages to send later
","\android\provider\Telephony.java"
"android.provider.Mms.NAME_ADDR_EMAIL_PATTERN","true","false","false","true","true","Pattern","Pattern.compile(""\\s*(\""[^\""]*\""|[^<>\""]+)\\s*<([^<>]+)>\\s*"")","","/**
 * mailbox         =       name-addr
 * name-addr       =       [display-name] angle-addr
 * angle-addr      =       [CFWS] ""<"" addr-spec "">"" [CFWS]
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.ERR_TYPE_SMS_PROTO_TRANSIENT","true","false","false","true","true","int","2","","","\android\provider\Telephony.java"
"android.provider.Intents.DATA_SMS_RECEIVED_ACTION","true","false","false","true","true","String","""android.intent.action.DATA_SMS_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new data based SMS message has been received
 * by the device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>pdus</em> - An Object[] od byte[]s containing the PDUs
 * that make up the message.</li>
 * </ul>
 *
 * <p>The extra values can be extracted using
 * {@link #getMessagesFromIntent(Intent)}.</p>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.READ","true","false","false","true","true","String","""read""","","/**
 * Has the message been read.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Telephony.java"
"android.provider.Rate.SENT_TIME","true","false","false","true","true","String","""sent_time""","","/**
 * When a message was successfully sent.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.AUX_APPLIC_ID","true","false","false","true","true","String","""aux_apl_id""","","/**
 * The aux-applic-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ADAPTATION_ALLOWED","true","false","false","true","true","String","""adp_a""","","/**
 * The adaptation-allowed of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_PLMN","true","false","false","true","true","String","""plmn""","","","\android\provider\Telephony.java"
"android.provider.Carriers.NUMERIC","true","false","false","true","true","String","""numeric""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.SEEN","true","false","false","true","true","String","""seen""","","/**
 * Indicates whether this message has been seen by the user. The ""seen"" flag will be
 * used to figure out whether we need to throw up a statusbar notification or not.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.STATUS_TEXT","true","false","false","true","true","String","""st_txt""","","/**
 * The status-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.CHARSET","true","false","false","true","true","String","""chset""","","/**
 * The charset of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RETRIEVE_STATUS","true","false","false","true","true","String","""retr_st""","","/**
 * The retrieve-status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_BOX_DRAFTS","true","false","false","true","true","int","3","","","\android\provider\Telephony.java"
"android.provider.MmsSms.INDEXED_TEXT","true","false","false","true","true","String","""index_text""","","","\android\provider\Telephony.java"
"android.provider.Telephony.TAG","false","false","true","true","true","String","""Telephony""","","","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_TYPE_ALL","true","false","false","true","true","int","0","","","\android\provider\Telephony.java"
"android.provider.ScrapSpace.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms/scrapSpace"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_TYPE","true","false","false","true","true","String","""ct""","","/**
 * The content type of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.QUOTED_STRING_PATTERN","true","false","false","true","true","Pattern","Pattern.compile(""\\s*\""([^\""]*)\""\\s*"")","","/**
 * quoted-string   =       [CFWS]
 * DQUOTE *([FWS] qcontent) [FWS] DQUOTE
 * [CFWS]
 */
","\android\provider\Telephony.java"
"android.provider.Intents.DELETED_CONTENTS","true","false","false","true","true","String","""deleted_contents""","","/**
 * An extra field which stores the URI of deleted contents.
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.APN","true","false","false","true","true","String","""apn""","","","\android\provider\Telephony.java"
"android.provider.Telephony.COMMON_THREAD","true","false","false","true","true","int","0","","","\android\provider\Telephony.java"
"android.provider.PendingMessages.RETRY_INDEX","true","false","false","true","true","String","""retry_index""","","/**
 * How many times we tried to send or download the message.
 * <P>Type:  INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_BOX","true","false","false","true","true","String","""msg_box""","","/**
 * The box which the message belong to, for example, MESSAGE_BOX_INBOX.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.REPORT_ALLOWED","true","false","false","true","true","String","""rpt_a""","","/**
 * Whether the report is allowed.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.DISTRIBUTION_INDICATOR","true","false","false","true","true","String","""d_ind""","","/**
 * The distribution-indicator of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.READ_REPORT","true","false","false","true","true","String","""rr""","","/**
 * The read-report of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.DRM_CONTENT","true","false","false","true","true","String","""drm_c""","","/**
 * The drm-content of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MBOX_QUOTAS","true","false","false","true","true","String","""mb_qt""","","/**
 * The mbox-quotas of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.START","true","false","false","true","true","String","""start""","","/**
 * The start of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RESULT_SMS_HANDLED","true","false","false","true","true","int","1","","/**
 * Set by BroadcastReceiver. Indicates the message was handled
 * successfully.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SOURCE_ROW_ID","true","false","false","true","true","String","""source_id""","","","\android\provider\Telephony.java"
"android.provider.Telephony.MSG_ID","true","false","false","true","true","String","""msg_id""","","/**
 * The ID of the message to be sent or downloaded.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.PERSON","true","false","false","true","true","String","""person""","","/**
 * The id of the sender of the conversation, if present
 * <P>Type: INTEGER (reference to item in content://contacts/people)</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MM_FLAGS_TOKEN","true","false","false","true","true","String","""mm_flg_tok""","","/**
 * The mm-flags-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Intents.SIM_FULL_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SIM_FULL""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The SIM storage for SMS messages is full.  If
 * space is not freed, messages targeted for the SIM (class 2) may
 * not be saved.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.STORE","true","false","false","true","true","String","""store""","","/**
 * The store of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_ID","true","false","false","true","true","String","""m_id""","","/**
 * The Message-ID of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RESULT_SMS_UNSUPPORTED","true","false","false","true","true","int","4","","/**
 * Set by BroadcastReceiver. Indicates the message, while
 * possibly valid, is of a format or encoding that is not
 * supported.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.STORE_STATUS_TEXT","true","false","false","true","true","String","""store_st_txt""","","/**
 * The store-status-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.INDEXED_TEXT","true","false","false","true","true","String","""index_text""","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.RETRIEVE_STATUS","true","false","false","true","true","String","""retr_st""","","/**
 * The retrieve-status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.APPLIC_ID","true","false","false","true","true","String","""apl_id""","","/**
 * The applic-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.RECOMMENDED_RETRIEVAL_MODE","true","false","false","true","true","String","""r_r_mod""","","/**
 * The recommended-retrieval-mode of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms/scrapSpace"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.Mms.EXTRA_CC","true","false","false","true","true","String","""cc""","","/**
 * The extra field to store the 'Cc' addresses.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_BOX_INBOX","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.MmsSms.RETRY_INDEX","true","false","false","true","true","String","""retry_index""","","/**
 * How many times we tried to send or download the message.
 * <P>Type:  INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.CANCEL_STATUS","true","false","false","true","true","String","""cl_st""","","/**
 * The cancel-status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.TYPE_DISCRIMINATOR_COLUMN","true","false","false","true","true","String","""transport_type""","","/**
 * The column to distinguish SMS &amp; MMS messages in query results.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MMSC","true","false","false","true","true","String","""mmsc""","","","\android\provider\Telephony.java"
"android.provider.Telephony.CURRENT","true","false","false","true","true","String","""current""","","","\android\provider\Telephony.java"
"android.provider.Part.FILENAME","true","false","false","true","true","String","""fn""","","/**
 * The file name of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.BODY","true","false","false","true","true","String","""body""","","/**
 * The body of the message
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.PERSON_ID","true","false","false","true","true","String","""person""","","/**
 * The person ID of the sender
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.STORE_STATUS_TEXT","true","false","false","true","true","String","""store_st_txt""","","/**
 * The store-status-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.FILENAME","true","false","false","true","true","String","""fn""","","/**
 * The file name of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_SIZE","true","false","false","true","true","String","""m_size""","","/**
 * The size of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RECOMMENDED_RETRIEVAL_MODE_TEXT","true","false","false","true","true","String","""r_r_mod_txt""","","/**
 * The recommended-retrieval-mode-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CHARSET","true","false","false","true","true","String","""chset""","","/**
 * The charset of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.CONTENT_LOCATION","true","false","false","true","true","String","""ct_l""","","/**
 * The Content-Location of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.RESPONSE_STATUS","true","false","false","true","true","String","""resp_st""","","/**
 * The response-status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.MCC","true","false","false","true","true","String","""mcc""","","","\android\provider\Telephony.java"
"android.provider.MmsSms.ERR_TYPE_MMS_PROTO_TRANSIENT","true","false","false","true","true","int","3","","","\android\provider\Telephony.java"
"android.provider.Mms.REPORT_STATUS_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""report-status"")","","","\android\provider\Telephony.java"
"android.provider.Mms.CONTENT_TYPE","true","false","false","true","true","String","""ct""","","/**
 * The content type of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.TO","true","false","false","true","true","String","""to""","","/**
 * The address of the recipients.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.CONTENT_DRAFT_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/draft"")","","","\android\provider\Telephony.java"
"android.provider.MmsSms.ID","true","false","false","true","true","String","""_id""","","","\android\provider\Telephony.java"
"android.provider.Telephony.PRIORITY","true","false","false","true","true","String","""pri""","","/**
 * The priority of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.ERR_TYPE_GENERIC_PERMANENT","true","false","false","true","true","int","10","","","\android\provider\Telephony.java"
"android.provider.Mms.EXTRA_CONTENTS","true","false","false","true","true","String","""contents""","","/**
 * The extra field to store the contents of the Intent,
 * which should be an array of Uri.
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.CONTENT_CONVERSATIONS_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/conversations"")","","","\android\provider\Telephony.java"
"android.provider.Sms.RESULT_SMS_HANDLED","true","false","false","true","true","int","1","","/**
 * Set by BroadcastReceiver. Indicates the message was handled
 * successfully.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MM_FLAGS_TOKEN","true","false","false","true","true","String","""mm_flg_tok""","","/**
 * The mm-flags-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.REPORT_STATUS_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""report-status"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.USER","true","false","false","true","true","String","""user""","","","\android\provider\Telephony.java"
"android.provider.Telephony.REPLY_PATH_PRESENT","true","false","false","true","true","String","""reply_path_present""","","/**
 * Whether the <code>TP-Reply-Path</code> bit was set on this message
 * <P>Type: BOOLEAN</P>
 */
","\android\provider\Telephony.java"
"android.provider.Sms.RESULT_SMS_UNSUPPORTED","true","false","false","true","true","int","4","","/**
 * Set by BroadcastReceiver. Indicates the message, while
 * possibly valid, is of a format or encoding that is not
 * supported.
 */
","\android\provider\Telephony.java"
"android.provider.Mms.CONTACT_ID","true","false","false","true","true","String","""contact_id""","","/**
 * The ID of contact entry in Phone Book.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.STATUS_COMPLETE","true","false","false","true","true","int","0","","","\android\provider\Telephony.java"
"android.provider.Telephony.RESULT_SMS_OUT_OF_MEMORY","true","false","false","true","true","int","3","","/**
 * Set by BroadcastReceiver. Indicates insufficient memory to store
 * the message.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SUBJECT_CHARSET","true","false","false","true","true","String","""sub_cs""","","/**
 * The character set of the subject, if present.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""name ASC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.Part.CONTENT_DISPOSITION","true","false","false","true","true","String","""cd""","","/**
 * The content disposition of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.CURRENT","true","false","false","true","true","String","""current""","","","\android\provider\Telephony.java"
"android.provider.Telephony.RETRY_INDEX","true","false","false","true","true","String","""retry_index""","","/**
 * How many times we tried to send or download the message.
 * <P>Type:  INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.DATE","true","false","false","true","true","String","""date""","","/**
 * The date at which the thread was created.
 *
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.HAS_ATTACHMENT","true","false","false","true","true","String","""has_attachment""","","/**
 * Indicates whether this thread contains any attachments.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://telephony/carriers"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.Intents.RESULT_SMS_GENERIC_ERROR","true","false","false","true","true","int","2","","/**
 * Set by BroadcastReceiver. Indicates a generic error while
 * processing the message.
 */
","\android\provider\Telephony.java"
"android.provider.Sms.SMS_RECEIVED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SMS_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new text based SMS message has been received
 * by the device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>pdus</em> - An Object[] od byte[]s containing the PDUs
 * that make up the message.</li>
 * </ul>
 *
 * <p>The extra values can be extracted using
 * {@link #getMessagesFromIntent(Intent)}.</p>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_DISPOSITION","true","false","false","true","true","String","""cd""","","/**
 * The content disposition of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ERR_TYPE_SMS_PROTO_PERMANENT","true","false","false","true","true","int","11","","","\android\provider\Telephony.java"
"android.provider.Conversations.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://sms/conversations"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.REPLY_CHARGING","true","false","false","true","true","String","""r_chg""","","/**
 * The reply-charging of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.MSG_ID","true","false","false","true","true","String","""mid""","","/**
 * The identifier of the message which this part belongs to.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Addr.TYPE","true","false","false","true","true","String","""type""","","/**
 * Type of address, must be one of PduHeaders.BCC,
 * PduHeaders.CC, PduHeaders.FROM, PduHeaders.TO.
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.LAST_TRY","true","false","false","true","true","String","""last_try""","","/**
 * The time we last tried to send or download the message.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MBOX_QUOTAS_TOKEN","true","false","false","true","true","String","""mb_qt_tok""","","/**
 * The mbox-quotas-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ERR_TYPE_TRANSPORT_FAILURE","true","false","false","true","true","int","4","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.RESPONSE_TEXT","true","false","false","true","true","String","""resp_txt""","","/**
 * The response-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Intents.RESULT_SMS_UNSUPPORTED","true","false","false","true","true","int","4","","/**
 * Set by BroadcastReceiver. Indicates the message, while
 * possibly valid, is of a format or encoding that is not
 * supported.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.START","true","false","false","true","true","String","""start""","","/**
 * The start of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.SENDER_VISIBILITY","true","false","false","true","true","String","""s_vis""","","/**
 * The sender-visibility of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.CONTENT_TYPE","true","false","false","true","true","String","""ct_t""","","/**
 * The Content-Type of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.CC","true","false","false","true","true","String","""cc""","","/**
 * The address of the cc. recipients.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.STATUS","true","false","false","true","true","String","""status""","","/**
 * The TP-Status value for the message, or -1 if no status has
 * been received
 */
","\android\provider\Telephony.java"
"android.provider.Threads.OBSOLETE_THREADS_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""obsolete"")","","","\android\provider\Telephony.java"
"android.provider.Intents.RESULT_SMS_HANDLED","true","false","false","true","true","int","1","","/**
 * Set by BroadcastReceiver. Indicates the message was handled
 * successfully.
 */
","\android\provider\Telephony.java"
"android.provider.Addr.CHARSET","true","false","false","true","true","String","""charset""","","/**
 * Character set of this entry.
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.TYPE","true","false","false","true","true","String","""type""","","/**
 * The type of the message
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.PendingMessages.PROTO_TYPE","true","false","false","true","true","String","""proto_type""","","/**
 * The type of transport protocol(MMS or SMS).
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MNC","true","false","false","true","true","String","""mnc""","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.APPLIC_ID","true","false","false","true","true","String","""apl_id""","","/**
 * The applic-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.TABLE_ID","true","false","false","true","true","String","""table_to_use""","","","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_BOX_DRAFTS","true","false","false","true","true","int","3","","","\android\provider\Telephony.java"
"android.provider.Threads.ID_PROJECTION","false","false","true","true","true","String","{ BaseColumns._ID }","","","\android\provider\Telephony.java"
"android.provider.Telephony.DELIVERY_TIME_TOKEN","true","false","false","true","true","String","""d_tm_tok""","","/**
 * The delivery-time-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_COUNT","true","false","false","true","true","String","""m_cnt""","","/**
 * The message-count of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.ERR_TYPE_SMS_PROTO_PERMANENT","true","false","false","true","true","int","11","","","\android\provider\Telephony.java"
"android.provider.Carriers.MNC","true","false","false","true","true","String","""mnc""","","","\android\provider\Telephony.java"
"android.provider.Telephony.SENDER_VISIBILITY","true","false","false","true","true","String","""s_vis""","","/**
 * The sender-visibility of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.TYPE","true","false","false","true","true","String","""type""","","/**
 * Type of the thread, either Threads.COMMON_THREAD or
 * Threads.BROADCAST_THREAD.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.LAST_TRY","true","false","false","true","true","String","""last_try""","","/**
 * The time we last tried to send or download the message.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.TO","true","false","false","true","true","String","""to""","","/**
 * The address of the recipients.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.THREAD_ID_CONTENT_URI","false","false","true","true","true","Uri","Uri.parse(""content://mms-sms/threadID"")","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.DRM_CONTENT","true","false","false","true","true","String","""drm_c""","","/**
 * The drm-content of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ERR_TYPE_GENERIC_PERMANENT","true","false","false","true","true","int","10","","","\android\provider\Telephony.java"
"android.provider.MmsSms.MSG_ID","true","false","false","true","true","String","""msg_id""","","/**
 * The ID of the message to be sent or downloaded.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.QUOTED_STRING_PATTERN","true","false","false","true","true","Pattern","Pattern.compile(""\\s*\""([^\""]*)\""\\s*"")","","/**
 * quoted-string   =       [CFWS]
 * DQUOTE *([FWS] qcontent) [FWS] DQUOTE
 * [CFWS]
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.FROM","true","false","false","true","true","String","""from""","","/**
 * The address of the sender.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MBOX_QUOTAS","true","false","false","true","true","String","""mb_qt""","","/**
 * The mbox-quotas of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.PendingMessages.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(MmsSms.CONTENT_URI, ""pending"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.TOTALS","true","false","false","true","true","String","""totals""","","/**
 * The totals of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.TYPE","true","false","false","true","true","String","""type""","","/**
 * Type of address, must be one of PduHeaders.BCC,
 * PduHeaders.CC, PduHeaders.FROM, PduHeaders.TO.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.AUX_APPLIC_ID","true","false","false","true","true","String","""aux_apl_id""","","/**
 * The aux-applic-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.SNIPPET_CHARSET","true","false","false","true","true","String","""snippet_cs""","","/**
 * The charset of the snippet.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.EXTRA_BCC","true","false","false","true","true","String","""bcc""","","/**
 * The extra field to store the 'Bcc' addresses;
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.PROXY","true","false","false","true","true","String","""proxy""","","","\android\provider\Telephony.java"
"android.provider.Telephony.STATUS_FAILED","true","false","false","true","true","int","128","","","\android\provider\Telephony.java"
"android.provider.Conversations.MESSAGE_COUNT","true","false","false","true","true","String","""msg_count""","","/**
 * The number of messages in the conversation
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.TYPE","true","false","false","true","true","String","""type""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.THREAD_ID","true","false","false","true","true","String","""thread_id""","","/**
 * The thread ID of the message
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.USER","true","false","false","true","true","String","""user""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.MESSAGE_TYPE_ALL","true","false","false","true","true","int","0","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.STATUS_NONE","true","false","false","true","true","int","-1","","","\android\provider\Telephony.java"
"android.provider.Telephony.SMS_PROTO","true","false","false","true","true","int","0","","// Constants for message protocol types.
","\android\provider\Telephony.java"
"android.provider.Sms.WAP_PUSH_RECEIVED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.WAP_PUSH_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new WAP PUSH message has been received by the
 * device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>transactionId (Integer)</em> - The WAP transaction
 * ID</li>
 * <li><em>pduType (Integer)</em> - The WAP PDU type</li>
 * <li><em>header (byte[])</em> - The header of the message</li>
 * <li><em>data (byte[])</em> - The data payload of the message</li>
 * </ul>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.Threads.THREAD_ID_CONTENT_URI","false","false","true","true","true","Uri","Uri.parse(""content://mms-sms/threadID"")","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.SUBJECT","true","false","false","true","true","String","""sub""","","/**
 * The subject of the message, if present.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_TYPE_FAILED","true","false","false","true","true","int","5","","// for failed outgoing messages
","\android\provider\Telephony.java"
"android.provider.WordsTable.TABLE_ID","true","false","false","true","true","String","""table_to_use""","","","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_PLMN","true","false","false","true","true","String","""plmn""","","","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://telephony/carriers"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.ERR_TYPE_TRANSPORT_FAILURE","true","false","false","true","true","int","4","","","\android\provider\Telephony.java"
"android.provider.Part.MSG_ID","true","false","false","true","true","String","""mid""","","/**
 * The identifier of the message which this part belongs to.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.SOURCE_ROW_ID","true","false","false","true","true","String","""source_id""","","","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.HAS_ATTACHMENT","true","false","false","true","true","String","""has_attachment""","","/**
 * Indicates whether this thread contains any attachments.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.NO_ERROR","true","false","false","true","true","int","0","","// Constants for error types of pending messages.
","\android\provider\Telephony.java"
"android.provider.Telephony.SECRET_CODE_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SECRET_CODE""","","/**
 * Broadcast Action: A ""secret code"" has been entered in the dialer. Secret codes are
 * of the form *#*#<code>#*#*. The intent will have the data URI:</p>
 *
 * <p><code>android_secret_code://&lt;code&gt;</code></p>
 */
","\android\provider\Telephony.java"
"android.provider.PendingMessages.LAST_TRY","true","false","false","true","true","String","""last_try""","","/**
 * The time we last tried to send or download the message.
 */
","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_SPN","true","false","false","true","true","String","""spn""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.REPLY_PATH_PRESENT","true","false","false","true","true","String","""reply_path_present""","","/**
 * Whether the <code>TP-Reply-Path</code> bit was set on this message
 * <P>Type: BOOLEAN</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_TYPE_INBOX","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.Telephony.AUTH_TYPE","true","false","false","true","true","String","""authtype""","","","\android\provider\Telephony.java"
"android.provider.Part.SEQ","true","false","false","true","true","String","""seq""","","/**
 * The order of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MMS_VERSION","true","false","false","true","true","String","""v""","","/**
 * The version of specification that this message conform.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Threads.COMMON_THREAD","true","false","false","true","true","int","0","","","\android\provider\Telephony.java"
"android.provider.Sms.SMS_REJECTED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SMS_REJECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An incoming SMS has been rejected by the
 * telephony framework.  This intent is sent in lieu of any
 * of the RECEIVED_ACTION intents.  The intent will have the
 * following extra value:</p>
 *
 * <ul>
 * <li><em>result</em> - An int result code, eg,
 * <code>{@link #RESULT_SMS_OUT_OF_MEMORY}</code>,
 * indicating the error returned to the network.</li>
 * </ul>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.STATUS","true","false","false","true","true","String","""st""","","/**
 * The status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ADDRESS","true","false","false","true","true","String","""address""","","/**
 * The address text.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.DELIVERY_TIME","true","false","false","true","true","String","""d_tm""","","/**
 * The delivery-time of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RESULT_SMS_GENERIC_ERROR","true","false","false","true","true","int","2","","/**
 * Set by BroadcastReceiver. Indicates a generic error while
 * processing the message.
 */
","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.MESSAGE_COUNT","true","false","false","true","true","String","""message_count""","","/**
 * The message count of the thread.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.DATE","true","false","false","true","true","String","""date""","","/**
 * The date at which the thread was created.
 *
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.ERR_TYPE_MMS_PROTO_PERMANENT","true","false","false","true","true","int","12","","","\android\provider\Telephony.java"
"android.provider.Telephony.DELIVERY_TIME","true","false","false","true","true","String","""d_tm""","","/**
 * The delivery-time of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MM_STATE","true","false","false","true","true","String","""mm_st""","","/**
 * The mm-state of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.REPLY_APPLIC_ID","true","false","false","true","true","String","""r_apl_id""","","/**
 * The reply-applic-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.MSG_TYPE","true","false","false","true","true","String","""msg_type""","","/**
 * The type of the message to be sent or downloaded.
 * This field is only valid for MM. For SM, its value is always
 * set to 0.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.DATA_SMS_RECEIVED_ACTION","true","false","false","true","true","String","""android.intent.action.DATA_SMS_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new data based SMS message has been received
 * by the device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>pdus</em> - An Object[] od byte[]s containing the PDUs
 * that make up the message.</li>
 * </ul>
 *
 * <p>The extra values can be extracted using
 * {@link #getMessagesFromIntent(Intent)}.</p>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MMSPORT","true","false","false","true","true","String","""mmsport""","","","\android\provider\Telephony.java"
"android.provider.Telephony.WAP_PUSH_RECEIVED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.WAP_PUSH_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new WAP PUSH message has been received by the
 * device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>transactionId (Integer)</em> - The WAP transaction
 * ID</li>
 * <li><em>pduType (Integer)</em> - The WAP PDU type</li>
 * <li><em>header (byte[])</em> - The header of the message</li>
 * <li><em>data (byte[])</em> - The data payload of the message</li>
 * </ul>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.ScrapSpace.SCRAP_FILE_PATH","true","false","false","true","true","String","""/sdcard/mms/scrapSpace/.temp.jpg""","","/**
 * This is the scrap file we use to store the media attachment when the user
 * chooses to capture a photo to be attached . We pass {#link@Uri} to the Camera app,
 * which streams the captured image to the uri. Internally we write the media content
 * to this file. It's named '.temp.jpg' so Gallery won't pick it up.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CANCEL_STATUS","true","false","false","true","true","String","""cl_st""","","/**
 * The cancel-status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.NUMERIC","true","false","false","true","true","String","""numeric""","","","\android\provider\Telephony.java"
"android.provider.Telephony.ERR_TYPE_SMS_PROTO_TRANSIENT","true","false","false","true","true","int","2","","","\android\provider\Telephony.java"
"android.provider.Carriers.MMSC","true","false","false","true","true","String","""mmsc""","","","\android\provider\Telephony.java"
"android.provider.Telephony.SEARCH_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/search"")","","/**
 * Pass in a query parameter called ""pattern"" which is the text
 * to search for.
 * The sort order is fixed to be thread_id ASC,date DESC.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_BOX_SENT","true","false","false","true","true","int","2","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.RECOMMENDED_RETRIEVAL_MODE_TEXT","true","false","false","true","true","String","""r_r_mod_txt""","","/**
 * The recommended-retrieval-mode-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.DATE","true","false","false","true","true","String","""date""","","/**
 * The date the message was sent.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.BCC","true","false","false","true","true","String","""bcc""","","/**
 * The address of the bcc. recipients.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MBOX_TOTALS","true","false","false","true","true","String","""mb_t""","","/**
 * The mbox-totals of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.META_DATA","true","false","false","true","true","String","""meta_data""","","/**
 * Meta data used externally.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.DISTRIBUTION_INDICATOR","true","false","false","true","true","String","""d_ind""","","/**
 * The distribution-indicator of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.APN","true","false","false","true","true","String","""apn""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.SUBJECT","true","false","false","true","true","String","""subject""","","/**
 * The subject of the message, if present
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_SHOW_PLMN","true","false","false","true","true","String","""showPlmn""","","","\android\provider\Telephony.java"
"android.provider.Intents.SECRET_CODE_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SECRET_CODE""","","/**
 * Broadcast Action: A ""secret code"" has been entered in the dialer. Secret codes are
 * of the form *#*#<code>#*#*. The intent will have the data URI:</p>
 *
 * <p><code>android_secret_code://&lt;code&gt;</code></p>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.REPLY_CHARGING_ID","true","false","false","true","true","String","""r_chg_id""","","/**
 * The reply-charging-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MBOX_QUOTAS_TOKEN","true","false","false","true","true","String","""mb_qt_tok""","","/**
 * The mbox-quotas-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_BOX_OUTBOX","true","false","false","true","true","int","4","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.SERVICE_CENTER","true","false","false","true","true","String","""service_center""","","/**
 * The service center (SC) through which to send the message, if present
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.REPLY_APPLIC_ID","true","false","false","true","true","String","""r_apl_id""","","/**
 * The reply-applic-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.LOCKED","true","false","false","true","true","String","""locked""","","/**
 * Has the message been locked?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.SNIPPET","true","false","false","true","true","String","""snippet""","","/**
 * The snippet of the latest message in the thread.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.RECIPIENT_IDS","true","false","false","true","true","String","""recipient_ids""","","/**
 * A string encoding of the recipient IDs of the recipients of
 * the message, in numerical order and separated by spaces.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(MmsSms.CONTENT_URI, ""pending"")","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.STORE","true","false","false","true","true","String","""store""","","/**
 * The store of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.DELIVERY_TIME_TOKEN","true","false","false","true","true","String","""d_tm_tok""","","/**
 * The delivery-time-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.STATUS_TEXT","true","false","false","true","true","String","""st_txt""","","/**
 * The status-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Sent.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SMS_REJECTED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SMS_REJECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An incoming SMS has been rejected by the
 * telephony framework.  This intent is sent in lieu of any
 * of the RECEIVED_ACTION intents.  The intent will have the
 * following extra value:</p>
 *
 * <ul>
 * <li><em>result</em> - An int result code, eg,
 * <code>{@link #RESULT_SMS_OUT_OF_MEMORY}</code>,
 * indicating the error returned to the network.</li>
 * </ul>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.LIMIT","true","false","false","true","true","String","""limit""","","/**
 * The limit of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MMS_PROTO","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.Outbox.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms/outbox"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.PendingMessages.ERROR_TYPE","true","false","false","true","true","String","""err_type""","","/**
 * The type of the error code.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MM_STATE","true","false","false","true","true","String","""mm_st""","","/**
 * The mm-state of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.PRIORITY","true","false","false","true","true","String","""pri""","","/**
 * The priority of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.EXPIRY","true","false","false","true","true","String","""exp""","","/**
 * The expiry time of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.NAME","true","false","false","true","true","String","""name""","","","\android\provider\Telephony.java"
"android.provider.Addr.CONTACT_ID","true","false","false","true","true","String","""contact_id""","","/**
 * The ID of contact entry in Phone Book.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_BOX_ALL","true","false","false","true","true","int","0","","","\android\provider\Telephony.java"
"android.provider.Telephony.PROXY","true","false","false","true","true","String","""proxy""","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.STORE_STATUS","true","false","false","true","true","String","""store_st""","","/**
 * The store-status of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RECOMMENDED_RETRIEVAL_MODE","true","false","false","true","true","String","""r_r_mod""","","/**
 * The recommended-retrieval-mode of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Threads.STANDARD_ENCODING","false","false","true","true","true","String","""UTF-8""","","","\android\provider\Telephony.java"
"android.provider.Carriers.NAME","true","false","false","true","true","String","""name""","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_BOX_OUTBOX","true","false","false","true","true","int","4","","","\android\provider\Telephony.java"
"android.provider.MmsSms.DUE_TIME","true","false","false","true","true","String","""due_time""","","/**
 * The time to do next retry.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SEEN","true","false","false","true","true","String","""seen""","","/**
 * Indicates whether this message has been seen by the user. The ""seen"" flag will be
 * used to figure out whether we need to throw up a statusbar notification or not.
 */
","\android\provider\Telephony.java"
"android.provider.Part.TEXT","true","false","false","true","true","String","""text""","","","\android\provider\Telephony.java"
"android.provider.Telephony.RETRIEVE_TEXT_CHARSET","true","false","false","true","true","String","""retr_txt_cs""","","/**
 * The character set of the retrieve-text.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.MESSAGE_TYPE_DRAFT","true","false","false","true","true","int","3","","","\android\provider\Telephony.java"
"android.provider.Sms.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://sms/conversations"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SNIPPET","true","false","false","true","true","String","""snippet""","","/**
 * The snippet of the latest message in the thread.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Rate.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(Mms.CONTENT_URI, ""rate"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.STATUS_NONE","true","false","false","true","true","int","-1","","","\android\provider\Telephony.java"
"android.provider.Telephony.ERR_TYPE_MMS_PROTO_TRANSIENT","true","false","false","true","true","int","3","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.THREAD_ID","true","false","false","true","true","String","""thread_id""","","/**
 * The thread ID of the message
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Part.CONTENT_TYPE","true","false","false","true","true","String","""ct""","","/**
 * The content type of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_CLASS","true","false","false","true","true","String","""ct_cls""","","/**
 * The content-class of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_TYPE_SENT","true","false","false","true","true","int","2","","","\android\provider\Telephony.java"
"android.provider.MmsSms.CONTENT_LOCKED_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/locked"")","","","\android\provider\Telephony.java"
"android.provider.MmsSms.CONTENT_FILTER_BYPHONE_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/messages/byphone"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.STORED","true","false","false","true","true","String","""stored""","","/**
 * The stored of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Part.CT_START","true","false","false","true","true","String","""ctt_s""","","/**
 * The start of content-type of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.FROM","true","false","false","true","true","String","""from""","","/**
 * The address of the sender.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Draft.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms/drafts"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.Intents.CONTENT_CHANGED_ACTION","true","false","false","true","true","String","""android.intent.action.CONTENT_CHANGED""","","/**
 * Indicates that the contents of specified URIs were changed.
 * The application which is showing or caching these contents
 * should be updated.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_BOX_SENT","true","false","false","true","true","int","2","","","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_TYPES","true","false","false","true","true","String","""types""","","/**
 * The extra field to store the type of the contents,
 * which should be an array of String.
 */
","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_SUBJECT","true","false","false","true","true","String","""subject""","","/**
 * The extra field to store the 'Subject'.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.REPLY_CHARGING_DEADLINE","true","false","false","true","true","String","""r_chg_dl""","","/**
 * The reply-charging-deadline of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.CANCEL_ID","true","false","false","true","true","String","""cl_id""","","/**
 * The cancel-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_TYPE_OUTBOX","true","false","false","true","true","int","4","","","\android\provider\Telephony.java"
"android.provider.Mms.CONTENT_ID","true","false","false","true","true","String","""cid""","","/**
 * The content ID of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.REPLY_CHARGING_SIZE","true","false","false","true","true","String","""r_chg_sz""","","/**
 * The reply-charging-size of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.SEARCH_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/search"")","","/**
 * Pass in a query parameter called ""pattern"" which is the text
 * to search for.
 * The sort order is fixed to be thread_id ASC,date DESC.
 */
","\android\provider\Telephony.java"
"android.provider.PendingMessages.MSG_TYPE","true","false","false","true","true","String","""msg_type""","","/**
 * The type of the message to be sent or downloaded.
 * This field is only valid for MM. For SM, its value is always
 * set to 0.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_UNDELIVERED_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/undelivered"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_ID","true","false","false","true","true","String","""cid""","","/**
 * The content ID of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.STANDARD_ENCODING","false","false","true","true","true","String","""UTF-8""","","","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_SHOW_SPN","true","false","false","true","true","String","""showSpn""","","","\android\provider\Telephony.java"
"android.provider.Telephony.CT_TYPE","true","false","false","true","true","String","""ctt_t""","","/**
 * The type of content-type of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.ADDRESS","true","false","false","true","true","String","""address""","","/**
 * The address of the other party
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_BCC","true","false","false","true","true","String","""bcc""","","/**
 * The extra field to store the 'Bcc' addresses;
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_SHOW_PLMN","true","false","false","true","true","String","""showPlmn""","","","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_CONTENTS","true","false","false","true","true","String","""contents""","","/**
 * The extra field to store the contents of the Intent,
 * which should be an array of Uri.
 */
","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_SHOW_SPN","true","false","false","true","true","String","""showSpn""","","","\android\provider\Telephony.java"
"android.provider.Outbox.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.RETRIEVE_TEXT","true","false","false","true","true","String","""retr_txt""","","/**
 * The retrieve-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MCC","true","false","false","true","true","String","""mcc""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.PERSON_ID","true","false","false","true","true","String","""person""","","/**
 * The person ID of the sender
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.MESSAGE_TYPE_INBOX","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MM_FLAGS","true","false","false","true","true","String","""mm_flg""","","/**
 * The mm-flags of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Part.CONTENT_ID","true","false","false","true","true","String","""cid""","","/**
 * The content ID of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.LOCAL_LOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MBOX_TOTALS_TOKEN","true","false","false","true","true","String","""mb_t_tok""","","/**
 * The mbox-totals-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.PendingMessages.MSG_ID","true","false","false","true","true","String","""msg_id""","","/**
 * The ID of the message to be sent or downloaded.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Intents.SMS_REJECTED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SMS_REJECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An incoming SMS has been rejected by the
 * telephony framework.  This intent is sent in lieu of any
 * of the RECEIVED_ACTION intents.  The intent will have the
 * following extra value:</p>
 *
 * <ul>
 * <li><em>result</em> - An int result code, eg,
 * <code>{@link #RESULT_SMS_OUT_OF_MEMORY}</code>,
 * indicating the error returned to the network.</li>
 * </ul>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RECIPIENT_IDS","true","false","false","true","true","String","""recipient_ids""","","/**
 * A string encoding of the recipient IDs of the recipients of
 * the message, in numerical order and separated by spaces.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SCRAP_FILE_PATH","true","false","false","true","true","String","""/sdcard/mms/scrapSpace/.temp.jpg""","","/**
 * This is the scrap file we use to store the media attachment when the user
 * chooses to capture a photo to be attached . We pass {#link@Uri} to the Camera app,
 * which streams the captured image to the uri. Internally we write the media content
 * to this file. It's named '.temp.jpg' so Gallery won't pick it up.
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.DATE","true","false","false","true","true","String","""date""","","/**
 * The date the message was sent
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.QUOTAS","true","false","false","true","true","String","""qt""","","/**
 * The quotas of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.SEQ","true","false","false","true","true","String","""seq""","","/**
 * The order of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.PROTO_TYPE","true","false","false","true","true","String","""proto_type""","","/**
 * The type of transport protocol(MMS or SMS).
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.REPLACE_ID","true","false","false","true","true","String","""repl_id""","","/**
 * The replace-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.MESSAGE_TYPE_SENT","true","false","false","true","true","int","2","","","\android\provider\Telephony.java"
"android.provider.Inbox.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms/inbox"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.MESSAGE_TYPE_QUEUED","true","false","false","true","true","int","6","","// for messages to send later
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.ELEMENT_DESCRIPTOR","true","false","false","true","true","String","""e_des""","","/**
 * The element-descriptor of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_TYPE_DRAFT","true","false","false","true","true","int","3","","","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_CC","true","false","false","true","true","String","""cc""","","/**
 * The extra field to store the 'Cc' addresses.
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.CONTENT_UNDELIVERED_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/undelivered"")","","","\android\provider\Telephony.java"
"android.provider.Mms.CONTENT_LOCATION","true","false","false","true","true","String","""cl""","","/**
 * The content location of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_CONVERSATIONS_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/conversations"")","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_CLASS","true","false","false","true","true","String","""m_cls""","","/**
 * The class of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_BOX","true","false","false","true","true","String","""msg_box""","","/**
 * The box which the message belong to, for example, MESSAGE_BOX_INBOX.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ID_PROJECTION","false","false","true","true","true","String","{ BaseColumns._ID }","","","\android\provider\Telephony.java"
"android.provider.Telephony.MBOX_TOTALS","true","false","false","true","true","String","""mb_t""","","/**
 * The mbox-totals of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SIM_FULL_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SIM_FULL""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The SIM storage for SMS messages is full.  If
 * space is not freed, messages targeted for the SIM (class 2) may
 * not be saved.
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.STATUS_COMPLETE","true","false","false","true","true","int","0","","","\android\provider\Telephony.java"
"android.provider.Telephony.TABLE_ID","true","false","false","true","true","String","""table_to_use""","","","\android\provider\Telephony.java"
"android.provider.Telephony.TYPE_DISCRIMINATOR_COLUMN","true","false","false","true","true","String","""transport_type""","","/**
 * The column to distinguish SMS &amp; MMS messages in query results.
 */
","\android\provider\Telephony.java"
"android.provider.Sms.RESULT_SMS_OUT_OF_MEMORY","true","false","false","true","true","int","3","","/**
 * Set by BroadcastReceiver. Indicates insufficient memory to store
 * the message.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.LOCKED","true","false","false","true","true","String","""locked""","","/**
 * Has the message been locked?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CC","true","false","false","true","true","String","""cc""","","/**
 * The address of the cc. recipients.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Conversations.SNIPPET","true","false","false","true","true","String","""snippet""","","/**
 * The first 45 characters of the body of the message
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RESPONSE_STATUS","true","false","false","true","true","String","""resp_st""","","/**
 * The response-status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.PREVIOUSLY_SENT_DATE","true","false","false","true","true","String","""p_s_d""","","/**
 * The previously-sent-date of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_TYPES","true","false","false","true","true","String","""types""","","/**
 * The extra field to store the type of the contents,
 * which should be an array of String.
 */
","\android\provider\Telephony.java"
"android.provider.WordsTable.SOURCE_ROW_ID","true","false","false","true","true","String","""source_id""","","","\android\provider\Telephony.java"
"android.provider.Intents.EXTRA_BCC","true","false","false","true","true","String","""bcc""","","/**
 * The extra field to store the 'Bcc' addresses;
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.STATUS","true","false","false","true","true","String","""st""","","/**
 * The status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.NAME_ADDR_EMAIL_PATTERN","true","false","false","true","true","Pattern","Pattern.compile(""\\s*(\""[^\""]*\""|[^<>\""]+)\\s*<([^<>]+)>\\s*"")","","/**
 * mailbox         =       name-addr
 * name-addr       =       [display-name] angle-addr
 * angle-addr      =       [CFWS] ""<"" addr-spec "">"" [CFWS]
 */
","\android\provider\Telephony.java"
"android.provider.Intents.SMS_RECEIVED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SMS_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new text based SMS message has been received
 * by the device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>pdus</em> - An Object[] od byte[]s containing the PDUs
 * that make up the message.</li>
 * </ul>
 *
 * <p>The extra values can be extracted using
 * {@link #getMessagesFromIntent(Intent)}.</p>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.TRANSACTION_ID","true","false","false","true","true","String","""tr_id""","","/**
 * The transaction-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Part.CONTENT_LOCATION","true","false","false","true","true","String","""cl""","","/**
 * The content location of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.TYPE","true","false","false","true","true","String","""type""","","","\android\provider\Telephony.java"
"android.provider.Telephony.REPLY_CHARGING_DEADLINE","true","false","false","true","true","String","""r_chg_dl""","","/**
 * The reply-charging-deadline of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.REPLACE_ID","true","false","false","true","true","String","""repl_id""","","/**
 * The replace-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_CHANGED_ACTION","true","false","false","true","true","String","""android.intent.action.CONTENT_CHANGED""","","/**
 * Indicates that the contents of specified URIs were changed.
 * The application which is showing or caching these contents
 * should be updated.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ERROR_CODE","true","false","false","true","true","String","""err_code""","","/**
 * The error code of sending/retrieving process.
 * <P>Type:  INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_LOCATION","true","false","false","true","true","String","""cl""","","/**
 * The content location of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Threads.BROADCAST_THREAD","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.Telephony.SPN_STRINGS_UPDATED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SPN_STRINGS_UPDATED""","","/**
 * Broadcast Action: The Service Provider string(s) have been updated.  Activities or
 * services that use these strings should update their display.
 * The intent will have the following extra values:</p>
 * <ul>
 * <li><em>showPlmn</em> - Boolean that indicates whether the PLMN should be shown.</li>
 * <li><em>plmn</em> - The operator name of the registered network, as a string.</li>
 * <li><em>showSpn</em> - Boolean that indicates whether the SPN should be shown.</li>
 * <li><em>spn</em> - The service provider name, as a string.</li>
 * </ul>
 * Note that <em>showPlmn</em> may indicate that <em>plmn</em> should be displayed, even
 * though the value for <em>plmn</em> is null.  This can happen, for example, if the phone
 * has not registered to a network yet.  In this case the receiver may substitute an
 * appropriate placeholder string (eg, ""No service"").
 *
 * It is recommended to display <em>plmn</em> before / above <em>spn</em> if
 * both are displayed.
 *
 * <p>Note this is a protected intent that can only be sent
 * by the system.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.CONTENT_CLASS","true","false","false","true","true","String","""ct_cls""","","/**
 * The content-class of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.ERR_TYPE_GENERIC","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.WordsTable.ID","true","false","false","true","true","String","""_id""","","","\android\provider\Telephony.java"
"android.provider.Telephony.ID","true","false","false","true","true","String","""_id""","","","\android\provider\Telephony.java"
"android.provider.Carriers.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""name ASC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SNIPPET_CHARSET","true","false","false","true","true","String","""snippet_cs""","","/**
 * The charset of the snippet.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Intents.WAP_PUSH_RECEIVED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.WAP_PUSH_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new WAP PUSH message has been received by the
 * device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>transactionId (Integer)</em> - The WAP transaction
 * ID</li>
 * <li><em>pduType (Integer)</em> - The WAP PDU type</li>
 * <li><em>header (byte[])</em> - The header of the message</li>
 * <li><em>data (byte[])</em> - The data payload of the message</li>
 * </ul>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.SEEN","true","false","false","true","true","String","""seen""","","/**
 * Indicates whether this message has been seen by the user. The ""seen"" flag will be
 * used to figure out whether we need to throw up a statusbar notification or not.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.READ_REPORT","true","false","false","true","true","String","""rr""","","/**
 * The read-report of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.REPORT_REQUEST_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""report-request"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_CONTENTS","true","false","false","true","true","String","""contents""","","/**
 * The extra field to store the contents of the Intent,
 * which should be an array of Uri.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.QUOTAS","true","false","false","true","true","String","""qt""","","/**
 * The quotas of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.BROADCAST_THREAD","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.Telephony.BODY","true","false","false","true","true","String","""body""","","/**
 * The body of the message
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_BOX_INBOX","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.Telephony.REPLY_CHARGING_DEADLINE_TOKEN","true","false","false","true","true","String","""r_chg_dl_tok""","","/**
 * The reply-charging-deadline-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Addr.MSG_ID","true","false","false","true","true","String","""msg_id""","","/**
 * The ID of MM which this address entry belongs to.
 */
","\android\provider\Telephony.java"
"android.provider.Mms.TEXT","true","false","false","true","true","String","""text""","","","\android\provider\Telephony.java"
"android.provider.Telephony.REPORT_ALLOWED","true","false","false","true","true","String","""rpt_a""","","/**
 * Whether the report is allowed.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.DUE_TIME","true","false","false","true","true","String","""due_time""","","/**
 * The time to do next retry.
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.MMSPORT","true","false","false","true","true","String","""mmsport""","","","\android\provider\Telephony.java"
"android.provider.Telephony.READ","true","false","false","true","true","String","""read""","","/**
 * Indicates whether all messages of the thread have been read.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.SERVER","true","false","false","true","true","String","""server""","","","\android\provider\Telephony.java"
"android.provider.MmsSms.MMS_PROTO","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.WordsTable.INDEXED_TEXT","true","false","false","true","true","String","""index_text""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.STATUS_FAILED","true","false","false","true","true","int","128","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.REPLY_CHARGING","true","false","false","true","true","String","""r_chg""","","/**
 * The reply-charging of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CT_START","true","false","false","true","true","String","""ctt_s""","","/**
 * The start of content-type of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.PROTOCOL","true","false","false","true","true","String","""protocol""","","/**
 * The protocol identifier code
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.REPORT_REQUEST_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""report-request"")","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_BOX_ALL","true","false","false","true","true","int","0","","","\android\provider\Telephony.java"
"android.provider.Intents.SPN_STRINGS_UPDATED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SPN_STRINGS_UPDATED""","","/**
 * Broadcast Action: The Service Provider string(s) have been updated.  Activities or
 * services that use these strings should update their display.
 * The intent will have the following extra values:</p>
 * <ul>
 * <li><em>showPlmn</em> - Boolean that indicates whether the PLMN should be shown.</li>
 * <li><em>plmn</em> - The operator name of the registered network, as a string.</li>
 * <li><em>showSpn</em> - Boolean that indicates whether the SPN should be shown.</li>
 * <li><em>spn</em> - The service provider name, as a string.</li>
 * </ul>
 * Note that <em>showPlmn</em> may indicate that <em>plmn</em> should be displayed, even
 * though the value for <em>plmn</em> is null.  This can happen, for example, if the phone
 * has not registered to a network yet.  In this case the receiver may substitute an
 * appropriate placeholder string (eg, ""No service"").
 *
 * It is recommended to display <em>plmn</em> before / above <em>spn</em> if
 * both are displayed.
 *
 * <p>Note this is a protected intent that can only be sent
 * by the system.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ERROR_TYPE","true","false","false","true","true","String","""err_type""","","/**
 * The type of the error code.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.PREVIOUSLY_SENT_BY","true","false","false","true","true","String","""p_s_by""","","/**
 * The previously-sent-by of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.STORED","true","false","false","true","true","String","""stored""","","/**
 * The stored of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CANCEL_ID","true","false","false","true","true","String","""cl_id""","","/**
 * The cancel-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SMS_RECEIVED_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SMS_RECEIVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new text based SMS message has been received
 * by the device. The intent will have the following extra
 * values:</p>
 *
 * <ul>
 * <li><em>pdus</em> - An Object[] od byte[]s containing the PDUs
 * that make up the message.</li>
 * </ul>
 *
 * <p>The extra values can be extracted using
 * {@link #getMessagesFromIntent(Intent)}.</p>
 *
 * <p>If a BroadcastReceiver encounters an error while processing
 * this intent it should set the result code appropriately.</p>
 */
","\android\provider\Telephony.java"
"android.provider.PendingMessages.ERROR_CODE","true","false","false","true","true","String","""err_code""","","/**
 * The error code of sending/retrieving process.
 * <P>Type:  INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.TRANSACTION_ID","true","false","false","true","true","String","""tr_id""","","/**
 * The transaction-id of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.READ","true","false","false","true","true","String","""read""","","/**
 * Has the message been read
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_TYPE","true","false","false","true","true","String","""m_type""","","/**
 * The type of the message defined by MMS spec.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.TEXT","true","false","false","true","true","String","""text""","","","\android\provider\Telephony.java"
"android.provider.Mms.EXTRA_TYPES","true","false","false","true","true","String","""types""","","/**
 * The extra field to store the type of the contents,
 * which should be an array of String.
 */
","\android\provider\Telephony.java"
"android.provider.Mms.CT_TYPE","true","false","false","true","true","String","""ctt_t""","","/**
 * The type of content-type of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.META_DATA","true","false","false","true","true","String","""meta_data""","","/**
 * Meta data used externally.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.EXTRA_SUBJECT","true","false","false","true","true","String","""subject""","","/**
 * The extra field to store the 'Subject'.
 */
","\android\provider\Telephony.java"
"android.provider.Sent.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms/sent"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.REPLY_CHARGING_DEADLINE_TOKEN","true","false","false","true","true","String","""r_chg_dl_tok""","","/**
 * The reply-charging-deadline-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.READ_STATUS","true","false","false","true","true","String","""read_status""","","/**
 * The read-status of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ERR_TYPE_MMS_PROTO_PERMANENT","true","false","false","true","true","int","12","","","\android\provider\Telephony.java"
"android.provider.Mms.ADDRESS","true","false","false","true","true","String","""address""","","/**
 * The address text.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MM_FLAGS","true","false","false","true","true","String","""mm_flg""","","/**
 * The mm-flags of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.SCRAP_FILE_PATH","true","false","false","true","true","String","""/sdcard/mms/scrapSpace/.temp.jpg""","","/**
 * This is the scrap file we use to store the media attachment when the user
 * chooses to capture a photo to be attached . We pass {#link@Uri} to the Camera app,
 * which streams the captured image to the uri. Internally we write the media content
 * to this file. It's named '.temp.jpg' so Gallery won't pick it up.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_ID","true","false","false","true","true","String","""m_id""","","/**
 * The Message-ID of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.THREAD_ID","true","false","false","true","true","String","""thread_id""","","/**
 * The thread ID of the message
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.ERROR","true","false","false","true","true","String","""error""","","/**
 * Indicates whether there is a transmission error in the thread.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SERVER","true","false","false","true","true","String","""server""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.PROTOCOL","true","false","false","true","true","String","""protocol""","","/**
 * The protocol identifier code
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Part.CT_TYPE","true","false","false","true","true","String","""ctt_t""","","/**
 * The type of content-type of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.PERSON","true","false","false","true","true","String","""person""","","/**
 * The id of the sender of the conversation, if present
 * <P>Type: INTEGER (reference to item in content://contacts/people)</P>
 */
","\android\provider\Telephony.java"
"android.provider.Draft.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.ADAPTATION_ALLOWED","true","false","false","true","true","String","""adp_a""","","/**
 * The adaptation-allowed of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MBOX_TOTALS_TOKEN","true","false","false","true","true","String","""mb_t_tok""","","/**
 * The mbox-totals-token of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MMSPROXY","true","false","false","true","true","String","""mmsproxy""","","","\android\provider\Telephony.java"
"android.provider.Inbox.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SEQ","true","false","false","true","true","String","""seq""","","/**
 * The order of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms._DATA","true","false","false","true","true","String","""_data""","","/**
 * The location(on filesystem) of the binary data of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.MMSPROXY","true","false","false","true","true","String","""mmsproxy""","","","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.ERROR_CODE","true","false","false","true","true","String","""error_code""","","/**
 * Error code associated with sending or receiving this message
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony._DATA","true","false","false","true","true","String","""_data""","","/**
 * The location(on filesystem) of the binary data of the part.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_CC","true","false","false","true","true","String","""cc""","","/**
 * The extra field to store the 'Cc' addresses.
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.AUTH_TYPE","true","false","false","true","true","String","""authtype""","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.LIMIT","true","false","false","true","true","String","""limit""","","/**
 * The limit of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.FILENAME","true","false","false","true","true","String","""fn""","","/**
 * The file name of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Intents.RESULT_SMS_OUT_OF_MEMORY","true","false","false","true","true","int","3","","/**
 * Set by BroadcastReceiver. Indicates insufficient memory to store
 * the message.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.DEBUG","false","false","true","true","true","boolean","true","","","\android\provider\Telephony.java"
"android.provider.Telephony.BCC","true","false","false","true","true","String","""bcc""","","/**
 * The address of the bcc. recipients.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ERR_TYPE_GENERIC","true","false","false","true","true","int","1","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.TOTALS","true","false","false","true","true","String","""totals""","","/**
 * The totals of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.SMS_PROTO","true","false","false","true","true","int","0","","// Constants for message protocol types.
","\android\provider\Telephony.java"
"android.provider.Telephony.RESPONSE_TEXT","true","false","false","true","true","String","""resp_txt""","","/**
 * The response-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.RETRIEVE_TEXT","true","false","false","true","true","String","""retr_txt""","","/**
 * The retrieve-text of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MSG_TYPE","true","false","false","true","true","String","""msg_type""","","/**
 * The type of the message to be sent or downloaded.
 * This field is only valid for MM. For SM, its value is always
 * set to 0.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.EXPIRY","true","false","false","true","true","String","""exp""","","/**
 * The expiry time of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.LOCKED","true","false","false","true","true","String","""locked""","","/**
 * Has the message been locked?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Telephony.java"
"android.provider.Carriers.PASSWORD","true","false","false","true","true","String","""password""","","","\android\provider\Telephony.java"
"android.provider.Sms.MESSAGE_COUNT","true","false","false","true","true","String","""msg_count""","","/**
 * The number of messages in the conversation
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.STATUS_PENDING","true","false","false","true","true","int","64","","","\android\provider\Telephony.java"
"android.provider.Telephony.SUBJECT","true","false","false","true","true","String","""sub""","","/**
 * The subject of the message, if present.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Mms.CONTENT_CHANGED_ACTION","true","false","false","true","true","String","""android.intent.action.CONTENT_CHANGED""","","/**
 * Indicates that the contents of specified URIs were changed.
 * The application which is showing or caching these contents
 * should be updated.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.STORE_STATUS","true","false","false","true","true","String","""store_st""","","/**
 * The store-status of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Part.CHARSET","true","false","false","true","true","String","""chset""","","/**
 * The charset of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.ThreadsColumns.READ","true","false","false","true","true","String","""read""","","/**
 * Indicates whether all messages of the thread have been read.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_FILTER_BYPHONE_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/messages/byphone"")","","","\android\provider\Telephony.java"
"android.provider.CanonicalAddressesColumns.ADDRESS","true","false","false","true","true","String","""address""","","/**
 * An address used in MMS or SMS.  Email addresses are
 * converted to lower case and are compared by string
 * equality.  Other addresses are compared using
 * PHONE_NUMBERS_EQUAL.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.PASSWORD","true","false","false","true","true","String","""password""","","","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.PREVIOUSLY_SENT_DATE","true","false","false","true","true","String","""p_s_d""","","/**
 * The previously-sent-date of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.ERROR","true","false","false","true","true","String","""error""","","/**
 * Indicates whether there is a transmission error in the thread.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.MESSAGE_TYPE_FAILED","true","false","false","true","true","int","5","","// for failed outgoing messages
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.RETRIEVE_TEXT_CHARSET","true","false","false","true","true","String","""retr_txt_cs""","","/**
 * The character set of the retrieve-text.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MMS_VERSION","true","false","false","true","true","String","""v""","","/**
 * The version of specification that this message conform.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.DELIVERY_REPORT","true","false","false","true","true","String","""d_rpt""","","/**
 * The delivery-report of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.MmsSms.ERROR_TYPE","true","false","false","true","true","String","""err_type""","","/**
 * The type of the error code.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.MESSAGE_TYPE_OUTBOX","true","false","false","true","true","int","4","","","\android\provider\Telephony.java"
"android.provider.Threads.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(MmsSms.CONTENT_URI, ""conversations"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.CONTACT_ID","true","false","false","true","true","String","""contact_id""","","/**
 * The ID of contact entry in Phone Book.
 */
","\android\provider\Telephony.java"
"android.provider.Sms.SNIPPET","true","false","false","true","true","String","""snippet""","","/**
 * The first 45 characters of the body of the message
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.PendingMessages.DUE_TIME","true","false","false","true","true","String","""due_time""","","/**
 * The time to do next retry.
 */
","\android\provider\Telephony.java"
"android.provider.Mms.SENT_TIME","true","false","false","true","true","String","""sent_time""","","/**
 * When a message was successfully sent.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Conversations.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.Mms.CONTENT_DISPOSITION","true","false","false","true","true","String","""cd""","","/**
 * The content disposition of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.CONTENT_DRAFT_URI","true","false","false","true","true","Uri","Uri.parse(""content://mms-sms/draft"")","","","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_SPN","true","false","false","true","true","String","""spn""","","","\android\provider\Telephony.java"
"android.provider.Mms.CT_START","true","false","false","true","true","String","""ctt_s""","","/**
 * The start of content-type of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.NO_ERROR","true","false","false","true","true","int","0","","// Constants for error types of pending messages.
","\android\provider\Telephony.java"
"android.provider.Telephony.ELEMENT_DESCRIPTOR","true","false","false","true","true","String","""e_des""","","/**
 * The element-descriptor of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.MESSAGE_TYPE","true","false","false","true","true","String","""m_type""","","/**
 * The type of the message defined by MMS spec.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Sms.SIM_FULL_ACTION","true","false","false","true","true","String","""android.provider.Telephony.SIM_FULL""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The SIM storage for SMS messages is full.  If
 * space is not freed, messages targeted for the SIM (class 2) may
 * not be saved.
 */
","\android\provider\Telephony.java"
"android.provider.BaseMmsColumns.REPLY_CHARGING_SIZE","true","false","false","true","true","String","""r_chg_sz""","","/**
 * The reply-charging-size of the message.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.EXTRA_SUBJECT","true","false","false","true","true","String","""subject""","","/**
 * The extra field to store the 'Subject'.
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.MESSAGE_CLASS","true","false","false","true","true","String","""m_cls""","","/**
 * The class of the message.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.DELETED_CONTENTS","true","false","false","true","true","String","""deleted_contents""","","/**
 * An extra field which stores the URI of deleted contents.
 */
","\android\provider\Telephony.java"
"android.provider.Sms.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""date DESC""","","/**
 * The default sort order for this table
 */
","\android\provider\Telephony.java"
"android.provider.TextBasedSmsColumns.META_DATA","true","false","false","true","true","String","""meta_data""","","/**
 * Meta data used externally.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Part.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the part.
 * <P>Type: TEXT</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.SENT_TIME","true","false","false","true","true","String","""sent_time""","","/**
 * When a message was successfully sent.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Telephony.java"
"android.provider.Telephony.OBSOLETE_THREADS_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""obsolete"")","","","\android\provider\Telephony.java"
"android.pim.vcard.VCardComposer.mWriter","false","false","true","false","false","Writer","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mContentResolver","false","false","true","false","true","ContentResolver","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mCareHandlerErrors","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.HandlerForOutputStream.LOG_TAG","false","false","true","true","true","String","""vcard.VCardComposer.HandlerForOutputStream""","@SuppressWarnings(""hiding"")","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mIdColumn","false","false","true","false","false","int","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mOnTerminateIsCalled","false","false","true","false","false","boolean","false","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mCursor","false","false","true","false","false","Cursor","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.FAILURE_REASON_UNSUPPORTED_URI","true","false","false","true","true","String","""The Uri vCard composer received is not supported by the composer.""","","/**
 * Should be visible only from developers... (no need to translate, hopefully)
 */
","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mTerminateIsCalled","false","false","true","false","false","boolean","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.DEFAULT_POSTAL_TYPE","true","false","false","true","true","int","StructuredPostal.TYPE_HOME","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mContext","false","false","true","false","true","Context","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.DEFAULT_EMAIL_TYPE","true","false","false","true","true","int","Email.TYPE_OTHER","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.HandlerForOutputStream.mOutputStream","false","false","true","false","true","OutputStream","","","// mWriter will close this.
","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.VCARD_TEST_AUTHORITY_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + VCARD_TEST_AUTHORITY)","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mHandlerList","false","false","true","false","true","List<OneEntryHandler>","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.VCARD_TEST_AUTHORITY","true","false","false","true","true","String","""com.android.unit_tests.vcard""","","/**
 * Special URI for testing.
 */
","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.CONTACTS_TEST_CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(VCARD_TEST_AUTHORITY_URI, ""contacts"")","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.SHIFT_JIS","false","false","true","true","true","String","""SHIFT_JIS""","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mIsDoCoMo","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.LOG_TAG","false","false","true","true","true","String","""vcard.VCardComposer.HandlerForOutputStream""","@SuppressWarnings(""hiding"")","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mOutputStream","false","false","true","false","true","OutputStream","","","// mWriter will close this.
","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.sImMap","false","false","true","true","true","Map<Integer,String>","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mUsesShiftJis","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.HandlerForOutputStream.mOnTerminateIsCalled","false","false","true","false","false","boolean","false","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.NO_ERROR","true","false","false","true","true","String","""No error""","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.FAILURE_REASON_FAILED_TO_GET_DATABASE_INFO","true","false","false","true","true","String","""Failed to get database information""","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.FAILURE_REASON_NO_ENTRY","true","false","false","true","true","String","""There's no exportable in the database""","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.DEFAULT_PHONE_TYPE","true","false","false","true","true","int","Phone.TYPE_HOME","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.sContactsProjection","false","false","true","true","true","String","new String[] { Contacts._ID }","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mVCardType","false","false","true","false","true","int","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mCharsetString","false","false","true","false","true","String","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.mErrorReason","false","false","true","false","false","String","NO_ERROR","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.HandlerForOutputStream.mWriter","false","false","true","false","false","Writer","","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.UTF_8","false","false","true","true","true","String","""UTF-8""","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.VCARD_TYPE_STRING_DOCOMO","true","false","false","true","true","String","""docomo""","","","\android\pim\vcard\VCardComposer.java"
"android.pim.vcard.VCardComposer.FAILURE_REASON_NOT_INITIALIZED","true","false","false","true","true","String","""The vCard composer object is not correctly initialized""","","","\android\pim\vcard\VCardComposer.java"
"android.accounts.AccountManagerResponse.mResponse","false","false","true","false","false","IAccountManagerResponse","","","","\android\accounts\AccountManagerResponse.java"
"android.accounts.AccountManagerResponse.CREATOR","true","false","false","true","true","Creator<AccountManagerResponse>","new Creator<AccountManagerResponse>() {

    public AccountManagerResponse createFromParcel(Parcel source) {
        return new AccountManagerResponse(source);
    }

    public AccountManagerResponse[] newArray(int size) {
        return new AccountManagerResponse[size];
    }
}","","/**
 * @hide
 */
","\android\accounts\AccountManagerResponse.java"
"android.bluetooth.BluetoothInputStream.mSocket","false","false","true","false","false","BluetoothSocket","","","","\android\bluetooth\BluetoothInputStream.java"
"android.net.MailTo.MAILTO_SCHEME","true","false","false","true","true","String","""mailto:""","","","\android\net\MailTo.java"
"android.net.MailTo.CC","false","false","true","true","true","String","""cc""","","","\android\net\MailTo.java"
"android.net.MailTo.SUBJECT","false","false","true","true","true","String","""subject""","","","\android\net\MailTo.java"
"android.net.MailTo.mHeaders","false","false","true","false","false","HashMap<String,String>","","","// All the parsed content is added to the headers.
","\android\net\MailTo.java"
"android.net.MailTo.TO","false","false","true","true","true","String","""to""","","// Well known headers
","\android\net\MailTo.java"
"android.net.MailTo.BODY","false","false","true","true","true","String","""body""","","","\android\net\MailTo.java"
"android.webkit.DateSorter.LOGTAG","false","false","true","true","true","String","""webkit""","","","\android\webkit\DateSorter.java"
"android.webkit.DateSorter.mBins","false","false","true","false","false","long","new long[DAY_COUNT - 1]","","","\android\webkit\DateSorter.java"
"android.webkit.DateSorter.NUM_DAYS_AGO","false","false","true","true","true","int","7","","","\android\webkit\DateSorter.java"
"android.webkit.DateSorter.DAY_COUNT","true","false","false","true","true","int","5","","/**
 * must be >= 3
 */
","\android\webkit\DateSorter.java"
"android.webkit.DateSorter.mLabels","false","false","true","false","false","String","new String[DAY_COUNT]","","","\android\webkit\DateSorter.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mKeyboardView","false","false","true","false","false","KeyboardView","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mKeyboardState","false","false","true","false","false","int","KEYBOARD_STATE_NORMAL","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.KEYBOARD_MODE_NUMERIC","true","false","false","true","true","int","1","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mContext","false","false","true","false","false","Context","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mSymbolsKeyboardShifted","false","false","true","false","false","PasswordEntryKeyboard","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mTargetView","false","false","true","false","false","View","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.TAG","false","false","true","true","true","String","""PasswordEntryKeyboardHelper""","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mQwertyKeyboard","false","false","true","false","false","PasswordEntryKeyboard","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mVibratePattern","false","false","true","false","false","long","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mVibrator","false","false","true","false","false","Vibrator","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.KEYBOARD_STATE_CAPSLOCK","false","false","true","true","true","int","2","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mSymbolsKeyboard","false","false","true","false","false","PasswordEntryKeyboard","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.KEYBOARD_STATE_NORMAL","false","false","true","true","true","int","0","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mQwertyKeyboardShifted","false","false","true","false","false","PasswordEntryKeyboard","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mKeyboardMode","false","false","true","false","false","int","KEYBOARD_MODE_ALPHA","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.KEYBOARD_MODE_ALPHA","true","false","false","true","true","int","0","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.KEYBOARD_STATE_SHIFTED","false","false","true","true","true","int","1","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"com.android.internal.widget.PasswordEntryKeyboardHelper.mNumericKeyboard","false","false","true","false","false","PasswordEntryKeyboard","","","","\com\android\internal\widget\PasswordEntryKeyboardHelper.java"
"android.view.animation.DecelerateInterpolator.mFactor","false","false","true","false","false","float","1.0f","","","\android\view\animation\DecelerateInterpolator.java"
"com.google.android.util.SmileyParser.mRes","false","false","true","false","false","SmileyResources","","","","\com\google\android\util\SmileyParser.java"
"android.provider.ActivitiesColumns.PUBLISHED","true","false","false","true","true","String","""published""","","/**
 * Timestamp when this social activity was published, in a
 * {@link System#currentTimeMillis()} time base. This field is analogous
 * to the <code>atom:published</code> element defined in RFC 4287.
 * <p>
 * Type: INTEGER
 */
","\android\provider\SocialContract.java"
"android.provider.Activities.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/activity""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of social
 * activities.
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.MIMETYPE","true","false","false","true","true","String","""mimetype""","","/**
 * The mime-type of this social activity.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.RAW_ID","true","false","false","true","true","String","""raw_id""","","/**
 * Internal raw identifier for this social activity. This field is
 * analogous to the <code>atom:id</code> element defined in RFC 4287.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.TITLE","true","false","false","true","true","String","""title""","","/**
 * Title of this social activity. This field is analogous to the
 * <code>atom:title</code> element defined in RFC 4287.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.RES_PACKAGE","true","false","false","true","true","String","""res_package""","","/**
 * The package name to use when creating {@link Resources} objects for
 * this data row. This value is only designed for use when building user
 * interfaces, and should not be used to infer the owner.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.RAW_ID","true","false","false","true","true","String","""raw_id""","","/**
 * Internal raw identifier for this social activity. This field is
 * analogous to the <code>atom:id</code> element defined in RFC 4287.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.IN_REPLY_TO","true","false","false","true","true","String","""in_reply_to""","","/**
 * Reference to another {@link Activities#RAW_ID} that this social activity
 * is replying to. This field is analogous to the
 * <code>thr:in-reply-to</code> element defined in RFC 4685.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.Activities.CONTENT_CONTACT_STATUS_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""contact_status"")","","/**
 * The {@link Uri} for the latest social activity performed by any
 * raw contact aggregated under the specified {@link Contacts#_ID}. Will
 * also join with most-present {@link Presence} for this aggregate.
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.SUMMARY","true","false","false","true","true","String","""summary""","","/**
 * Summary of this social activity. This field is analogous to the
 * <code>atom:summary</code> element defined in RFC 4287.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.MIMETYPE","true","false","false","true","true","String","""mimetype""","","/**
 * The mime-type of this social activity.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.TARGET_CONTACT_ID","true","false","false","true","true","String","""target_contact_id""","","/**
 * Optional reference to the {@link android.provider.ContactsContract.Contacts#_ID} this
 * social activity is targeted towards. If more than one direct target, this field may
 * be left undefined. This field is analogous to the
 * <code>activity:target</code> element defined in the Atom Activity
 * Extensions Internet-Draft.
 * <p>
 * Type: INTEGER
 */
","\android\provider\SocialContract.java"
"android.provider.Activities.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""activities"")","","/**
 * The content:// style URI for this table
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.THUMBNAIL","true","false","false","true","true","String","""thumbnail""","","/**
 * Optional thumbnail specific to this social activity. This is the raw
 * bytes of an image that could be inflated using {@link BitmapFactory}.
 * <p>
 * Type: BLOB
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.PUBLISHED","true","false","false","true","true","String","""published""","","/**
 * Timestamp when this social activity was published, in a
 * {@link System#currentTimeMillis()} time base. This field is analogous
 * to the <code>atom:published</code> element defined in RFC 4287.
 * <p>
 * Type: INTEGER
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.THREAD_PUBLISHED","true","false","false","true","true","String","""thread_published""","","/**
 * Timestamp when the original social activity in a thread was
 * published. For activities that have an in-reply-to field specified, the
 * content provider will automatically populate this field with the
 * timestamp of the original activity.
 * <p>
 * This field is useful for sorting order of activities that keeps together all
 * messages in each thread.
 * <p>
 * Type: INTEGER
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/activity""","","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * social activity.
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.RES_PACKAGE","true","false","false","true","true","String","""res_package""","","/**
 * The package name to use when creating {@link Resources} objects for
 * this data row. This value is only designed for use when building user
 * interfaces, and should not be used to infer the owner.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.LINK","true","false","false","true","true","String","""link""","","/**
 * A URI associated this social activity. This field is analogous to the
 * <code>atom:link rel=""alternate""</code> element defined in RFC 4287.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.CONTENT_AUTHORED_BY_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""authored_by"")","","/**
 * The content:// URI for this table filtered to the set of social activities
 * authored by a specific {@link android.provider.ContactsContract.Contacts#_ID}.
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.AUTHOR_CONTACT_ID","true","false","false","true","true","String","""author_contact_id""","","/**
 * Reference to the {@link android.provider.ContactsContract.Contacts#_ID} that authored
 * this social activity. This field is analogous to the <code>atom:author</code>
 * element defined in RFC 4287.
 * <p>
 * Type: INTEGER
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.AUTHORITY_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY)","","/**
 * A content:// style uri to the authority for the contacts provider
 */
","\android\provider\SocialContract.java"
"android.provider.Activities.CONTENT_AUTHORED_BY_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""authored_by"")","","/**
 * The content:// URI for this table filtered to the set of social activities
 * authored by a specific {@link android.provider.ContactsContract.Contacts#_ID}.
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.CONTENT_CONTACT_STATUS_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""contact_status"")","","/**
 * The {@link Uri} for the latest social activity performed by any
 * raw contact aggregated under the specified {@link Contacts#_ID}. Will
 * also join with most-present {@link Presence} for this aggregate.
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.AUTHORITY","true","false","false","true","true","String","""com.android.social""","","/**
 * The authority for the social provider
 */
","\android\provider\SocialContract.java"
"android.provider.Activities.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/activity""","","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * social activity.
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.THUMBNAIL","true","false","false","true","true","String","""thumbnail""","","/**
 * Optional thumbnail specific to this social activity. This is the raw
 * bytes of an image that could be inflated using {@link BitmapFactory}.
 * <p>
 * Type: BLOB
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.THREAD_PUBLISHED","true","false","false","true","true","String","""thread_published""","","/**
 * Timestamp when the original social activity in a thread was
 * published. For activities that have an in-reply-to field specified, the
 * content provider will automatically populate this field with the
 * timestamp of the original activity.
 * <p>
 * This field is useful for sorting order of activities that keeps together all
 * messages in each thread.
 * <p>
 * Type: INTEGER
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.LINK","true","false","false","true","true","String","""link""","","/**
 * A URI associated this social activity. This field is analogous to the
 * <code>atom:link rel=""alternate""</code> element defined in RFC 4287.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.IN_REPLY_TO","true","false","false","true","true","String","""in_reply_to""","","/**
 * Reference to another {@link Activities#RAW_ID} that this social activity
 * is replying to. This field is analogous to the
 * <code>thr:in-reply-to</code> element defined in RFC 4685.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.AUTHOR_CONTACT_ID","true","false","false","true","true","String","""author_contact_id""","","/**
 * Reference to the {@link android.provider.ContactsContract.Contacts#_ID} that authored
 * this social activity. This field is analogous to the <code>atom:author</code>
 * element defined in RFC 4287.
 * <p>
 * Type: INTEGER
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""activities"")","","/**
 * The content:// style URI for this table
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/activity""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of social
 * activities.
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.TARGET_CONTACT_ID","true","false","false","true","true","String","""target_contact_id""","","/**
 * Optional reference to the {@link android.provider.ContactsContract.Contacts#_ID} this
 * social activity is targeted towards. If more than one direct target, this field may
 * be left undefined. This field is analogous to the
 * <code>activity:target</code> element defined in the Atom Activity
 * Extensions Internet-Draft.
 * <p>
 * Type: INTEGER
 */
","\android\provider\SocialContract.java"
"android.provider.ActivitiesColumns.TITLE","true","false","false","true","true","String","""title""","","/**
 * Title of this social activity. This field is analogous to the
 * <code>atom:title</code> element defined in RFC 4287.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.provider.SocialContract.SUMMARY","true","false","false","true","true","String","""summary""","","/**
 * Summary of this social activity. This field is analogous to the
 * <code>atom:summary</code> element defined in RFC 4287.
 * <p>
 * Type: TEXT
 */
","\android\provider\SocialContract.java"
"android.util.DayOfMonthCursor.mColumn","false","false","true","false","false","int","","","","\android\util\DayOfMonthCursor.java"
"android.util.DayOfMonthCursor.mRow","false","false","true","false","false","int","","","","\android\util\DayOfMonthCursor.java"
"android.content.pm.DisplayNameComparator.sCollator","false","false","true","false","true","Collator","Collator.getInstance()","","","\android\content\pm\PackageItemInfo.java"
"android.content.pm.PackageItemInfo.sCollator","false","false","true","false","true","Collator","Collator.getInstance()","","","\android\content\pm\PackageItemInfo.java"
"android.content.pm.DisplayNameComparator.mPM","false","false","true","false","false","PackageManager","","","","\android\content\pm\PackageItemInfo.java"
"android.content.pm.PackageItemInfo.name","true","false","false","false","false","String","","","/**
 * Public name of this item. From the ""android:name"" attribute.
 */
","\android\content\pm\PackageItemInfo.java"
"android.content.pm.PackageItemInfo.labelRes","true","false","false","false","false","int","","","/**
 * A string resource identifier (in the package's resources) of this
 * component's label.  From the ""label"" attribute or, if not set, 0.
 */
","\android\content\pm\PackageItemInfo.java"
"android.content.pm.PackageItemInfo.nonLocalizedLabel","true","false","false","false","false","CharSequence","","","/**
 * The string provided in the AndroidManifest file, if any.  You
 * probably don't want to use this.  You probably want
 * {@link PackageManager#getApplicationLabel}
 */
","\android\content\pm\PackageItemInfo.java"
"android.content.pm.PackageItemInfo.mPM","false","false","true","false","false","PackageManager","","","","\android\content\pm\PackageItemInfo.java"
"android.content.pm.PackageItemInfo.metaData","true","false","false","false","false","Bundle","","","/**
 * Additional meta-data associated with this component.  This field
 * will only be filled in if you set the
 * {@link PackageManager#GET_META_DATA} flag when requesting the info.
 */
","\android\content\pm\PackageItemInfo.java"
"android.content.pm.PackageItemInfo.icon","true","false","false","false","false","int","","","/**
 * A drawable resource identifier (in the package's resources) of this
 * component's icon.  From the ""icon"" attribute or, if not set, 0.
 */
","\android\content\pm\PackageItemInfo.java"
"android.content.pm.PackageItemInfo.packageName","true","false","false","false","false","String","","","/**
 * Name of the package that this item is in.
 */
","\android\content\pm\PackageItemInfo.java"
"com.android.internal.os.RuntimeInit.mApplicationObject","false","false","true","true","false","IBinder","","","","\com\android\internal\os\RuntimeInit.java"
"com.android.internal.os.RuntimeInit.TAG","false","false","true","true","true","String","""AndroidRuntime""","","","\com\android\internal\os\RuntimeInit.java"
"com.android.internal.os.RuntimeInit.initialized","false","false","true","true","false","boolean","","","/**
 * true if commonInit() has been called
 */
","\com\android\internal\os\RuntimeInit.java"
"com.android.internal.os.RuntimeInit.mCrashing","false","false","true","true","false","boolean","false","","","\com\android\internal\os\RuntimeInit.java"
"com.android.internal.os.RuntimeInit.sInReportException","false","false","true","true","true","AtomicInteger","new AtomicInteger()","","/**
 * Counter used to prevent reentrancy in {@link #reportException}.
 */
","\com\android\internal\os\RuntimeInit.java"
"android.text.style.BackgroundColorSpan.mColor","false","false","true","false","true","int","","","","\android\text\style\BackgroundColorSpan.java"
"android.widget.Toast.mX","false","false","false","false","false","int","","","","\android\widget\Toast.java"
"android.widget.Toast.mParams","false","false","true","false","true","WindowManager.LayoutParams","new WindowManager.LayoutParams()","","","\android\widget\Toast.java"
"android.widget.Toast.mHide","false","false","false","false","true","Runnable","new Runnable() {

    public void run() {
        handleHide();
    }
}","","","\android\widget\Toast.java"
"android.widget.Toast.mNextView","false","false","false","false","false","View","","","","\android\widget\Toast.java"
"android.widget.TN.mHide","false","false","false","false","true","Runnable","new Runnable() {

    public void run() {
        handleHide();
    }
}","","","\android\widget\Toast.java"
"android.widget.Toast.mWM","false","false","false","false","false","WindowManagerImpl","","","","\android\widget\Toast.java"
"android.widget.Toast.mGravity","false","false","false","false","false","int","Gravity.CENTER_HORIZONTAL | Gravity.BOTTOM","","","\android\widget\Toast.java"
"android.widget.Toast.localLOGV","false","false","false","true","true","boolean","false","","","\android\widget\Toast.java"
"android.widget.Toast.mTN","false","false","false","false","true","TN","","","","\android\widget\Toast.java"
"android.widget.Toast.TAG","false","false","false","true","true","String","""Toast""","","","\android\widget\Toast.java"
"android.widget.Toast.mHandler","false","false","false","false","true","Handler","new Handler()","","","\android\widget\Toast.java"
"android.widget.TN.mWM","false","false","false","false","false","WindowManagerImpl","","","","\android\widget\Toast.java"
"android.widget.Toast.LENGTH_LONG","true","false","false","true","true","int","1","","/**
 * Show the view or text notification for a long period of time.  This time
 * could be user-definable.
 * @see #setDuration
 */
","\android\widget\Toast.java"
"android.widget.Toast.mContext","false","false","false","false","true","Context","","","","\android\widget\Toast.java"
"android.widget.Toast.mVerticalMargin","false","false","false","false","false","float","","","","\android\widget\Toast.java"
"android.widget.Toast.mShow","false","false","false","false","true","Runnable","new Runnable() {

    public void run() {
        handleShow();
    }
}","","","\android\widget\Toast.java"
"android.widget.Toast.mDuration","false","false","false","false","false","int","","","","\android\widget\Toast.java"
"android.widget.Toast.mView","false","false","false","false","false","View","","","","\android\widget\Toast.java"
"android.widget.Toast.sService","false","false","true","true","false","INotificationManager","","","","\android\widget\Toast.java"
"android.widget.TN.mParams","false","false","true","false","true","WindowManager.LayoutParams","new WindowManager.LayoutParams()","","","\android\widget\Toast.java"
"android.widget.Toast.mHorizontalMargin","false","false","false","false","false","float","","","","\android\widget\Toast.java"
"android.widget.TN.mShow","false","false","false","false","true","Runnable","new Runnable() {

    public void run() {
        handleShow();
    }
}","","","\android\widget\Toast.java"
"android.widget.Toast.LENGTH_SHORT","true","false","false","true","true","int","0","","/**
 * Show the view or text notification for a short period of time.  This time
 * could be user-definable.  This is the default.
 * @see #setDuration
 */
","\android\widget\Toast.java"
"android.preference.GenericInflater.mConstructorSignature","false","false","true","true","true","Class","new Class[] { Context.class, AttributeSet.class }","","","\android\preference\GenericInflater.java"
"android.preference.FactoryMerger.mF1","false","false","true","false","true","Factory<T>","","","","\android\preference\GenericInflater.java"
"android.preference.GenericInflater.mFactory","false","false","true","false","false","Factory<T>","","","","\android\preference\GenericInflater.java"
"android.preference.GenericInflater.mF1","false","false","true","false","true","Factory<T>","","","","\android\preference\GenericInflater.java"
"android.preference.GenericInflater.mContext","false","true","false","false","true","Context","","","","\android\preference\GenericInflater.java"
"android.preference.GenericInflater.mDefaultPackage","false","false","true","false","false","String","","","","\android\preference\GenericInflater.java"
"android.preference.GenericInflater.sConstructorMap","false","false","true","true","true","HashMap","new HashMap()","","","\android\preference\GenericInflater.java"
"android.preference.GenericInflater.mConstructorArgs","false","false","true","false","true","Object","new Object[2]","","","\android\preference\GenericInflater.java"
"android.preference.GenericInflater.mFactorySet","false","false","true","false","false","boolean","","","// these are optional, set by the caller
","\android\preference\GenericInflater.java"
"android.preference.GenericInflater.DEBUG","false","false","true","false","true","boolean","false","","","\android\preference\GenericInflater.java"
"android.webkit.PluginList.mPlugins","false","false","true","false","false","ArrayList<Plugin>","","","","\android\webkit\PluginList.java"
"com.google.android.mms.pdu.PduParser.END_STRING_FLAG","false","false","true","true","true","int","0x00","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.QUOTE","false","false","true","true","true","int","127","","/**
 * The next are WAP values defined in WSP specification.
 */
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.DEBUG","false","false","true","true","true","boolean","false","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.TYPE_TEXT_STRING","false","false","true","true","true","int","0","","// distinguish Text-String and Quoted-String.
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.TYPE_QUOTED_STRING","false","false","true","true","true","int","1","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.THE_LAST_PART","false","false","true","true","true","int","1","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.LONG_INTEGER_LENGTH_MAX","false","false","true","true","true","int","8","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.mTypeParam","false","false","true","true","false","byte","null","","/**
 * Store the ""type"" parameter in ""Content-Type"" header field.
 */
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.mBody","false","false","true","false","false","PduBody","null","","/**
 * Store pdu parts.
 */
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.QUOTED_STRING_FLAG","false","false","true","true","true","int","34","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.mStartParam","false","false","true","true","false","byte","null","","/**
 * Store the ""start"" parameter in ""Content-Type"" header field.
 */
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.mHeaders","false","false","true","false","false","PduHeaders","null","","/**
 * Store pdu headers
 */
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.LOCAL_LOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.TEXT_MIN","false","false","true","true","true","int","32","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.LENGTH_QUOTE","false","false","true","true","true","int","31","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.TEXT_MAX","false","false","true","true","true","int","127","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.LOG_TAG","false","false","true","true","true","String","""PduParser""","","/**
 * The log tag.
 */
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.THE_FIRST_PART","false","false","true","true","true","int","0","","/**
 * Specify the part position.
 */
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.mPduDataStream","false","false","true","false","false","ByteArrayInputStream","null","","/**
 * The pdu data.
 */
","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.TYPE_TOKEN_STRING","false","false","true","true","true","int","2","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.SHORT_INTEGER_MAX","false","false","true","true","true","int","127","","","\com\google\android\mms\pdu\PduParser.java"
"com.google.android.mms.pdu.PduParser.SHORT_LENGTH_MAX","false","false","true","true","true","int","30","","","\com\google\android\mms\pdu\PduParser.java"
"android.content.pm.ProviderInfo.multiprocess","true","false","false","false","false","boolean","false","","/**
 * If true, this content provider allows multiple instances of itself
 * to run in different process.  If false, a single instances is always
 * run in {@link #processName}.
 */
","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.grantUriPermissions","true","false","false","false","false","boolean","false","","/**
 * If true, additional permissions to specific Uris in this content
 * provider can be granted, as per the
 * {@link android.R.styleable#AndroidManifestProvider_grantUriPermissions
 * grantUriPermissions} attribute.
 */
","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<ProviderInfo>","new Parcelable.Creator<ProviderInfo>() {

    public ProviderInfo createFromParcel(Parcel in) {
        return new ProviderInfo(in);
    }

    public ProviderInfo[] newArray(int size) {
        return new ProviderInfo[size];
    }
}","","","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.authority","true","false","false","false","false","String","null","","/**
 * The name provider is published under content://
 */
","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.readPermission","true","false","false","false","false","String","null","","/**
 * Optional permission required for read-only access this content
 * provider.
 */
","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.writePermission","true","false","false","false","false","String","null","","/**
 * Optional permission required for read/write access this content
 * provider.
 */
","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.isSyncable","true","false","false","false","false","boolean","false","@Deprecated","/**
 * Whether or not this provider is syncable.
 * @deprecated This flag is now being ignored. The current way to make a provider
 * syncable is to provide a SyncAdapter service for a given provider/account type.
 */
","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.uriPermissionPatterns","true","false","false","false","false","PatternMatcher","null","","/**
 * If non-null, these are the patterns that are allowed for granting URI
 * permissions.  Any URI that does not match one of these patterns will not
 * allowed to be granted.  If null, all URIs are allowed.  The
 * {@link PackageManager#GET_URI_PERMISSION_PATTERNS
 * PackageManager.GET_URI_PERMISSION_PATTERNS} flag must be specified for
 * this field to be filled in.
 */
","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.pathPermissions","true","false","false","false","false","PathPermission","null","","/**
 * If non-null, these are path-specific permissions that are allowed for
 * accessing the provider.  Any permissions listed here will allow a
 * holding client to access the provider, and the provider will check
 * the URI it provides when making calls against the patterns here.
 */
","\android\content\pm\ProviderInfo.java"
"android.content.pm.ProviderInfo.initOrder","true","false","false","false","false","int","0","","/**
 * Used to control initialization order of single-process providers
 * running in the same process.  Higher goes first.
 */
","\android\content\pm\ProviderInfo.java"
"android.ddm.DdmHandleHeap.CHUNK_HPDU","true","false","false","true","true","int","type(""HPDU"")","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.CHUNK_HPDS","true","false","false","true","true","int","type(""HPDS"")","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.mInstance","false","false","true","true","false","DdmHandleHeap","new DdmHandleHeap()","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.CHUNK_HPGC","true","false","false","true","true","int","type(""HPGC"")","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.CHUNK_HPIF","true","false","false","true","true","int","type(""HPIF"")","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.CHUNK_HPSG","true","false","false","true","true","int","type(""HPSG"")","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.CHUNK_NHSG","true","false","false","true","true","int","type(""NHSG"")","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.CHUNK_REAE","true","false","false","true","true","int","type(""REAE"")","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.CHUNK_REAL","true","false","false","true","true","int","type(""REAL"")","","","\android\ddm\DdmHandleHeap.java"
"android.ddm.DdmHandleHeap.CHUNK_REAQ","true","false","false","true","true","int","type(""REAQ"")","","","\android\ddm\DdmHandleHeap.java"
"android.os.Process.SHELL_UID","true","false","false","true","true","int","2000","","/**
 * Defines the UID/GID for the user shell.
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.PROC_OUT_FLOAT","true","false","false","true","true","int","0x4000","","/**
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.PROC_TAB_TERM","true","false","false","true","true","int","(int) '\t'","","/**
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_URGENT_DISPLAY","true","false","false","true","true","int","-8","","/**
 * Standard priority of the most important display threads, for compositing
 * the screen and retrieving input events.  Applications can not normally
 * change to this priority.
 * Use with {@link #setThreadPriority(int)} and
 * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
 * {@link java.lang.Thread} class.
 */
","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_URGENT_AUDIO","true","false","false","true","true","int","-19","","/**
 * Standard priority of the most important audio threads.
 * Applications can not normally change to this priority.
 * Use with {@link #setThreadPriority(int)} and
 * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
 * {@link java.lang.Thread} class.
 */
","\android\os\Process.java"
"android.os.Process.SIGNAL_USR1","true","false","false","true","true","int","10","","","\android\os\Process.java"
"android.os.Process.THREAD_GROUP_DEFAULT","true","false","false","true","true","int","0","","/**
 * Default thread group - gets a 'normal' share of the CPU
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.PROC_OUT_STRING","true","false","false","true","true","int","0x1000","","/**
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.sZygoteSocket","false","false","false","true","false","LocalSocket","","","","\android\os\Process.java"
"android.os.Process.PHONE_UID","true","false","false","true","true","int","1001","","/**
 * Defines the UID/GID under which the telephony code runs.
 */
","\android\os\Process.java"
"android.os.Process.sZygoteWriter","false","false","false","true","false","BufferedWriter","","","","\android\os\Process.java"
"android.os.Process.ZYGOTE_RETRY_MILLIS","false","false","false","true","true","int","500","","/**
 * retry interval for opening a zygote socket
 */
","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_DISPLAY","true","false","false","true","true","int","-4","","/**
 * Standard priority of system display threads, involved in updating
 * the user interface.  Applications can not
 * normally change to this priority.
 * Use with {@link #setThreadPriority(int)} and
 * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
 * {@link java.lang.Thread} class.
 */
","\android\os\Process.java"
"android.os.Process.BLUETOOTH_GID","true","false","false","true","true","int","2000","","/**
 * Defines a secondary group id for access to the bluetooth hardware.
 */
","\android\os\Process.java"
"android.os.Process.sZygoteInputStream","false","false","false","true","false","DataInputStream","","","","\android\os\Process.java"
"android.os.Process.PROC_TERM_MASK","true","false","false","true","true","int","0xff","","/**
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_BACKGROUND","true","false","false","true","true","int","10","","/**
 * Standard priority background threads.  This gives your thread a slightly
 * lower than normal priority, so that it will have less chance of impacting
 * the responsiveness of the user interface.
 * Use with {@link #setThreadPriority(int)} and
 * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
 * {@link java.lang.Thread} class.
 */
","\android\os\Process.java"
"android.os.Process.PROC_COMBINE","true","false","false","true","true","int","0x100","","/**
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.SIGNAL_QUIT","true","false","false","true","true","int","3","","","\android\os\Process.java"
"android.os.Process.SYSTEM_UID","true","false","false","true","true","int","1000","","/**
 * Defines the UID/GID under which system code runs.
 */
","\android\os\Process.java"
"android.os.Process.PROC_PARENS","true","false","false","true","true","int","0x200","","/**
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_LOWEST","true","false","false","true","true","int","19","","/**
 * Lowest available thread priority.  Only for those who really, really
 * don't want to run if anything else is happening.
 * Use with {@link #setThreadPriority(int)} and
 * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
 * {@link java.lang.Thread} class.
 */
","\android\os\Process.java"
"android.os.Process.WIFI_UID","true","false","false","true","true","int","1010","","/**
 * Defines the UID/GID for the WIFI supplicant process.
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.ZYGOTE_SOCKET","false","false","true","true","true","String","""zygote""","","","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_DEFAULT","true","false","false","true","true","int","0","","/**
 * Standard priority of application threads.
 * Use with {@link #setThreadPriority(int)} and
 * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
 * {@link java.lang.Thread} class.
 */
","\android\os\Process.java"
"android.os.Process.SIGNAL_KILL","true","false","false","true","true","int","9","","","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_LESS_FAVORABLE","true","false","false","true","true","int","+1","","/**
 * Minimum increment to make a priority less favorable.
 */
","\android\os\Process.java"
"android.os.Process.ANDROID_SHARED_MEDIA","true","false","false","true","true","String","""com.android.process.media""","","/**
 * Name of a process for running the platform's media services.
 * {@hide}
 */
","\android\os\Process.java"
"android.os.Process.FIRST_APPLICATION_UID","true","false","false","true","true","int","10000","","/**
 * Defines the start of a range of UIDs (and GIDs), going from this
 * number to {@link #LAST_APPLICATION_UID} that are reserved for assigning
 * to applications.
 */
","\android\os\Process.java"
"android.os.Process.THREAD_GROUP_BG_NONINTERACTIVE","true","false","false","true","true","int","1","","/**
 * Background non-interactive thread group - All threads in
 * this group are scheduled with a reduced share of the CPU.
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.THREAD_GROUP_FG_BOOST","true","false","false","true","true","int","2","","/**
 * Foreground 'boost' thread group - All threads in
 * this group are scheduled with an increased share of the CPU
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.PROC_SPACE_TERM","true","false","false","true","true","int","(int) ' '","","/**
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.LOG_UID","true","false","false","true","true","int","1007","","/**
 * Defines the UID/GID for the log group.
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.LAST_APPLICATION_UID","true","false","false","true","true","int","99999","","/**
 * Last of application-specific UIDs starting at
 * {@link #FIRST_APPLICATION_UID}.
 */
","\android\os\Process.java"
"android.os.Process.GOOGLE_SHARED_APP_CONTENT","true","false","false","true","true","String","""com.google.process.content""","","/**
 * Name of the process that Google content providers can share.
 * {@hide}
 */
","\android\os\Process.java"
"android.os.Process.sPreviousZygoteOpenFailed","false","false","false","true","false","boolean","","","/**
 * true if previous zygote open failed
 */
","\android\os\Process.java"
"android.os.Process.PROC_ZERO_TERM","true","false","false","true","true","int","0","","/**
 * @hide
 */
","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_AUDIO","true","false","false","true","true","int","-16","","/**
 * Standard priority of audio threads.  Applications can not normally
 * change to this priority.
 * Use with {@link #setThreadPriority(int)} and
 * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
 * {@link java.lang.Thread} class.
 */
","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_MORE_FAVORABLE","true","false","false","true","true","int","-1","","/**
 * Minimum increment to make a priority more favorable.
 */
","\android\os\Process.java"
"android.os.Process.LOG_TAG","false","false","true","true","true","String","""Process""","","","\android\os\Process.java"
"android.os.Process.THREAD_PRIORITY_FOREGROUND","true","false","false","true","true","int","-2","","/**
 * Standard priority of threads that are currently running a user interface
 * that the user is interacting with.  Applications can not normally
 * change to this priority; the system will automatically adjust your
 * application threads as the user moves through the UI.
 * Use with {@link #setThreadPriority(int)} and
 * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
 * {@link java.lang.Thread} class.
 */
","\android\os\Process.java"
"android.os.Process.PROC_OUT_LONG","true","false","false","true","true","int","0x2000","","/**
 * @hide
 */
","\android\os\Process.java"
"com.android.internal.os.SomeArgs.next","false","false","false","false","false","SomeArgs","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.next","false","false","false","false","false","SomeArgs","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.mH","false","false","false","false","true","Handler","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.mMainLooper","false","false","false","false","true","Looper","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.mArgsPoolSize","false","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.argi6","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.argi5","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.argi4","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.argi3","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.argi2","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.argi1","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.arg1","true","false","false","false","false","Object","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.arg3","true","false","false","false","false","Object","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.arg2","true","false","false","false","false","Object","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.arg4","true","false","false","false","false","Object","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.ARGS_POOL_MAX_SIZE","false","false","false","true","true","int","10","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.mArgsPool","false","false","false","false","false","SomeArgs","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.argi5","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.argi6","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.argi3","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.argi4","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.argi1","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.argi2","true","false","false","false","false","int","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.mCallback","false","false","false","false","true","Callback","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.mContext","true","false","false","false","true","Context","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.TAG","false","false","true","true","true","String","""HandlerCaller""","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.arg1","true","false","false","false","false","Object","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.arg4","true","false","false","false","false","Object","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.arg2","true","false","false","false","false","Object","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.SomeArgs.arg3","true","false","false","false","false","Object","","","","\com\android\internal\os\HandlerCaller.java"
"com.android.internal.os.HandlerCaller.DEBUG","false","false","true","true","true","boolean","false","","","\com\android\internal\os\HandlerCaller.java"
"android.widget.FrameLayout.mForegroundBoundsChanged","false","false","false","false","false","boolean","false","","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mForegroundPaddingBottom","false","false","true","false","false","int","0","@ViewDebug.ExportedProperty","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mForegroundPaddingTop","false","false","true","false","false","int","0","@ViewDebug.ExportedProperty","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.gravity","true","false","false","false","false","int","-1","","/**
 * The gravity to apply with the View to which these layout parameters
 * are associated.
 *
 * @see android.view.Gravity
 */
","\android\widget\FrameLayout.java"
"android.widget.LayoutParams.gravity","true","false","false","false","false","int","-1","","/**
 * The gravity to apply with the View to which these layout parameters
 * are associated.
 *
 * @see android.view.Gravity
 */
","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mOverlayBounds","false","false","true","false","true","Rect","new Rect()","","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mForeground","false","false","true","false","false","Drawable","","@ViewDebug.ExportedProperty","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mSelfBounds","false","false","true","false","true","Rect","new Rect()","","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mForegroundGravity","false","false","true","false","false","int","Gravity.FILL","@ViewDebug.ExportedProperty","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mForegroundPaddingRight","false","false","true","false","false","int","0","@ViewDebug.ExportedProperty","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mForegroundPaddingLeft","false","false","true","false","false","int","0","@ViewDebug.ExportedProperty","","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mForegroundInPadding","false","true","false","false","false","boolean","true","@ViewDebug.ExportedProperty","/**
 * {@hide}
 */
","\android\widget\FrameLayout.java"
"android.widget.FrameLayout.mMeasureAllChildren","false","false","false","false","false","boolean","false","@ViewDebug.ExportedProperty","","\android\widget\FrameLayout.java"
"android.content.ContentProviderResult.count","true","false","false","false","true","Integer","","","","\android\content\ContentProviderResult.java"
"android.content.ContentProviderResult.CREATOR","true","false","false","true","true","Creator<ContentProviderResult>","new Creator<ContentProviderResult>() {

    public ContentProviderResult createFromParcel(Parcel source) {
        return new ContentProviderResult(source);
    }

    public ContentProviderResult[] newArray(int size) {
        return new ContentProviderResult[size];
    }
}","","","\android\content\ContentProviderResult.java"
"android.content.ContentProviderResult.uri","true","false","false","false","true","Uri","","","","\android\content\ContentProviderResult.java"
"android.content.pm.PackageManager.INSTALL_SUCCEEDED","true","false","false","true","true","int","1","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} on success.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_EXTERNAL_MEDIA","true","false","false","true","true","int","0x00000002","","/**
 * Flag parameter for {@link #movePackage} to indicate that
 * the package should be moved to external media.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_GIDS","true","false","false","true","true","int","0x00000100","","/**
 * {@link PackageInfo} flag: return the
 * {@link PackageInfo#gids group ids} that are associated with an
 * application.
 * This applies for any API returning an PackageInfo class, either
 * directly or nested inside of another.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MATCH_DEFAULT_ONLY","true","false","false","true","true","int","0x00010000","","/**
 * Resolution and querying flag: if set, only filters that support the
 * {@link android.content.Intent#CATEGORY_DEFAULT} will be considered for
 * matching.  This is a synonym for including the CATEGORY_DEFAULT in your
 * supplied Intent.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_CONFLICTING_PROVIDER","true","false","false","true","true","int","-13","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package failed because it contains a content provider with the
 * same authority as a provider already installed in the system.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_INVALID_INSTALL_LOCATION","true","false","false","true","true","int","-19","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package couldn't be installed in the specified install
 * location.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_SENSOR_LIGHT","true","false","false","true","true","String","""android.hardware.sensor.light""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device includes a light sensor.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_FAILED_FORWARD_LOCKED","true","false","false","true","true","int","-4","","/**
 * Error code that is passed to the {@link IPackageMoveObserver} by
 * {@link #movePackage(android.net.Uri, IPackageMoveObserver)}
 * if the specified package cannot be moved since its forward locked.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_META_DATA","true","false","false","true","true","int","0x00000080","","/**
 * {@link ComponentInfo} flag: return the {@link ComponentInfo#metaData}
 * data {@link android.os.Bundle}s that are associated with a component.
 * This applies for any API returning a ComponentInfo subclass.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME","true","false","false","true","true","int","-106","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser encountered a bad or missing package name in the manifest.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_TOUCHSCREEN","true","false","false","true","true","String","""android.hardware.touchscreen""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device's display has a touch screen.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_CONFIGURATIONS","true","false","false","true","true","int","0x00004000","","/**
 * {@link PackageInfo} flag: return information about
 * hardware preferences in
 * {@link PackageInfo#configPreferences PackageInfo.configPreferences} and
 * requested features in {@link PackageInfo#reqFeatures
 * PackageInfo.reqFeatures}.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_REPLACE_EXISTING","true","false","false","true","true","int","0x00000002","","/**
 * Flag parameter for {@link #installPackage} to indicate that you want to replace an already
 * installed package, if one exists.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_MISSING_SHARED_LIBRARY","true","false","false","true","true","int","-9","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package uses a shared library that is not available.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT","true","false","false","true","true","String","""android.hardware.touchscreen.multitouch.distinct""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device's touch screen is capable of
 * tracking two or more fingers fully independently.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.SIGNATURE_MATCH","true","false","false","true","true","int","0","","/**
 * Signature check result: this is returned by {@link #checkSignatures}
 * if the two packages have a matching signature.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_NO_SHARED_USER","true","false","false","true","true","int","-6","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the requested shared user does not exist.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_DISABLED_COMPONENTS","true","false","false","true","true","int","0x00000200","","/**
 * {@link PackageInfo} flag: include disabled components in the returned info.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_ENABLED","true","false","false","true","true","int","1","","","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_REPLACE_COULDNT_DELETE","true","false","false","true","true","int","-10","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package uses a shared library that is not available.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_FAILED_DOESNT_EXIST","true","false","false","true","true","int","-2","","/**
 * Error code that is passed to the {@link IPackageMoveObserver} by
 * {@link #movePackage(android.net.Uri, IPackageMoveObserver)}
 * if the specified package doesn't exist.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_WIFI","true","false","false","true","true","String","""android.hardware.wifi""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device supports WiFi (802.11) networking.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_UNINSTALLED_PACKAGES","true","false","false","true","true","int","0x00002000","","/**
 * Flag parameter to retrieve all applications(even uninstalled ones) with data directories.
 * This state could have resulted if applications have been deleted with flag
 * DONT_DELETE_DATA
 * with a possibility of being replaced or reinstalled in future
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.PERMISSION_GRANTED","true","false","false","true","true","int","0","","/**
 * Permission check result: this is returned by {@link #checkPermission}
 * if the permission has been granted to the given package.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_INVALID_APK","true","false","false","true","true","int","-2","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if the package archive
 * file is invalid.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_ALREADY_EXISTS","true","false","false","true","true","int","-1","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if the package is
 * already installed.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_INTERNAL","true","false","false","true","true","int","0x00000001","","/**
 * Flag parameter for {@link #movePackage} to indicate that
 * the package should be moved to internal storage if its
 * been installed on external media.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION","true","false","false","true","true","int","-102","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser encountered an unexpected exception.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED","true","false","false","true","true","int","2","","","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_MEDIA_UNAVAILABLE","true","false","false","true","true","int","-20","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package couldn't be installed in the specified install
 * location because the media is not available.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.PERMISSION_DENIED","true","false","false","true","true","int","-1","","/**
 * Permission check result: this is returned by {@link #checkPermission}
 * if the permission has not been granted to the given package.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_CAMERA_AUTOFOCUS","true","false","false","true","true","String","""android.hardware.camera.autofocus""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device's camera supports auto-focus.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING","true","false","false","true","true","int","-105","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser encountered a CertificateEncodingException in one of the
 * files in the .apk.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_MISSING_FEATURE","true","false","false","true","true","int","-17","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package uses a feature that is not available.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_ACTIVITIES","true","false","false","true","true","int","0x00000001","","/**
 * {@link PackageInfo} flag: return information about
 * activities in the package in {@link PackageInfo#activities}.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_PERMISSIONS","true","false","false","true","true","int","0x00001000","","/**
 * {@link PackageInfo} flag: return information about
 * permissions in the package in
 * {@link PackageInfo#permissions}.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.SIGNATURE_FIRST_NOT_SIGNED","true","false","false","true","true","int","-1","","/**
 * Signature check result: this is returned by {@link #checkSignatures}
 * if the first package is not signed, but the second is.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_CPU_ABI_INCOMPATIBLE","true","false","false","true","true","int","-16","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the package being installed contains native code, but none that is
 * compatible with the the device's CPU_ABI.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_CONTAINER_ERROR","true","false","false","true","true","int","-18","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * a secure container mount point couldn't be accessed on external media.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.DONT_KILL_APP","true","false","false","true","true","int","0x00000001","","/**
 * Flag parameter for
 * {@link #setComponentEnabledSetting(android.content.ComponentName, int, int)} to indicate
 * that you don't want to kill the app containing the component.  Be careful when you set this
 * since changing component states can make the containing application's behavior unpredictable.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_TELEPHONY_GSM","true","false","false","true","true","String","""android.hardware.telephony.gsm""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device has a GSM telephony stack.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_SIGNATURES","true","false","false","true","true","int","0x00000040","","/**
 * {@link PackageInfo} flag: return information about the
 * signatures included in the package.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_DUPLICATE_PACKAGE","true","false","false","true","true","int","-5","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if a
 * package is already installed with the same name.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_TELEPHONY","true","false","false","true","true","String","""android.hardware.telephony""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device has a telephony radio with data
 * communication support.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_FAILED_SYSTEM_PACKAGE","true","false","false","true","true","int","-3","","/**
 * Error code that is passed to the {@link IPackageMoveObserver} by
 * {@link #movePackage(android.net.Uri, IPackageMoveObserver)}
 * if the specified package cannot be moved since its a system package.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_CAMERA","true","false","false","true","true","String","""android.hardware.camera""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device has a camera facing away
 * from the screen.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_FAILED_INVALID_LOCATION","true","false","false","true","true","int","-5","","/**
 * Error code that is passed to the {@link IPackageMoveObserver} by
 * {@link #movePackage(android.net.Uri, IPackageMoveObserver)}
 * if the specified package cannot be moved to the specified location.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_SUCCEEDED","true","false","false","true","true","int","1","","/**
 * Return code that is passed to the {@link IPackageMoveObserver} by
 * {@link #movePackage(android.net.Uri, IPackageMoveObserver)}
 * when the package has been successfully moved by the system.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES","true","false","false","true","true","int","-104","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser found inconsistent certificates on the files in the .apk.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID","true","false","false","true","true","int","-107","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser encountered a bad shared user id name in the manifest.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_SENSOR_PROXIMITY","true","false","false","true","true","String","""android.hardware.sensor.proximity""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device includes a proximity sensor.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_SHARED_USER_INCOMPATIBLE","true","false","false","true","true","int","-8","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package is requested a shared user which is already installed on the
 * device and does not have matching signature.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FORWARD_LOCK","true","false","false","true","true","int","0x00000001","","/**
 * Flag parameter for {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} to
 * indicate that this package should be installed as forward locked, i.e. only the app itself
 * should have access to its code and non-resource assets.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_TELEPHONY_CDMA","true","false","false","true","true","String","""android.hardware.telephony.cdma""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device has a CDMA telephony stack.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_NO_CERTIFICATES","true","false","false","true","true","int","-103","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser did not find any certificates in the .apk.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_LOCATION_GPS","true","false","false","true","true","String","""android.hardware.location.gps""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device has a Global Positioning System
 * receiver and can report precise location.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_FAILED_INTERNAL_ERROR","true","false","false","true","true","int","-6","","/**
 * Error code that is passed to the {@link IPackageMoveObserver} by
 * {@link #movePackage(android.net.Uri, IPackageMoveObserver)}
 * if the specified package cannot be moved to the specified location.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_TEST_ONLY","true","false","false","true","true","int","-15","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package failed because it has specified that it is a test-only
 * package and the caller has not supplied the {@link #INSTALL_ALLOW_TEST}
 * flag.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_NEWER_SDK","true","false","false","true","true","int","-14","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package failed because the current SDK version is newer than
 * that required by the package.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_PROVIDERS","true","false","false","true","true","int","0x00000008","","/**
 * {@link PackageInfo} flag: return information about
 * content providers in the package in
 * {@link PackageInfo#providers}.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_EXTERNAL","true","false","false","true","true","int","0x00000008","","/**
 * Flag parameter for {@link #installPackage} to indicate that this
 * package has to be installed on the sdcard.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.SIGNATURE_NO_MATCH","true","false","false","true","true","int","-3","","/**
 * Signature check result: this is returned by {@link #checkSignatures}
 * if both packages are signed but there is no matching signature.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_BLUETOOTH","true","false","false","true","true","String","""android.hardware.bluetooth""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device is capable of communicating with
 * other devices via Bluetooth.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_INTERNAL_ERROR","true","false","false","true","true","int","-110","","/**
 * Installation failed return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the system failed to install the package because of system issues.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_INSUFFICIENT_STORAGE","true","false","false","true","true","int","-4","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if the package manager
 * service found that the device didn't have enough storage space to install the app.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_SENSOR_ACCELEROMETER","true","false","false","true","true","String","""android.hardware.sensor.accelerometer""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device includes an accelerometer.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_INVALID_URI","true","false","false","true","true","int","-3","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if the URI passed in
 * is invalid.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_LOCATION_NETWORK","true","false","false","true","true","String","""android.hardware.location.network""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device can report location with coarse
 * accuracy using a network-based geolocation system.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_MANIFEST_EMPTY","true","false","false","true","true","int","-109","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser did not find any actionable tags (instrumentation or application)
 * in the manifest.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_NOT_APK","true","false","false","true","true","int","-100","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser was given a path that is not a file, or does not end with the expected
 * '.apk' extension.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_SENSOR_COMPASS","true","false","false","true","true","String","""android.hardware.sensor.compass""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device includes a magnetometer (compass).
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_UPDATE_INCOMPATIBLE","true","false","false","true","true","int","-7","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * a previously installed package of the same name has a different signature
 * than the new package (and the old package's data was not removed).
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_URI_PERMISSION_PATTERNS","true","false","false","true","true","int","0x00000800","","/**
 * {@link ProviderInfo} flag: return the
 * {@link ProviderInfo#uriPermissionPatterns URI permission patterns}
 * that are associated with a content provider.
 * This applies for any API returning an ProviderInfo class, either
 * directly or nested inside of another.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_DEXOPT","true","false","false","true","true","int","-11","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package failed while optimizing and validating its dex files,
 * either because there was not enough storage or the validation failed.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_INTERNAL","true","false","false","true","true","int","0x00000010","","/**
 * Flag parameter for {@link #installPackage} to indicate that this
 * package has to be installed on the sdcard.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_RECEIVERS","true","false","false","true","true","int","0x00000002","","/**
 * {@link PackageInfo} flag: return information about
 * intent receivers in the package in
 * {@link PackageInfo#receivers}.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_ALLOW_TEST","true","false","false","true","true","int","0x00000004","","/**
 * Flag parameter for {@link #installPackage} to indicate that you want to
 * allow test packages (those that have set android:testOnly in their
 * manifest) to be installed.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_CAMERA_FLASH","true","false","false","true","true","String","""android.hardware.camera.flash""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device's camera supports flash.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.DONT_DELETE_DATA","true","false","false","true","true","int","0x00000001","","/**
 * Flag parameter for {@link #deletePackage} to indicate that you don't want to delete the
 * package's data directory.
 *
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.ACTION_CLEAN_EXTERNAL_STORAGE","true","false","false","true","true","String","""android.content.pm.CLEAN_EXTERNAL_STORAGE""","","/**
 * Action to external storage service to clean out removed apps.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_LIVE_WALLPAPER","true","false","false","true","true","String","""android.software.live_wallpaper""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device supports live wallpapers.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.SIGNATURE_SECOND_NOT_SIGNED","true","false","false","true","true","int","-2","","/**
 * Signature check result: this is returned by {@link #checkSignatures}
 * if the second package is not signed, but the first is.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_TOUCHSCREEN_MULTITOUCH","true","false","false","true","true","String","""android.hardware.touchscreen.multitouch""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device's touch screen supports
 * multitouch sufficient for basic two-finger gesture detection.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_INSTRUMENTATION","true","false","false","true","true","int","0x00000010","","/**
 * {@link PackageInfo} flag: return information about
 * instrumentation in the package in
 * {@link PackageInfo#instrumentation}.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_FAILED_OLDER_SDK","true","false","false","true","true","int","-12","","/**
 * Installation return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if
 * the new package failed because the current SDK version is older than
 * that required by the package.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_INTENT_FILTERS","true","false","false","true","true","int","0x00000020","","/**
 * {@link PackageInfo} flag: return information about the
 * intent filters supported by the activity.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.SIGNATURE_NEITHER_SIGNED","true","false","false","true","true","int","1","","/**
 * Signature check result: this is returned by {@link #checkSignatures}
 * if neither of the two packages is signed.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_BAD_MANIFEST","true","false","false","true","true","int","-101","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser was unable to retrieve the AndroidManifest.xml file.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.SIGNATURE_UNKNOWN_PACKAGE","true","false","false","true","true","int","-4","","/**
 * Signature check result: this is returned by {@link #checkSignatures}
 * if either of the given package names are not valid.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_SHARED_LIBRARY_FILES","true","false","false","true","true","int","0x00000400","","/**
 * {@link ApplicationInfo} flag: return the
 * {@link ApplicationInfo#sharedLibraryFiles paths to the shared libraries}
 * that are associated with an application.
 * This applies for any API returning an ApplicationInfo class, either
 * directly or nested inside of another.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_RESOLVED_FILTER","true","false","false","true","true","int","0x00000040","","/**
 * {@link ResolveInfo} flag: return the IntentFilter that
 * was matched for a particular ResolveInfo in
 * {@link ResolveInfo#filter}.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.INSTALL_PARSE_FAILED_MANIFEST_MALFORMED","true","false","false","true","true","int","-108","","/**
 * Installation parse return code: this is passed to the {@link IPackageInstallObserver} by
 * {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)}
 * if the parser encountered some structural problem in the manifest.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.MOVE_FAILED_INSUFFICIENT_STORAGE","true","false","false","true","true","int","-1","","/**
 * Error code that is passed to the {@link IPackageMoveObserver} by
 * {@link #movePackage(android.net.Uri, IPackageMoveObserver)}
 * when the package hasn't been successfully moved by the system
 * because of insufficient memory on specified media.
 * @hide
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.GET_SERVICES","true","false","false","true","true","int","0x00000004","","/**
 * {@link PackageInfo} flag: return information about
 * services in the package in {@link PackageInfo#services}.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_MICROPHONE","true","false","false","true","true","String","""android.hardware.microphone""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device can record audio via a
 * microphone.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.FEATURE_LOCATION","true","false","false","true","true","String","""android.hardware.location""","@SdkConstant(SdkConstantType.FEATURE)","/**
 * Feature for {@link #getSystemAvailableFeatures} and
 * {@link #hasSystemFeature}: The device supports one or more methods of
 * reporting current location.
 */
","\android\content\pm\PackageManager.java"
"android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT","true","false","false","true","true","int","0","","","\android\content\pm\PackageManager.java"
"android.util.SynchronizedPool.mLock","false","false","true","false","true","Object","","","","\android\util\SynchronizedPool.java"
"android.util.SynchronizedPool.mPool","false","false","true","false","true","Pool<T>","","","","\android\util\SynchronizedPool.java"
"android.app.ApplicationThreadProxy.mRemote","false","false","true","false","true","IBinder","","","","\android\app\ApplicationThreadNative.java"
"android.webkit.SslErrorHandler.mLoaderQueue","false","false","true","false","false","LinkedList<LoadListener>","","","/**
 * Queue of loaders that experience SSL-related problems.
 */
","\android\webkit\SslErrorHandler.java"
"android.webkit.SslErrorHandler.mSslPrefTable","false","false","true","false","false","Bundle","","","/**
 * SSL error preference table.
 */
","\android\webkit\SslErrorHandler.java"
"android.webkit.SslErrorHandler.LOGTAG","false","false","true","true","true","String","""network""","","","\android\webkit\SslErrorHandler.java"
"android.webkit.SslErrorHandler.HANDLE_RESPONSE","false","false","true","true","true","int","100","","// Message id for handling the response
","\android\webkit\SslErrorHandler.java"
"android.webkit.SslErrorHandler.mLoadListener","false","false","true","false","true","LoadListener","","","","\android\webkit\SslErrorHandler.java"
"android.webkit.SslErrorHandler.mOriginHandler","false","false","true","false","true","SslErrorHandler","","","// These are only used in the client facing SslErrorHandler.
","\android\webkit\SslErrorHandler.java"
"android.content.res.Resources.sSdkVersion","false","false","true","true","true","int","Build.VERSION.SDK_INT + (""REL"".equals(Build.VERSION.CODENAME) ? 0 : 1)","","// also allow the previous SDK version + 1.
","\android\content\res\Resources.java"
"android.content.res.Resources.mPreloadedColorStateLists","false","false","true","true","true","SparseArray<ColorStateList>","new SparseArray<ColorStateList>()","","","\android\content\res\Resources.java"
"android.content.res.Resources.mSystem","false","false","true","true","false","Resources","null","","","\android\content\res\Resources.java"
"android.content.res.Resources.EMPTY_ARRAY","false","false","true","true","true","LongSparseArray<Object>","new LongSparseArray<Object>() {

    @Override
    public void put(long k, Object o) {
        throw new UnsupportedOperationException();
    }

    @Override
    public void append(long k, Object o) {
        throw new UnsupportedOperationException();
    }
}","","","\android\content\res\Resources.java"
"android.content.res.Resources.mPluralRule","false","false","false","false","false","PluralRules","","","","\android\content\res\Resources.java"
"android.content.res.Resources.sPreloadedDrawables","false","false","true","true","true","LongSparseArray<Drawable.ConstantState>","new LongSparseArray<Drawable.ConstantState>()","","// single-threaded, and after that these are immutable.
","\android\content\res\Resources.java"
"android.content.res.Resources.DEBUG_CONFIG","false","false","true","true","true","boolean","false","","","\android\content\res\Resources.java"
"android.content.res.Resources.mDefaultDisplay","false","false","true","false","false","Display","","","","\android\content\res\Resources.java"
"android.content.res.Resources.mAssets","false","false","true","false","true","AssetManager","","","","\android\content\res\Resources.java"
"android.content.res.Resources.mPreloaded","false","false","true","true","false","boolean","","","","\android\content\res\Resources.java"
"android.content.res.Resources.mLastCachedXmlBlockIndex","false","false","true","false","false","int","-1","","","\android\content\res\Resources.java"
"android.content.res.Resources.mTmpValue","false","false","false","false","true","TypedValue","new TypedValue()","","/*package*/
","\android\content\res\Resources.java"
"android.content.res.Resources.mCachedXmlBlocks","false","false","true","false","true","XmlBlock","new XmlBlock[4]","","","\android\content\res\Resources.java"
"android.content.res.Resources.DEBUG_LOAD","false","false","true","true","true","boolean","false","","","\android\content\res\Resources.java"
"android.content.res.Resources.mDrawableCache","false","false","true","false","true","LongSparseArray<WeakReference<Drawable.ConstantState>>","new LongSparseArray<WeakReference<Drawable.ConstantState>>()","","// These are protected by the mTmpValue lock.
","\android\content\res\Resources.java"
"android.content.res.Resources.mCachedXmlBlockIds","false","false","true","false","true","int","{ 0, 0, 0, 0 }","","","\android\content\res\Resources.java"
"android.content.res.Resources.TRACE_FOR_PRELOAD","false","false","true","true","true","boolean","false","","","\android\content\res\Resources.java"
"android.content.res.Theme.mTheme","false","false","true","false","true","int","","","","\android\content\res\Resources.java"
"android.content.res.Theme.mAssets","false","false","true","false","true","AssetManager","","","","\android\content\res\Resources.java"
"android.content.res.Resources.TAG","false","false","false","true","true","String","""Resources""","","","\android\content\res\Resources.java"
"android.content.res.Resources.mColorStateListCache","false","false","true","false","true","SparseArray<WeakReference<ColorStateList>>","new SparseArray<WeakReference<ColorStateList>>()","","","\android\content\res\Resources.java"
"android.content.res.Resources.mPreloading","false","false","true","false","false","boolean","","","","\android\content\res\Resources.java"
"android.content.res.Resources.mSync","false","false","true","true","true","Object","new Object()","","","\android\content\res\Resources.java"
"android.content.res.Resources.mTheme","false","false","true","false","true","int","","","","\android\content\res\Resources.java"
"android.content.res.Resources.mCompatibilityInfo","false","false","true","false","false","CompatibilityInfo","","","","\android\content\res\Resources.java"
"android.content.res.Resources.mMetrics","false","false","false","false","true","DisplayMetrics","new DisplayMetrics()","","/*package*/
","\android\content\res\Resources.java"
"android.content.res.Resources.mConfiguration","false","false","true","false","true","Configuration","new Configuration()","","","\android\content\res\Resources.java"
"android.content.res.Resources.mCachedStyledAttributes","false","false","false","false","false","TypedArray","null","","/*package*/
","\android\content\res\Resources.java"
"android.server.search.Searchables.mGlobalSearchActivity","false","false","true","false","false","ComponentName","null","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.LOG_TAG","false","false","true","true","true","String","""Searchables""","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.mSearchablesList","false","false","true","false","false","ArrayList<SearchableInfo>","null","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.GOOGLE_SEARCH_COMPONENT_NAME","true","false","false","true","false","String","""com.android.googlesearch/.GoogleSearch""","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.mSearchablesMap","false","false","true","false","false","HashMap<ComponentName,SearchableInfo>","null","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.mSearchablesInGlobalSearchList","false","false","true","false","false","ArrayList<SearchableInfo>","null","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.MD_LABEL_DEFAULT_SEARCHABLE","false","false","true","true","true","String","""android.app.default_searchable""","","// the current long wordy javadoc in SearchManager.java ?
","\android\server\search\Searchables.java"
"android.server.search.Searchables.mWebSearchActivity","false","false","true","false","false","ComponentName","null","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.ENHANCED_GOOGLE_SEARCH_COMPONENT_NAME","true","false","false","true","false","String","""com.google.android.providers.enhancedgooglesearch/.Launcher""","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.MD_SEARCHABLE_SYSTEM_SEARCH","false","false","true","true","true","String","""*""","","","\android\server\search\Searchables.java"
"android.server.search.Searchables.mContext","false","false","true","false","false","Context","","","","\android\server\search\Searchables.java"
"android.view.ViewStub.mLayoutResource","false","false","true","false","false","int","0","","","\android\view\ViewStub.java"
"android.view.ViewStub.mInflatedViewRef","false","false","true","false","false","WeakReference<View>","","","","\android\view\ViewStub.java"
"android.view.ViewStub.mInflateListener","false","false","true","false","false","OnInflateListener","","","","\android\view\ViewStub.java"
"android.view.ViewStub.mInflatedId","false","false","true","false","false","int","","","","\android\view\ViewStub.java"
"android.database.sqlite.DatabaseObjectNotClosedException.s","false","false","true","true","true","String","""Application did not close the cursor or database object "" + ""that was opened here""","","","\android\database\sqlite\DatabaseObjectNotClosedException.java"
"android.text.style.ForegroundColorSpan.mColor","false","false","true","false","true","int","","","","\android\text\style\ForegroundColorSpan.java"
"android.os.Handler.mQueue","false","false","false","false","true","MessageQueue","","","","\android\os\Handler.java"
"android.os.Handler.TAG","false","false","true","true","true","String","""Handler""","","","\android\os\Handler.java"
"android.os.Handler.mCallback","false","false","false","false","true","Callback","","","","\android\os\Handler.java"
"android.os.Handler.mLooper","false","false","false","false","true","Looper","","","","\android\os\Handler.java"
"android.os.Handler.FIND_POTENTIAL_LEAKS","false","false","true","true","true","boolean","false","","/*
     * Set this flag to true to detect anonymous, local or member classes
     * that extend this Handler class and that are not static. These kind
     * of classes can potentially create leaks.
     */
","\android\os\Handler.java"
"android.os.Handler.mMessenger","false","false","false","false","false","IMessenger","","","","\android\os\Handler.java"
"com.android.internal.backup.BackupConstants.TRANSPORT_NOT_INITIALIZED","true","false","false","true","true","int","2","","","\com\android\internal\backup\BackupConstants.java"
"com.android.internal.backup.BackupConstants.TRANSPORT_OK","true","false","false","true","true","int","0","","","\com\android\internal\backup\BackupConstants.java"
"com.android.internal.backup.BackupConstants.TRANSPORT_ERROR","true","false","false","true","true","int","1","","","\com\android\internal\backup\BackupConstants.java"
"android.view.inputmethod.InputConnectionWrapper.mTarget","false","false","true","false","false","InputConnection","","","","\android\view\inputmethod\InputConnectionWrapper.java"
"android.view.inputmethod.InputConnectionWrapper.mMutable","false","false","false","false","true","boolean","","","","\android\view\inputmethod\InputConnectionWrapper.java"
"android.appwidget.AppWidgetHost.mContext","false","false","false","false","false","Context","","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.mPackageName","false","false","false","false","false","String","","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.sService","false","false","false","true","false","IAppWidgetService","","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.mViews","false","false","false","false","true","HashMap<Integer,AppWidgetHostView>","new HashMap<Integer, AppWidgetHostView>()","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.mHandler","false","false","false","false","false","Handler","","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.mCallbacks","false","false","false","false","false","Callbacks","new Callbacks()","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.HANDLE_PROVIDER_CHANGED","false","false","false","true","true","int","2","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.sServiceLock","false","false","false","true","true","Object","new Object()","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.HANDLE_UPDATE","false","false","false","true","true","int","1","","","\android\appwidget\AppWidgetHost.java"
"android.appwidget.AppWidgetHost.mHostId","false","false","false","false","false","int","","","","\android\appwidget\AppWidgetHost.java"
"android.app.backup.SharedPreferencesBackupHelper.mContext","false","false","true","false","false","Context","","","","\android\app\backup\SharedPreferencesBackupHelper.java"
"android.app.backup.SharedPreferencesBackupHelper.TAG","false","false","true","true","true","String","""SharedPreferencesBackupHelper""","","","\android\app\backup\SharedPreferencesBackupHelper.java"
"android.app.backup.SharedPreferencesBackupHelper.mPrefGroups","false","false","true","false","false","String","","","","\android\app\backup\SharedPreferencesBackupHelper.java"
"android.app.backup.SharedPreferencesBackupHelper.DEBUG","false","false","true","true","true","boolean","false","","","\android\app\backup\SharedPreferencesBackupHelper.java"
"android.view.RecyclerTrace.indexOnScreen","true","false","false","false","false","int","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sHierarhcyRoot","false","false","true","true","false","ViewRoot","","","","\android\view\ViewDebug.java"
"android.view.RecyclerTrace.view","true","false","false","false","false","int","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.SYSTEM_PROPERTY_CAPTURE_VIEW","false","false","false","true","true","String","""debug.captureview""","","/**
 * The system property of dynamic switch for capturing view information
 * when it is set, we dump interested fields and methods for the view on focus
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.REMOTE_COMMAND_CAPTURE_LAYERS","false","false","true","true","true","String","""CAPTURE_LAYERS""","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.CONSISTENCY_DRAWING","true","false","false","true","true","int","0x2","","/**
 * Flag indicating the consistency check should check drawing-related properties.
 *
 * @hide
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.type","true","false","false","false","false","RecyclerTraceType","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.REMOTE_COMMAND_INVALIDATE","false","false","true","true","true","String","""INVALIDATE""","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.TRACE_HIERARCHY","true","false","false","true","true","boolean","false","","/**
 * Enables or disables view hierarchy tracing. Any invoker of
 * {@link #trace(View, android.view.ViewDebug.HierarchyTraceType)} should first
 * check that this value is set to true as not to affect performance.
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.sMotionEventRoot","false","false","true","true","false","ViewRoot","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sMotionEventTraces","false","false","true","true","false","BufferedWriter","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.position","true","false","false","false","false","int","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.profileDrawing","true","false","false","true","false","boolean","false","@Debug.DebugProperty","/**
 * Profiles drawing times in the events log.
 *
 * @hide
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.REMOTE_COMMAND_DUMP","false","false","true","true","true","String","""DUMP""","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.SYSTEM_PROPERTY_CAPTURE_EVENT","false","false","false","true","true","String","""debug.captureevent""","","/**
 * The system property of dynamic switch for capturing event information
 * when it is set, we log key events, touch/motion and trackball events
 */
","\android\view\ViewDebug.java"
"android.view.RecyclerTrace.type","true","false","false","false","false","RecyclerTraceType","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sHierarchyTracePrefix","false","false","true","true","false","String","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.CONSISTENCY_LAYOUT","true","false","false","true","true","int","0x1","","/**
 * Flag indicating the consistency check should check layout-related properties.
 *
 * @hide
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.REMOTE_PROFILE","false","false","true","true","true","String","""PROFILE""","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.CONSISTENCY_LOG_TAG","true","false","false","true","true","String","""ViewConsistency""","","/**
 * Log tag used to log errors related to the consistency of the view hierarchy.
 *
 * @hide
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.showFps","true","false","false","true","false","boolean","false","@Debug.DebugProperty","/**
 * Profiles real fps (times between draws) and displays the result.
 *
 * @hide
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.sFieldsForClasses","false","false","true","true","false","HashMap<Class<?>,Field[]>","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.view","true","false","false","false","false","int","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sMotionEventTracePrefix","false","false","true","true","false","String","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sRecyclerTraces","false","false","true","true","false","List<RecyclerTrace>","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.indexOnScreen","true","false","false","false","false","int","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.REMOTE_COMMAND_REQUEST_LAYOUT","false","false","true","true","true","String","""REQUEST_LAYOUT""","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.TRACE_RECYCLER","true","false","false","true","true","boolean","false","","/**
 * Enables or disables view recycler tracing. Any invoker of
 * {@link #trace(View, android.view.ViewDebug.RecyclerTraceType, int[])} should first
 * check that this value is set to true as not to affect performance.
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.mCapturedViewMethodsForClasses","false","false","true","true","false","HashMap<Class<?>,Method[]>","null","","","\android\view\ViewDebug.java"
"android.view.RecyclerTrace.position","true","false","false","false","false","int","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.consistencyCheckEnabled","true","false","false","true","false","boolean","false","@Debug.DebugProperty","/**
 * <p>Enables or disables views consistency check. Even when this property is enabled,
 * view consistency checks happen only if {@link android.util.Config#DEBUG} is set
 * to true. The value of this property can be configured externally in one of the
 * following files:</p>
 * <ul>
 * <li>/system/debug.prop</li>
 * <li>/debug.prop</li>
 * <li>/data/debug.prop</li>
 * </ul>
 * @hide
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.mCapturedViewFieldsForClasses","false","false","true","true","false","HashMap<Class<?>,Field[]>","null","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sRecyclerTracePrefix","false","false","true","true","false","String","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sAnnotations","false","false","true","true","false","HashMap<AccessibleObject,ExportedProperty>","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.TRACE_MOTION_EVENTS","true","false","false","true","true","boolean","false","","/**
 * Enables or disables motion events tracing. Any invoker of
 * {@link #trace(View, MotionEvent, MotionEventTraceType)} should first check
 * that this value is set to true as not to affect performance.
 *
 * @hide
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.REMOTE_COMMAND_CAPTURE","false","false","true","true","true","String","""CAPTURE""","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sHierarchyTraces","false","false","true","true","false","BufferedWriter","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.profileLayout","true","false","false","true","false","boolean","false","@Debug.DebugProperty","/**
 * Profiles layout times in the events log.
 *
 * @hide
 */
","\android\view\ViewDebug.java"
"android.view.ViewDebug.sMethodsForClasses","false","false","true","true","false","HashMap<Class<?>,Method[]>","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.sRecyclerViews","false","false","true","true","false","List<View>","","","","\android\view\ViewDebug.java"
"android.view.ViewDebug.CAPTURE_TIMEOUT","false","false","true","true","true","int","4000","","// Maximum delay in ms after which we stop trying to capture a View's drawing
","\android\view\ViewDebug.java"
"android.view.ViewDebug.sRecyclerOwnerView","false","false","true","true","false","View","","","","\android\view\ViewDebug.java"
"android.util.LogPrinter.mPriority","false","false","true","false","true","int","","","","\android\util\LogPrinter.java"
"android.util.LogPrinter.mBuffer","false","false","true","false","true","int","","","","\android\util\LogPrinter.java"
"android.util.LogPrinter.mTag","false","false","true","false","true","String","","","","\android\util\LogPrinter.java"
"android.webkit.ConsoleMessage.mSourceId","false","false","true","false","false","String","","","","\android\webkit\ConsoleMessage.java"
"android.webkit.ConsoleMessage.mLevel","false","false","true","false","false","MessageLevel","","","","\android\webkit\ConsoleMessage.java"
"android.webkit.ConsoleMessage.mMessage","false","false","true","false","false","String","","","","\android\webkit\ConsoleMessage.java"
"android.webkit.ConsoleMessage.mLineNumber","false","false","true","false","false","int","","","","\android\webkit\ConsoleMessage.java"
"android.app.backup.RestoreSession.mHandler","false","false","false","false","true","Handler","","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.mObserver","false","false","false","false","false","RestoreObserverWrapper","null","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.MSG_RESTORE_FINISHED","false","false","false","true","true","int","3","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreObserverWrapper.MSG_RESTORE_FINISHED","false","false","false","true","true","int","3","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.mAppObserver","false","false","false","false","true","RestoreObserver","","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.TAG","false","false","false","true","true","String","""RestoreSession""","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreObserverWrapper.MSG_RESTORE_SETS_AVAILABLE","false","false","false","true","true","int","4","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.mBinder","false","false","false","false","false","IRestoreSession","","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.mContext","false","false","false","false","true","Context","","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreObserverWrapper.mAppObserver","false","false","false","false","true","RestoreObserver","","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.MSG_RESTORE_SETS_AVAILABLE","false","false","false","true","true","int","4","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.MSG_UPDATE","false","false","false","true","true","int","2","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreObserverWrapper.MSG_UPDATE","false","false","false","true","true","int","2","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreObserverWrapper.MSG_RESTORE_STARTING","false","false","false","true","true","int","1","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreObserverWrapper.mHandler","false","false","false","false","true","Handler","","","","\android\app\backup\RestoreSession.java"
"android.app.backup.RestoreSession.MSG_RESTORE_STARTING","false","false","false","true","true","int","1","","","\android\app\backup\RestoreSession.java"
"android.content.Builder.mSelection","false","false","true","false","false","String","","","","\android\content\ContentProviderOperation.java"
"android.content.Builder.mSelectionArgsBackReferences","false","false","true","false","false","Map<Integer,Integer>","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mSelectionArgs","false","false","true","false","false","String","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mType","false","false","true","false","true","int","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.TAG","false","false","true","true","true","String","""ContentProviderOperation""","","","\android\content\ContentProviderOperation.java"
"android.content.Builder.mValues","false","false","true","false","false","ContentValues","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.TYPE_INSERT","true","false","false","true","true","int","1","","/**
 * @hide exposed for unit tests
 */
","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.TYPE_ASSERT","true","false","false","true","true","int","4","","/**
 * @hide exposed for unit tests
 */
","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mSelectionArgsBackReferences","false","false","true","false","false","Map<Integer,Integer>","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mValues","false","false","true","false","false","ContentValues","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mSelection","false","false","true","false","false","String","","","","\android\content\ContentProviderOperation.java"
"android.content.Builder.mSelectionArgs","false","false","true","false","false","String","","","","\android\content\ContentProviderOperation.java"
"android.content.Builder.mUri","false","false","true","false","true","Uri","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mExpectedCount","false","false","true","false","false","Integer","","","","\android\content\ContentProviderOperation.java"
"android.content.Builder.mExpectedCount","false","false","true","false","false","Integer","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mValuesBackReferences","false","false","true","false","false","ContentValues","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.TYPE_UPDATE","true","false","false","true","true","int","2","","/**
 * @hide exposed for unit tests
 */
","\android\content\ContentProviderOperation.java"
"android.content.Builder.mYieldAllowed","false","false","true","false","false","boolean","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mUri","false","false","true","false","true","Uri","","","","\android\content\ContentProviderOperation.java"
"android.content.Builder.mType","false","false","true","false","true","int","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.mYieldAllowed","false","false","true","false","false","boolean","","","","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.TYPE_DELETE","true","false","false","true","true","int","3","","/**
 * @hide exposed for unit tests
 */
","\android\content\ContentProviderOperation.java"
"android.content.ContentProviderOperation.CREATOR","true","false","false","true","true","Creator<ContentProviderOperation>","new Creator<ContentProviderOperation>() {

    public ContentProviderOperation createFromParcel(Parcel source) {
        return new ContentProviderOperation(source);
    }

    public ContentProviderOperation[] newArray(int size) {
        return new ContentProviderOperation[size];
    }
}","","","\android\content\ContentProviderOperation.java"
"android.content.Builder.mValuesBackReferences","false","false","true","false","false","ContentValues","","","","\android\content\ContentProviderOperation.java"
"android.net.http.CharArrayBuffers.uppercaseAddon","false","false","false","true","true","char","'a' - 'A'","","","\android\net\http\CharArrayBuffers.java"
"android.text.method.DigitsKeyListener.CHARACTERS","false","false","true","true","true","char","new char[][] { new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' }, new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-' }, new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.' }, new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '.' } }","","/**
 * The characters that are used.
 *
 * @see KeyEvent#getMatch
 * @see #getAcceptedChars
 */
","\android\text\method\DigitsKeyListener.java"
"android.text.method.DigitsKeyListener.mAccepted","false","false","true","false","false","char","","","","\android\text\method\DigitsKeyListener.java"
"android.text.method.DigitsKeyListener.mDecimal","false","false","true","false","false","boolean","","","","\android\text\method\DigitsKeyListener.java"
"android.text.method.DigitsKeyListener.DECIMAL","false","false","true","true","true","int","2","","","\android\text\method\DigitsKeyListener.java"
"android.text.method.DigitsKeyListener.SIGN","false","false","true","true","true","int","1","","","\android\text\method\DigitsKeyListener.java"
"android.text.method.DigitsKeyListener.sInstance","false","false","true","true","false","DigitsKeyListener","new DigitsKeyListener[4]","","","\android\text\method\DigitsKeyListener.java"
"android.text.method.DigitsKeyListener.mSign","false","false","true","false","false","boolean","","","","\android\text\method\DigitsKeyListener.java"
"android.ddm.DdmHandleNativeHeap.mInstance","false","false","true","true","false","DdmHandleNativeHeap","new DdmHandleNativeHeap()","","","\android\ddm\DdmHandleNativeHeap.java"
"android.ddm.DdmHandleNativeHeap.CHUNK_NHGT","true","false","false","true","true","int","type(""NHGT"")","","","\android\ddm\DdmHandleNativeHeap.java"
"android.os.Looper.mThread","false","false","false","false","false","Thread","","","","\android\os\Looper.java"
"android.os.Looper.mRun","false","false","false","false","false","boolean","","","","\android\os\Looper.java"
"android.os.Looper.DEBUG","false","false","true","true","true","boolean","false","","","\android\os\Looper.java"
"android.os.Looper.mLogging","false","false","true","false","false","Printer","null","","","\android\os\Looper.java"
"android.os.Looper.sThreadLocal","false","false","true","true","true","ThreadLocal","new ThreadLocal()","","// sThreadLocal.get() will return null unless you've called prepare().
","\android\os\Looper.java"
"android.os.Looper.localLOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\android\os\Looper.java"
"android.os.Looper.mQueue","false","false","false","false","true","MessageQueue","","","","\android\os\Looper.java"
"android.os.Looper.mMainLooper","false","false","true","true","false","Looper","null","","","\android\os\Looper.java"
"android.content.pm.PackageInfoLite.CREATOR","true","false","false","true","true","Parcelable.Creator<PackageInfoLite>","new Parcelable.Creator<PackageInfoLite>() {

    public PackageInfoLite createFromParcel(Parcel source) {
        return new PackageInfoLite(source);
    }

    public PackageInfoLite[] newArray(int size) {
        return new PackageInfoLite[size];
    }
}","","","\android\content\pm\PackageInfoLite.java"
"android.content.pm.PackageInfoLite.installLocation","true","false","false","false","false","int","","","","\android\content\pm\PackageInfoLite.java"
"android.content.pm.PackageInfoLite.recommendedInstallLocation","true","false","false","false","false","int","","","/**
 * Specifies the recommended install location. Can be one of
 * {@link #PackageHelper.RECOMMEND_INSTALL_INTERNAL} to install on internal storage
 * {@link #PackageHelper.RECOMMEND_INSTALL_EXTERNAL} to install on external media
 * {@link PackageHelper.RECOMMEND_FAILED_INSUFFICIENT_STORAGE} for storage errors
 * {@link PackageHelper.RECOMMEND_FAILED_INVALID_APK} for parse errors.
 */
","\android\content\pm\PackageInfoLite.java"
"android.content.pm.PackageInfoLite.packageName","true","false","false","false","false","String","","","/**
 * The name of this package.  From the &lt;manifest&gt; tag's ""name""
 * attribute.
 */
","\android\content\pm\PackageInfoLite.java"
"android.content.SyncAdapterType.isKey","true","false","false","false","true","boolean","","","","\android\content\SyncAdapterType.java"
"android.content.SyncAdapterType.supportsUploading","false","false","true","false","true","boolean","","","","\android\content\SyncAdapterType.java"
"android.content.SyncAdapterType.authority","true","false","false","false","true","String","","","","\android\content\SyncAdapterType.java"
"android.content.SyncAdapterType.accountType","true","false","false","false","true","String","","","","\android\content\SyncAdapterType.java"
"android.content.SyncAdapterType.userVisible","false","false","true","false","true","boolean","","","","\android\content\SyncAdapterType.java"
"android.content.SyncAdapterType.CREATOR","true","false","false","true","true","Creator<SyncAdapterType>","new Creator<SyncAdapterType>() {

    public SyncAdapterType createFromParcel(Parcel source) {
        return new SyncAdapterType(source);
    }

    public SyncAdapterType[] newArray(int size) {
        return new SyncAdapterType[size];
    }
}","","","\android\content\SyncAdapterType.java"
"android.net.http.RequestQueue.mTotalConnection","false","false","true","false","false","int","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mTotalRequest","false","false","true","false","false","int","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mProxyHost","false","false","true","false","false","HttpHost","null","","","\android\net\http\RequestQueue.java"
"android.net.http.ActivePool.mIdleCache","false","false","false","false","false","IdleCache","","","","\android\net\http\RequestQueue.java"
"android.net.http.ActivePool.mTotalConnection","false","false","true","false","false","int","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mProxyChangeReceiver","false","false","true","false","false","BroadcastReceiver","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mThreads","false","false","false","false","false","ConnectionThread","","","/**
 * Threads used to process requests
 */
","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mRequest","false","false","true","false","false","Request","","","// requeued into the RequestFeeder.
","\android\net\http\RequestQueue.java"
"android.net.http.ActivePool.mTotalRequest","false","false","true","false","false","int","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mActivePool","false","false","true","false","true","ActivePool","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mPending","false","false","true","false","true","LinkedHashMap<HttpHost,LinkedList<Request>>","","","/**
 * Requests, indexed by HttpHost (scheme, host, port)
 */
","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mConnectivityManager","false","false","true","false","true","ConnectivityManager","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mIdleCache","false","false","false","false","false","IdleCache","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mConnectionCount","false","false","true","false","false","int","","","","\android\net\http\RequestQueue.java"
"android.net.http.ActivePool.mConnectionCount","false","false","true","false","false","int","","","","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.CONNECTION_COUNT","false","false","true","true","true","int","4","","/* default simultaneous connection count */
","\android\net\http\RequestQueue.java"
"android.net.http.ActivePool.mThreads","false","false","false","false","false","ConnectionThread","","","/**
 * Threads used to process requests
 */
","\android\net\http\RequestQueue.java"
"android.net.http.RequestQueue.mContext","false","false","true","false","true","Context","","","","\android\net\http\RequestQueue.java"
"android.net.http.SyncFeeder.mRequest","false","false","true","false","false","Request","","","// requeued into the RequestFeeder.
","\android\net\http\RequestQueue.java"
"android.text.style.MetricAffectingSpan.mStyle","false","false","true","false","false","MetricAffectingSpan","","","","\android\text\style\MetricAffectingSpan.java"
"android.text.style.Passthrough.mStyle","false","false","true","false","false","MetricAffectingSpan","","","","\android\text\style\MetricAffectingSpan.java"
"android.util.StateSet.WILD_CARD","true","false","false","true","true","int","new int[0]","","","\android\util\StateSet.java"
"android.webkit.PluginManager.PLUGIN_TYPE","false","false","true","true","true","String","""type""","","","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.PLUGIN_PERMISSION","true","false","false","true","true","String","""android.webkit.permission.PLUGIN""","","/**
 * A plugin wishes to be loaded in the WebView must provide this permission
 * in their AndroidManifest.xml.
 */
","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.LOGTAG","false","false","true","true","true","String","""webkit""","","","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.TYPE_NATIVE","false","false","true","true","true","String","""native""","","","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.PLUGIN_ACTION","true","false","false","true","true","String","""android.webkit.PLUGIN""","@SdkConstant(SdkConstantType.SERVICE_ACTION)","/**
 * Service Action: A plugin wishes to be loaded in the WebView must provide
 * {@link android.content.IntentFilter IntentFilter} that accepts this
 * action in their AndroidManifest.xml.
 * <p>
 * TODO: we may change this to a new PLUGIN_ACTION if this is going to be
 * public.
 */
","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.mPackageInfoCache","false","false","true","false","false","ArrayList<PackageInfo>","","","","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.SIGNATURE_1","false","false","true","true","true","String","""308204c5308203ada003020102020900d7cb412f75f4887e300d06092a864886f70d010105050030819d310b3009060355040613025553311330110603550408130a43616c69666f726e69613111300f0603550407130853616e204a6f736531233021060355040a131a41646f62652053797374656d7320496e636f72706f7261746564311c301a060355040b1313496e666f726d6174696f6e2053797374656d73312330210603550403131a41646f62652053797374656d7320496e636f72706f7261746564301e170d3039313030313030323331345a170d3337303231363030323331345a30819d310b3009060355040613025553311330110603550408130a43616c69666f726e69613111300f0603550407130853616e204a6f736531233021060355040a131a41646f62652053797374656d7320496e636f72706f7261746564311c301a060355040b1313496e666f726d6174696f6e2053797374656d73312330210603550403131a41646f62652053797374656d7320496e636f72706f726174656430820120300d06092a864886f70d01010105000382010d0030820108028201010099724f3e05bbd78843794f357776e04b340e13cb1c9ccb3044865180d7d8fec8166c5bbd876da8b80aa71eb6ba3d4d3455c9a8de162d24a25c4c1cd04c9523affd06a279fc8f0d018f242486bdbb2dbfbf6fcb21ed567879091928b876f7ccebc7bccef157366ebe74e33ae1d7e9373091adab8327482154afc0693a549522f8c796dd84d16e24bb221f5dbb809ca56dd2b6e799c5fa06b6d9c5c09ada54ea4c5db1523a9794ed22a3889e5e05b29f8ee0a8d61efe07ae28f65dece2ff7edc5b1416d7c7aad7f0d35e8f4a4b964dbf50ae9aa6d620157770d974131b3e7e3abd6d163d65758e2f0822db9c88598b9db6263d963d13942c91fc5efe34fc1e06e3020103a382010630820102301d0603551d0e041604145af418e419a639e1657db960996364a37ef20d403081d20603551d230481ca3081c780145af418e419a639e1657db960996364a37ef20d40a181a3a481a030819d310b3009060355040613025553311330110603550408130a43616c69666f726e69613111300f0603550407130853616e204a6f736531233021060355040a131a41646f62652053797374656d7320496e636f72706f7261746564311c301a060355040b1313496e666f726d6174696f6e2053797374656d73312330210603550403131a41646f62652053797374656d7320496e636f72706f7261746564820900d7cb412f75f4887e300c0603551d13040530030101ff300d06092a864886f70d0101050500038201010076c2a11fe303359689c2ebc7b2c398eff8c3f9ad545cdbac75df63bf7b5395b6988d1842d6aa1556d595b5692e08224d667a4c9c438f05e74906c53dd8016dde7004068866f01846365efd146e9bfaa48c9ecf657f87b97c757da11f225c4a24177bf2d7188e6cce2a70a1e8a841a14471eb51457398b8a0addd8b6c8c1538ca8f1e40b4d8b960009ea22c188d28924813d2c0b4a4d334b7cf05507e1fcf0a06fe946c7ffc435e173af6fc3e3400643710acc806f830a14788291d46f2feed9fb5c70423ca747ed1572d752894ac1f19f93989766308579393fabb43649aa8806a313b1ab9a50922a44c2467b9062037f2da0d484d9ffd8fe628eeea629ba637""","","// inside the WebView process
","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.mInstance","false","false","true","true","false","PluginManager","null","","","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.SIGNATURES","false","false","true","true","true","Signature","new Signature[] { new Signature(SIGNATURE_1) }","","","\android\webkit\PluginManager.java"
"android.webkit.PluginManager.mContext","false","false","true","false","true","Context","","","","\android\webkit\PluginManager.java"
"com.android.internal.util.HexDump.HEX_DIGITS","false","false","true","true","true","char","{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' }","","","\com\android\internal\util\HexDump.java"
"android.gesture.Gesture.BITMAP_RENDERING_ANTIALIAS","false","false","true","true","true","boolean","true","","","\android\gesture\Gesture.java"
"android.gesture.Gesture.sGestureCount","false","false","true","true","true","AtomicInteger","new AtomicInteger(0)","","","\android\gesture\Gesture.java"
"android.gesture.Gesture.mBoundingBox","false","false","true","false","true","RectF","new RectF()","","","\android\gesture\Gesture.java"
"android.gesture.Gesture.BITMAP_RENDERING_DITHER","false","false","true","true","true","boolean","true","","","\android\gesture\Gesture.java"
"android.gesture.Gesture.GESTURE_ID_BASE","false","false","true","true","true","long","System.currentTimeMillis()","","","\android\gesture\Gesture.java"
"android.gesture.Gesture.BITMAP_RENDERING_WIDTH","false","false","true","true","true","int","2","","","\android\gesture\Gesture.java"
"android.gesture.Gesture.mGestureID","false","false","true","false","false","long","","","// the same as its instance ID
","\android\gesture\Gesture.java"
"android.gesture.Gesture.CREATOR","true","false","false","true","true","Parcelable.Creator<Gesture>","new Parcelable.Creator<Gesture>() {

    public Gesture createFromParcel(Parcel in) {
        Gesture gesture = null;
        final long gestureID = in.readLong();
        final DataInputStream inStream = new DataInputStream(new ByteArrayInputStream(in.createByteArray()));
        try {
            gesture = deserialize(inStream);
        } catch (IOException e) {
            Log.e(GestureConstants.LOG_TAG, ""Error reading Gesture from parcel:"", e);
        } finally {
            GestureUtils.closeStream(inStream);
        }
        if (gesture != null) {
            gesture.mGestureID = gestureID;
        }
        return gesture;
    }

    public Gesture[] newArray(int size) {
        return new Gesture[size];
    }
}","","","\android\gesture\Gesture.java"
"android.gesture.Gesture.mStrokes","false","false","true","false","true","ArrayList<GestureStroke>","new ArrayList<GestureStroke>()","","","\android\gesture\Gesture.java"
"android.net.http.HttpsConnection.mProxyHost","false","false","true","false","false","HttpHost","","","// Used when connecting through a proxy.
","\android\net\http\HttpsConnection.java"
"android.net.http.HttpsConnection.mSslSocketFactory","false","false","true","true","false","SSLSocketFactory","null","","/**
 * SSL socket factory
 */
","\android\net\http\HttpsConnection.java"
"android.net.http.HttpsConnection.mAborted","false","false","true","false","false","boolean","false","","/**
 * True if the connection attempt should be aborted due to an ssl
 * error.
 */
","\android\net\http\HttpsConnection.java"
"android.net.http.HttpsConnection.mSuspended","false","false","true","false","false","boolean","false","","/**
 * True if the connection is suspended pending the result of asking the
 * user about an error.
 */
","\android\net\http\HttpsConnection.java"
"android.net.http.HttpsConnection.mSuspendLock","false","false","true","false","false","Object","new Object()","","/**
 * Object to wait on when suspending the SSL connection
 */
","\android\net\http\HttpsConnection.java"
"android.webkit.ContentLoader.mUrl","false","false","true","false","false","String","","","","\android\webkit\ContentLoader.java"
"android.webkit.ContentLoader.mContentType","false","false","true","false","false","String","","","","\android\webkit\ContentLoader.java"
"android.os.MemoryInputStream.mOffset","false","false","true","false","false","int","0","","","\android\os\MemoryFile.java"
"android.os.MemoryFile.PROT_WRITE","false","false","true","true","true","int","0x2","","","\android\os\MemoryFile.java"
"android.os.MemoryFile.mFD","false","false","true","false","false","FileDescriptor","","","// ashmem file descriptor
","\android\os\MemoryFile.java"
"android.os.MemoryFile.mLength","false","false","true","false","false","int","","","// total length of our ashmem region
","\android\os\MemoryFile.java"
"android.os.MemoryInputStream.mMark","false","false","true","false","false","int","0","","","\android\os\MemoryFile.java"
"android.os.MemoryInputStream.mSingleByte","false","false","true","false","false","byte","","","","\android\os\MemoryFile.java"
"android.os.MemoryFile.mOwnsRegion","false","false","true","false","true","boolean","","","// false if this is a ref to an existing ashmem region
","\android\os\MemoryFile.java"
"android.os.MemoryFile.TAG","false","false","true","true","false","String","""MemoryFile""","","","\android\os\MemoryFile.java"
"android.os.MemoryFile.mAddress","false","false","true","false","false","int","","","// address of ashmem memory
","\android\os\MemoryFile.java"
"android.os.MemoryFile.PROT_READ","false","false","true","true","true","int","0x1","","// mmap(2) protection flags from <sys/mman.h>
","\android\os\MemoryFile.java"
"android.os.MemoryFile.mSingleByte","false","false","true","false","false","byte","","","","\android\os\MemoryFile.java"
"android.os.MemoryOutputStream.mOffset","false","false","true","false","false","int","0","","","\android\os\MemoryFile.java"
"android.os.MemoryFile.mAllowPurging","false","false","true","false","false","boolean","false","","// true if our ashmem region is unpinned
","\android\os\MemoryFile.java"
"android.os.MemoryFile.mOffset","false","false","true","false","false","int","0","","","\android\os\MemoryFile.java"
"android.os.MemoryOutputStream.mSingleByte","false","false","true","false","false","byte","","","","\android\os\MemoryFile.java"
"android.os.MemoryFile.mMark","false","false","true","false","false","int","0","","","\android\os\MemoryFile.java"
"android.gesture.Prediction.name","true","false","false","false","true","String","","","","\android\gesture\Prediction.java"
"android.gesture.Prediction.score","true","false","false","false","false","double","","","","\android\gesture\Prediction.java"
"android.widget.ScrollFade.mFadeDuration","false","false","false","false","false","long","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.STATE_DRAGGING","false","false","true","true","true","int","3","","// Scroll thumb being dragged by user
","\android\widget\FastScroller.java"
"android.widget.FastScroller.FADE_DURATION","false","false","false","true","true","long","200","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mListAdapter","false","false","true","false","false","BaseAdapter","","","","\android\widget\FastScroller.java"
"android.widget.ScrollFade.FADE_DURATION","false","false","false","true","true","long","200","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mPaint","false","false","true","false","false","Paint","","","","\android\widget\FastScroller.java"
"android.widget.ScrollFade.mStartTime","false","false","false","false","false","long","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.STATE_ENTER","false","false","true","true","true","int","1","","// Not implemented yet - fade-in transition
","\android\widget\FastScroller.java"
"android.widget.FastScroller.mSections","false","false","true","false","false","Object","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mThumbDrawable","false","false","true","false","false","Drawable","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mState","false","false","true","false","false","int","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.MIN_PAGES","false","false","true","true","false","int","4","","// Minimum number of pages to justify showing a fast scroll thumb
","\android\widget\FastScroller.java"
"android.widget.FastScroller.mOverlaySize","false","false","true","false","false","int","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mScrollFade","false","false","true","false","false","ScrollFade","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mFadeDuration","false","false","false","false","false","long","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mSectionText","false","false","true","false","false","String","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.STATE_VISIBLE","false","false","true","true","true","int","2","","// Scroll thumb visible and moving along with the scrollbar
","\android\widget\FastScroller.java"
"android.widget.FastScroller.mScrollCompleted","false","false","true","false","false","boolean","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mChangedBounds","false","false","true","false","false","boolean","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mLongList","false","false","true","false","false","boolean","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mListOffset","false","false","true","false","false","int","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mOverlayPos","false","false","true","false","false","RectF","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mList","false","false","true","false","false","AbsListView","","","","\android\widget\FastScroller.java"
"android.widget.ScrollFade.ALPHA_MAX","false","false","false","true","true","int","208","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mOverlayDrawable","false","false","true","false","false","Drawable","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.STATE_NONE","false","false","true","true","true","int","0","","// Scroll thumb not showing
","\android\widget\FastScroller.java"
"android.widget.FastScroller.mItemCount","false","false","true","false","false","int","-1","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mStartTime","false","false","false","false","false","long","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.STATE_EXIT","false","false","true","true","true","int","4","","// Scroll thumb fading out due to inactivity timeout
","\android\widget\FastScroller.java"
"android.widget.FastScroller.mVisibleItem","false","false","true","false","false","int","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.ALPHA_MAX","false","false","false","true","true","int","208","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mDrawOverlay","false","false","true","false","false","boolean","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mHandler","false","false","true","false","false","Handler","new Handler()","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mSectionIndexer","false","false","true","false","false","SectionIndexer","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mThumbY","false","false","true","false","false","int","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mThumbW","false","false","true","false","false","int","","","","\android\widget\FastScroller.java"
"android.widget.FastScroller.mThumbH","false","false","true","false","false","int","","","","\android\widget\FastScroller.java"
"android.webkit.CertTool.CERT","false","false","false","true","true","String","Credentials.CERTIFICATE","","","\android\webkit\CertTool.java"
"android.webkit.CertTool.MD5_WITH_RSA","false","false","true","true","true","AlgorithmIdentifier","new AlgorithmIdentifier(PKCSObjectIdentifiers.md5WithRSAEncryption)","","","\android\webkit\CertTool.java"
"android.webkit.CertTool.PKCS12","false","false","false","true","true","String","Credentials.PKCS12","","","\android\webkit\CertTool.java"
"android.webkit.CertTool.LOGTAG","false","false","true","true","true","String","""CertTool""","","","\android\webkit\CertTool.java"
"com.android.internal.view.menu.IconMenuItemView.mItemInvoker","false","false","true","false","false","ItemInvoker","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mPositionIconOutput","false","false","true","false","false","Rect","new Rect()","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mIcon","false","false","true","false","false","Drawable","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mDisabledAlpha","false","false","true","false","false","float","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mTextAppearanceContext","false","false","true","false","false","Context","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mShortcutCaption","false","false","true","false","false","String","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mItemData","false","false","true","false","false","MenuItemImpl","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mShortcutCaptionMode","false","false","true","false","false","boolean","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mPositionIconAvailable","false","false","true","false","false","Rect","new Rect()","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mTextAppearance","false","false","true","false","false","int","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.mIconMenuView","false","false","true","false","false","IconMenuView","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.sPrependShortcutLabel","false","false","true","true","false","String","","","","\com\android\internal\view\menu\IconMenuItemView.java"
"com.android.internal.view.menu.IconMenuItemView.NO_ALPHA","false","false","true","true","true","int","0xFF","","","\com\android\internal\view\menu\IconMenuItemView.java"
"android.webkit.WebBackForwardList.mClearPending","false","false","true","false","false","boolean","","","// Flag to indicate that the list is invalid
","\android\webkit\WebBackForwardList.java"
"android.webkit.WebBackForwardList.mCallbackProxy","false","false","true","false","true","CallbackProxy","","","// CallbackProxy to issue client callbacks.
","\android\webkit\WebBackForwardList.java"
"android.webkit.WebBackForwardList.mArray","false","false","true","false","false","ArrayList<WebHistoryItem>","","","// ArrayList of WebHistoryItems for maintaining our copy.
","\android\webkit\WebBackForwardList.java"
"android.webkit.WebBackForwardList.mCurrentIndex","false","false","true","false","false","int","","","// Current position in the list.
","\android\webkit\WebBackForwardList.java"
"android.app.backup.BackupAgentHelper.TAG","false","false","false","true","true","String","""BackupAgentHelper""","","","\android\app\backup\BackupAgentHelper.java"
"android.app.backup.BackupAgentHelper.mDispatcher","false","false","false","false","false","BackupHelperDispatcher","new BackupHelperDispatcher()","","","\android\app\backup\BackupAgentHelper.java"
"android.content.IntentSender.mIntentSender","false","false","true","false","true","IntentSender","","","","\android\content\IntentSender.java"
"android.content.IntentSender.mTarget","false","false","true","false","true","IIntentSender","","","","\android\content\IntentSender.java"
"android.content.FinishedDispatcher.mResultData","false","false","true","false","false","String","","","","\android\content\IntentSender.java"
"android.content.IntentSender.mIntent","false","false","true","false","false","Intent","","","","\android\content\IntentSender.java"
"android.content.IntentSender.mWho","false","false","true","false","true","OnFinished","","","","\android\content\IntentSender.java"
"android.content.FinishedDispatcher.mHandler","false","false","true","false","true","Handler","","","","\android\content\IntentSender.java"
"android.content.IntentSender.CREATOR","true","false","false","true","true","Parcelable.Creator<IntentSender>","new Parcelable.Creator<IntentSender>() {

    public IntentSender createFromParcel(Parcel in) {
        IBinder target = in.readStrongBinder();
        return target != null ? new IntentSender(target) : null;
    }

    public IntentSender[] newArray(int size) {
        return new IntentSender[size];
    }
}","","","\android\content\IntentSender.java"
"android.content.IntentSender.mResultCode","false","false","true","false","false","int","","","","\android\content\IntentSender.java"
"android.content.FinishedDispatcher.mResultExtras","false","false","true","false","false","Bundle","","","","\android\content\IntentSender.java"
"android.content.FinishedDispatcher.mResultCode","false","false","true","false","false","int","","","","\android\content\IntentSender.java"
"android.content.FinishedDispatcher.mIntentSender","false","false","true","false","true","IntentSender","","","","\android\content\IntentSender.java"
"android.content.IntentSender.mResultExtras","false","false","true","false","false","Bundle","","","","\android\content\IntentSender.java"
"android.content.IntentSender.mResultData","false","false","true","false","false","String","","","","\android\content\IntentSender.java"
"android.content.IntentSender.mHandler","false","false","true","false","true","Handler","","","","\android\content\IntentSender.java"
"android.content.FinishedDispatcher.mWho","false","false","true","false","true","OnFinished","","","","\android\content\IntentSender.java"
"android.content.FinishedDispatcher.mIntent","false","false","true","false","false","Intent","","","","\android\content\IntentSender.java"
"android.gesture.InstanceLearner.sComparator","false","false","true","true","true","Comparator<Prediction>","new Comparator<Prediction>() {

    public int compare(Prediction object1, Prediction object2) {
        double score1 = object1.score;
        double score2 = object2.score;
        if (score1 > score2) {
            return -1;
        } else if (score1 < score2) {
            return 1;
        } else {
            return 0;
        }
    }
}","","","\android\gesture\InstanceLearner.java"
"android.provider.MediaStore.THUMB_DATA","true","false","false","true","true","String","""thumb_data""","","/**
 * The blob raw data of thumbnail
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.NUMBER_OF_SONGS_FOR_ARTIST","true","false","false","true","true","String","""numsongs_by_artist""","","/**
 * This column is available when getting album info via artist,
 * and indicates the number of songs on the album by the given
 * artist.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.TAGS","true","false","false","true","true","String","""tags""","","/**
 * The user-added tags associated with a video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.MINI_THUMB_MAGIC","true","false","false","true","true","String","""mini_thumb_magic""","","/**
 * The mini thumb id.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_MAX_BYTES","true","false","false","true","true","String","""android.provider.MediaStore.extra.MAX_BYTES""","","/**
 * The name of the Intent-extra used to define a maximum file size for
 * a recording made by the SoundRecorder application.
 *
 * @see #RECORD_SOUND_ACTION
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.PLAY_ORDER","true","false","false","true","true","String","""play_order""","","/**
 * The order of the songs in the playlist
 * <P>Type: INTEGER (long)></P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_SIZE_LIMIT","true","false","false","true","true","String","""android.intent.extra.sizeLimit""","","/**
 * Specify the maximum allowed size.
 */
","\android\provider\MediaStore.java"
"android.provider.Members.AUDIO_ID","true","false","false","true","true","String","""audio_id""","","/**
 * The ID of the audio file
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.LATITUDE","true","false","false","true","true","String","""latitude""","","/**
 * The latitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaColumns.SIZE","true","false","false","true","true","String","""_size""","","/**
 * The size of the file in bytes
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.YEAR","true","false","false","true","true","String","""year""","","/**
 * The year the audio file was recorded, if any
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.ARTIST","true","false","false","true","true","String","""artist""","","/**
 * The artist who created the video file, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.BUCKET_DISPLAY_NAME","true","false","false","true","true","String","""bucket_display_name""","","/**
 * The bucket display name of the video. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.IS_PRIVATE","true","false","false","true","true","String","""isprivate""","","/**
 * Whether the video should be published as public or private
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Albums.ENTRY_CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/album""","","/**
 * The MIME type for entries in this table.
 */
","\android\provider\MediaStore.java"
"android.provider.Media.DEFAULT_SORT_ORDER","true","false","false","true","true","String","TITLE","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.IS_RINGTONE","true","false","false","true","true","String","""is_ringtone""","","/**
 * Non-zero id the audio file may be a ringtone
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.WIDTH","true","false","false","true","true","String","""width""","","/**
 * The width of the thumbnal
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.IS_RINGTONE","true","false","false","true","true","String","""is_ringtone""","","/**
 * Non-zero id the audio file may be a ringtone
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_FINISH_ON_COMPLETION","true","false","false","true","true","String","""android.intent.extra.finishOnCompletion""","","/**
 * The name of the Intent-extra used to control the onCompletion behavior of a MovieView.
 * This is a boolean property that specifies whether or not to finish the MovieView activity
 * when the movie completes playing. The default value is true, which means to automatically
 * exit the movie player activity when the movie completes playing.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.BUCKET_ID","true","false","false","true","true","String","""bucket_id""","","/**
 * The bucket id of the video. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.COMPOSER","true","false","false","true","true","String","""composer""","","/**
 * The composer of the audio file, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_MEDIA_ALBUM","true","false","false","true","true","String","""android.intent.extra.album""","","/**
 * The name of the Intent-extra used to define the album
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.AUDIO_ID","true","false","false","true","true","String","""audio_id""","","/**
 * The ID of the audio file
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaColumns.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the file
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The description of the image
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.LATITUDE","true","false","false","true","true","String","""latitude""","","/**
 * The latitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.IS_PRIVATE","true","false","false","true","true","String","""isprivate""","","/**
 * Whether the video should be published as public or private
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.ARTIST","true","false","false","true","true","String","""artist""","","/**
 * The artist whose songs appear on this album
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.LANGUAGE","true","false","false","true","true","String","""language""","","/**
 * The language of the video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.NUMBER_OF_SONGS","true","false","false","true","true","String","""numsongs""","","/**
 * The number of songs on this album
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.PLAY_ORDER","true","false","false","true","true","String","""play_order""","","/**
 * The order of the songs in the playlist
 * <P>Type: INTEGER (long)></P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.FIRST_YEAR","true","false","false","true","true","String","""minyear""","","/**
 * The year in which the earliest songs
 * on this album were released. This will often
 * be the same as {@link #LAST_YEAR}, but for compilation albums
 * they might differ.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.INTENT_ACTION_VIDEO_CAMERA","true","false","false","true","true","String","""android.media.action.VIDEO_CAMERA""","","/**
 * The name of the Intent action used to launch a camera in video mode.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.WIDTH","true","false","false","true","true","String","""width""","","/**
 * The width of the thumbnal
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.UNKNOWN_STRING","true","false","false","true","true","String","""<unknown>""","","/**
 * The string that is used when a media attribute is not known. For example,
 * if an audio file does not have any meta data, the artist and album columns
 * will be set to this value.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the thumbnail
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.KIND","true","false","false","true","true","String","""kind""","","/**
 * The kind of the thumbnail
 * <P>Type: INTEGER (One of the values below)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Artists.ENTRY_CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/artist""","","/**
 * The MIME type for entries in this table.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaColumns.MIME_TYPE","true","false","false","true","true","String","""mime_type""","","/**
 * The MIME type of the file
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the thumbnail
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.PlaylistsColumns.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the playlist file
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.GENRE_ID","true","false","false","true","true","String","""genre_id""","","/**
 * The ID of the genre
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.HEIGHT","true","false","false","true","true","String","""height""","","/**
 * The height of the thumbnail
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.LONGITUDE","true","false","false","true","true","String","""longitude""","","/**
 * The longitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_SCREEN_ORIENTATION","true","false","false","true","true","String","""android.intent.extra.screenOrientation""","","/**
 * The name of the Intent-extra used to control the orientation of a ViewImage or a MovieView.
 * This is an int property that overrides the activity's requestedOrientation.
 * @see android.content.pm.ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED
 */
","\android\provider\MediaStore.java"
"android.provider.Images.KIND","true","false","false","true","true","String","""kind""","","/**
 * The kind of the thumbnail
 * <P>Type: INTEGER (One of the values below)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.InternalThumbnails.PROJECTION","false","false","true","true","true","String","new String[] { _ID, MediaColumns.DATA }","","","\android\provider\MediaStore.java"
"android.provider.Video.RESOLUTION","true","false","false","true","true","String","""resolution""","","/**
 * The resolution of the video file, formatted as ""XxY""
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Artists.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/video""","","/**
 * The MIME type for this table.
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.IS_NOTIFICATION","true","false","false","true","true","String","""is_notification""","","/**
 * Non-zero id the audio file may be a notification sound
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Members.CONTENT_DIRECTORY","true","false","false","true","true","String","""members""","","/**
 * A subdirectory of each playlist containing all member audio
 * files.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore._ID","true","false","false","true","true","String","""_id""","","/**
 * The ID within the playlist.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/albums""","","/**
 * The MIME type for this table.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.ALBUM_ARTIST","true","false","false","true","true","String","""album_artist""","","/**
 * The artist credited for the album that contains the audio file
 * <P>Type: TEXT</P>
 * @hide
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.ARTIST_KEY","true","false","false","true","true","String","""artist_key""","","/**
 * A non human readable key calculated from the ARTIST, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.MIME_TYPE","true","false","false","true","true","String","""mime_type""","","/**
 * The MIME type of the file
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.VIDEO_ID","true","false","false","true","true","String","""video_id""","","/**
 * The original image for the thumbnal
 * <P>Type: INTEGER (ID from Video table)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.SIZE","true","false","false","true","true","String","""_size""","","/**
 * The size of the file in bytes
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.ArtistColumns.NUMBER_OF_TRACKS","true","false","false","true","true","String","""number_of_tracks""","","/**
 * The number of albums in the database for this artist
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.ALBUM_ARTIST","true","false","false","true","true","String","""album_artist""","","/**
 * The artist credited for the album that contains the audio file
 * <P>Type: TEXT</P>
 * @hide
 */
","\android\provider\MediaStore.java"
"android.provider.Images.PICASA_ID","true","false","false","true","true","String","""picasa_id""","","/**
 * The picasa id of the image
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Members.PLAY_ORDER","true","false","false","true","true","String","""play_order""","","/**
 * The order of the songs in the playlist
 * <P>Type: INTEGER (long)></P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.INTENT_ACTION_MEDIA_SEARCH","true","false","false","true","true","String","""android.intent.action.MEDIA_SEARCH""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Perform a search for media.
 * Contains at least the {@link android.app.SearchManager#QUERY} extra.
 * May also contain any combination of the following extras:
 * EXTRA_MEDIA_ARTIST, EXTRA_MEDIA_ALBUM, EXTRA_MEDIA_TITLE, EXTRA_MEDIA_FOCUS
 *
 * @see android.provider.MediaStore#EXTRA_MEDIA_ARTIST
 * @see android.provider.MediaStore#EXTRA_MEDIA_ALBUM
 * @see android.provider.MediaStore#EXTRA_MEDIA_TITLE
 * @see android.provider.MediaStore#EXTRA_MEDIA_FOCUS
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.ARTIST_ID","true","false","false","true","true","String","""artist_id""","","/**
 * The id of the artist who created the audio file, if any
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.LAST_YEAR","true","false","false","true","true","String","""maxyear""","","/**
 * The year in which the latest songs
 * on this album were released. This will often
 * be the same as {@link #FIRST_YEAR}, but for compilation albums
 * they might differ.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.AUDIO_ID","true","false","false","true","true","String","""audio_id""","","/**
 * The ID of the audio file
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Media.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/video""","","/**
 * The MIME type for this table.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DATE_TAKEN","true","false","false","true","true","String","""datetaken""","","/**
 * The date & time that the image was taken in units
 * of milliseconds since jan 1, 1970.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Genres.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.TRACK","true","false","false","true","true","String","""track""","","/**
 * The track number of this song on the album, if any.
 * This number encodes both the track number and the
 * disc number. For multi-disc sets, this number will
 * be 1xxx for tracks on the first disc, 2xxx for tracks
 * on the second disc, etc.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.RESOLUTION","true","false","false","true","true","String","""resolution""","","/**
 * The resolution of the video file, formatted as ""XxY""
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/image""","","/**
 * The MIME type of of this directory of
 * images.  Note that each entry in this directory will have a standard
 * image MIME type as appropriate -- for example, image/jpeg.
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.IS_ALARM","true","false","false","true","true","String","""is_alarm""","","/**
 * Non-zero id the audio file may be an alarm
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The description of the video recording
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Artists.DEFAULT_SORT_ORDER","true","false","false","true","true","String","ARTIST_KEY","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.FIRST_YEAR","true","false","false","true","true","String","""minyear""","","/**
 * The year in which the earliest songs
 * on this album were released. This will often
 * be the same as {@link #LAST_YEAR}, but for compilation albums
 * they might differ.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.DEFAULT_SORT_ORDER","true","false","false","true","true","String","PLAY_ORDER","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.TITLE_KEY","true","false","false","true","true","String","""title_key""","","/**
 * A non human readable key calculated from the TITLE, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.RECORD_SOUND_ACTION","true","false","false","true","true","String","""android.provider.MediaStore.RECORD_SOUND""","","/**
 * Activity Action: Start SoundRecorder application.
 * <p>Input: nothing.
 * <p>Output: An uri to the recorded sound stored in the Media Library
 * if the recording was successful.
 * May also contain the extra EXTRA_MAX_BYTES.
 * @see #EXTRA_MAX_BYTES
 */
","\android\provider\MediaStore.java"
"android.provider.Genres.CONTENT_DIRECTORY","true","false","false","true","true","String","""members""","","/**
 * A subdirectory of each genre containing all member audio files.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.ARTIST_KEY","true","false","false","true","true","String","""artist_key""","","/**
 * A non human readable key calculated from the ARTIST, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.LATITUDE","true","false","false","true","true","String","""latitude""","","/**
 * The latitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.AUDIO_ID","true","false","false","true","true","String","""audio_id""","","/**
 * The ID of the audio file
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.ENTRY_CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/album""","","/**
 * The MIME type for entries in this table.
 */
","\android\provider\MediaStore.java"
"android.provider.Images.MINI_THUMB_MAGIC","true","false","false","true","true","String","""mini_thumb_magic""","","/**
 * The mini thumb id.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.LONGITUDE","true","false","false","true","true","String","""longitude""","","/**
 * The longitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_MEDIA_TITLE","true","false","false","true","true","String","""android.intent.extra.title""","","/**
 * The name of the Intent-extra used to define the song title
 */
","\android\provider\MediaStore.java"
"android.provider.Images.THUMB_DATA","true","false","false","true","true","String","""thumb_data""","","/**
 * The blob raw data of thumbnail
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.ARTIST","true","false","false","true","true","String","""artist""","","/**
 * The artist who created the audio file, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.ArtistColumns.ARTIST","true","false","false","true","true","String","""artist""","","/**
 * The artist who created the audio file, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.WIDTH","true","false","false","true","true","String","""width""","","/**
 * The width of the thumbnal
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.LAST_YEAR","true","false","false","true","true","String","""maxyear""","","/**
 * The year in which the latest songs
 * on this album were released. This will often
 * be the same as {@link #FIRST_YEAR}, but for compilation albums
 * they might differ.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the audio file, in ms
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.PROJECTION","false","false","true","true","true","String","new String[] { _ID, MediaColumns.DATA }","","","\android\provider\MediaStore.java"
"android.provider.Audio.ALBUM_ID","true","false","false","true","true","String","""album_id""","","/**
 * The id for the album
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.IS_NOTIFICATION","true","false","false","true","true","String","""is_notification""","","/**
 * Non-zero id the audio file may be a notification sound
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.IS_MUSIC","true","false","false","true","true","String","""is_music""","","/**
 * Non-zero if the audio file is music
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.PlaylistsColumns.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the playlist
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Genres.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/genre""","","/**
 * The MIME type for this table.
 */
","\android\provider\MediaStore.java"
"android.provider.Members._ID","true","false","false","true","true","String","""_id""","","/**
 * The ID within the playlist.
 */
","\android\provider\MediaStore.java"
"android.provider.Media.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.IMAGE_ID","true","false","false","true","true","String","""image_id""","","/**
 * The original image for the thumbnal
 * <P>Type: INTEGER (ID from Images table)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.FIRST_YEAR","true","false","false","true","true","String","""minyear""","","/**
 * The year in which the earliest songs
 * on this album were released. This will often
 * be the same as {@link #LAST_YEAR}, but for compilation albums
 * they might differ.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.ENTRY_CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/playlist""","","/**
 * The MIME type for entries in this table.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the video file, in ms
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""video_id ASC""","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.FULL_SCREEN_KIND","true","false","false","true","true","int","2","","","\android\provider\MediaStore.java"
"android.provider.InternalThumbnails.DEFAULT_GROUP_ID","false","false","false","true","true","int","0","","","\android\provider\MediaStore.java"
"android.provider.Albums.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.TITLE_KEY","true","false","false","true","true","String","""title_key""","","/**
 * A non human readable key calculated from the TITLE, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.Images.ORIENTATION","true","false","false","true","true","String","""orientation""","","/**
 * The orientation for the image expressed as degrees.
 * Only degrees 0, 90, 180, 270 will work.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.InternalThumbnails.MINI_KIND","false","false","true","true","true","int","1","","","\android\provider\MediaStore.java"
"android.provider.MediaStore.LONGITUDE","true","false","false","true","true","String","""longitude""","","/**
 * The longitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.BOOKMARK","true","false","false","true","true","String","""bookmark""","","/**
 * The bookmark for the video. Time in ms. Represents the location in the video that the
 * video should start playing at the next time it is opened. If the value is null or
 * out of the range 0..DURATION-1 then the video should start playing from the
 * beginning.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ALBUM","true","false","false","true","true","String","""album""","","/**
 * The album the video file is from, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.NUMBER_OF_SONGS_FOR_ARTIST","true","false","false","true","true","String","""numsongs_by_artist""","","/**
 * This column is available when getting album info via artist,
 * and indicates the number of songs on the album by the given
 * artist.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio._ID","true","false","false","true","true","String","""_id""","","/**
 * The ID within the playlist.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.TRACK","true","false","false","true","true","String","""track""","","/**
 * The track number of this song on the album, if any.
 * This number encodes both the track number and the
 * disc number. For multi-disc sets, this number will
 * be 1xxx for tracks on the first disc, 2xxx for tracks
 * on the second disc, etc.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.ALBUM","true","false","false","true","true","String","""album""","","/**
 * The album on which the audio file appears, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_FULL_SCREEN","true","false","false","true","true","String","""android.intent.extra.fullScreen""","","/**
 * The name of an Intent-extra used to control the UI of a ViewImage.
 * This is a boolean property that overrides the activity's default fullscreen state.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.BOOKMARK","true","false","false","true","true","String","""bookmark""","","/**
 * The position, in ms, playback was at when playback for this file
 * was last stopped.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The description of the video recording
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaColumns.TITLE","true","false","false","true","true","String","""title""","","/**
 * The title of the content
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the playlist
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.RESOLUTION","true","false","false","true","true","String","""resolution""","","/**
 * The resolution of the video file, formatted as ""XxY""
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Members.DEFAULT_SORT_ORDER","true","false","false","true","true","String","PLAY_ORDER","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.PLAY_ORDER","true","false","false","true","true","String","""play_order""","","/**
 * The order of the songs in the playlist
 * <P>Type: INTEGER (long)></P>
 */
","\android\provider\MediaStore.java"
"android.provider.Genres.AUDIO_ID","true","false","false","true","true","String","""audio_id""","","/**
 * The ID of the audio file
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists._ID","true","false","false","true","true","String","""_id""","","/**
 * The ID within the playlist.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.MINI_KIND","true","false","false","true","true","int","1","","","\android\provider\MediaStore.java"
"android.provider.Video.LATITUDE","true","false","false","true","true","String","""latitude""","","/**
 * The latitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.PICASA_ID","true","false","false","true","true","String","""picasa_id""","","/**
 * The picasa id of the image
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.INTENT_ACTION_STILL_IMAGE_CAMERA","true","false","false","true","true","String","""android.media.action.STILL_IMAGE_CAMERA""","","/**
 * The name of the Intent action used to launch a camera in still image mode.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.MINI_THUMB_MAGIC","true","false","false","true","true","String","""mini_thumb_magic""","","/**
 * The mini thumb id.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.CONTENT_AUTHORITY_SLASH","false","false","true","true","true","String","""content://"" + AUTHORITY + ""/""","","","\android\provider\MediaStore.java"
"android.provider.Images.DATE_TAKEN","true","false","false","true","true","String","""datetaken""","","/**
 * The date & time that the image was taken in units
 * of milliseconds since jan 1, 1970.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.InternalThumbnails.FULL_SCREEN_KIND","false","false","true","true","true","int","2","","","\android\provider\MediaStore.java"
"android.provider.Video.KIND","true","false","false","true","true","String","""kind""","","/**
 * The kind of the thumbnail
 * <P>Type: INTEGER (One of the values below)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.VIDEO_ID","true","false","false","true","true","String","""video_id""","","/**
 * The original image for the thumbnal
 * <P>Type: INTEGER (ID from Video table)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.EXTRA_MAX_BYTES","true","false","false","true","true","String","""android.provider.MediaStore.extra.MAX_BYTES""","","/**
 * The name of the Intent-extra used to define a maximum file size for
 * a recording made by the SoundRecorder application.
 *
 * @see #RECORD_SOUND_ACTION
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.LAST_YEAR","true","false","false","true","true","String","""maxyear""","","/**
 * The year in which the latest songs
 * on this album were released. This will often
 * be the same as {@link #FIRST_YEAR}, but for compilation albums
 * they might differ.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.IS_MUSIC","true","false","false","true","true","String","""is_music""","","/**
 * Non-zero if the audio file is music
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.IS_MUSIC","true","false","false","true","true","String","""is_music""","","/**
 * Non-zero if the audio file is music
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.FULL_SCREEN_KIND","true","false","false","true","true","int","2","","","\android\provider\MediaStore.java"
"android.provider.MediaStore.NUMBER_OF_SONGS_FOR_ARTIST","true","false","false","true","true","String","""numsongs_by_artist""","","/**
 * This column is available when getting album info via artist,
 * and indicates the number of songs on the album by the given
 * artist.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_MEDIA_FOCUS","true","false","false","true","true","String","""android.intent.extra.focus""","","/**
 * The name of the Intent-extra used to define the search focus. The search focus
 * indicates whether the search should be for things related to the artist, album
 * or song that is identified by the other extras.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.BUCKET_ID","true","false","false","true","true","String","""bucket_id""","","/**
 * The bucket id of the video. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.ALBUM_ID","true","false","false","true","true","String","""album_id""","","/**
 * The id for the album
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.ALBUM_ART","true","false","false","true","true","String","""album_art""","","/**
 * Cached album art.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.BUCKET_DISPLAY_NAME","true","false","false","true","true","String","""bucket_display_name""","","/**
 * The bucket display name of the image. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.MINI_KIND","true","false","false","true","true","int","1","","","\android\provider\MediaStore.java"
"android.provider.Video.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the thumbnail
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.COMPOSER","true","false","false","true","true","String","""composer""","","/**
 * The composer of the audio file, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.COMPOSER","true","false","false","true","true","String","""composer""","","/**
 * The composer of the audio file, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.BUCKET_ID","true","false","false","true","true","String","""bucket_id""","","/**
 * The bucket id of the image. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.ARTIST","true","false","false","true","true","String","""artist""","","/**
 * The artist whose songs appear on this album
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Genres.GENRE_ID","true","false","false","true","true","String","""genre_id""","","/**
 * The ID of the genre
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.MICRO_KIND","true","false","false","true","true","int","3","","","\android\provider\MediaStore.java"
"android.provider.ImageColumns.DATE_TAKEN","true","false","false","true","true","String","""datetaken""","","/**
 * The date & time that the image was taken in units
 * of milliseconds since jan 1, 1970.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.ALBUM_KEY","true","false","false","true","true","String","""album_key""","","/**
 * A non human readable key calculated from the ALBUM, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.ARTIST_ID","true","false","false","true","true","String","""artist_id""","","/**
 * The id of the artist who created the audio file, if any
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.NUMBER_OF_SONGS","true","false","false","true","true","String","""numsongs""","","/**
 * The number of songs on this album
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""image_id ASC""","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The description of the image
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.ALBUM","true","false","false","true","true","String","""album""","","/**
 * The album the audio file is from, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.MINI_THUMB_MAGIC","true","false","false","true","true","String","""mini_thumb_magic""","","/**
 * The mini thumb id.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.NUMBER_OF_TRACKS","true","false","false","true","true","String","""number_of_tracks""","","/**
 * The number of albums in the database for this artist
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DATE_ADDED","true","false","false","true","true","String","""date_added""","","/**
 * The time the file was added to the media provider
 * Units are seconds since 1970.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.DATE_MODIFIED","true","false","false","true","true","String","""date_modified""","","/**
 * The time the file was last modified
 * Units are seconds since 1970.
 * NOTE: This is for internal use by the media scanner.  Do not modify this field.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Media.EXTRA_MAX_BYTES","true","false","false","true","true","String","""android.provider.MediaStore.extra.MAX_BYTES""","","/**
 * The name of the Intent-extra used to define a maximum file size for
 * a recording made by the SoundRecorder application.
 *
 * @see #RECORD_SOUND_ACTION
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ACTION_IMAGE_CAPTURE","true","false","false","true","true","String","""android.media.action.IMAGE_CAPTURE""","","/**
 * Standard Intent action that can be sent to have the camera application
 * capture an image and return it.
 * <p>
 * The caller may pass an extra EXTRA_OUTPUT to control where this image will be written.
 * If the EXTRA_OUTPUT is not present, then a small sized image is returned as a Bitmap
 * object in the extra field. This is useful for applications that only need a small image.
 * If the EXTRA_OUTPUT is present, then the full-sized image will be written to the Uri
 * value of EXTRA_OUTPUT.
 * @see #EXTRA_OUTPUT
 * @see #EXTRA_VIDEO_QUALITY
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.MICRO_KIND","true","false","false","true","true","int","3","","","\android\provider\MediaStore.java"
"android.provider.MediaStore.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the playlist
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.HEIGHT","true","false","false","true","true","String","""height""","","/**
 * The height of the thumbnail
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.CONTENT_DIRECTORY","true","false","false","true","true","String","""members""","","/**
 * A subdirectory of each playlist containing all member audio
 * files.
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.BUCKET_DISPLAY_NAME","true","false","false","true","true","String","""bucket_display_name""","","/**
 * The bucket display name of the image. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.ALBUM_ART","true","false","false","true","true","String","""album_art""","","/**
 * A URI to the album art, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ENTRY_CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/album""","","/**
 * The MIME type for entries in this table.
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.ALBUM_KEY","true","false","false","true","true","String","""album_key""","","/**
 * A non human readable key calculated from the ALBUM, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.NUMBER_OF_ALBUMS","true","false","false","true","true","String","""number_of_albums""","","/**
 * The number of albums in the database for this artist
 */
","\android\provider\MediaStore.java"
"android.provider.InternalThumbnails.MICRO_KIND","false","false","true","true","true","int","3","","","\android\provider\MediaStore.java"
"android.provider.Audio.IS_PODCAST","true","false","false","true","true","String","""is_podcast""","","/**
 * Non-zero if the audio file is a podcast
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.VIDEO_ID","true","false","false","true","true","String","""video_id""","","/**
 * The original image for the thumbnal
 * <P>Type: INTEGER (ID from Video table)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_MEDIA_ARTIST","true","false","false","true","true","String","""android.intent.extra.artist""","","/**
 * The name of the Intent-extra used to define the artist
 */
","\android\provider\MediaStore.java"
"android.provider.Genres.DEFAULT_SORT_ORDER","true","false","false","true","true","String","TITLE_KEY","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.Video.TAGS","true","false","false","true","true","String","""tags""","","/**
 * The user-added tags associated with a video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.TAG","false","false","true","true","true","String","""MediaStore""","","","\android\provider\MediaStore.java"
"android.provider.Thumbnails.WIDTH","true","false","false","true","true","String","""width""","","/**
 * The width of the thumbnal
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.DATE_ADDED","true","false","false","true","true","String","""date_added""","","/**
 * The time the file was added to the media provider
 * Units are seconds since 1970.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaColumns.DISPLAY_NAME","true","false","false","true","true","String","""_display_name""","","/**
 * The display name of the file
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.LANGUAGE","true","false","false","true","true","String","""language""","","/**
 * The language of the video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.HEIGHT","true","false","false","true","true","String","""height""","","/**
 * The height of the thumbnail
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.LONGITUDE","true","false","false","true","true","String","""longitude""","","/**
 * The longitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_OUTPUT","true","false","false","true","true","String","""output""","","/**
 * The name of the Intent-extra used to indicate a content resolver Uri to be used to
 * store the requested image or video.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.NUMBER_OF_ALBUMS","true","false","false","true","true","String","""number_of_albums""","","/**
 * The number of albums in the database for this artist
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ALBUM_ID","true","false","false","true","true","String","""album_id""","","/**
 * The id for the album
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.TITLE","true","false","false","true","true","String","""title""","","/**
 * The title of the content
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DEFAULT_GROUP_ID","false","false","false","true","true","int","0","","","\android\provider\MediaStore.java"
"android.provider.Video.DATE_TAKEN","true","false","false","true","true","String","""datetaken""","","/**
 * The date & time that the image was taken in units
 * of milliseconds since jan 1, 1970.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Media.RECORD_SOUND_ACTION","true","false","false","true","true","String","""android.provider.MediaStore.RECORD_SOUND""","","/**
 * Activity Action: Start SoundRecorder application.
 * <p>Input: nothing.
 * <p>Output: An uri to the recorded sound stored in the Media Library
 * if the recording was successful.
 * May also contain the extra EXTRA_MAX_BYTES.
 * @see #EXTRA_MAX_BYTES
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.ALBUM_ID","true","false","false","true","true","String","""album_id""","","/**
 * The id of the album the audio file is from, if any
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.IS_RINGTONE","true","false","false","true","true","String","""is_ringtone""","","/**
 * Non-zero id the audio file may be a ringtone
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_SHOW_ACTION_ICONS","true","false","false","true","true","String","""android.intent.extra.showActionIcons""","","/**
 * The name of an Intent-extra used to control the UI of a ViewImage.
 * This is a boolean property that specifies whether or not to show action icons.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.IS_ALARM","true","false","false","true","true","String","""is_alarm""","","/**
 * Non-zero id the audio file may be an alarm
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.TITLE_KEY","true","false","false","true","true","String","""title_key""","","/**
 * A non human readable key calculated from the TITLE, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.BOOKMARK","true","false","false","true","true","String","""bookmark""","","/**
 * The bookmark for the video. Time in ms. Represents the location in the video that the
 * video should start playing at the next time it is opened. If the value is null or
 * out of the range 0..DURATION-1 then the video should start playing from the
 * beginning.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.ALBUM","true","false","false","true","true","String","""album""","","/**
 * The album the video file is from, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.IS_NOTIFICATION","true","false","false","true","true","String","""is_notification""","","/**
 * Non-zero id the audio file may be a notification sound
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.DEFAULT_SORT_ORDER","true","false","false","true","true","String","ALBUM_KEY","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.Genres.ENTRY_CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/genre""","","/**
 * The MIME type for entries in this table.
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the video file, in ms
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.FULL_SCREEN_KIND","true","false","false","true","true","int","2","","","\android\provider\MediaStore.java"
"android.provider.Audio.IS_ALARM","true","false","false","true","true","String","""is_alarm""","","/**
 * Non-zero id the audio file may be an alarm
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.TAGS","true","false","false","true","true","String","""tags""","","/**
 * The user-added tags associated with a video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.PLAYLIST_ID","true","false","false","true","true","String","""playlist_id""","","/**
 * The ID of the playlist
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Artists.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.GENRE_ID","true","false","false","true","true","String","""genre_id""","","/**
 * The ID of the genre
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.IS_PRIVATE","true","false","false","true","true","String","""isprivate""","","/**
 * Whether the video should be published as public or private
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DATE_MODIFIED","true","false","false","true","true","String","""date_modified""","","/**
 * The time the file was last modified
 * Units are seconds since 1970.
 * NOTE: This is for internal use by the media scanner.  Do not modify this field.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.MINI_KIND","true","false","false","true","true","int","1","","","\android\provider\MediaStore.java"
"android.provider.MediaStore.CATEGORY","true","false","false","true","true","String","""category""","","/**
 * The YouTube category of the video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.PlaylistsColumns.DATE_ADDED","true","false","false","true","true","String","""date_added""","","/**
 * The time the file was added to the media provider
 * Units are seconds since 1970.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.YEAR","true","false","false","true","true","String","""year""","","/**
 * The year the audio file was recorded, if any
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DISPLAY_NAME","true","false","false","true","true","String","""_display_name""","","/**
 * The display name of the file
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.PLAYLIST_ID","true","false","false","true","true","String","""playlist_id""","","/**
 * The ID of the playlist
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ALBUM_ARTIST","true","false","false","true","true","String","""album_artist""","","/**
 * The artist credited for the album that contains the audio file
 * <P>Type: TEXT</P>
 * @hide
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.HEIGHT","true","false","false","true","true","String","""height""","","/**
 * The height of the thumbnail
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.CATEGORY","true","false","false","true","true","String","""category""","","/**
 * The YouTube category of the video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_VIDEO_QUALITY","true","false","false","true","true","String","""android.intent.extra.videoQuality""","","/**
 * The name of the Intent-extra used to control the quality of a recorded video. This is an
 * integer property. Currently value 0 means low quality, suitable for MMS messages, and
 * value 1 means high quality. In the future other quality levels may be added.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the playlist file
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.MEDIA_SCANNER_VOLUME","true","false","false","true","true","String","""volume""","","/**
 * Name of current volume being scanned by the media scanner.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.IMAGE_ID","true","false","false","true","true","String","""image_id""","","/**
 * The original image for the thumbnal
 * <P>Type: INTEGER (ID from Images table)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaColumns.DATE_MODIFIED","true","false","false","true","true","String","""date_modified""","","/**
 * The time the file was last modified
 * Units are seconds since 1970.
 * NOTE: This is for internal use by the media scanner.  Do not modify this field.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.BOOKMARK","true","false","false","true","true","String","""bookmark""","","/**
 * The bookmark for the video. Time in ms. Represents the location in the video that the
 * video should start playing at the next time it is opened. If the value is null or
 * out of the range 0..DURATION-1 then the video should start playing from the
 * beginning.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTRA_DURATION_LIMIT","true","false","false","true","true","String","""android.intent.extra.durationLimit""","","/**
 * Specify the maximum allowed recording duration in seconds.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.INTENT_ACTION_MUSIC_PLAYER","true","false","false","true","true","String","""android.intent.action.MUSIC_PLAYER""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Launch a music player.
 * The activity should be able to play, browse, or manipulate music files stored on the device.
 */
","\android\provider\MediaStore.java"
"android.provider.Artists.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/artists""","","/**
 * The MIME type for this table.
 */
","\android\provider\MediaStore.java"
"android.provider.ArtistColumns.NUMBER_OF_ALBUMS","true","false","false","true","true","String","""number_of_albums""","","/**
 * The number of albums in the database for this artist
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.LONGITUDE","true","false","false","true","true","String","""longitude""","","/**
 * The longitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.ARTIST","true","false","false","true","true","String","""artist""","","/**
 * The artist who created the video file, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.PlaylistsColumns.DATE_MODIFIED","true","false","false","true","true","String","""date_modified""","","/**
 * The time the file was last modified
 * Units are seconds since 1970.
 * NOTE: This is for internal use by the media scanner.  Do not modify this field.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.ALBUM_ART","true","false","false","true","true","String","""album_art""","","/**
 * Cached album art.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.ORIENTATION","true","false","false","true","true","String","""orientation""","","/**
 * The orientation for the image expressed as degrees.
 * Only degrees 0, 90, 180, 270 will work.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.ALBUM","true","false","false","true","true","String","""album""","","/**
 * The album the video file is from, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.BUCKET_DISPLAY_NAME","true","false","false","true","true","String","""bucket_display_name""","","/**
 * The bucket display name of the video. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.ALBUM_KEY","true","false","false","true","true","String","""album_key""","","/**
 * A non human readable key calculated from the ALBUM, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.BUCKET_DISPLAY_NAME","true","false","false","true","true","String","""bucket_display_name""","","/**
 * The bucket display name of the video. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.MICRO_KIND","true","false","false","true","true","int","3","","","\android\provider\MediaStore.java"
"android.provider.Video.IS_PRIVATE","true","false","false","true","true","String","""isprivate""","","/**
 * Whether the video should be published as public or private
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/video""","","/**
 * The MIME type for this table.
 */
","\android\provider\MediaStore.java"
"android.provider.Genres.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""video_id ASC""","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The description of the video recording
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Media.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.RECORD_SOUND_ACTION","true","false","false","true","true","String","""android.provider.MediaStore.RECORD_SOUND""","","/**
 * Activity Action: Start SoundRecorder application.
 * <p>Input: nothing.
 * <p>Output: An uri to the recorded sound stored in the Media Library
 * if the recording was successful.
 * May also contain the extra EXTRA_MAX_BYTES.
 * @see #EXTRA_MAX_BYTES
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.DATE_TAKEN","true","false","false","true","true","String","""datetaken""","","/**
 * The date & time that the image was taken in units
 * of milliseconds since jan 1, 1970.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.VideoColumns.BUCKET_ID","true","false","false","true","true","String","""bucket_id""","","/**
 * The bucket id of the video. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.THUMB_DATA","true","false","false","true","true","String","""thumb_data""","","/**
 * The blob raw data of thumbnail
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.CONTENT_DIRECTORY","true","false","false","true","true","String","""members""","","/**
 * A subdirectory of each playlist containing all member audio
 * files.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.CATEGORY","true","false","false","true","true","String","""category""","","/**
 * The YouTube category of the video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.BOOKMARK","true","false","false","true","true","String","""bookmark""","","/**
 * The position, in ms, playback was at when playback for this file
 * was last stopped.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.LATITUDE","true","false","false","true","true","String","""latitude""","","/**
 * The latitude where the image was captured.
 * <P>Type: DOUBLE</P>
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.MINI_THUMB_MAGIC","true","false","false","true","true","String","""mini_thumb_magic""","","/**
 * The mini thumb id.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ARTIST_KEY","true","false","false","true","true","String","""artist_key""","","/**
 * A non human readable key calculated from the ARTIST, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.LANGUAGE","true","false","false","true","true","String","""language""","","/**
 * The language of the video
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.AUTHORITY","true","false","false","true","true","String","""media""","","","\android\provider\MediaStore.java"
"android.provider.AudioColumns.IS_PODCAST","true","false","false","true","true","String","""is_podcast""","","/**
 * Non-zero if the audio file is a podcast
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Playlists.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/playlist""","","/**
 * The MIME type for this table.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.MICRO_KIND","true","false","false","true","true","int","3","","","\android\provider\MediaStore.java"
"android.provider.Thumbnails.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.PLAYLIST_ID","true","false","false","true","true","String","""playlist_id""","","/**
 * The ID of the playlist
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.NUMBER_OF_SONGS","true","false","false","true","true","String","""numsongs""","","/**
 * The number of songs on this album
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Albums.DEFAULT_SORT_ORDER","true","false","false","true","true","String","ALBUM_KEY","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.PICASA_ID","true","false","false","true","true","String","""picasa_id""","","/**
 * The picasa id of the image
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.IMAGE_ID","true","false","false","true","true","String","""image_id""","","/**
 * The original image for the thumbnal
 * <P>Type: INTEGER (ID from Images table)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaColumns.DATE_ADDED","true","false","false","true","true","String","""date_added""","","/**
 * The time the file was added to the media provider
 * Units are seconds since 1970.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ALBUM_KEY","true","false","false","true","true","String","""album_key""","","/**
 * A non human readable key calculated from the ALBUM, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.IS_PRIVATE","true","false","false","true","true","String","""isprivate""","","/**
 * Whether the video should be published as public or private
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.CONTENT_DIRECTORY","true","false","false","true","true","String","""members""","","/**
 * A subdirectory of each playlist containing all member audio
 * files.
 */
","\android\provider\MediaStore.java"
"android.provider.Albums.INTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""internal"")","","/**
 * The content:// style URI for the internal storage.
 */
","\android\provider\MediaStore.java"
"android.provider.AudioColumns.TRACK","true","false","false","true","true","String","""track""","","/**
 * The track number of this song on the album, if any.
 * This number encodes both the track number and the
 * disc number. For multi-disc sets, this number will
 * be 1xxx for tracks on the first disc, 2xxx for tracks
 * on the second disc, etc.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.AlbumColumns.ALBUM","true","false","false","true","true","String","""album""","","/**
 * The album on which the audio file appears, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the video file, in ms
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Members.PLAYLIST_ID","true","false","false","true","true","String","""playlist_id""","","/**
 * The ID of the playlist
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Video.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.YEAR","true","false","false","true","true","String","""year""","","/**
 * The year the audio file was recorded, if any
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.NUMBER_OF_TRACKS","true","false","false","true","true","String","""number_of_tracks""","","/**
 * The number of albums in the database for this artist
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.IS_PODCAST","true","false","false","true","true","String","""is_podcast""","","/**
 * Non-zero if the audio file is a podcast
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.GenresColumns.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the genre
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.ArtistColumns.ARTIST_KEY","true","false","false","true","true","String","""artist_key""","","/**
 * A non human readable key calculated from the ARTIST, used for
 * searching, sorting and grouping
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ALBUM_ART","true","false","false","true","true","String","""album_art""","","/**
 * Cached album art.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ACTION_VIDEO_CAPTURE","true","false","false","true","true","String","""android.media.action.VIDEO_CAPTURE""","","/**
 * Standard Intent action that can be sent to have the camera application
 * capture an video and return it.
 * <p>
 * The caller may pass in an extra EXTRA_VIDEO_QUALITY to control the video quality.
 * <p>
 * The caller may pass in an extra EXTRA_OUTPUT to control
 * where the video is written. If EXTRA_OUTPUT is not present the video will be
 * written to the standard location for videos, and the Uri of that location will be
 * returned in the data field of the Uri.
 * @see #EXTRA_OUTPUT
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.DATA","true","false","false","true","true","String","""_data""","","/**
 * The data stream for the thumbnail
 * <P>Type: DATA STREAM</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ARTIST_ID","true","false","false","true","true","String","""artist_id""","","/**
 * The id of the artist who created the audio file, if any
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.ImageColumns.BUCKET_ID","true","false","false","true","true","String","""bucket_id""","","/**
 * The bucket id of the image. This is a read-only property that
 * is automatically computed from the DATA column.
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.EXTERNAL_CONTENT_URI","true","false","false","true","true","Uri","getContentUri(""external"")","","/**
 * The content:// style URI for the ""primary"" external storage
 * volume.
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""video_id ASC""","","/**
 * The default sort order for this table
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ORIENTATION","true","false","false","true","true","String","""orientation""","","/**
 * The orientation for the image expressed as degrees.
 * Only degrees 0, 90, 180, 270 will work.
 * <P>Type: INTEGER</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Audio.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the audio file, in ms
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Members.GENRE_ID","true","false","false","true","true","String","""genre_id""","","/**
 * The ID of the genre
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Thumbnails.KIND","true","false","false","true","true","String","""kind""","","/**
 * The kind of the thumbnail
 * <P>Type: INTEGER (One of the values below)</P>
 */
","\android\provider\MediaStore.java"
"android.provider.MediaStore.ARTIST","true","false","false","true","true","String","""artist""","","/**
 * The artist who created the video file, if any
 * <P>Type: TEXT</P>
 */
","\android\provider\MediaStore.java"
"android.provider.Images.MINI_KIND","true","false","false","true","true","int","1","","","\android\provider\MediaStore.java"
"android.provider.Albums.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/albums""","","/**
 * The MIME type for this table.
 */
","\android\provider\MediaStore.java"
"android.provider.Video.FULL_SCREEN_KIND","true","false","false","true","true","int","2","","","\android\provider\MediaStore.java"
"android.webkit.CallbackProxy.SCALE_CHANGED","false","false","true","true","true","int","123","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.LOGTAG","false","false","true","true","true","String","""CallbackProxy""","","// Logging tag
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.HISTORY_INDEX_CHANGED","false","false","true","true","true","int","136","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.RECEIVED_ICON","false","false","true","true","true","int","101","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.JS_CONFIRM","false","false","true","true","true","int","113","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.CLOSE_WINDOW","false","false","true","true","true","int","110","","","\android\webkit\CallbackProxy.java"
"android.webkit.ResultTransport.mResult","false","false","true","false","false","E","","","// Private result object
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mWebCoreThreadTime","false","false","true","false","false","long","","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.JS_PROMPT","false","false","true","true","true","int","114","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.REPORT_ERROR","false","false","true","true","true","int","119","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.REQUEST_FOCUS","false","false","true","true","true","int","122","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.REACHED_APPCACHE_MAXSIZE","false","false","true","true","true","int","127","","","\android\webkit\CallbackProxy.java"
"android.webkit.UploadFile.mValue","false","false","true","false","false","Uri","","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.ASYNC_KEYEVENTS","false","false","true","true","true","int","116","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.GEOLOCATION_PERMISSIONS_SHOW_PROMPT","false","false","true","true","true","int","130","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.EXCEEDED_DATABASE_QUOTA","false","false","true","true","true","int","126","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mLatestProgress","false","false","true","false","false","int","100","","// Start with 100 to indicate it is not in load for the empty page.
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.RECEIVED_CERTIFICATE","false","false","true","true","true","int","124","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.RECEIVED_TOUCH_ICON_URL","false","false","true","true","true","int","132","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.OVERRIDE_URL","false","false","true","true","true","int","103","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.PERF_PROBE","false","false","true","true","true","boolean","false","","// Performance probe
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.GEOLOCATION_PERMISSIONS_HIDE_PROMPT","false","false","true","true","true","int","131","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mBackForwardList","false","false","true","false","true","WebBackForwardList","","","// Back/Forward list
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.JS_UNLOAD","false","false","true","true","true","int","115","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mWebBackForwardListClient","false","false","true","false","false","WebBackForwardListClient","","","// Back/Forward list client
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.CREATE_WINDOW","false","false","true","true","true","int","109","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.ADD_MESSAGE_TO_CONSOLE","false","false","true","true","true","int","129","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mValue","false","false","true","false","false","Uri","","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.OPEN_FILE_CHOOSER","false","false","true","true","true","int","134","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.NOTIFY","false","false","true","true","true","int","200","","// Message triggered by the client to resume execution
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.PROGRESS","false","false","true","true","true","int","106","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.JS_TIMEOUT","false","false","true","true","true","int","128","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.SAVE_PASSWORD","false","false","true","true","true","int","111","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.PAGE_STARTED","false","false","true","true","true","int","100","","// Message Ids
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mWebViewClient","false","false","true","false","false","WebViewClient","","","// Instance of WebViewClient that is the client callback.
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.DOWNLOAD_FILE","false","false","true","true","true","int","118","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.RESEND_POST_DATA","false","false","true","true","true","int","120","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.SWITCH_OUT_HISTORY","false","false","true","true","true","int","125","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.AUTH_CREDENTIALS","false","false","true","true","true","int","137","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.UPDATE_VISITED","false","false","true","true","true","int","107","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mResult","false","false","true","false","false","E","","","// Private result object
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mContext","false","false","true","false","true","Context","","","// Used to call startActivity during url override.
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.PAGE_FINISHED","false","false","true","true","true","int","121","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.ADD_HISTORY_ITEM","false","false","true","true","true","int","135","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mWebView","false","false","true","false","true","WebView","","","// Instance of WebView for handling UI requests.
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mWebChromeClient","false","false","true","false","false","WebChromeClient","","","// Instance of WebChromeClient for handling all chrome functions.
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mWebCoreIdleTime","false","false","true","false","false","long","","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.RECEIVED_TITLE","false","false","true","true","true","int","102","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mProgressUpdatePending","false","false","true","false","false","boolean","","","// Keep track of multiple progress updates.
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.JS_ALERT","false","false","true","true","true","int","112","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.AUTH_REQUEST","false","false","true","true","true","int","104","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.LOAD_RESOURCE","false","false","true","true","true","int","108","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.mDownloadListener","false","false","true","false","false","DownloadListener","","","// Client registered callback listener for download events
","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.SSL_ERROR","false","false","true","true","true","int","105","","","\android\webkit\CallbackProxy.java"
"android.webkit.CallbackProxy.GET_VISITED_HISTORY","false","false","true","true","true","int","133","","","\android\webkit\CallbackProxy.java"
"android.util.Base64InputStream.EMPTY","false","false","true","true","false","byte","new byte[0]","","","\android\util\Base64InputStream.java"
"android.util.Base64InputStream.outputEnd","false","false","true","false","false","int","","","","\android\util\Base64InputStream.java"
"android.util.Base64InputStream.eof","false","false","true","false","false","boolean","","","","\android\util\Base64InputStream.java"
"android.util.Base64InputStream.coder","false","false","true","false","true","Base64.Coder","","","","\android\util\Base64InputStream.java"
"android.util.Base64InputStream.inputBuffer","false","false","true","false","false","byte","","","","\android\util\Base64InputStream.java"
"android.util.Base64InputStream.outputStart","false","false","true","false","false","int","","","","\android\util\Base64InputStream.java"
"android.util.Base64InputStream.BUFFER_SIZE","false","false","true","true","true","int","2048","","","\android\util\Base64InputStream.java"
"android.os.PatternMatcher.CREATOR","true","false","false","true","true","Parcelable.Creator<PatternMatcher>","new Parcelable.Creator<PatternMatcher>() {

    public PatternMatcher createFromParcel(Parcel source) {
        return new PatternMatcher(source);
    }

    public PatternMatcher[] newArray(int size) {
        return new PatternMatcher[size];
    }
}","","","\android\os\PatternMatcher.java"
"android.os.PatternMatcher.PATTERN_LITERAL","true","false","false","true","true","int","0","","/**
 * Pattern type: the given pattern must exactly match the string it is
 * tested against.
 */
","\android\os\PatternMatcher.java"
"android.os.PatternMatcher.PATTERN_SIMPLE_GLOB","true","false","false","true","true","int","2","","/**
 * Pattern type: the given pattern is interpreted with a
 * simple glob syntax for matching against the string it is tested against.
 * In this syntax, you can use the '*' character to match against zero or
 * more occurrences of the character immediately before.  If the
 * character before it is '.' it will match any character.  The character
 * '\' can be used as an escape.  This essentially provides only the '*'
 * wildcard part of a normal regexp.
 */
","\android\os\PatternMatcher.java"
"android.os.PatternMatcher.mPattern","false","false","true","false","true","String","","","","\android\os\PatternMatcher.java"
"android.os.PatternMatcher.PATTERN_PREFIX","true","false","false","true","true","int","1","","/**
 * Pattern type: the given pattern must match the
 * beginning of the string it is tested against.
 */
","\android\os\PatternMatcher.java"
"android.os.PatternMatcher.mType","false","false","true","false","true","int","","","","\android\os\PatternMatcher.java"
"android.app.Activity.mVisibleFromClient","false","false","false","false","false","boolean","true","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.mWindowManager","false","false","true","false","false","WindowManager","","","","\android\app\Activity.java"
"android.app.Activity.mWindowAdded","false","false","false","false","false","boolean","false","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.mManagedCursors","false","false","true","false","true","ArrayList<ManagedCursor>","new ArrayList<ManagedCursor>()","","","\android\app\Activity.java"
"android.app.Activity.DEFAULT_KEYS_DIALER","true","false","false","true","true","int","1","","/**
 * Use with {@link #setDefaultKeyMode} to launch the dialer during default
 * key handling.
 *
 * @see #setDefaultKeyMode
 */
","\android\app\Activity.java"
"android.app.Activity.DEFAULT_KEYS_SEARCH_GLOBAL","true","false","false","true","true","int","4","","/**
 * Use with {@link #setDefaultKeyMode} to specify that unhandled keystrokes
 * will start a global search (typically web search, but some platforms may define alternate
 * methods for global search)
 *
 * <p>See {@link android.app.SearchManager android.app.SearchManager} for more details.
 *
 * @see #setDefaultKeyMode
 */
","\android\app\Activity.java"
"android.app.Activity.mUpdated","false","false","true","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.mParent","false","false","false","false","false","Activity","","","","\android\app\Activity.java"
"android.app.Activity.DEFAULT_KEYS_SEARCH_LOCAL","true","false","false","true","true","int","3","","/**
 * Use with {@link #setDefaultKeyMode} to specify that unhandled keystrokes
 * will start an application-defined search.  (If the application or activity does not
 * actually define a search, the the keys will be ignored.)
 *
 * <p>See {@link android.app.SearchManager android.app.SearchManager} for more details.
 *
 * @see #setDefaultKeyMode
 */
","\android\app\Activity.java"
"android.app.Activity.mLastNonConfigurationChildInstances","false","false","false","false","false","HashMap<String,Object>","","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.mCurrentConfig","false","false","false","false","false","Configuration","","","/*package*/
","\android\app\Activity.java"
"android.app.ManagedCursor.mReleased","false","false","true","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.mManagedDialogs","false","false","true","false","false","SparseArray<ManagedDialog>","","","","\android\app\Activity.java"
"android.app.Activity.mDefaultKeyMode","false","false","true","false","false","int","DEFAULT_KEYS_DISABLE","","","\android\app\Activity.java"
"android.app.Activity.mIntent","false","false","false","false","false","Intent","","","/*package*/
","\android\app\Activity.java"
"android.app.ManagedDialog.mDialog","false","false","false","false","false","Dialog","","","","\android\app\Activity.java"
"android.app.Activity.sInstanceCount","false","false","true","true","false","long","0","","","\android\app\Activity.java"
"android.app.Activity.mReleased","false","false","true","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.mDialog","false","false","false","false","false","Dialog","","","","\android\app\Activity.java"
"android.app.Activity.mCalled","false","false","false","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.WINDOW_HIERARCHY_TAG","false","false","true","true","true","String","""android:viewHierarchyState""","","","\android\app\Activity.java"
"android.app.Activity.SAVED_DIALOGS_TAG","false","false","true","true","true","String","""android:savedDialogs""","","","\android\app\Activity.java"
"android.app.Activity.mStartedActivity","false","false","false","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.mConfigChangeFlags","false","false","false","false","false","int","","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.RESULT_CANCELED","true","false","false","true","true","int","0","","/**
 * Standard activity result: operation canceled.
 */
","\android\app\Activity.java"
"android.app.Activity.mArgs","false","false","false","false","false","Bundle","","","","\android\app\Activity.java"
"android.app.Activity.mDecor","false","false","false","false","false","View","null","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.mTitleReady","false","false","true","false","false","boolean","false","","","\android\app\Activity.java"
"android.app.Activity.DEFAULT_KEYS_DISABLE","true","false","false","true","true","int","0","","/**
 * Use with {@link #setDefaultKeyMode} to turn off default handling of
 * keys.
 *
 * @see #setDefaultKeyMode
 */
","\android\app\Activity.java"
"android.app.Activity.mLastNonConfigurationInstance","false","false","false","false","false","Object","","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.mResumed","false","false","true","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.mCursor","false","false","true","false","true","Cursor","","","","\android\app\Activity.java"
"android.app.ManagedCursor.mCursor","false","false","true","false","true","Cursor","","","","\android\app\Activity.java"
"android.app.Activity.mApplication","false","false","true","false","false","Application","","","","\android\app\Activity.java"
"android.app.Activity.mTitleColor","false","false","true","false","false","int","0","","","\android\app\Activity.java"
"android.app.Activity.mFinished","false","false","false","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.mEmbeddedID","false","false","false","false","false","String","","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.mActivityInfo","false","false","false","false","false","ActivityInfo","","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.SAVED_DIALOG_IDS_KEY","false","false","true","true","true","String","""android:savedDialogIds""","","","\android\app\Activity.java"
"android.app.ManagedDialog.mArgs","false","false","false","false","false","Bundle","","","","\android\app\Activity.java"
"android.app.Activity.mDefaultKeySsb","false","false","true","false","false","SpannableStringBuilder","null","","","\android\app\Activity.java"
"android.app.Activity.mResultData","false","false","false","false","false","Intent","null","","","\android\app\Activity.java"
"android.app.Activity.RESULT_OK","true","false","false","true","true","int","-1","","/**
 * Standard activity result: operation succeeded.
 */
","\android\app\Activity.java"
"android.app.Activity.mComponent","false","false","true","false","false","ComponentName","","","","\android\app\Activity.java"
"android.app.Activity.SAVED_DIALOG_ARGS_KEY_PREFIX","false","false","true","true","true","String","""android:dialog_args_""","","","\android\app\Activity.java"
"android.app.Activity.mSearchManager","false","false","true","false","false","SearchManager","","","","\android\app\Activity.java"
"android.app.Activity.mStopped","false","false","true","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.mTitle","false","false","true","false","false","CharSequence","","","","\android\app\Activity.java"
"android.app.Activity.mMainThread","false","false","false","false","false","ActivityThread","","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.RESULT_FIRST_USER","true","false","false","true","true","int","1","","/**
 * Start of user-defined activity results.
 */
","\android\app\Activity.java"
"android.app.Activity.mIdent","false","false","true","false","false","int","","","","\android\app\Activity.java"
"android.app.Activity.mHandler","false","false","true","false","true","Handler","new Handler()","","","\android\app\Activity.java"
"android.app.Activity.mResultCode","false","false","false","false","false","int","RESULT_CANCELED","","// protected by synchronized (this)
","\android\app\Activity.java"
"android.app.Activity.DEFAULT_KEYS_SHORTCUT","true","false","false","true","true","int","2","","/**
 * Use with {@link #setDefaultKeyMode} to execute a menu shortcut in
 * default key handling.
 *
 * <p>That is, the user does not need to hold down the menu key to execute menu shortcuts.
 *
 * @see #setDefaultKeyMode
 */
","\android\app\Activity.java"
"android.app.Activity.mWindow","false","false","true","false","false","Window","","","","\android\app\Activity.java"
"android.app.Activity.mVisibleFromServer","false","false","false","false","false","boolean","false","","/*package*/
","\android\app\Activity.java"
"android.app.Activity.mInstrumentation","false","false","true","false","false","Instrumentation","","","// set by the thread after the constructor and before onCreate(Bundle savedInstanceState) is called.
","\android\app\Activity.java"
"android.app.ManagedCursor.mUpdated","false","false","true","false","false","boolean","","","","\android\app\Activity.java"
"android.app.Activity.FOCUSED_STATE_SET","false","true","false","true","true","int","{ com.android.internal.R.attr.state_focused }","","","\android\app\Activity.java"
"android.app.Activity.mUiThread","false","false","true","false","false","Thread","","","","\android\app\Activity.java"
"android.app.Activity.TAG","false","false","true","true","true","String","""Activity""","","","\android\app\Activity.java"
"android.app.Activity.mToken","false","false","true","false","false","IBinder","","","","\android\app\Activity.java"
"android.app.Activity.SAVED_DIALOG_KEY_PREFIX","false","false","true","true","true","String","""android:dialog_""","","","\android\app\Activity.java"
"android.pim.vcard.VCardConfig.NAME_ORDER_EUROPE","true","false","false","true","true","int","0x4","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V30_GENERIC_UTF8_STR","false","false","false","true","true","String","""v30_generic""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.LOG_LEVEL_NONE","false","false","false","true","true","int","0","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.sJapaneseMobileTypeSet","false","false","true","true","true","Set<Integer>","","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.PARSE_TYPE_FOMA","false","false","false","true","true","int","3","","// For Japanese FOMA mobile phones.
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.PARSE_TYPE_MOBILE_PHONE_JP","false","false","false","true","true","int","2","","// For Japanese mobile phones.
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_JAPANESE_MOBILE_STR","false","false","false","true","true","String","""v21_japanese_mobile""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V30_GENERIC_UTF8","true","false","false","true","true","int","(FLAG_V30 | NAME_ORDER_DEFAULT | FLAG_CHARSET_UTF8 | FLAG_USE_DEFACT_PROPERTY | FLAG_USE_ANDROID_PROPERTY)","","/**
 * <P>
 * General vCard format with the version 3.0. Uses UTF-8 for the charset.
 * </P>
 * <P>
 * Not fully ready yet. Use with caution when you use this.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_DOCOMO","true","false","false","true","true","int","(VCARD_TYPE_V21_JAPANESE_MOBILE | FLAG_DOCOMO)","","/**
 * <P>
 * VCard format used in DoCoMo, which is one of Japanese mobile phone careers.
 * </p>
 * <P>
 * Base version is vCard 2.1, but the data has several DoCoMo-specific convensions.
 * No Android-specific property nor defact property is included. The ""Primary"" properties
 * are NOT encoded to Quoted-Printable.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V30_EUROPE_UTF8","true","false","false","true","true","int","(FLAG_V30 | NAME_ORDER_EUROPE | FLAG_CHARSET_UTF8 | FLAG_USE_DEFACT_PROPERTY | FLAG_USE_ANDROID_PROPERTY)","","/**
 * <P>
 * General vCard format with the version 3.0 with some Europe convension. Uses UTF-8.
 * </P>
 * <P>
 * Not ready yet. Use with caution when you use this.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.sVCardTypeMap","false","false","true","true","true","Map<String,Integer>","","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V30_JAPANESE_UTF8_STR","false","false","false","true","true","String","""v30_japanese_utf8""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V30_JAPANESE_SJIS_STR","false","false","false","true","true","String","""v30_japanese_sjis""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V30_JAPANESE_SJIS","true","false","false","true","true","int","(FLAG_V30 | NAME_ORDER_JAPANESE | FLAG_CHARSET_SHIFT_JIS | FLAG_USE_DEFACT_PROPERTY | FLAG_USE_ANDROID_PROPERTY)","","/**
 * <P>
 * vCard format for miscellaneous Japanese devices, using Shift_Jis for
 * parsing/composing the vCard data.
 * </P>
 * <P>
 * Not ready yet. Use with caution when you use this.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.NAME_ORDER_JAPANESE","true","false","false","true","true","int","0x8","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_JAPANESE_SJIS","true","false","false","true","true","int","(FLAG_V21 | NAME_ORDER_JAPANESE | FLAG_CHARSET_SHIFT_JIS | FLAG_USE_DEFACT_PROPERTY | FLAG_USE_ANDROID_PROPERTY)","","/**
 * <P>
 * vCard 2.1 format for miscellaneous Japanese devices. Shift_Jis is used for
 * parsing/composing the vCard data.
 * </P>
 * <P>
 * Not ready yet. Use with caution when you use this.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_USE_ANDROID_PROPERTY","false","false","true","true","true","int","0x80000000","","/**
 * The flag indicating the vCard composer will add some ""X-"" properties used only in Android
 * when the formal vCard specification does not have appropriate fields for that data.
 *
 * For example, Android accepts nickname information while vCard 2.1 does not.
 * When this flag is on, vCard composer emits alternative ""X-"" property (like ""X-NICKNAME"")
 * instead of just dropping it.
 *
 * vCard parser code automatically parses the field emitted even when this flag is off.
 *
 * Note that this flag does not assure all the information must be hold in the emitted vCard.
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_JAPANESE_UTF8_STR","false","false","false","true","true","String","""v21_japanese_utf8""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_CONVERT_PHONETIC_NAME_STRINGS","true","false","false","true","true","int","0x0800000","","/**
 * <P>
 * The flag indicating that phonetic name related fields must be converted to
 * appropriate form. Note that ""appropriate"" is not defined in any vCard specification.
 * This is Android-specific.
 * </P>
 * <P>
 * One typical (and currently sole) example where we need this flag is the time when
 * we need to emit Japanese phonetic names into vCard entries. The property values
 * should be encoded into half-width katakana when the target importer is Japanese mobile
 * phones', which are probably not able to parse full-width hiragana/katakana for
 * historical reasons, while the vCard importers embedded to softwares for PC should be
 * able to parse them as we expect.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.LOG_TAG","false","false","true","true","true","String","""VCardConfig""","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.LOG_LEVEL_SHOW_WARNING","false","false","false","true","true","int","0x2","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.NAME_ORDER_DEFAULT","true","false","false","true","true","int","0","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_EUROPE_UTF8","true","false","false","true","true","int","(FLAG_V21 | NAME_ORDER_EUROPE | FLAG_CHARSET_UTF8 | FLAG_USE_DEFACT_PROPERTY | FLAG_USE_ANDROID_PROPERTY)","","/**
 * <P>
 * General vCard format for the vCard 2.1 with some Europe convension. Uses Utf-8.
 * Currently, only name order is considered (""Prefix Middle Given Family Suffix"")
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_V30","true","false","false","true","true","int","1","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_JAPANESE_MOBILE","true","false","false","true","true","int","(FLAG_V21 | NAME_ORDER_JAPANESE | FLAG_CHARSET_SHIFT_JIS | FLAG_CONVERT_PHONETIC_NAME_STRINGS | FLAG_REFRAIN_QP_TO_NAME_PROPERTIES)","","/**
 * <P>
 * The vCard 2.1 based format which (partially) considers the convention in Japanese
 * mobile phones, where phonetic names are translated to half-width katakana if
 * possible, etc.
 * </P>
 * <P>
 * Not ready yet. Use with caution when you use this.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_CHARSET_MASK","false","false","true","true","true","int","0xF00","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_USE_DEFACT_PROPERTY","false","false","true","true","true","int","0x40000000","","/**
 * The flag indicating the vCard composer will add some ""X-"" properties seen in the
 * vCard data emitted by the other softwares/devices when the formal vCard specification
 * does not have appropriate field(s) for that data.
 *
 * One example is X-PHONETIC-FIRST-NAME/X-PHONETIC-MIDDLE-NAME/X-PHONETIC-LAST-NAME, which are
 * for phonetic name (how the name is pronounced), seen in the vCard emitted by some other
 * non-Android devices/softwares. We chose to enable the vCard composer to use those
 * defact properties since they are also useful for Android devices.
 *
 * Note for developers: only ""X-"" properties should be added with this flag. vCard 2.1/3.0
 * allows any kind of ""X-"" properties but does not allow non-""X-"" properties (except IANA tokens
 * in vCard 3.0). Some external parsers may get confused with non-valid, non-""X-"" properties.
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_V21","true","false","false","true","true","int","0","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_CHARSET_UTF8","false","false","true","true","true","int","0","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_JAPANESE_SJIS_STR","false","false","false","true","true","String","""v21_japanese_sjis""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_GENERIC_UTF8_STR","false","false","false","true","false","String","""v21_generic""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_DOCOMO","false","false","true","true","true","int","0x20000000","","/**
 * The flag indicating some specific dialect seen in vcard of DoCoMo (one of Japanese
 * mobile careers) should be used. This flag does not include any other information like
 * that ""the vCard is for Japanese"". So it is ""possible"" that ""the vCard should have DoCoMo's
 * dialect but the name order should be European"", but it is not recommended.
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_DEFAULT","true","false","false","true","false","int","VCARD_TYPE_V21_GENERIC_UTF8","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.PARSE_TYPE_APPLE","false","false","false","true","true","int","1","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_DOCOMO_STR","false","false","false","true","true","String","""docomo""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.DEFAULT_CHARSET","true","false","false","true","true","String","""iso-8859-1""","","// decode the unicode to the original charset. If not, this setting will cause some bug.
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_REFRAIN_IMAGE_EXPORT","true","false","false","true","true","int","0x02000000","","/**
 * <P>
 * The flag asking exporter to refrain image export.
 * </P>
 * @hide will be deleted in the near future.
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.PARSE_TYPE_WINDOWS_MOBILE_JP","false","false","false","true","true","int","4","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_GENERIC_UTF8","true","false","false","true","true","int","(FLAG_V21 | NAME_ORDER_DEFAULT | FLAG_CHARSET_UTF8 | FLAG_USE_DEFACT_PROPERTY | FLAG_USE_ANDROID_PROPERTY)","","/**
 * <P>
 * Generic vCard format with the vCard 2.1. Uses UTF-8 for the charset.
 * When composing a vCard entry, the US convension will be used toward formatting
 * some values.
 * </P>
 * <P>
 * e.g. The order of the display name would be ""Prefix Given Middle Family Suffix"",
 * while it should be ""Prefix Family Middle Given Suffix"" in Japan for example.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_JAPANESE_UTF8","true","false","false","true","true","int","(FLAG_V21 | NAME_ORDER_JAPANESE | FLAG_CHARSET_UTF8 | FLAG_USE_DEFACT_PROPERTY | FLAG_USE_ANDROID_PROPERTY)","","/**
 * <P>
 * The vCard 2.1 format for miscellaneous Japanese devices, using UTF-8 as default charset.
 * </P>
 * <P>
 * Not ready yet. Use with caution when you use this.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_REFRAIN_QP_TO_NAME_PROPERTIES","true","false","false","true","true","int","0x10000000","","/**
 * <P>
 * The flag indicating the vCard composer does ""NOT"" use Quoted-Printable toward ""primary""
 * properties even though it is required by vCard 2.1 (QP is prohibited in vCard 3.0).
 * </P>
 * <P>
 * We actually cannot define what is the ""primary"" property. Note that this is NOT defined
 * in vCard specification either. Also be aware that it is NOT related to ""primary"" notion
 * used in {@link android.provider.ContactsContract}.
 * This notion is just for vCard composition in Android.
 * </P>
 * <P>
 * We added this Android-specific notion since some (incomplete) vCard exporters for vCard 2.1
 * do NOT use Quoted-Printable encoding toward some properties related names like ""N"", ""FN"", etc.
 * even when their values contain non-ascii or/and CR/LF, while they use the encoding in the
 * other properties like ""ADR"", ""ORG"", etc.
 * <P>
 * We are afraid of the case where some vCard importer also forget handling QP presuming QP is
 * not used in such fields.
 * </P>
 * <P>
 * This flag is useful when some target importer you are going to focus on does not accept
 * such properties with Quoted-Printable encoding.
 * </P>
 * <P>
 * Again, we should not use this flag at all for complying vCard 2.1 spec.
 * </P>
 * <P>
 * In vCard 3.0, Quoted-Printable is explicitly ""prohibitted"", so we don't need to care this
 * kind of problem (hopefully).
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V30_EUROPE_STR","false","false","false","true","true","String","""v30_europe""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.LOG_LEVEL_PERFORMANCE_MEASUREMENT","false","false","false","true","true","int","0x1","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.LOG_LEVEL_VERBOSE","false","false","false","true","true","int","LOG_LEVEL_PERFORMANCE_MEASUREMENT | LOG_LEVEL_SHOW_WARNING","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.PARSE_TYPE_UNKNOWN","false","false","false","true","true","int","0","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.LOG_LEVEL","false","false","false","true","true","int","LOG_LEVEL_NONE","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V30_JAPANESE_UTF8","true","false","false","true","true","int","(FLAG_V30 | NAME_ORDER_JAPANESE | FLAG_CHARSET_UTF8 | FLAG_USE_DEFACT_PROPERTY | FLAG_USE_ANDROID_PROPERTY)","","/**
 * <P>
 * The vCard 3.0 format for miscellaneous Japanese devices, using UTF-8 as default charset.
 * </P>
 * <P>
 * Not ready yet. Use with caution when you use this.
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_APPEND_TYPE_PARAM","true","false","false","true","true","int","0x04000000","","/**
 * <P>
 * The flag indicating the vCard composer ""for 2.1"" emits ""TYPE="" string toward TYPE params
 * every time possible. The default behavior does not emit it and is valid in the spec.
 * In vCrad 3.0, this flag is unnecessary, since ""TYPE="" is MUST in vCard 3.0 specification.
 * </P>
 * <P>
 * Detail:
 * How more than one TYPE fields are expressed is different between vCard 2.1 and vCard 3.0.
 * </p>
 * <P>
 * e.g.<BR />
 * 1) Probably valid in both vCard 2.1 and vCard 3.0: ""ADR;TYPE=DOM;TYPE=HOME:...""<BR />
 * 2) Valid in vCard 2.1 but not in vCard 3.0: ""ADR;DOM;HOME:...""<BR />
 * 3) Valid in vCard 3.0 but not in vCard 2.1: ""ADR;TYPE=DOM,HOME:...""<BR />
 * </P>
 * <P>
 * 2) had been the default of VCard exporter/importer in Android, but it is found that
 * some external exporter is not able to parse the type format like 2) but only 3).
 * </P>
 * <P>
 * If you are targeting to the importer which cannot accept TYPE params without ""TYPE=""
 * strings (which should be rare though), please use this flag.
 * </P>
 * <P>
 * Example usage: int vcardType = (VCARD_TYPE_V21_GENERIC | FLAG_APPEND_TYPE_PARAM);
 * </P>
 */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.FLAG_CHARSET_SHIFT_JIS","false","false","true","true","true","int","0x100","","","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.VCARD_TYPE_V21_EUROPE_UTF8_STR","false","false","false","true","true","String","""v21_europe""","","/* package */
","\android\pim\vcard\VCardConfig.java"
"android.pim.vcard.VCardConfig.NAME_ORDER_MASK","false","false","true","true","true","int","0xC","","","\android\pim\vcard\VCardConfig.java"
"android.app.ProgressDialog.mProgressNumber","false","false","true","false","false","TextView","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mMessage","false","false","true","false","false","CharSequence","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mProgressNumberFormat","false","false","true","false","false","String","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.STYLE_SPINNER","true","false","false","true","true","int","0","","/**
 * Creates a ProgressDialog with a ciruclar, spinning progress
 * bar. This is the default.
 */
","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mProgressPercent","false","false","true","false","false","TextView","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mMax","false","false","true","false","false","int","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mHasStarted","false","false","true","false","false","boolean","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mIncrementSecondaryBy","false","false","true","false","false","int","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mMessageView","false","false","true","false","false","TextView","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mViewUpdateHandler","false","false","true","false","false","Handler","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mProgress","false","false","true","false","false","ProgressBar","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mIndeterminateDrawable","false","false","true","false","false","Drawable","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mIndeterminate","false","false","true","false","false","boolean","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mProgressStyle","false","false","true","false","false","int","STYLE_SPINNER","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mSecondaryProgressVal","false","false","true","false","false","int","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mIncrementBy","false","false","true","false","false","int","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.STYLE_HORIZONTAL","true","false","false","true","true","int","1","","/**
 * Creates a ProgressDialog with a horizontal progress bar.
 */
","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mProgressVal","false","false","true","false","false","int","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mProgressPercentFormat","false","false","true","false","false","NumberFormat","","","","\android\app\ProgressDialog.java"
"android.app.ProgressDialog.mProgressDrawable","false","false","true","false","false","Drawable","","","","\android\app\ProgressDialog.java"
"android.webkit.WebViewCore.mNode","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_BACKGROUND_COLOR","false","false","false","true","true","int","126","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.WEBKIT_DRAW","false","false","false","true","true","int","130","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.STOP_LOADING","false","false","false","true","true","int","101","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_MOVE_MOUSE","false","false","false","true","true","int","135","","// UI nav messages
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mTextWrapScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.BaseUrlData.mData","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.LOGTAG","false","false","true","true","true","String","""webcore""","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mContext","false","false","true","false","true","Context","","","// Context for initializing the BrowserFrame with the proper assets.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.LOAD_URL","false","false","false","true","true","int","100","","","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mTop","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mDrawIsScheduled","false","false","true","false","false","boolean","","","// Used to avoid posting more than one draw message.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.DUMP_DOMTREE","false","false","false","true","true","int","170","","// debugging
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.mTid","false","false","true","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.STOP_LOADING","false","false","false","true","true","int","101","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SYNC_SCROLL","false","false","false","true","true","int","131","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.LISTBOX_CHOICES","false","false","false","true","true","int","123","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchEventData.mReprocess","false","false","false","false","false","boolean","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mMinPrefWidth","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mHeight","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mSettings","false","false","true","false","true","WebSettings","","","// Settings object for maintaining all settings
","\android\webkit\WebViewCore.java"
"android.webkit.BaseUrlData.mEncoding","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mSavedPriority","false","false","true","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.JSInterfaceData.mObject","false","false","false","false","false","Object","","","","\android\webkit\WebViewCore.java"
"android.webkit.CursorData.mNode","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mWidth","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mBaseUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.DrawData.mRestoreState","false","false","false","false","false","RestoreState","","","// only non-null if it is for the first
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.GO_BACK_FORWARD","false","false","false","true","true","int","106","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.GEOLOCATION_PERMISSIONS_PROVIDE","false","false","false","true","true","int","180","","// Geolocation
","\android\webkit\WebViewCore.java"
"android.webkit.RestoreState.mTextWrapScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.REPLACE_TEXT","false","false","false","true","true","int","114","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.POST_URL","false","false","false","true","true","int","132","","","\android\webkit\WebViewCore.java"
"android.webkit.WebCoreThread.INITIALIZE","false","false","true","true","true","int","0","","// Message id for initializing a new WebViewCore.
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_GLOBAL_BOUNDS","false","false","false","true","true","int","116","","","\android\webkit\WebViewCore.java"
"android.webkit.TextSelectionData.mEnd","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.INITIALIZE","false","false","true","true","true","int","0","","// Message id for initializing a new WebViewCore.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mMaxScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mNewEnd","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.KEY_UP","false","false","false","true","true","int","104","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_GLOBAL_BOUNDS","false","false","false","true","true","int","116","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.DESTROY","false","false","true","true","true","int","200","","// private message ids
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.UPDATE_FRAME_CACHE_IF_LOADING","false","false","false","true","true","int","98","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mRestoreState","false","false","false","false","false","RestoreState","","","// only non-null if it is for the first
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mReplace","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mBlockMessages","false","false","true","false","false","boolean","","","// posting more messages to the EventHub or to WebView's event handler.
","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mContentHeight","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.DrawData.mMinPrefWidth","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.DUMP_V8COUNTERS","false","false","false","true","true","int","173","","","\android\webkit\WebViewCore.java"
"android.webkit.CursorData.mFrame","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.POPULATE_VISITED_LINKS","false","false","false","true","true","int","181","","","\android\webkit\WebViewCore.java"
"android.webkit.BaseUrlData.mHistoryUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.LOAD_DATA","false","false","false","true","true","int","139","","","\android\webkit\WebViewCore.java"
"android.webkit.WebCoreThread.REDUCE_PRIORITY","false","false","true","true","true","int","1","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.HIDE_FULLSCREEN","false","false","false","true","true","int","182","","","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mYPercentInDoc","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mYPercentInView","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.ON_RESUME","false","false","false","true","true","int","144","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.ADD_PACKAGE_NAMES","false","false","false","true","true","int","184","","// navigator.isApplicationInstalled()
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SCROLL_BITS","false","false","false","true","true","int","Paint.FILTER_BITMAP_FLAG | Paint.DITHER_FLAG","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mTextGeneration","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.PASS_TO_JS","false","false","false","true","true","int","115","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.DOC_HAS_IMAGES","false","false","false","true","true","int","120","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_BACKGROUND_COLOR","false","false","false","true","true","int","126","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewY","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewX","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mEncoding","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mPostData","false","false","false","false","false","byte","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.mHandler","false","false","true","false","false","Handler","","","// Private handler for WebCore messages.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_SCROLL_OFFSET","false","false","false","true","true","int","107","","","\android\webkit\WebViewCore.java"
"android.webkit.PostUrlData.mUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewportInitialScale","false","false","true","false","false","int","0","","/*
     * scale in percent, range is from 1 to 1000. 0 means undefined.
     */
","\android\webkit\WebViewCore.java"
"android.webkit.DrawData.mViewPoint","false","false","false","false","false","Point","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mExtraHeaders","false","false","false","false","false","Map<String,String>","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mRemember","false","false","false","false","false","boolean","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.DUMP_DOMTREE","false","false","false","true","true","int","170","","// debugging
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mFrame","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_JS_FLAGS","false","false","false","true","true","int","174","","","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mLeft","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.KEY_UP","false","false","false","true","true","int","104","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewPoint","false","false","false","false","false","Point","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.GEOLOCATION_PERMISSIONS_PROVIDE","false","false","false","true","true","int","180","","// Geolocation
","\android\webkit\WebViewCore.java"
"android.webkit.MotionUpData.mBounds","false","false","false","false","false","Rect","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.RESTORE_STATE","false","false","false","true","true","int","108","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mYPercentInDoc","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.GetUrlData.mExtraHeaders","false","false","false","false","false","Map<String,String>","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.mBlockMessages","false","false","true","false","false","boolean","","","// posting more messages to the EventHub or to WebView's event handler.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mXPercentInView","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchEventData.mMetaState","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.TOUCH_UP","false","false","false","true","true","int","140","","// motion
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.DOC_HAS_IMAGES","false","false","false","true","true","int","120","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SINGLE_LISTBOX_CHOICE","false","false","false","true","true","int","124","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mCallbackProxy","false","false","true","false","true","CallbackProxy","","","// Proxy for handling callbacks from native code
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SCROLL_TEXT_INPUT","false","false","false","true","true","int","99","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_NETWORK_STATE","false","false","false","true","true","int","119","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mRestoredScale","false","false","true","false","false","int","0","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.ADD_JS_INTERFACE","false","false","false","true","true","int","138","","","\android\webkit\WebViewCore.java"
"android.webkit.RestoreState.mMinScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.MotionUpData.mY","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mEventHub","false","false","true","false","true","EventHub","","","// EventHub for processing messages
","\android\webkit\WebViewCore.java"
"android.webkit.MotionUpData.mX","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchEventData.mViewY","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchEventData.mViewX","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_MOVE_MOUSE_IF_LATEST","false","false","false","true","true","int","136","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.REMOVE_PACKAGE_NAME","false","false","false","true","true","int","186","","","\android\webkit\WebViewCore.java"
"android.webkit.CursorData.mY","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.CursorData.mX","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mDrawIsPaused","false","false","true","false","false","boolean","","","// Used to suspend drawing.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mJavascriptInterfaces","false","false","true","false","false","Map<String,Object>","","","// Custom JS interfaces to add during the initialization.
","\android\webkit\WebViewCore.java"
"android.webkit.BaseUrlData.mMimeType","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.CLICK","false","false","false","true","true","int","118","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mYPercentInView","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchUpData.mFrame","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.ReplaceTextData.mNewStart","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchUpData.mMoveGeneration","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.LISTBOX_CHOICES","false","false","false","true","true","int","123","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchUpData.mX","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchUpData.mY","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.CLEAR_HISTORY","false","false","false","true","true","int","112","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mScrollX","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mScrollY","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mAllow","false","false","false","false","false","boolean","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_MOVE_FOCUS","false","false","false","true","true","int","127","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.UPDATE_CACHE_AND_TEXT_ENTRY","false","false","false","true","true","int","117","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.VALID_NODE_BOUNDS","false","false","false","true","true","int","146","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.LOAD_DATA","false","false","false","true","true","int","139","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_SCROLL_OFFSET","false","false","false","true","true","int","107","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mEvent","false","false","false","false","false","KeyEvent","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewportHeight","false","false","true","false","false","int","-1","","/*
     * range is from 200 to 10,000. 0 is a special value means device-height. -1
     * means undefined.
     */
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mFocusSizeChanged","false","false","false","false","false","boolean","","","// picture set after the first layout
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mNewStart","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.POST_URL","false","false","false","true","true","int","132","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.POPULATE_VISITED_LINKS","false","false","false","true","true","int","181","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.CLEAR_CACHE","false","false","false","true","true","int","111","","","\android\webkit\WebViewCore.java"
"android.webkit.PostUrlData.mPostData","false","false","false","false","false","byte","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.KEY_DOWN","false","false","false","true","true","int","103","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.UPDATE_CACHE_AND_TEXT_ENTRY","false","false","false","true","true","int","117","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mWidth","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.REQUEST_DOC_AS_TEXT","false","false","false","true","true","int","161","","","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mXPercentInDoc","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.ACTION_LONGPRESS","false","false","false","true","true","int","0x100","","// last two bytes or one of the following values
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.REPLACE_TEXT","false","false","false","true","true","int","114","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.MESSAGE_RELAY","false","false","false","true","true","int","125","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.PAUSE_TIMERS","false","false","false","true","true","int","109","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mBounds","false","false","false","false","false","Rect","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.FREE_MEMORY","false","false","false","true","true","int","145","","","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mHeight","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.PASS_TO_JS","false","false","false","true","true","int","115","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mCurrentViewScale","false","false","true","false","false","float","1.0f","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SAVE_DOCUMENT_STATE","false","false","false","true","true","int","128","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewportUserScalable","false","false","true","false","false","boolean","true","","","\android\webkit\WebViewCore.java"
"android.webkit.TextSelectionData.mStart","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.DUMP_NAVTREE","false","false","false","true","true","int","172","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.CLEAR_CONTENT","false","false","false","true","true","int","134","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mRestoredY","false","false","true","false","false","int","0","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mRestoredX","false","false","true","false","false","int","0","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mMoveGeneration","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.ReplaceTextData.mNewEnd","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_NETWORK_TYPE","false","false","false","true","true","int","183","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.REQUEST_DOC_AS_TEXT","false","false","false","true","true","int","161","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mScrollFilter","false","false","false","false","true","DrawFilter","new PaintFlagsDrawFilter(SCROLL_BITS, 0)","","// If we need to trade better quality for speed, set mScrollFilter to null
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.RELOAD","false","false","false","true","true","int","102","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mLeft","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_NETWORK_TYPE","false","false","false","true","true","int","183","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.CLEAR_SSL_PREF_TABLE","false","false","false","true","true","int","150","","// Network-based messaging
","\android\webkit\WebViewCore.java"
"android.webkit.TouchEventData.mAction","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.JSKeyData.mCurrentText","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mMimeType","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.ReplaceTextData.mReplace","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SINGLE_LISTBOX_CHOICE","false","false","false","true","true","int","124","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.mMessages","false","false","true","false","false","ArrayList<Message>","new ArrayList<Message>()","","// ready.
","\android\webkit\WebViewCore.java"
"android.webkit.GeolocationPermissionsData.mRemember","false","false","false","false","false","boolean","","","","\android\webkit\WebViewCore.java"
"android.webkit.GeolocationPermissionsData.mAllow","false","false","false","false","false","boolean","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mWebView","false","false","true","false","false","WebView","","","// The WebView that corresponds to this WebViewCore.
","\android\webkit\WebViewCore.java"
"android.webkit.ReplaceTextData.mTextGeneration","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mInterfaceName","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SYNC_SCROLL","false","false","false","true","true","int","131","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.TOUCH_EVENT","false","false","false","true","true","int","141","","// message used to pass UI touch events to WebCore
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mMessages","false","false","true","false","false","ArrayList<Message>","new ArrayList<Message>()","","// ready.
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.REQUEST_LABEL","false","false","false","true","true","int","97","","// Message Ids
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.DUMP_NAVTREE","false","false","false","true","true","int","172","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.HandlerDebugString","false","false","false","true","true","String","{ // 97
""REQUEST_LABEL"", // = 98
""UPDATE_FRAME_CACHE_IF_LOADING"", // = 99
""SCROLL_TEXT_INPUT"", // = 100;
""LOAD_URL"", // = 101;
""STOP_LOADING"", // = 102;
""RELOAD"", // = 103;
""KEY_DOWN"", // = 104;
""KEY_UP"", // = 105;
""VIEW_SIZE_CHANGED"", // = 106;
""GO_BACK_FORWARD"", // = 107;
""SET_SCROLL_OFFSET"", // = 108;
""RESTORE_STATE"", // = 109;
""PAUSE_TIMERS"", // = 110;
""RESUME_TIMERS"", // = 111;
""CLEAR_CACHE"", // = 112;
""CLEAR_HISTORY"", // = 113;
""SET_SELECTION"", // = 114;
""REPLACE_TEXT"", // = 115;
""PASS_TO_JS"", // = 116;
""SET_GLOBAL_BOUNDS"", // = 117;
""UPDATE_CACHE_AND_TEXT_ENTRY"", // = 118;
""CLICK"", // = 119;
""SET_NETWORK_STATE"", // = 120;
""DOC_HAS_IMAGES"", // = 121;
""121"", // = 122;
""DELETE_SELECTION"", // = 123;
""LISTBOX_CHOICES"", // = 124;
""SINGLE_LISTBOX_CHOICE"", // = 125;
""MESSAGE_RELAY"", // = 126;
""SET_BACKGROUND_COLOR"", // = 127
""SET_MOVE_FOCUS"", // = 128;
""SAVE_DOCUMENT_STATE"", // = 129;
""129"", // = 130;
""WEBKIT_DRAW"", // = 131;
""SYNC_SCROLL"", // = 132;
""POST_URL"", // = 133;
""SPLIT_PICTURE_SET"", // = 134;
""CLEAR_CONTENT"", // = 135;
""SET_MOVE_MOUSE"", // = 136;
""SET_MOVE_MOUSE_IF_LATEST"", // = 137;
""REQUEST_CURSOR_HREF"", // = 138;
""ADD_JS_INTERFACE"", // = 139;
""LOAD_DATA"", // = 140;
""TOUCH_UP"", // = 141;
""TOUCH_EVENT"", // = 142;
""SET_ACTIVE"", // = 143
""ON_PAUSE"", // = 144
""ON_RESUME"", // = 145
""FREE_MEMORY"", // = 146
""VALID_NODE_BOUNDS"" }","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.REQUEST_CURSOR_HREF","false","false","false","true","true","int","137","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewportMinimumScale","false","false","true","false","false","int","0","","/*
     * scale in percent, range is from 1 to 1000. 0 means undefined.
     */
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.DUMP_RENDERTREE","false","false","false","true","true","int","171","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mMinScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mContentWidth","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.ON_PAUSE","false","false","false","true","true","int","143","","// is global)
","\android\webkit\WebViewCore.java"
"android.webkit.JSInterfaceData.mInterfaceName","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mStart","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mDefaultScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SPLIT_PICTURE_SET","false","false","false","true","true","int","133","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mBrowserFrame","false","false","true","false","false","BrowserFrame","","","// The BrowserFrame is an interface to the native Frame component.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.RESUME_TIMERS","false","false","false","true","true","int","110","","","\android\webkit\WebViewCore.java"
"android.webkit.RestoreState.mViewScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.ZOOM_BITS","false","false","false","true","true","int","Paint.FILTER_BITMAP_FLAG | Paint.DITHER_FLAG | Paint.SUBPIXEL_TEXT_FLAG","","","\android\webkit\WebViewCore.java"
"android.webkit.DrawData.mWidthHeight","false","false","false","false","false","Point","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mCurrentViewWidth","false","false","true","false","false","int","0","","// These values are used to avoid requesting a layout based on old values
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.FREE_MEMORY","false","false","false","true","true","int","145","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mData","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.DELETE_SELECTION","false","false","false","true","true","int","122","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.ADD_JS_INTERFACE","false","false","false","true","true","int","138","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.VIEW_SIZE_CHANGED","false","false","false","true","true","int","105","","","\android\webkit\WebViewCore.java"
"android.webkit.DrawData.mInvalRegion","false","false","false","false","false","Region","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mCurrentViewHeight","false","false","true","false","false","int","0","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mTid","false","false","true","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.mSavedPriority","false","false","true","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_SELECTION","false","false","false","true","true","int","113","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SCROLL_TEXT_INPUT","false","false","false","true","true","int","99","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.RESUME_TIMERS","false","false","false","true","true","int","110","","","\android\webkit\WebViewCore.java"
"android.webkit.WebCoreThread.RESUME_PRIORITY","false","false","true","true","true","int","2","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.HIDE_FULLSCREEN","false","false","false","true","true","int","182","","","\android\webkit\WebViewCore.java"
"android.webkit.RestoreState.mMobileSite","false","false","false","false","false","boolean","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_ACTIVE","false","false","false","true","true","int","142","","// cursor matches the webpage's focus.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.REQUEST_EXT_REPRESENTATION","false","false","false","true","true","int","160","","// Test harness messages
","\android\webkit\WebViewCore.java"
"android.webkit.TouchEventData.mX","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mOrigin","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.REQUEST_LABEL","false","false","false","true","true","int","97","","// Message Ids
","\android\webkit\WebViewCore.java"
"android.webkit.TouchEventData.mY","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.THREAD_NAME","false","false","false","true","true","String","""WebViewCoreThread""","","/* package */
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.DUMP_RENDERTREE","false","false","false","true","true","int","171","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.DESTROY","false","false","true","true","true","int","200","","// private message ids
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mEnd","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.CLEAR_CACHE","false","false","false","true","true","int","111","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mRepaintScheduled","false","false","true","true","false","boolean","false","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mXPercentInDoc","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mZoomFilter","false","false","false","false","true","DrawFilter","new PaintFlagsDrawFilter(ZOOM_BITS, Paint.LINEAR_TEXT_FLAG)","","","\android\webkit\WebViewCore.java"
"android.webkit.MotionUpData.mNode","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.MESSAGE_RELAY","false","false","false","true","true","int","125","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.REQUEST_CURSOR_HREF","false","false","false","true","true","int","137","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.RELOAD","false","false","false","true","true","int","102","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_NETWORK_STATE","false","false","false","true","true","int","119","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.ADD_PACKAGE_NAME","false","false","false","true","true","int","185","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.DUMP_V8COUNTERS","false","false","false","true","true","int","173","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.ADD_PACKAGE_NAME","false","false","false","true","true","int","185","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewportWidth","false","false","true","false","false","int","-1","","/*
     * range is from 200 to 10,000. 0 is a special value means device-width. -1
     * means undefined.
     */
","\android\webkit\WebViewCore.java"
"android.webkit.DrawData.mFocusSizeChanged","false","false","false","false","false","boolean","","","// picture set after the first layout
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mSplitPictureIsScheduled","false","false","true","false","false","boolean","","","// Used to avoid posting more than one split picture message.
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.TOUCH_EVENT","false","false","false","true","true","int","141","","// message used to pass UI touch events to WebCore
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.ACTION_DOUBLETAP","false","false","false","true","true","int","0x200","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.REDUCE_PRIORITY","false","false","true","true","true","int","1","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mAction","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewportMaximumScale","false","false","true","false","false","int","0","","/*
     * scale in percent, range is from 1 to 1000. 0 means undefined.
     */
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mRestoredScreenWidthScale","false","false","true","false","false","int","0","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.UPDATE_FRAME_CACHE_IF_LOADING","false","false","false","true","true","int","98","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.KEY_DOWN","false","false","false","true","true","int","103","","","\android\webkit\WebViewCore.java"
"android.webkit.CursorData.mMoveGeneration","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_JS_FLAGS","false","false","false","true","true","int","174","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.RESTORE_STATE","false","false","false","true","true","int","108","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.GO_BACK_FORWARD","false","false","false","true","true","int","106","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.VALID_NODE_BOUNDS","false","false","false","true","true","int","146","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_SELECTION","false","false","false","true","true","int","113","","","\android\webkit\WebViewCore.java"
"android.webkit.RestoreState.mScrollX","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.RestoreState.mScrollY","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mWebkitScrollY","false","false","true","false","false","int","0","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mNativeClass","false","false","true","false","false","int","","","// The pointer to a native view object.
","\android\webkit\WebViewCore.java"
"android.webkit.JSKeyData.mEvent","false","false","false","false","false","KeyEvent","","","","\android\webkit\WebViewCore.java"
"android.webkit.BaseUrlData.mBaseUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.LOAD_URL","false","false","false","true","true","int","100","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mY","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mX","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mReprocess","false","false","false","false","false","boolean","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mWebkitScrollX","false","false","true","false","false","int","0","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.CLEAR_SSL_PREF_TABLE","false","false","false","true","true","int","150","","// Network-based messaging
","\android\webkit\WebViewCore.java"
"android.webkit.RestoreState.mMaxScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.CLEAR_HISTORY","false","false","false","true","true","int","112","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mMetaState","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.DELETE_SELECTION","false","false","false","true","true","int","122","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_ACTIVE","false","false","false","true","true","int","142","","// cursor matches the webpage's focus.
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.REQUEST_EXT_REPRESENTATION","false","false","false","true","true","int","160","","// Test harness messages
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_MOVE_MOUSE","false","false","false","true","true","int","135","","// UI nav messages
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mTop","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.TouchUpData.mNode","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.GeolocationPermissionsData.mOrigin","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mObject","false","false","false","false","false","Object","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.sWebCoreHandler","false","false","true","true","false","Handler","","","// WebCore thread handler
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.ADD_PACKAGE_NAMES","false","false","false","true","true","int","184","","// navigator.isApplicationInstalled()
","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mXPercentInView","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.PAUSE_TIMERS","false","false","false","true","true","int","109","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.VIEW_SIZE_CHANGED","false","false","false","true","true","int","105","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.WEBKIT_DRAW","false","false","false","true","true","int","130","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.RESUME_PRIORITY","false","false","true","true","true","int","2","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SPLIT_PICTURE_SET","false","false","false","true","true","int","133","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.REMOVE_PACKAGE_NAME","false","false","false","true","true","int","186","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mContentHeight","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.SET_MOVE_MOUSE_IF_LATEST","false","false","false","true","true","int","136","","","\android\webkit\WebViewCore.java"
"android.webkit.RestoreState.mDefaultScale","false","false","false","false","false","float","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mCurrentText","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.CLICK","false","false","false","true","true","int","118","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SAVE_DOCUMENT_STATE","false","false","false","true","true","int","128","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mMobileSite","false","false","false","false","false","boolean","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mWidthHeight","false","false","false","false","false","Point","","","","\android\webkit\WebViewCore.java"
"android.webkit.ShowRectData.mContentWidth","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.MotionUpData.mFrame","false","false","false","false","false","int","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.ON_RESUME","false","false","false","true","true","int","144","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.SET_MOVE_FOCUS","false","false","false","true","true","int","127","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mHistoryUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mInvalRegion","false","false","false","false","false","Region","","","","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.ON_PAUSE","false","false","false","true","true","int","143","","// is global)
","\android\webkit\WebViewCore.java"
"android.webkit.EventHub.CLEAR_CONTENT","false","false","false","true","true","int","134","","","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.TOUCH_UP","false","false","false","true","true","int","140","","// motion
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mViewportDensityDpi","false","false","true","false","false","int","-1","","/*
     * range is from 70 to 400.
     * 0 is a special value means device-dpi. The default scale factor will be
     * always 100.
     * -1 means undefined. The default scale factor will be
     * WebView.DEFAULT_SCALE_PERCENT.
     */
","\android\webkit\WebViewCore.java"
"android.webkit.WebViewCore.mHandler","false","false","true","false","false","Handler","","","// Private handler for WebCore messages.
","\android\webkit\WebViewCore.java"
"android.webkit.GetUrlData.mUrl","false","false","false","false","false","String","","","","\android\webkit\WebViewCore.java"
"android.widget.AbsSeekBar.mKeyProgressIncrement","false","false","true","false","false","int","1","","/**
 * On key presses (right or left), the amount to increment/decrement the
 * progress.
 */
","\android\widget\AbsSeekBar.java"
"android.widget.AbsSeekBar.mThumbOffset","false","false","true","false","false","int","","","","\android\widget\AbsSeekBar.java"
"android.widget.AbsSeekBar.mThumb","false","false","true","false","false","Drawable","","","","\android\widget\AbsSeekBar.java"
"android.widget.AbsSeekBar.NO_ALPHA","false","false","true","true","true","int","0xFF","","","\android\widget\AbsSeekBar.java"
"android.widget.AbsSeekBar.mTouchProgressOffset","false","false","false","false","false","float","","","/**
 * On touch, this offset plus the scaled value from the position of the
 * touch will form the progress value. Usually 0.
 */
","\android\widget\AbsSeekBar.java"
"android.widget.AbsSeekBar.mDisabledAlpha","false","false","true","false","false","float","","","","\android\widget\AbsSeekBar.java"
"android.widget.AbsSeekBar.mIsUserSeekable","false","false","false","false","false","boolean","true","","/**
 * Whether this is user seekable.
 */
","\android\widget\AbsSeekBar.java"
"android.gesture.GestureStore.ORIENTATION_INVARIANT","true","false","false","true","true","int","1","","// ORIENTATION_SENSITIVE and ORIENTATION_INVARIANT are only for SEQUENCE_SENSITIVE gestures
","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.ORIENTATION_SENSITIVE_4","false","false","false","true","true","int","4","","// at most 4 directions can be recognized
","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.ORIENTATION_SENSITIVE_8","false","false","false","true","true","int","8","","// at most 8 directions can be recognized
","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.ORIENTATION_SENSITIVE","true","false","false","true","true","int","2","","// at most 2 directions can be recognized
","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.mOrientationStyle","false","false","true","false","false","int","ORIENTATION_SENSITIVE","","","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.SEQUENCE_SENSITIVE","true","false","false","true","true","int","2","","// when SEQUENCE_SENSITIVE is used, only single stroke gestures are currently allowed
","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.SEQUENCE_INVARIANT","true","false","false","true","true","int","1","","","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.mNamedGestures","false","false","true","false","true","HashMap<String,ArrayList<Gesture>>","new HashMap<String, ArrayList<Gesture>>()","","","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.mSequenceType","false","false","true","false","false","int","SEQUENCE_SENSITIVE","","","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.mChanged","false","false","true","false","false","boolean","false","","","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.mClassifier","false","false","true","false","false","Learner","","","","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.FILE_FORMAT_VERSION","false","false","true","true","true","short","1","","","\android\gesture\GestureStore.java"
"android.gesture.GestureStore.PROFILE_LOADING_SAVING","false","false","true","true","true","boolean","false","","","\android\gesture\GestureStore.java"
"android.bluetooth.BluetoothUuid.ObexObjectPush","true","false","false","true","true","ParcelUuid","ParcelUuid.fromString(""00001105-0000-1000-8000-00805f9b34fb"")","","","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.BluetoothUuid.AvrcpTarget","true","false","false","true","true","ParcelUuid","ParcelUuid.fromString(""0000110C-0000-1000-8000-00805F9B34FB"")","","","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.BluetoothUuid.AvrcpController","true","false","false","true","true","ParcelUuid","ParcelUuid.fromString(""0000110E-0000-1000-8000-00805F9B34FB"")","","","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.BluetoothUuid.AudioSource","true","false","false","true","true","ParcelUuid","ParcelUuid.fromString(""0000110A-0000-1000-8000-00805F9B34FB"")","","","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.BluetoothUuid.Handsfree","true","false","false","true","true","ParcelUuid","ParcelUuid.fromString(""0000111E-0000-1000-8000-00805F9B34FB"")","","","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.BluetoothUuid.HSP","true","false","false","true","true","ParcelUuid","ParcelUuid.fromString(""00001108-0000-1000-8000-00805F9B34FB"")","","","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.BluetoothUuid.AudioSink","true","false","false","true","true","ParcelUuid","ParcelUuid.fromString(""0000110B-0000-1000-8000-00805F9B34FB"")","","/* See Bluetooth Assigned Numbers document - SDP section, to get the values of UUIDs
     * for the various services.
     *
     * The following 128 bit values are calculated as:
     *  uuid * 2^96 + BASE_UUID
     */
","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.BluetoothUuid.AdvAudioDist","true","false","false","true","true","ParcelUuid","ParcelUuid.fromString(""0000110D-0000-1000-8000-00805F9B34FB"")","","","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.BluetoothUuid.RESERVED_UUIDS","true","false","false","true","true","ParcelUuid","{ AudioSink, AudioSource, AdvAudioDist, HSP, Handsfree, AvrcpController, AvrcpTarget, ObexObjectPush }","","","\android\bluetooth\BluetoothUuid.java"
"android.bluetooth.ScoSocket.STATE_CLOSED","true","false","false","true","true","int","5","","// was connected, now closed.
","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.mAcceptedCode","false","false","true","false","false","int","","","","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.STATE_ACCEPT","true","false","false","true","true","int","2","","// accept() thread running
","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.STATE_CONNECTED","true","false","false","true","true","int","4","","// connected, waiting for close()
","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.mConnectedCode","false","false","true","false","false","int","","","","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.DBG","false","false","true","true","true","boolean","true","","","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.STATE_CONNECTING","true","false","false","true","true","int","3","","// connect() thread running
","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.TAG","false","false","true","true","true","String","""ScoSocket""","","","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.mState","false","false","true","false","false","int","","","","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.mHandler","false","false","true","false","false","Handler","","","","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.mClosedCode","false","false","true","false","false","int","","","","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.mNativeData","false","false","true","false","false","int","","","","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.STATE_READY","true","false","false","true","true","int","1","","// Ready for use. No threads or sockets
","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.mWakeLock","false","false","true","false","false","WakeLock","","","// held while in STATE_CONNECTING
","\android\bluetooth\ScoSocket.java"
"android.bluetooth.ScoSocket.VDBG","false","false","true","true","true","boolean","false","","// even more logging
","\android\bluetooth\ScoSocket.java"
"android.os.Death.tag","false","false","false","false","false","String","","","","\android\os\TokenWatcher.java"
"android.os.TokenWatcher.mNotificationQueue","false","false","true","false","false","int","-1","","","\android\os\TokenWatcher.java"
"android.os.TokenWatcher.token","false","false","false","false","false","IBinder","","","","\android\os\TokenWatcher.java"
"android.os.TokenWatcher.mNotificationTask","false","false","true","false","false","Runnable","new Runnable() {

    public void run() {
        int value;
        synchronized (mTokens) {
            value = mNotificationQueue;
            mNotificationQueue = -1;
        }
        if (value == 1) {
            acquired();
        } else if (value == 0) {
            released();
        }
    }
}","","","\android\os\TokenWatcher.java"
"android.os.TokenWatcher.tag","false","false","false","false","false","String","","","","\android\os\TokenWatcher.java"
"android.os.TokenWatcher.mHandler","false","false","true","false","false","Handler","","","","\android\os\TokenWatcher.java"
"android.os.TokenWatcher.mTokens","false","false","true","false","false","WeakHashMap<IBinder,Death>","new WeakHashMap<IBinder, Death>()","","","\android\os\TokenWatcher.java"
"android.os.TokenWatcher.mAcquired","false","false","true","false","false","boolean","false","","","\android\os\TokenWatcher.java"
"android.os.TokenWatcher.mTag","false","false","true","false","false","String","","","","\android\os\TokenWatcher.java"
"android.os.Death.token","false","false","false","false","false","IBinder","","","","\android\os\TokenWatcher.java"
"android.hardware.Sensor.mVendor","false","false","true","false","false","String","","","","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_LIGHT","true","false","false","true","true","int","5","","/**
 * A constant describing an light sensor type.
 * See {@link android.hardware.SensorEvent SensorEvent}
 * for more details.
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.mName","false","false","true","false","false","String","","","/* Some of these fields are set only by the native bindings in 
     * SensorManager.
     */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_PROXIMITY","true","false","false","true","true","int","8","","/**
 * A constant describing an proximity sensor type.
 * See {@link android.hardware.SensorEvent SensorEvent}
 * for more details.
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.mPower","false","false","true","false","false","float","","","","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_GYROSCOPE","true","false","false","true","true","int","4","","/**
 * A constant describing a gyroscope sensor type
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_ORIENTATION","true","false","false","true","true","int","3","@Deprecated","/**
 * A constant describing an orientation sensor type.
 * See {@link android.hardware.SensorEvent SensorEvent}
 * for more details.
 * @deprecated use {@link android.hardware.SensorManager#getOrientation
 * SensorManager.getOrientation()} instead.
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.mResolution","false","false","true","false","false","float","","","","\android\hardware\Sensor.java"
"android.hardware.Sensor.mHandle","false","false","true","false","false","int","","","","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_PRESSURE","true","false","false","true","true","int","6","","/**
 * A constant describing a pressure sensor type
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.mMaxRange","false","false","true","false","false","float","","","","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_TEMPERATURE","true","false","false","true","true","int","7","","/**
 * A constant describing a temperature sensor type
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_MAGNETIC_FIELD","true","false","false","true","true","int","2","","/**
 * A constant describing a magnetic field sensor type.
 * See {@link android.hardware.SensorEvent SensorEvent}
 * for more details.
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_ACCELEROMETER","true","false","false","true","true","int","1","","/**
 * A constant describing an accelerometer sensor type.
 * See {@link android.hardware.SensorEvent SensorEvent}
 * for more details.
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.mVersion","false","false","true","false","false","int","","","","\android\hardware\Sensor.java"
"android.hardware.Sensor.mLegacyType","false","false","true","false","false","int","","","","\android\hardware\Sensor.java"
"android.hardware.Sensor.TYPE_ALL","true","false","false","true","true","int","-1","","/**
 * A constant describing all sensor types.
 */
","\android\hardware\Sensor.java"
"android.hardware.Sensor.mType","false","false","true","false","false","int","","","","\android\hardware\Sensor.java"
"android.content.CursorEntityIterator.mIsClosed","false","false","true","false","false","boolean","","","","\android\content\CursorEntityIterator.java"
"android.content.CursorEntityIterator.mCursor","false","false","true","false","true","Cursor","","","","\android\content\CursorEntityIterator.java"
"android.database.BulkCursorProxy.mRemote","false","false","true","false","false","IBinder","","","","\android\database\BulkCursorNative.java"
"android.database.BulkCursorProxy.mExtras","false","false","true","false","false","Bundle","","","","\android\database\BulkCursorNative.java"
"android.util.MathUtils.sRandom","false","false","true","true","true","Random","new Random()","","","\android\util\MathUtils.java"
"android.util.MathUtils.RAD_TO_DEG","false","false","true","true","true","float","180.0f / 3.1415926f","","","\android\util\MathUtils.java"
"android.util.MathUtils.DEG_TO_RAD","false","false","true","true","true","float","3.1415926f / 180.0f","","","\android\util\MathUtils.java"
"android.database.sqlite.SQLiteQueryBuilder.sLimitPattern","false","false","true","true","true","Pattern","Pattern.compile(""\\s*\\d+\\s*(,\\s*\\d+\\s*)?"")","","","\android\database\sqlite\SQLiteQueryBuilder.java"
"android.database.sqlite.SQLiteQueryBuilder.mProjectionMap","false","false","true","false","false","Map<String,String>","null","","","\android\database\sqlite\SQLiteQueryBuilder.java"
"android.database.sqlite.SQLiteQueryBuilder.mFactory","false","false","true","false","false","SQLiteDatabase.CursorFactory","","","","\android\database\sqlite\SQLiteQueryBuilder.java"
"android.database.sqlite.SQLiteQueryBuilder.mWhereClause","false","false","true","false","false","StringBuilder","null","","// lazily created
","\android\database\sqlite\SQLiteQueryBuilder.java"
"android.database.sqlite.SQLiteQueryBuilder.mDistinct","false","false","true","false","false","boolean","","","","\android\database\sqlite\SQLiteQueryBuilder.java"
"android.database.sqlite.SQLiteQueryBuilder.mTables","false","false","true","false","false","String","""""","","","\android\database\sqlite\SQLiteQueryBuilder.java"
"android.database.sqlite.SQLiteQueryBuilder.TAG","false","false","true","true","true","String","""SQLiteQueryBuilder""","","","\android\database\sqlite\SQLiteQueryBuilder.java"
"android.database.sqlite.SQLiteQueryBuilder.mStrictProjectionMap","false","false","true","false","false","boolean","","","","\android\database\sqlite\SQLiteQueryBuilder.java"
"com.android.internal.os.LoggingPrintStream.encodedBytes","false","false","true","false","false","ByteBuffer","","","/**
 * A buffer that is initialized when raw bytes are first written to this
 * stream. It may contain the leading bytes of multi-byte characters.
 * Between writes this buffer is always ready to receive data; ie. the
 * position is at the first unassigned byte and the limit is the capacity.
 */
","\com\android\internal\os\LoggingPrintStream.java"
"com.android.internal.os.LoggingPrintStream.decoder","false","false","true","false","false","CharsetDecoder","","","/**
 * Decodes bytes to characters using the system default charset. Initialized
 * when raw bytes are first written to this stream.
 */
","\com\android\internal\os\LoggingPrintStream.java"
"com.android.internal.os.LoggingPrintStream.formatter","false","false","true","false","true","Formatter","new Formatter(builder, null)","","","\com\android\internal\os\LoggingPrintStream.java"
"com.android.internal.os.LoggingPrintStream.builder","false","false","true","false","true","StringBuilder","new StringBuilder()","","","\com\android\internal\os\LoggingPrintStream.java"
"com.android.internal.os.LoggingPrintStream.decodedChars","false","false","true","false","false","CharBuffer","","","/**
 * A buffer that is initialized when raw bytes are first written to this
 * stream. Between writes this buffer is always clear; ie. the position is
 * zero and the limit is the capacity.
 */
","\com\android\internal\os\LoggingPrintStream.java"
"android.app.ApplicationLoaders.mLoaders","false","false","true","false","true","HashMap","new HashMap()","","","\android\app\ApplicationLoaders.java"
"android.app.ApplicationLoaders.gApplicationLoaders","false","false","true","true","true","ApplicationLoaders","new ApplicationLoaders()","","","\android\app\ApplicationLoaders.java"
"android.view.inputmethod.ExtractedText.startOffset","true","false","false","false","false","int","","","/**
 * The offset in the overall text at which the extracted text starts.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.flags","true","false","false","false","false","int","","","/**
 * Additional bit flags of information about the edited text.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.partialStartOffset","true","false","false","false","false","int","","","/**
 * If the content is a report of a partial text change, this is the
 * offset where the change starts and it runs until
 * {@link #partialEndOffset}.  If the content is the full text, this
 * field is -1.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.selectionEnd","true","false","false","false","false","int","","","/**
 * The offset where the selection currently ends within the extracted
 * text.  The real selection end position is at
 * <var>startOffset</var>+<var>selectionEnd</var>.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.selectionStart","true","false","false","false","false","int","","","/**
 * The offset where the selection currently starts within the extracted
 * text.  The real selection start position is at
 * <var>startOffset</var>+<var>selectionStart</var>.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.text","true","false","false","false","false","CharSequence","","","/**
 * The text that has been extracted.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.CREATOR","true","false","false","true","true","Parcelable.Creator<ExtractedText>","new Parcelable.Creator<ExtractedText>() {

    public ExtractedText createFromParcel(Parcel source) {
        ExtractedText res = new ExtractedText();
        res.text = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(source);
        res.startOffset = source.readInt();
        res.partialStartOffset = source.readInt();
        res.partialEndOffset = source.readInt();
        res.selectionStart = source.readInt();
        res.selectionEnd = source.readInt();
        res.flags = source.readInt();
        return res;
    }

    public ExtractedText[] newArray(int size) {
        return new ExtractedText[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.FLAG_SINGLE_LINE","true","false","false","true","true","int","0x0001","","/**
 * Bit for {@link #flags}: set if the text being edited can only be on
 * a single line.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.partialEndOffset","true","false","false","false","false","int","","","/**
 * If the content is a report of a partial text change, this is the offset
 * where the change ends.  Note that the actual text may be larger or
 * smaller than the difference between this and {@link #partialEndOffset},
 * meaning a reduction or increase, respectively, in the total text.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.inputmethod.ExtractedText.FLAG_SELECTING","true","false","false","true","true","int","0x0002","","/**
 * Bit for {@link #flags}: set if the editor is currently in selection mode.
 */
","\android\view\inputmethod\ExtractedText.java"
"android.view.AbsSavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<AbsSavedState>","new Parcelable.Creator<AbsSavedState>() {

    public AbsSavedState createFromParcel(Parcel in) {
        Parcelable superState = (Parcelable) in.readParcelable(null);
        if (superState != null) {
            throw new IllegalStateException(""superState must be null"");
        }
        return EMPTY_STATE;
    }

    public AbsSavedState[] newArray(int size) {
        return new AbsSavedState[size];
    }
}","","","\android\view\AbsSavedState.java"
"android.view.AbsSavedState.mSuperState","false","false","true","false","true","Parcelable","","","","\android\view\AbsSavedState.java"
"android.view.AbsSavedState.EMPTY_STATE","true","false","false","true","true","AbsSavedState","new AbsSavedState() {
}","","","\android\view\AbsSavedState.java"
"android.widget.DialerFilter.mIsQwerty","false","false","true","false","false","boolean","","","","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.DIGITS_AND_LETTERS_NO_DIGITS","true","false","false","true","true","int","2","","/**
 * This mode is when after starting in {@link #DIGITS_AND_LETTERS} mode the filter
 * has removed all possibility of the digits matching, leaving only the letters line
 */
","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.DIGITS_AND_LETTERS","true","false","false","true","true","int","1","","/**
 * This mode has both lines
 */
","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.mDigits","false","false","false","false","false","EditText","","","","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.mInputFilters","false","false","false","false","false","InputFilter","","","","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.DIGITS_AND_LETTERS_NO_LETTERS","true","false","false","true","true","int","3","","/**
 * This mode is when after starting in {@link #DIGITS_AND_LETTERS} mode the filter
 * has removed all possibility of the letters matching, leaving only the digits line
 */
","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.mPrimary","false","false","false","false","false","EditText","","","","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.DIGITS_ONLY","true","false","false","true","true","int","4","","/**
 * This mode has only the digits line
 */
","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.mHint","false","false","false","false","false","EditText","","","","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.LETTERS_ONLY","true","false","false","true","true","int","5","","/**
 * This mode has only the letters line
 */
","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.mLetters","false","false","false","false","false","EditText","","","","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.mMode","false","false","false","false","false","int","","","","\android\widget\DialerFilter.java"
"android.widget.DialerFilter.mIcon","false","false","false","false","false","ImageView","","","","\android\widget\DialerFilter.java"
"android.database.Observable.mObservers","false","true","false","false","true","ArrayList<T>","new ArrayList<T>()","","/**
 * The list of observers.  An observer can be in the list at most
 * once and will never be null.
 */
","\android\database\Observable.java"
"com.google.android.util.Video.URL_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""(?i)http://video\\.google\\.[a-z0-9]+(?:\\.[a-z0-9]+)?/videoplay\\?"" + "".*?\\bdocid=(-?\\d+).*"")","","/**
 * Pattern for a video URL.
 */
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Format.start","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Acronym.value","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Html.html","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.TrieNode.value","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Link.url","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.photo","false","false","true","false","false","String","","","// null for user album
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.parseMeText","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Part.meText","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.FlickrPhoto.GROUPING_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""http://(?:www.)?flickr.com/photos/([^/?#&]+)/(tags|sets)/"" + ""([^/?#&]+)/?"")","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.FlickrPhoto.user","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.FlickrPhoto.URL_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""http://(?:www.)?flickr.com/photos/([^/?#&]+)/?([^/?#&]+)?/?.*"")","","/**
 * Pattern for a user album or photo URL.
 */
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.musicNote","true","false","false","true","true","String","""\u266B ""","","/**
 * Music note that indicates user is listening to a music track.
 */
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Token.text","false","true","false","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Photo.URL_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""http://picasaweb.google.com/([^/?#&]+)/+((?!searchbrowse)[^/?#&]+)(?:/|/photo)?(?:\\?[^#]*)?(?:#(.*))?"")","","// it follows a different pattern than albums - would be nice to add later
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Format.ch","false","false","true","false","false","char","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.parts","false","false","true","false","false","ArrayList<Part>","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.stringRep","false","false","true","false","false","String","","","// For the other types, code depends on their stringreps
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.FlickrPhoto.TAGS","false","false","true","true","true","String","""tags""","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.parseMusic","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.meText","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.text","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.url","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.album","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.YouTubeVideo.URL_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""(?i)http://(?:[a-z0-9]+\\.)?youtube\\.[a-z0-9]+(?:\\.[a-z0-9]+)?/watch\\?"" + "".*\\bv=([-_a-zA-Z0-9=]+).*"")","","/**
 * Pattern for a video URL.
 */
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.FlickrPhoto.SETS","false","false","true","true","true","String","""sets""","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.matched","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.track","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.children","false","false","true","false","true","HashMap<Character,TrieNode>","new HashMap<Character, TrieNode>()","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.FlickrPhoto.grouping","false","false","true","false","false","String","","","// either ""tags"" or ""sets""
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.value","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.parseFormatting","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Video.docid","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.URL_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""http://(?:www.)?flickr.com/photos/([^/?#&]+)/?([^/?#&]+)?/?.*"")","","/**
 * Pattern for a user album or photo URL.
 */
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.parseSmilies","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.TrieNode.children","false","false","true","false","true","HashMap<Character,TrieNode>","new HashMap<Character, TrieNode>()","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.FlickrPhoto.groupingId","false","false","true","false","false","String","","","// sets or tags identifier
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Photo.album","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Format.matched","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.TAGS","false","false","true","true","true","String","""tags""","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Token.stringRep","false","false","true","false","false","String","","","// For the other types, code depends on their stringreps
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Photo.user","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.GROUPING_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""http://(?:www.)?flickr.com/photos/([^/?#&]+)/(tags|sets)/"" + ""([^/?#&]+)/?"")","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.start","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.nextChar","false","false","true","false","false","int","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.formatStart","false","false","true","false","false","HashMap<Character,Format>","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.SETS","false","false","true","true","true","String","""sets""","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.parseAcronyms","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.ch","false","false","true","false","false","char","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.MusicTrack.track","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.parseUrls","false","false","true","false","false","boolean","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Part.tokens","false","false","true","false","false","ArrayList<Token>","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.YouTubeVideo.docid","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Token.type","false","true","false","false","false","Type","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.nextClass","false","false","true","false","false","int","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.FlickrPhoto.photo","false","false","true","false","false","String","","","// null for user album
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.tokens","false","false","true","false","false","ArrayList<Token>","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.type","false","true","false","false","false","Type","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.Photo.photo","false","false","true","false","false","String","","","// null for albums
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.docid","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.html","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.groupingId","false","false","true","false","false","String","","","// sets or tags identifier
","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.user","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.TrieNode.text","false","false","true","false","false","String","","","","\com\google\android\util\AbstractMessageParser.java"
"com.google.android.util.AbstractMessageParser.grouping","false","false","true","false","false","String","","","// either ""tags"" or ""sets""
","\com\google\android\util\AbstractMessageParser.java"
"android.database.RowBuilder.endIndex","false","false","true","false","true","int","","","","\android\database\MatrixCursor.java"
"android.database.MatrixCursor.rowCount","false","false","true","false","false","int","0","","","\android\database\MatrixCursor.java"
"android.database.MatrixCursor.index","false","false","true","false","false","int","","","","\android\database\MatrixCursor.java"
"android.database.MatrixCursor.data","false","false","true","false","false","Object","","","","\android\database\MatrixCursor.java"
"android.database.MatrixCursor.columnNames","false","false","true","false","true","String","","","","\android\database\MatrixCursor.java"
"android.database.MatrixCursor.columnCount","false","false","true","false","true","int","","","","\android\database\MatrixCursor.java"
"android.database.MatrixCursor.endIndex","false","false","true","false","true","int","","","","\android\database\MatrixCursor.java"
"android.database.RowBuilder.index","false","false","true","false","false","int","","","","\android\database\MatrixCursor.java"
"android.util.Patterns.DOMAIN_NAME","true","false","false","true","true","Pattern","Pattern.compile(""((((["" + GOOD_IRI_CHAR + ""]["" + GOOD_IRI_CHAR + ""\\-]*)*["" + GOOD_IRI_CHAR + ""]\\.)+"" + TOP_LEVEL_DOMAIN + "")|"" + IP_ADDRESS + "")"")","","","\android\util\Patterns.java"
"android.util.Patterns.PHONE","true","false","false","true","true","Pattern","// sdd = space, dot, or dash
Pattern.compile(// +<digits><sdd>*
""(\\+[0-9]+[\\- \\.]*)?"" + // (<digits>)<sdd>*
""(\\([0-9]+\\)[\\- \\.]*)?"" + // <digit><digit|sdd>+<digit>
""([0-9][0-9\\- \\.][0-9\\- \\.]+[0-9])"")","","/**
 * This pattern is intended for searching for things that look like they
 * might be phone numbers in arbitrary text, not for validating whether
 * something is in fact a phone number.  It will miss many things that
 * are legitimate phone numbers.
 *
 * <p> The pattern matches the following:
 * <ul>
 * <li>Optionally, a + sign followed immediately by one or more digits. Spaces, dots, or dashes
 * may follow.
 * <li>Optionally, sets of digits in parentheses, separated by spaces, dots, or dashes.
 * <li>A string starting and ending with a digit, containing digits, spaces, dots, and/or dashes.
 * </ul>
 */
","\android\util\Patterns.java"
"android.util.Patterns.EMAIL_ADDRESS","true","false","false","true","true","Pattern","Pattern.compile(""[a-zA-Z0-9\\+\\.\\_\\%\\-\\+]{1,256}"" + ""\\@"" + ""[a-zA-Z0-9][a-zA-Z0-9\\-]{0,64}"" + ""("" + ""\\."" + ""[a-zA-Z0-9][a-zA-Z0-9\\-]{0,25}"" + "")+"")","","","\android\util\Patterns.java"
"android.util.Patterns.GOOD_IRI_CHAR","true","false","false","true","true","String","""a-zA-Z0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF""","","/**
 * Good characters for Internationalized Resource Identifiers (IRI).
 * This comprises most common used Unicode characters allowed in IRI
 * as detailed in RFC 3987.
 * Specifically, those two byte Unicode characters are not included.
 */
","\android\util\Patterns.java"
"android.util.Patterns.TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL","true","false","false","true","true","String","""(?:"" + ""(?:aero|arpa|asia|a[cdefgilmnoqrstuwxz])"" + ""|(?:biz|b[abdefghijmnorstvwyz])"" + ""|(?:cat|com|coop|c[acdfghiklmnoruvxyz])"" + ""|d[ejkmoz]"" + ""|(?:edu|e[cegrstu])"" + ""|f[ijkmor]"" + ""|(?:gov|g[abdefghilmnpqrstuwy])"" + ""|h[kmnrtu]"" + ""|(?:info|int|i[delmnoqrst])"" + ""|(?:jobs|j[emop])"" + ""|k[eghimnprwyz]"" + ""|l[abcikrstuvy]"" + ""|(?:mil|mobi|museum|m[acdeghklmnopqrstuvwxyz])"" + ""|(?:name|net|n[acefgilopruz])"" + ""|(?:org|om)"" + ""|(?:pro|p[aefghklmnrstwy])"" + ""|qa"" + ""|r[eosuw]"" + ""|s[abcdeghijklmnortuvyz]"" + ""|(?:tel|travel|t[cdfghjklmnoprtvwz])"" + ""|u[agksyz]"" + ""|v[aceginu]"" + ""|w[fs]"" + ""|(?:xn\\-\\-0zwm56d|xn\\-\\-11b5bs3a9aj6g|xn\\-\\-80akhbyknj4f|xn\\-\\-9t4b11yi5a|xn\\-\\-deba0ad|xn\\-\\-g6w251d|xn\\-\\-hgbk6aj7f53bba|xn\\-\\-hlcj6aya9esc7a|xn\\-\\-jxalpdlp|xn\\-\\-kgbechtv|xn\\-\\-zckzah)"" + ""|y[etu]"" + ""|z[amw]))""","","/**
 * Regular expression to match all IANA top-level domains for WEB_URL.
 * List accurate as of 2010/02/05.  List taken from:
 * http://data.iana.org/TLD/tlds-alpha-by-domain.txt
 * This pattern is auto-generated by frameworks/base/common/tools/make-iana-tld-pattern.py
 */
","\android\util\Patterns.java"
"android.util.Patterns.TOP_LEVEL_DOMAIN","true","false","false","true","true","Pattern","Pattern.compile(TOP_LEVEL_DOMAIN_STR)","","/**
 * Regular expression pattern to match all IANA top-level domains.
 */
","\android\util\Patterns.java"
"android.util.Patterns.TOP_LEVEL_DOMAIN_STR","true","false","false","true","true","String","""((aero|arpa|asia|a[cdefgilmnoqrstuwxz])"" + ""|(biz|b[abdefghijmnorstvwyz])"" + ""|(cat|com|coop|c[acdfghiklmnoruvxyz])"" + ""|d[ejkmoz]"" + ""|(edu|e[cegrstu])"" + ""|f[ijkmor]"" + ""|(gov|g[abdefghilmnpqrstuwy])"" + ""|h[kmnrtu]"" + ""|(info|int|i[delmnoqrst])"" + ""|(jobs|j[emop])"" + ""|k[eghimnprwyz]"" + ""|l[abcikrstuvy]"" + ""|(mil|mobi|museum|m[acdeghklmnopqrstuvwxyz])"" + ""|(name|net|n[acefgilopruz])"" + ""|(org|om)"" + ""|(pro|p[aefghklmnrstwy])"" + ""|qa"" + ""|r[eosuw]"" + ""|s[abcdeghijklmnortuvyz]"" + ""|(tel|travel|t[cdfghjklmnoprtvwz])"" + ""|u[agksyz]"" + ""|v[aceginu]"" + ""|w[fs]"" + ""|(xn\\-\\-0zwm56d|xn\\-\\-11b5bs3a9aj6g|xn\\-\\-80akhbyknj4f|xn\\-\\-9t4b11yi5a|xn\\-\\-deba0ad|xn\\-\\-g6w251d|xn\\-\\-hgbk6aj7f53bba|xn\\-\\-hlcj6aya9esc7a|xn\\-\\-jxalpdlp|xn\\-\\-kgbechtv|xn\\-\\-zckzah)"" + ""|y[etu]"" + ""|z[amw])""","","/**
 * Regular expression to match all IANA top-level domains.
 * List accurate as of 2010/02/05.  List taken from:
 * http://data.iana.org/TLD/tlds-alpha-by-domain.txt
 * This pattern is auto-generated by frameworks/base/common/tools/make-iana-tld-pattern.py
 */
","\android\util\Patterns.java"
"android.util.Patterns.WEB_URL","true","false","false","true","true","Pattern","Pattern.compile(""((?:(http|https|Http|Https|rtsp|Rtsp):\\/\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)"" + ""\\,\\;\\?\\&\\=]|(?:\\%[a-fA-F0-9]{2})){1,64}(?:\\:(?:[a-zA-Z0-9\\$\\-\\_"" + ""\\.\\+\\!\\*\\'\\(\\)\\,\\;\\?\\&\\=]|(?:\\%[a-fA-F0-9]{2})){1,25})?\\@)?)?"" + ""((?:(?:["" + GOOD_IRI_CHAR + ""]["" + GOOD_IRI_CHAR + // named host
""\\-]{0,64}\\.)+"" + TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL + // or ip address
""|(?:(?:25[0-5]|2[0-4]"" + ""[0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\\.(?:25[0-5]|2[0-4][0-9]"" + ""|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(?:25[0-5]|2[0-4][0-9]|[0-1]"" + ""[0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}"" + ""|[1-9][0-9]|[0-9])))"" + // plus option port number
""(?:\\:\\d{1,5})?)"" + ""(\\/(?:(?:["" + GOOD_IRI_CHAR + // plus option query params
""\\;\\/\\?\\:\\@\\&\\=\\#\\~"" + ""\\-\\.\\+\\!\\*\\'\\(\\)\\,\\_])|(?:\\%[a-fA-F0-9]{2}))*)?"" + // and finally, a word boundary or end of
""(?:\\b|$)"")","","/**
 * Regular expression pattern to match most part of RFC 3987
 * Internationalized URLs, aka IRIs.  Commonly used Unicode characters are
 * added.
 */
","\android\util\Patterns.java"
"android.util.Patterns.IP_ADDRESS","true","false","false","true","true","Pattern","Pattern.compile(""((25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\\.(25[0-5]|2[0-4]"" + ""[0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]"" + ""[0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}"" + ""|[1-9][0-9]|[0-9]))"")","","","\android\util\Patterns.java"
"android.webkit.Network.mProxyPassword","false","false","true","false","false","String","","","/**
 * Proxy password if known (used for pre-emptive proxy authentication).
 */
","\android\webkit\Network.java"
"android.webkit.Network.mRequestQueue","false","false","true","false","false","RequestQueue","","","/**
 * Network request queue (requests are added from the browser thread).
 */
","\android\webkit\Network.java"
"android.webkit.Network.sPlatformNotificationEnableRefCount","false","false","true","true","false","int","","","/**
 * Reference count for platform notifications as the network class is a
 * static and can exist over multiple activities, thus over multiple
 * onPause/onResume pairs.
 */
","\android\webkit\Network.java"
"android.webkit.Network.mHttpAuthHandler","false","false","true","false","false","HttpAuthHandler","","","/**
 * HTTP authentication handler: takes care of synchronization of HTTP
 * authentication requests.
 */
","\android\webkit\Network.java"
"android.webkit.Network.LOGTAG","false","false","true","true","true","String","""network""","","","\android\webkit\Network.java"
"android.webkit.Network.sNetwork","false","false","true","true","false","Network","","","/**
 * Static instance of a Network object.
 */
","\android\webkit\Network.java"
"android.webkit.Network.mSslErrorHandler","false","false","true","false","false","SslErrorHandler","","","/**
 * SSL error handler: takes care of synchronization of multiple async
 * loaders with SSL-related problems.
 */
","\android\webkit\Network.java"
"android.webkit.Network.sPlatformNotifications","false","false","true","true","false","boolean","","","/**
 * Flag to store the state of platform notifications, for the case
 * when the Network object has not been constructed yet
 */
","\android\webkit\Network.java"
"android.webkit.Network.mProxyUsername","false","false","true","false","false","String","","","/**
 * Proxy username if known (used for pre-emptive proxy authentication).
 */
","\android\webkit\Network.java"
"android.view.animation.RotateAnimation.mToDegrees","false","false","true","false","false","float","","","","\android\view\animation\RotateAnimation.java"
"android.view.animation.RotateAnimation.mPivotXValue","false","false","true","false","false","float","0.0f","","","\android\view\animation\RotateAnimation.java"
"android.view.animation.RotateAnimation.mPivotYValue","false","false","true","false","false","float","0.0f","","","\android\view\animation\RotateAnimation.java"
"android.view.animation.RotateAnimation.mPivotX","false","false","true","false","false","float","","","","\android\view\animation\RotateAnimation.java"
"android.view.animation.RotateAnimation.mPivotY","false","false","true","false","false","float","","","","\android\view\animation\RotateAnimation.java"
"android.view.animation.RotateAnimation.mPivotYType","false","false","true","false","false","int","ABSOLUTE","","","\android\view\animation\RotateAnimation.java"
"android.view.animation.RotateAnimation.mPivotXType","false","false","true","false","false","int","ABSOLUTE","","","\android\view\animation\RotateAnimation.java"
"android.view.animation.RotateAnimation.mFromDegrees","false","false","true","false","false","float","","","","\android\view\animation\RotateAnimation.java"
"com.android.internal.view.menu.ExpandedMenuView.mMenu","false","false","true","false","false","MenuBuilder","","","","\com\android\internal\view\menu\ExpandedMenuView.java"
"com.android.internal.view.menu.ExpandedMenuView.mAnimations","false","false","true","false","false","int","","","/**
 * Default animations for this menu
 */
","\com\android\internal\view\menu\ExpandedMenuView.java"
"android.database.sqlite.SQLiteProgram.nHandle","false","true","false","false","false","int","0","@Deprecated","/**
 * Native linkage, do not modify. This comes from the database and should not be modified
 * in here or in the native code.
 * @deprecated do not use this
 */
","\android\database\sqlite\SQLiteProgram.java"
"android.database.sqlite.SQLiteProgram.TAG","false","false","true","true","true","String","""SQLiteProgram""","","","\android\database\sqlite\SQLiteProgram.java"
"android.database.sqlite.SQLiteProgram.mSql","false","false","false","false","true","String","","","/* package */
","\android\database\sqlite\SQLiteProgram.java"
"android.database.sqlite.SQLiteProgram.mDatabase","false","true","false","false","false","SQLiteDatabase","","@Deprecated","/**
 * The database this program is compiled against.
 * @deprecated do not use this
 */
","\android\database\sqlite\SQLiteProgram.java"
"android.database.sqlite.SQLiteProgram.mCompiledSql","false","false","true","false","false","SQLiteCompiledSql","","","/**
 * the SQLiteCompiledSql object for the given sql statement.
 */
","\android\database\sqlite\SQLiteProgram.java"
"android.database.sqlite.SQLiteProgram.nStatement","false","true","false","false","false","int","0","@Deprecated","/**
 * SQLiteCompiledSql statement id is populated with the corresponding object from the above
 * member. This member is used by the native_bind_* methods
 * @deprecated do not use this
 */
","\android\database\sqlite\SQLiteProgram.java"
"android.net.ParseException.response","true","false","false","false","false","String","","","","\android\net\ParseException.java"
"android.view.animation.AlphaAnimation.mToAlpha","false","false","true","false","false","float","","","","\android\view\animation\AlphaAnimation.java"
"android.view.animation.AlphaAnimation.mFromAlpha","false","false","true","false","false","float","","","","\android\view\animation\AlphaAnimation.java"
"android.accounts.AccountAuthenticatorResponse.TAG","false","false","true","true","true","String","""AccountAuthenticator""","","","\android\accounts\AccountAuthenticatorResponse.java"
"android.accounts.AccountAuthenticatorResponse.mAccountAuthenticatorResponse","false","false","true","false","false","IAccountAuthenticatorResponse","","","","\android\accounts\AccountAuthenticatorResponse.java"
"android.accounts.AccountAuthenticatorResponse.CREATOR","true","false","false","true","true","Creator<AccountAuthenticatorResponse>","new Creator<AccountAuthenticatorResponse>() {

    public AccountAuthenticatorResponse createFromParcel(Parcel source) {
        return new AccountAuthenticatorResponse(source);
    }

    public AccountAuthenticatorResponse[] newArray(int size) {
        return new AccountAuthenticatorResponse[size];
    }
}","","","\android\accounts\AccountAuthenticatorResponse.java"
"android.webkit.CookieManager.SEMICOLON","false","false","true","true","true","char","';'","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.value","false","false","false","false","false","String","","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.mode","false","false","false","false","false","byte","","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.secure","false","false","false","false","false","boolean","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.HTTP_ONLY_LENGTH","false","false","true","true","true","int","HTTP_ONLY.length()","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.lastAcessTime","false","false","false","false","false","long","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.secure","false","false","false","false","false","boolean","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.PATH","false","false","true","true","true","String","""path""","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.DOMAIN","false","false","true","true","true","String","""domain""","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.path","false","false","false","false","false","String","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.SECURE","false","false","true","true","true","String","""secure""","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.expires","false","false","false","false","false","long","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.mode","false","false","false","false","false","byte","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.QUOTATION","false","false","true","true","true","char","'\""'","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MAX_AGE","false","false","true","true","true","String","""max-age""","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.domain","false","false","false","false","false","String","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MAX_COOKIE_COUNT_PER_BASE_DOMAIN","false","false","true","true","true","int","50","","// domain, we allow 50 per base domain
","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.mAcceptCookie","false","false","true","false","false","boolean","true","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MAX_RAM_COOKIES_COUNT","false","false","true","true","true","int","1000","","// average cookie entry size is less than 100 bytes
","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.WHITE_SPACE","false","false","true","true","true","char","' '","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MAX_DOMAIN_COUNT","false","false","true","true","true","int","200","","// domain, we set 200 as max base domain count
","\android\webkit\CookieManager.java"
"android.webkit.Cookie.path","false","false","false","false","false","String","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.EQUAL","false","false","true","true","true","char","'='","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.COMMA","false","false","true","true","true","char","','","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.PERIOD","false","false","true","true","true","char","'.'","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MODE_REPLACED","false","false","false","true","true","byte","3","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.HTTPS","false","false","true","true","true","String","""https""","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MODE_DELETED","false","false","false","true","true","byte","2","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.MODE_REPLACED","false","false","false","true","true","byte","3","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.expires","false","false","false","false","false","long","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MAX_COOKIE_LENGTH","false","false","true","true","true","int","4 * 1024","","// RFC2109 defines 4k as maximum size of a cookie
","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.SECURE_LENGTH","false","false","true","true","true","int","SECURE.length()","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.MODE_DELETED","false","false","false","true","true","byte","2","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.MODE_NORMAL","false","false","false","true","true","byte","1","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.name","false","false","false","false","false","String","","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.MODE_NEW","false","false","false","true","true","byte","0","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.mCookieMap","false","false","true","false","false","Map<String,ArrayList<Cookie>>","new LinkedHashMap<String, ArrayList<Cookie>>(MAX_DOMAIN_COUNT, 0.75f, true)","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.PATH_DELIM","false","false","true","true","true","char","'/'","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.value","false","false","false","false","false","String","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.EXPIRES","false","false","true","true","true","String","""expires""","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MODE_NEW","false","false","false","true","true","byte","0","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.COMPARATOR","false","false","true","true","true","CookieComparator","new CookieComparator()","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.lastAcessTime","false","false","false","false","false","long","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.HTTP_ONLY","false","false","true","true","true","String","""httponly""","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.name","false","false","false","false","false","String","","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.domain","false","false","false","false","false","String","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MAX_RAM_DOMAIN_COUNT","false","false","true","true","true","int","15","","// max domain count to limit RAM cookie takes less than 100k,
","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.QUESTION_MARK","false","false","true","true","true","char","'?'","","","\android\webkit\CookieManager.java"
"android.webkit.Cookie.lastUpdateTime","false","false","false","false","false","long","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.sRef","false","false","true","true","false","CookieManager","","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.MODE_NORMAL","false","false","false","true","true","byte","1","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.BAD_COUNTRY_2LDS","false","false","true","true","true","String","{ ""ac"", ""co"", ""com"", ""ed"", ""edu"", ""go"", ""gouv"", ""gov"", ""info"", ""lg"", ""ne"", ""net"", ""or"", ""org"" }","","/**
 * This contains a list of 2nd-level domains that aren't allowed to have
 * wildcards when combined with country-codes. For example: [.co.uk].
 */
","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.LOGTAG","false","false","true","true","true","String","""webkit""","","","\android\webkit\CookieManager.java"
"android.webkit.CookieManager.lastUpdateTime","false","false","false","false","false","long","","","","\android\webkit\CookieManager.java"
"com.android.internal.view.InputConnectionWrapper.mCursorCapsMode","true","false","false","false","false","int","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.mTextAfterCursor","true","false","false","false","false","CharSequence","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.mTextBeforeCursor","true","false","false","false","false","CharSequence","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.sSequenceNumber","false","false","true","true","false","int","1","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.MAX_WAIT_TIME_MILLIS","false","false","true","true","true","int","2000","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.sInstance","false","false","true","true","false","InputContextCallback","new InputContextCallback()","","// exclusive access to this object.
","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.mIInputContext","false","false","true","false","true","IInputContext","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.TAG","false","false","true","true","true","String","""InputConnectionWrapper.ICC""","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.mTextAfterCursor","true","false","false","false","false","CharSequence","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.mSeq","true","false","false","false","false","int","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.mHaveValue","true","false","false","false","false","boolean","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.sSequenceNumber","false","false","true","true","false","int","1","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.mExtractedText","true","false","false","false","false","ExtractedText","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.TAG","false","false","true","true","true","String","""InputConnectionWrapper.ICC""","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.mExtractedText","true","false","false","false","false","ExtractedText","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.sInstance","false","false","true","true","false","InputContextCallback","new InputContextCallback()","","// exclusive access to this object.
","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.mHaveValue","true","false","false","false","false","boolean","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputConnectionWrapper.mTextBeforeCursor","true","false","false","false","false","CharSequence","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.mSeq","true","false","false","false","false","int","","","","\com\android\internal\view\InputConnectionWrapper.java"
"com.android.internal.view.InputContextCallback.mCursorCapsMode","true","false","false","false","false","int","","","","\com\android\internal\view\InputConnectionWrapper.java"
"android.appwidget.AppWidgetHostView.sInflaterFilter","false","false","false","true","true","LayoutInflater.Filter","new LayoutInflater.Filter() {

    public boolean onLoadClass(Class clazz) {
        return clazz.isAnnotationPresent(RemoteViews.RemoteView.class);
    }
}","","// views that are allowed in RemoteViews.
","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.ParcelableSparseArray.CREATOR","true","false","false","true","true","Parcelable.Creator<ParcelableSparseArray>","new Parcelable.Creator<ParcelableSparseArray>() {

    public ParcelableSparseArray createFromParcel(Parcel source) {
        final ParcelableSparseArray array = new ParcelableSparseArray();
        final ClassLoader loader = array.getClass().getClassLoader();
        final int count = source.readInt();
        for (int i = 0; i < count; i++) {
            array.put(source.readInt(), source.readParcelable(loader));
        }
        return array;
    }

    public ParcelableSparseArray[] newArray(int size) {
        return new ParcelableSparseArray[size];
    }
}","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.FADE_DURATION","false","false","false","true","true","int","1000","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mRemoteContext","false","false","false","false","false","Context","","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mOldPaint","false","false","false","false","false","Paint","new Paint()","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mInfo","false","false","false","false","false","AppWidgetProviderInfo","","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.TAG","false","false","false","true","true","String","""AppWidgetHostView""","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.VIEW_MODE_ERROR","false","false","false","true","true","int","2","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mLayoutId","false","false","false","false","false","int","-1","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.VIEW_MODE_NOINIT","false","false","false","true","true","int","0","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mFadeStartTime","false","false","false","false","false","long","-1","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.VIEW_MODE_CONTENT","false","false","false","true","true","int","1","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mAppWidgetId","false","false","false","false","false","int","","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mOld","false","false","false","false","false","Bitmap","","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mContext","false","false","false","false","false","Context","","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mViewMode","false","false","false","false","false","int","VIEW_MODE_NOINIT","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.CROSSFADE","false","false","false","true","true","boolean","false","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.LOGD","false","false","false","true","true","boolean","false","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.mView","false","false","false","false","false","View","","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.UPDATE_FLAGS_RESET","false","false","false","true","true","int","0x00000001","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.VIEW_MODE_DEFAULT","false","false","false","true","true","int","3","","","\android\appwidget\AppWidgetHostView.java"
"android.appwidget.AppWidgetHostView.CREATOR","true","false","false","true","true","Parcelable.Creator<ParcelableSparseArray>","new Parcelable.Creator<ParcelableSparseArray>() {

    public ParcelableSparseArray createFromParcel(Parcel source) {
        final ParcelableSparseArray array = new ParcelableSparseArray();
        final ClassLoader loader = array.getClass().getClassLoader();
        final int count = source.readInt();
        for (int i = 0; i < count; i++) {
            array.put(source.readInt(), source.readParcelable(loader));
        }
        return array;
    }

    public ParcelableSparseArray[] newArray(int size) {
        return new ParcelableSparseArray[size];
    }
}","","","\android\appwidget\AppWidgetHostView.java"
"android.text.style.Standard.mFirst","false","false","true","false","true","int","","","","\android\text\style\LeadingMarginSpan.java"
"android.text.style.LeadingMarginSpan.mFirst","false","false","true","false","true","int","","","","\android\text\style\LeadingMarginSpan.java"
"android.content.BroadcastReceiver.mOrderedHint","false","false","true","false","false","boolean","","","","\android\content\BroadcastReceiver.java"
"android.content.BroadcastReceiver.mResultCode","false","false","true","false","false","int","","","","\android\content\BroadcastReceiver.java"
"android.content.BroadcastReceiver.mAbortBroadcast","false","false","true","false","false","boolean","","","","\android\content\BroadcastReceiver.java"
"android.content.BroadcastReceiver.mInitialStickyHint","false","false","true","false","false","boolean","","","","\android\content\BroadcastReceiver.java"
"android.content.BroadcastReceiver.mDebugUnregister","false","false","true","false","false","boolean","","","","\android\content\BroadcastReceiver.java"
"android.content.BroadcastReceiver.mResultExtras","false","false","true","false","false","Bundle","","","","\android\content\BroadcastReceiver.java"
"android.content.BroadcastReceiver.mResultData","false","false","true","false","false","String","","","","\android\content\BroadcastReceiver.java"
"com.android.internal.view.WindowManagerPolicyThread.mThread","false","false","false","true","false","Thread","","","","\com\android\internal\view\WindowManagerPolicyThread.java"
"com.android.internal.view.WindowManagerPolicyThread.mLooper","false","false","false","true","false","Looper","","","","\com\android\internal\view\WindowManagerPolicyThread.java"
"android.text.InputType.TYPE_TEXT_FLAG_IME_MULTI_LINE","true","false","false","true","true","int","0x00040000","","/**
 * Flag for {@link #TYPE_CLASS_TEXT}: the regular text view associated
 * with this should not be multi-line, but when a fullscreen input method
 * is providing text it should use multiple lines if it can.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_FILTER","true","false","false","true","true","int","0x000000b0","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering text to filter contents
 * of a list etc.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_POSTAL_ADDRESS","true","false","false","true","true","int","0x00000070","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering a postal mailing address.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_CLASS_TEXT","true","false","false","true","true","int","0x00000001","","/**
 * Class for normal text.  This class supports the following flags (only
 * one of which should be set):
 * {@link #TYPE_TEXT_FLAG_CAP_CHARACTERS},
 * {@link #TYPE_TEXT_FLAG_CAP_WORDS}, and.
 * {@link #TYPE_TEXT_FLAG_CAP_SENTENCES}.  It also supports the
 * following variations:
 * {@link #TYPE_TEXT_VARIATION_NORMAL}, and
 * {@link #TYPE_TEXT_VARIATION_URI}.  If you do not recognize the
 * variation, normal should be assumed.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_FLAG_AUTO_COMPLETE","true","false","false","true","true","int","0x00010000","","/**
 * Flag for {@link #TYPE_CLASS_TEXT}: the text editor is performing
 * auto-completion of the text being entered based on its own semantics,
 * which it will present to the user as they type.  This generally means
 * that the input method should not be showing candidates itself, but can
 * expect for the editor to supply its own completions/candidates from
 * {@link android.view.inputmethod.InputMethodSession#displayCompletions
 * InputMethodSession.displayCompletions()} as a result of the editor calling
 * {@link android.view.inputmethod.InputMethodManager#displayCompletions
 * InputMethodManager.displayCompletions()}.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_FLAG_CAP_WORDS","true","false","false","true","true","int","0x00002000","","/**
 * Flag for {@link #TYPE_CLASS_TEXT}: capitalize first character of
 * all words.  Overrides {@link #TYPE_TEXT_FLAG_CAP_SENTENCES}.  This
 * value is explicitly defined
 * to be the same as {@link TextUtils#CAP_MODE_WORDS}.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_FLAG_MULTI_LINE","true","false","false","true","true","int","0x00020000","","/**
 * Flag for {@link #TYPE_CLASS_TEXT}: multiple lines of text can be
 * entered into the field.  If this flag is not set, the text field
 * will be constrained to a single line.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS","true","false","false","true","true","int","0x00080000","","/**
 * Flag for {@link #TYPE_CLASS_TEXT}: the input method does not need to
 * display any dictionary-based candidates. This is useful for text views that
 * do not contain words from the language and do not benefit from any
 * dictionary-based completions or corrections. It overrides the
 * {@link #TYPE_TEXT_FLAG_AUTO_CORRECT} value when set.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_CLASS_DATETIME","true","false","false","true","true","int","0x00000004","","/**
 * Class for dates and times.  It supports the
 * following variations:
 * {@link #TYPE_DATETIME_VARIATION_NORMAL}
 * {@link #TYPE_DATETIME_VARIATION_DATE}, and
 * {@link #TYPE_DATETIME_VARIATION_TIME},.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_SHORT_MESSAGE","true","false","false","true","true","int","0x00000040","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering a short, possibly informal
 * message such as an instant message or a text message.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_NULL","true","false","false","true","true","int","0x00000000","","/**
 * Special content type for when no explicit type has been specified.
 * This should be interpreted to mean that the target input connection
 * is not rich, it can not process and show things like candidate text nor
 * retrieve the current text, so the input method will need to run in a
 * limited ""generate key events"" mode.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES","true","false","false","true","true","int","0x00004000","","/**
 * Flag for {@link #TYPE_CLASS_TEXT}: capitalize first character of
 * each sentence.  This value is explicitly defined
 * to be the same as {@link TextUtils#CAP_MODE_SENTENCES}.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_MASK_VARIATION","true","false","false","true","true","int","0x00000ff0","","/**
 * Mask of bits that determine the variation of
 * the base content class.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_DATETIME_VARIATION_DATE","true","false","false","true","true","int","0x00000010","","/**
 * Default variation of {@link #TYPE_CLASS_DATETIME}: allows entering
 * only a date.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_URI","true","false","false","true","true","int","0x00000010","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering a URI.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_DATETIME_VARIATION_NORMAL","true","false","false","true","true","int","0x00000000","","/**
 * Default variation of {@link #TYPE_CLASS_DATETIME}: allows entering
 * both a date and time.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_NUMBER_FLAG_SIGNED","true","false","false","true","true","int","0x00001000","","/**
 * Flag of {@link #TYPE_CLASS_NUMBER}: the number is signed, allowing
 * a positive or negative sign at the start.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_LONG_MESSAGE","true","false","false","true","true","int","0x00000050","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering the content of a long, possibly
 * formal message such as the body of an e-mail.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_WEB_EDIT_TEXT","true","false","false","true","true","int","0x000000a0","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering text inside of a web form.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_CLASS_NUMBER","true","false","false","true","true","int","0x00000002","","/**
 * Class for numeric text.  This class supports the following flag:
 * {@link #TYPE_NUMBER_FLAG_SIGNED} and
 * {@link #TYPE_NUMBER_FLAG_DECIMAL}.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_PASSWORD","true","false","false","true","true","int","0x00000080","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering a password.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_DATETIME_VARIATION_TIME","true","false","false","true","true","int","0x00000020","","/**
 * Default variation of {@link #TYPE_CLASS_DATETIME}: allows entering
 * only a time.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_MASK_FLAGS","true","false","false","true","true","int","0x00fff000","","/**
 * Mask of bits that provide addition bit flags
 * of options.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_CLASS_PHONE","true","false","false","true","true","int","0x00000003","","/**
 * Class for a phone number.  This class currently supports no variations
 * or flags.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_FLAG_AUTO_CORRECT","true","false","false","true","true","int","0x00008000","","/**
 * Flag for {@link #TYPE_CLASS_TEXT}: the user is entering free-form
 * text that should have auto-correction applied to it.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_PERSON_NAME","true","false","false","true","true","int","0x00000060","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering the name of a person.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_EMAIL_SUBJECT","true","false","false","true","true","int","0x00000030","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering the subject line of
 * an e-mail.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS","true","false","false","true","true","int","0x00000020","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering an e-mail address.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS","true","false","false","true","true","int","0x00001000","","/**
 * Flag for {@link #TYPE_CLASS_TEXT}: capitalize all characters.  Overrides
 * {@link #TYPE_TEXT_FLAG_CAP_WORDS} and
 * {@link #TYPE_TEXT_FLAG_CAP_SENTENCES}.  This value is explicitly defined
 * to be the same as {@link TextUtils#CAP_MODE_CHARACTERS}.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_MASK_CLASS","true","false","false","true","true","int","0x0000000f","","/**
 * Mask of bits that determine the overall class
 * of text being given.  Currently supported classes are:
 * {@link #TYPE_CLASS_TEXT}, {@link #TYPE_CLASS_NUMBER},
 * {@link #TYPE_CLASS_PHONE}, {@link #TYPE_CLASS_DATETIME}.
 * If the class is not one you
 * understand, assume {@link #TYPE_CLASS_TEXT} with NO variation
 * or flags.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_NORMAL","true","false","false","true","true","int","0x00000000","","/**
 * Default variation of {@link #TYPE_CLASS_TEXT}: plain old normal text.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_PHONETIC","true","false","false","true","true","int","0x000000c0","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering text for phonetic
 * pronunciation, such as a phonetic name field in contacts.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD","true","false","false","true","true","int","0x00000090","","/**
 * Variation of {@link #TYPE_CLASS_TEXT}: entering a password, which should
 * be visible to the user.
 */
","\android\text\InputType.java"
"android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL","true","false","false","true","true","int","0x00002000","","/**
 * Flag of {@link #TYPE_CLASS_NUMBER}: the number is decimal, allowing
 * a decimal point to provide fractional values.
 */
","\android\text\InputType.java"
"android.content.ContentValues.TAG","true","false","false","true","true","String","""ContentValues""","","","\android\content\ContentValues.java"
"android.content.ContentValues.CREATOR","true","false","false","true","true","Parcelable.Creator<ContentValues>","new Parcelable.Creator<ContentValues>() {

    @SuppressWarnings({ ""deprecation"", ""unchecked"" })
    public ContentValues createFromParcel(Parcel in) {
        // TODO - what ClassLoader should be passed to readHashMap?
        HashMap<String, Object> values = in.readHashMap(null);
        return new ContentValues(values);
    }

    public ContentValues[] newArray(int size) {
        return new ContentValues[size];
    }
}","","","\android\content\ContentValues.java"
"android.content.ContentValues.mValues","false","false","true","false","false","HashMap<String,Object>","","","/**
 * Holds the actual values
 */
","\android\content\ContentValues.java"
"android.preference.RingtonePreference.mShowSilent","false","false","true","false","false","boolean","","","","\android\preference\RingtonePreference.java"
"android.preference.RingtonePreference.TAG","false","false","true","true","true","String","""RingtonePreference""","","","\android\preference\RingtonePreference.java"
"android.preference.RingtonePreference.mRequestCode","false","false","true","false","false","int","","","","\android\preference\RingtonePreference.java"
"android.preference.RingtonePreference.mShowDefault","false","false","true","false","false","boolean","","","","\android\preference\RingtonePreference.java"
"android.preference.RingtonePreference.mRingtoneType","false","false","true","false","false","int","","","","\android\preference\RingtonePreference.java"
"android.text.method.BaseKeyListener.OLD_SEL_START","false","false","false","true","true","Object","new NoCopySpan.Concrete()","","/* package */
","\android\text\method\BaseKeyListener.java"
"android.view.ViewTreeObserver.mOnGlobalLayoutListeners","false","false","true","false","false","CopyOnWriteArrayList<OnGlobalLayoutListener>","","","","\android\view\ViewTreeObserver.java"
"android.view.InternalInsetsInfo.visibleInsets","true","false","false","false","true","Rect","new Rect()","","/**
 * Offsets from the fram of the window at which windows behind it
 * are visible.
 */
","\android\view\ViewTreeObserver.java"
"android.view.InternalInsetsInfo.contentInsets","true","false","false","false","true","Rect","new Rect()","","/**
 * Offsets from the frame of the window at which the content of
 * windows behind it should be placed.
 */
","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.visibleInsets","true","false","false","false","true","Rect","new Rect()","","/**
 * Offsets from the fram of the window at which windows behind it
 * are visible.
 */
","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.TOUCHABLE_INSETS_VISIBLE","true","false","false","true","true","int","2","","/**
 * Option for {@link #setTouchableInsets(int)}: the area inside of
 * the visible insets can be touched.
 */
","\android\view\ViewTreeObserver.java"
"android.view.InternalInsetsInfo.TOUCHABLE_INSETS_CONTENT","true","false","false","true","true","int","1","","/**
 * Option for {@link #setTouchableInsets(int)}: the area inside of
 * the content insets can be touched.
 */
","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.contentInsets","true","false","false","false","true","Rect","new Rect()","","/**
 * Offsets from the frame of the window at which the content of
 * windows behind it should be placed.
 */
","\android\view\ViewTreeObserver.java"
"android.view.InternalInsetsInfo.TOUCHABLE_INSETS_FRAME","true","false","false","true","true","int","0","","/**
 * Option for {@link #setTouchableInsets(int)}: the entire window frame
 * can be touched.
 */
","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.TOUCHABLE_INSETS_FRAME","true","false","false","true","true","int","0","","/**
 * Option for {@link #setTouchableInsets(int)}: the entire window frame
 * can be touched.
 */
","\android\view\ViewTreeObserver.java"
"android.view.InternalInsetsInfo.mTouchableInsets","false","false","false","false","false","int","","","","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.mTouchableInsets","false","false","false","false","false","int","","","","\android\view\ViewTreeObserver.java"
"android.view.InternalInsetsInfo.TOUCHABLE_INSETS_VISIBLE","true","false","false","true","true","int","2","","/**
 * Option for {@link #setTouchableInsets(int)}: the area inside of
 * the visible insets can be touched.
 */
","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.mOnComputeInternalInsetsListeners","false","false","true","false","false","CopyOnWriteArrayList<OnComputeInternalInsetsListener>","","","","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.mOnScrollChangedListeners","false","false","true","false","false","CopyOnWriteArrayList<OnScrollChangedListener>","","","","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.mOnGlobalFocusListeners","false","false","true","false","false","CopyOnWriteArrayList<OnGlobalFocusChangeListener>","","","","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.mOnPreDrawListeners","false","false","true","false","false","CopyOnWriteArrayList<OnPreDrawListener>","","","","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.mAlive","false","false","true","false","false","boolean","true","","","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.TOUCHABLE_INSETS_CONTENT","true","false","false","true","true","int","1","","/**
 * Option for {@link #setTouchableInsets(int)}: the area inside of
 * the content insets can be touched.
 */
","\android\view\ViewTreeObserver.java"
"android.view.ViewTreeObserver.mOnTouchModeChangeListeners","false","false","true","false","false","CopyOnWriteArrayList<OnTouchModeChangeListener>","","","","\android\view\ViewTreeObserver.java"
"android.webkit.DebugFlags.WEB_BACK_FORWARD_LIST","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.COOKIE_MANAGER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.FRAME_LOADER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.WEB_SETTINGS","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.URL_UTIL","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.SSL_ERROR_HANDLER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.WEB_VIEW_CORE","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.BROWSER_FRAME","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.DRAG_TRACKER_LOGTAG","true","false","false","true","true","String","""skia""","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.DRAG_TRACKER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.WEB_SYNC_MANAGER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.WEB_VIEW","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.STREAM_LOADER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.COOKIE_SYNC_MANAGER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.CALLBACK_PROXY","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.LOAD_LISTENER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.WEB_TEXT_VIEW","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.CACHE_MANAGER","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.J_WEB_CORE_JAVA_BRIDGE","true","false","false","true","true","boolean","false","","// HIGHLY VERBOSE
","\android\webkit\DebugFlags.java"
"android.webkit.DebugFlags.NETWORK","true","false","false","true","true","boolean","false","","","\android\webkit\DebugFlags.java"
"android.content.ContentProvider.mWritePermission","false","false","true","false","false","String","","","","\android\content\ContentProvider.java"
"android.content.ContentProvider.mTransport","false","false","true","false","false","Transport","new Transport()","","","\android\content\ContentProvider.java"
"android.content.ContentProvider.mContext","false","false","true","false","false","Context","null","","","\android\content\ContentProvider.java"
"android.content.ContentProvider.mReadPermission","false","false","true","false","false","String","","","","\android\content\ContentProvider.java"
"android.content.ContentProvider.mMyUid","false","false","true","false","false","int","","","","\android\content\ContentProvider.java"
"android.content.ContentProvider.mPathPermissions","false","false","true","false","false","PathPermission","","","","\android\content\ContentProvider.java"
"android.database.CursorJoiner.mCursorLeft","false","false","true","false","false","Cursor","","","","\android\database\CursorJoiner.java"
"android.database.CursorJoiner.mColumnsLeft","false","false","true","false","false","int","","","","\android\database\CursorJoiner.java"
"android.database.CursorJoiner.mCompareResultIsValid","false","false","true","false","false","boolean","","","","\android\database\CursorJoiner.java"
"android.database.CursorJoiner.mValues","false","false","true","false","false","String","","","","\android\database\CursorJoiner.java"
"android.database.CursorJoiner.mColumnsRight","false","false","true","false","false","int","","","","\android\database\CursorJoiner.java"
"android.database.CursorJoiner.mCompareResult","false","false","true","false","false","Result","","","","\android\database\CursorJoiner.java"
"android.database.CursorJoiner.mCursorRight","false","false","true","false","false","Cursor","","","","\android\database\CursorJoiner.java"
"android.webkit.WebStorage.UPDATE","false","false","false","true","true","int","0","","// Message ids
","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.mQuota","false","false","false","false","false","long","0","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.USAGE","false","false","true","true","true","String","""usage""","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.RETURN_ORIGINS","false","false","false","true","true","int","0","","// Message ids on the UI thread
","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.CALLBACK","false","false","true","true","true","String","""callback""","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.mUsage","false","false","false","false","false","long","0","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.RETURN_QUOTA_ORIGIN","false","false","false","true","true","int","2","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.QUOTA","false","false","true","true","true","String","""quota""","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.mOrigins","false","false","true","false","false","Map<String,Origin>","","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.RETURN_USAGE_ORIGIN","false","false","false","true","true","int","1","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.ORIGIN","false","false","true","true","true","String","""origin""","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.sWebStorage","false","false","true","true","false","WebStorage","","","// Global instance of a WebStorage
","\android\webkit\WebStorage.java"
"android.webkit.Origin.mUsage","false","false","false","false","false","long","0","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.GET_ORIGINS","false","false","false","true","true","int","4","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.GET_USAGE_ORIGIN","false","false","false","true","true","int","5","","","\android\webkit\WebStorage.java"
"android.webkit.Origin.mQuota","false","false","false","false","false","long","0","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.SET_QUOTA_ORIGIN","false","false","false","true","true","int","1","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.DELETE_ORIGIN","false","false","false","true","true","int","2","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.TAG","false","false","true","true","true","String","""webstorage""","","// Log tag
","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.ORIGINS","false","false","true","true","true","String","""origins""","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.mOrigin","false","false","false","false","false","String","null","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.mHandler","false","false","true","false","false","Handler","null","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.DELETE_ALL","false","false","false","true","true","int","3","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.mUIHandler","false","false","true","false","false","Handler","null","","","\android\webkit\WebStorage.java"
"android.webkit.WebStorage.GET_QUOTA_ORIGIN","false","false","false","true","true","int","6","","","\android\webkit\WebStorage.java"
"android.webkit.Origin.mOrigin","false","false","false","false","false","String","null","","","\android\webkit\WebStorage.java"
"android.text.method.MultiTapKeyListener.mCapitalize","false","false","true","false","false","Capitalize","","","","\android\text\method\MultiTapKeyListener.java"
"android.text.method.MultiTapKeyListener.sInstance","false","false","true","true","false","MultiTapKeyListener","new MultiTapKeyListener[Capitalize.values().length * 2]","","","\android\text\method\MultiTapKeyListener.java"
"android.text.method.Timeout.mBuffer","false","false","true","false","false","Editable","","","","\android\text\method\MultiTapKeyListener.java"
"android.text.method.MultiTapKeyListener.mBuffer","false","false","true","false","false","Editable","","","","\android\text\method\MultiTapKeyListener.java"
"android.text.method.MultiTapKeyListener.mAutoText","false","false","true","false","false","boolean","","","","\android\text\method\MultiTapKeyListener.java"
"android.text.method.MultiTapKeyListener.sRecs","false","false","true","true","true","SparseArray<String>","new SparseArray<String>()","","","\android\text\method\MultiTapKeyListener.java"
"android.util.TypedValue.DENSITY_DEFAULT","true","false","false","true","true","int","0","","/**
 * If {@link #density} is equal to this value, then the density should be
 * treated as the system's default density value: {@link DisplayMetrics#DENSITY_DEFAULT}.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_PT","true","false","false","true","true","int","3","","/**
 * {@link #TYPE_DIMENSION} complex unit: Value is in points.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_PX","true","false","false","true","true","int","0","","/**
 * {@link #TYPE_DIMENSION} complex unit: Value is raw pixels.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_NULL","true","false","false","true","true","int","0x00","","/**
 * The value contains no data.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_SP","true","false","false","true","true","int","2","","/**
 * {@link #TYPE_DIMENSION} complex unit: Value is a scaled pixel.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.data","true","false","false","false","false","int","","","/**
 * Basic data in the value, interpreted according to {@link #type}
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_INT_COLOR_ARGB4","true","false","false","true","true","int","0x1e","","/**
 * The <var>data</var> field holds a color that was originally
 * specified as #argb.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_INT_COLOR_ARGB8","true","false","false","true","true","int","0x1c","","/**
 * The <var>data</var> field holds a color that was originally
 * specified as #aarrggbb.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_FIRST_COLOR_INT","true","false","false","true","true","int","0x1c","","/**
 * Identifies the start of integer values that were specified as
 * color constants (starting with '#').
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_RADIX_0p23","true","false","false","true","true","int","3","","/**
 * Complex data: the mantissa magnitude is 0 bits -- i.e, 0x0.nnnnnn
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_IN","true","false","false","true","true","int","4","","/**
 * {@link #TYPE_DIMENSION} complex unit: Value is in inches.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.resourceId","true","false","false","false","false","int","","","/**
 * If Value came from a resource, this holds the corresponding resource id.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_STRING","true","false","false","true","true","int","0x03","","/**
 * The <var>string</var> field holds string data.  In addition, if
 * <var>data</var> is non-zero then it is the string block
 * index of the string and <var>assetCookie</var> is the set of
 * assets the string came from.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_ATTRIBUTE","true","false","false","true","true","int","0x02","","/**
 * The <var>data</var> field holds an attribute resource
 * identifier (referencing an attribute in the current theme
 * style, not a resource entry).
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_FRACTION","true","false","false","true","true","int","0","","/**
 * {@link #TYPE_FRACTION} complex unit: A basic fraction of the overall
 * size.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_FRACTION_PARENT","true","false","false","true","true","int","1","","/**
 * {@link #TYPE_FRACTION} complex unit: A fraction of the parent size.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_MM","true","false","false","true","true","int","5","","/**
 * {@link #TYPE_DIMENSION} complex unit: Value is in millimeters.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_INT_BOOLEAN","true","false","false","true","true","int","0x12","","/**
 * The <var>data</var> field holds 0 or 1 that was originally
 * specified as ""false"" or ""true"".
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_DIP","true","false","false","true","true","int","1","","/**
 * {@link #TYPE_DIMENSION} complex unit: Value is Device Independent
 * Pixels.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.FRACTION_UNIT_STRS","false","false","true","true","true","String","new String[] { ""%"", ""%p"" }","","","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_RADIX_23p0","true","false","false","true","true","int","0","","/**
 * Complex data: the mantissa is an integral number -- i.e., 0xnnnnnn.0
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_REFERENCE","true","false","false","true","true","int","0x01","","/**
 * The <var>data</var> field holds a resource identifier.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_DIMENSION","true","false","false","true","true","int","0x05","","/**
 * The <var>data</var> field holds a complex number encoding a
 * dimension value.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.changingConfigurations","true","false","false","false","false","int","-1","","/**
 * If Value came from a resource, these are the configurations for which
 * its contents can change.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.assetCookie","true","false","false","false","false","int","","","/**
 * Additional information about where the value came from; only
 * set for strings.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.DENSITY_NONE","true","false","false","true","true","int","0xffff","","/**
 * If {@link #density} is equal to this value, then there is no density
 * associated with the resource and it should not be scaled.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.DIMENSION_UNIT_STRS","false","false","true","true","true","String","new String[] { ""px"", ""dip"", ""sp"", ""pt"", ""in"", ""mm"" }","","","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_INT_COLOR_RGB8","true","false","false","true","true","int","0x1d","","/**
 * The <var>data</var> field holds a color that was originally
 * specified as #rrggbb.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_RADIX_16p7","true","false","false","true","true","int","1","","/**
 * Complex data: the mantissa magnitude is 16 bits -- i.e, 0xnnnn.nn
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_INT_COLOR_RGB4","true","false","false","true","true","int","0x1f","","/**
 * The <var>data</var> field holds a color that was originally
 * specified as #rgb.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_INT_HEX","true","false","false","true","true","int","0x11","","/**
 * The <var>data</var> field holds a number that was
 * originally specified in hexadecimal (0xn).
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_MANTISSA_SHIFT","true","false","false","true","true","int","8","","/**
 * Complex data: bit location of mantissa information.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.type","true","false","false","false","false","int","","","/**
 * The type held by this value, as defined by the constants here.
 * This tells you how to interpret the other fields in the object.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_MANTISSA_MASK","true","false","false","true","true","int","0xffffff","","/**
 * Complex data: mask to extract mantissa information (after shifting by
 * {@link #COMPLEX_MANTISSA_SHIFT}). This gives us 23 bits of precision;
 * the top bit is the sign.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_FRACTION","true","false","false","true","true","int","0x06","","/**
 * The <var>data</var> field holds a complex number encoding a fraction
 * of a container.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_LAST_COLOR_INT","true","false","false","true","true","int","0x1f","","/**
 * Identifies the end of integer values that were specified as color
 * constants.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_MASK","true","false","false","true","true","int","0xf","","/**
 * Complex data: mask to extract unit information (after shifting by
 * {@link #COMPLEX_UNIT_SHIFT}). This gives us 16 possible types, as
 * defined below.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_RADIX_MASK","true","false","false","true","true","int","0x3","","/**
 * Complex data: mask to extract radix information (after shifting by
 * {@link #COMPLEX_RADIX_SHIFT}). This give us 4 possible fixed point
 * representations as defined below.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.MANTISSA_MULT","false","false","true","true","true","float","1.0f / (1 << TypedValue.COMPLEX_MANTISSA_SHIFT)","","","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_RADIX_SHIFT","true","false","false","true","true","int","4","","/**
 * Complex data: where the radix information is, telling where the decimal
 * place appears in the mantissa.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_FIRST_INT","true","false","false","true","true","int","0x10","","/**
 * Identifies the start of plain integer values.  Any type value
 * from this to {@link #TYPE_LAST_INT} means the
 * <var>data</var> field holds a generic integer value.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.RADIX_MULTS","false","false","true","true","true","float","new float[] { 1.0f * MANTISSA_MULT, 1.0f / (1 << 7) * MANTISSA_MULT, 1.0f / (1 << 15) * MANTISSA_MULT, 1.0f / (1 << 23) * MANTISSA_MULT }","","","\android\util\TypedValue.java"
"android.util.TypedValue.density","true","false","false","false","false","int","","","/**
 * If the Value came from a resource, this holds the corresponding pixel density.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_FLOAT","true","false","false","true","true","int","0x04","","/**
 * The <var>data</var> field holds an IEEE 754 floating point number.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_INT_DEC","true","false","false","true","true","int","0x10","","/**
 * The <var>data</var> field holds a number that was
 * originally specified in decimal.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.TYPE_LAST_INT","true","false","false","true","true","int","0x1f","","/**
 * Identifies the end of plain integer values.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_UNIT_SHIFT","true","false","false","true","true","int","0","","/**
 * Complex data: bit location of unit information.
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.COMPLEX_RADIX_8p15","true","false","false","true","true","int","2","","/**
 * Complex data: the mantissa magnitude is 8 bits -- i.e, 0xnn.nnnn
 */
","\android\util\TypedValue.java"
"android.util.TypedValue.string","true","false","false","false","false","CharSequence","","","/**
 * If the value holds a string, this is it.
 */
","\android\util\TypedValue.java"
"android.net.LocalServerSocket.LISTEN_BACKLOG","false","false","true","true","true","int","50","","/**
 * 50 seems a bit much, but it's what was here
 */
","\android\net\LocalServerSocket.java"
"android.net.LocalServerSocket.localAddress","false","false","true","false","true","LocalSocketAddress","","","","\android\net\LocalServerSocket.java"
"android.net.LocalServerSocket.impl","false","false","true","false","true","LocalSocketImpl","","","","\android\net\LocalServerSocket.java"
"android.view.OrientationEventListener.mSensorManager","false","false","true","false","false","SensorManager","","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.mEnabled","false","false","true","false","false","boolean","false","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.localLOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.mSensorEventListener","false","false","true","false","false","SensorEventListener","","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.mRate","false","false","true","false","false","int","","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener._DATA_Y","false","false","true","true","true","int","1","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener._DATA_X","false","false","true","true","true","int","0","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener._DATA_Z","false","false","true","true","true","int","2","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.DEBUG","false","false","true","true","true","boolean","false","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.mSensor","false","false","true","false","false","Sensor","","","","\android\view\OrientationEventListener.java"
"android.view.SensorEventListenerImpl._DATA_Z","false","false","true","true","true","int","2","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.ORIENTATION_UNKNOWN","true","false","false","true","true","int","-1","","/**
 * Returned from onOrientationChanged when the device orientation cannot be determined
 * (typically when the device is in a close to flat position).
 *
 * @see #onOrientationChanged
 */
","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.mOldListener","false","false","true","false","false","OrientationListener","","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.mOrientation","false","false","true","false","false","int","ORIENTATION_UNKNOWN","","","\android\view\OrientationEventListener.java"
"android.view.SensorEventListenerImpl._DATA_X","false","false","true","true","true","int","0","","","\android\view\OrientationEventListener.java"
"android.view.SensorEventListenerImpl._DATA_Y","false","false","true","true","true","int","1","","","\android\view\OrientationEventListener.java"
"android.view.OrientationEventListener.TAG","false","false","true","true","true","String","""OrientationEventListener""","","","\android\view\OrientationEventListener.java"
"android.speech.RecognizerIntent.EXTRA_MAX_RESULTS","true","false","false","true","true","String","""android.speech.extra.MAX_RESULTS""","","/**
 * Optional limit on the maximum number of results to return. If omitted the recognizer
 * will choose how many results to return. Must be an integer.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT","true","false","false","true","true","String","""android.speech.extra.RESULTS_PENDINGINTENT""","","/**
 * When the intent is {@link #ACTION_RECOGNIZE_SPEECH}, the speech input activity will
 * return results to you via the activity results mechanism.  Alternatively, if you use this
 * extra to supply a PendingIntent, the results will be added to its bundle and the
 * PendingIntent will be sent to its target.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.RESULT_SERVER_ERROR","true","false","false","true","true","int","Activity.RESULT_FIRST_USER + 2","","/**
 * Result code returned when the recognition server returns an error
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.DETAILS_META_DATA","true","false","false","true","true","String","""android.speech.DETAILS""","","/**
 * Meta-data name under which an {@link Activity} implementing {@link #ACTION_WEB_SEARCH} can
 * use to expose the class name of a {@link BroadcastReceiver} which can respond to request for
 * more information, from any of the broadcast intents specified in this class.
 * <p>
 * Broadcast intents can be directed to the class name specified in the meta-data by creating
 * an {@link Intent}, setting the component with
 * {@link Intent#setComponent(android.content.ComponentName)}, and using
 * {@link Context#sendOrderedBroadcast(Intent, String, BroadcastReceiver, android.os.Handler, int, String, android.os.Bundle)}
 * with another {@link BroadcastReceiver} which can receive the results.
 * <p>
 * The {@link #getVoiceDetailsIntent(Context)} method is provided as a convenience to create
 * a broadcast intent based on the value of this meta-data, if available.
 * <p>
 * This is optional and not all {@link Activity}s which implement {@link #ACTION_WEB_SEARCH}
 * are required to implement this. Thus retrieving this meta-data may be null.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.ACTION_WEB_SEARCH","true","false","false","true","true","String","""android.speech.action.WEB_SEARCH""","","/**
 * Starts an activity that will prompt the user for speech, sends it through a
 * speech recognizer, and invokes and displays a web search result.
 *
 * <p>Required extras:
 * <ul>
 * <li>{@link #EXTRA_LANGUAGE_MODEL}
 * </ul>
 *
 * <p>Optional extras:
 * <ul>
 * <li>{@link #EXTRA_PROMPT}
 * <li>{@link #EXTRA_LANGUAGE}
 * <li>{@link #EXTRA_MAX_RESULTS}
 * <li>{@link #EXTRA_PARTIAL_RESULTS}
 * </ul>
 *
 * <p> Result extras (returned in the result, not to be specified in the request):
 * <ul>
 * <li>{@link #EXTRA_RESULTS}
 * </ul>
 *
 * <p>NOTE: There may not be any applications installed to handle this action, so you should
 * make sure to catch {@link ActivityNotFoundException}.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH","true","false","false","true","true","String","""web_search""","","/**
 * Use a language model based on web search terms.  This is a value to use for
 * {@link #EXTRA_LANGUAGE_MODEL}.
 * @see #EXTRA_LANGUAGE_MODEL
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.RESULT_NETWORK_ERROR","true","false","false","true","true","int","Activity.RESULT_FIRST_USER + 3","","/**
 * Result code returned when a network error was encountered
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.RESULT_CLIENT_ERROR","true","false","false","true","true","int","Activity.RESULT_FIRST_USER + 1","","/**
 * Result code returned when there is a generic client error
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE","true","false","false","true","true","String","""android.speech.extra.RESULTS_PENDINGINTENT_BUNDLE""","","/**
 * If you use {@link #EXTRA_RESULTS_PENDINGINTENT} to supply a forwarding intent, you can
 * also use this extra to supply additional extras for the final intent.  The search results
 * will be added to this bundle, and the combined bundle will be sent to the target.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.RESULT_AUDIO_ERROR","true","false","false","true","true","int","Activity.RESULT_FIRST_USER + 4","","/**
 * Result code returned when an audio error was encountered
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_LANGUAGE_MODEL","true","false","false","true","true","String","""android.speech.extra.LANGUAGE_MODEL""","","/**
 * Informs the recognizer which speech model to prefer when performing
 * {@link #ACTION_RECOGNIZE_SPEECH}. The recognizer uses this
 * information to fine tune the results. This extra is required. Activities implementing
 * {@link #ACTION_RECOGNIZE_SPEECH} may interpret the values as they see fit.
 *
 * @see #LANGUAGE_MODEL_FREE_FORM
 * @see #LANGUAGE_MODEL_WEB_SEARCH
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_SUPPORTED_LANGUAGES","true","false","false","true","true","String","""android.speech.extra.SUPPORTED_LANGUAGES""","","/**
 * The key to the extra in the {@link Bundle} returned by {@link #ACTION_GET_LANGUAGE_DETAILS}
 * which is an {@link ArrayList} of {@link String}s that represents the languages supported by
 * this implementation of voice recognition - a list of strings like ""en-US"", ""cmn-Hans-CN"",
 * etc.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.ACTION_GET_LANGUAGE_DETAILS","true","false","false","true","true","String","""android.speech.action.GET_LANGUAGE_DETAILS""","","/**
 * A broadcast intent which can be fired to the {@link BroadcastReceiver} component specified
 * in the meta-data defined in the {@link #DETAILS_META_DATA} meta-data of an
 * {@link Activity} satisfying {@link #ACTION_WEB_SEARCH}.
 * <p>
 * When fired with
 * {@link Context#sendOrderedBroadcast(Intent, String, BroadcastReceiver, android.os.Handler, int, String, android.os.Bundle)},
 * a {@link Bundle} of extras will be returned to the provided result receiver, and should
 * ideally contain values for {@link #EXTRA_LANGUAGE_PREFERENCE} and
 * {@link #EXTRA_SUPPORTED_LANGUAGES}.
 * <p>
 * (Whether these are actually provided is up to the particular implementation. It is
 * recommended that {@link Activity}s implementing {@link #ACTION_WEB_SEARCH} provide this
 * information, but it is not required.)
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.ACTION_RECOGNIZE_SPEECH","true","false","false","true","true","String","""android.speech.action.RECOGNIZE_SPEECH""","","/**
 * Starts an activity that will prompt the user for speech and sends it through a
 * speech recognizer.  The results will be returned via activity results (in
 * {@link Activity#onActivityResult}, if you start the intent using
 * {@link Activity#startActivityForResult(Intent, int)}), or forwarded via a PendingIntent
 * if one is provided.
 *
 * <p>Starting this intent with just {@link Activity#startActivity(Intent)} is not supported.
 * You must either use {@link Activity#startActivityForResult(Intent, int)}, or provide a
 * PendingIntent, to receive recognition results.
 *
 * <p>Required extras:
 * <ul>
 * <li>{@link #EXTRA_LANGUAGE_MODEL}
 * </ul>
 *
 * <p>Optional extras:
 * <ul>
 * <li>{@link #EXTRA_PROMPT}
 * <li>{@link #EXTRA_LANGUAGE}
 * <li>{@link #EXTRA_MAX_RESULTS}
 * <li>{@link #EXTRA_RESULTS_PENDINGINTENT}
 * <li>{@link #EXTRA_RESULTS_PENDINGINTENT_BUNDLE}
 * </ul>
 *
 * <p> Result extras (returned in the result, not to be specified in the request):
 * <ul>
 * <li>{@link #EXTRA_RESULTS}
 * </ul>
 *
 * <p>NOTE: There may not be any applications installed to handle this action, so you should
 * make sure to catch {@link ActivityNotFoundException}.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_SPEECH_INPUT_MINIMUM_LENGTH_MILLIS","true","false","false","true","true","String","""android.speech.extras.SPEECH_INPUT_MINIMUM_LENGTH_MILLIS""","","/**
 * The minimum length of an utterance. We will not stop recording before this amount of time.
 *
 * Note that it is extremely rare you'd want to specify this value in an intent. If you don't
 * have a very good reason to change these, you should leave them as they are. Note also that
 * certain values may cause undesired or unexpected results - use judiciously! Additionally,
 * depending on the recognizer implementation, these values may have no effect.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_LANGUAGE_PREFERENCE","true","false","false","true","true","String","""android.speech.extra.LANGUAGE_PREFERENCE""","","/**
 * The key to the extra in the {@link Bundle} returned by {@link #ACTION_GET_LANGUAGE_DETAILS}
 * which is a {@link String} that represents the current language preference this user has
 * specified - a locale string like ""en-US"".
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_PROMPT","true","false","false","true","true","String","""android.speech.extra.PROMPT""","","/**
 * Optional text prompt to show to the user when asking them to speak.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_SPEECH_INPUT_COMPLETE_SILENCE_LENGTH_MILLIS","true","false","false","true","true","String","""android.speech.extras.SPEECH_INPUT_COMPLETE_SILENCE_LENGTH_MILLIS""","","/**
 * The amount of time that it should take after we stop hearing speech to consider the input
 * complete.
 *
 * Note that it is extremely rare you'd want to specify this value in an intent. If
 * you don't have a very good reason to change these, you should leave them as they are. Note
 * also that certain values may cause undesired or unexpected results - use judiciously!
 * Additionally, depending on the recognizer implementation, these values may have no effect.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_CALLING_PACKAGE","true","false","false","true","true","String","""calling_package""","","/**
 * The extra key used in an intent to the speech recognizer for voice search. Not
 * generally to be used by developers. The system search dialog uses this, for example,
 * to set a calling package for identification by a voice search API. If this extra
 * is set by anyone but the system process, it should be overridden by the voice search
 * implementation.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.RESULT_NO_MATCH","true","false","false","true","true","int","Activity.RESULT_FIRST_USER","","/**
 * Result code returned when no matches are found for the given speech
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_PARTIAL_RESULTS","true","false","false","true","true","String","""android.speech.extra.PARTIAL_RESULTS""","","/**
 * Optional boolean to indicate whether partial results should be returned by the recognizer
 * as the user speaks (default is false).  The server may ignore a request for partial
 * results in some or all cases.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.LANGUAGE_MODEL_FREE_FORM","true","false","false","true","true","String","""free_form""","","/**
 * Use a language model based on free-form speech recognition.  This is a value to use for
 * {@link #EXTRA_LANGUAGE_MODEL}.
 * @see #EXTRA_LANGUAGE_MODEL
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_RESULTS","true","false","false","true","true","String","""android.speech.extra.RESULTS""","","/**
 * An ArrayList&lt;String&gt; of the recognition results when performing
 * {@link #ACTION_RECOGNIZE_SPEECH}. Returned in the results; not to be specified in the
 * recognition request. Only present when {@link Activity#RESULT_OK} is returned in
 * an activity result. In a PendingIntent, the lack of this extra indicates failure.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_LANGUAGE","true","false","false","true","true","String","""android.speech.extra.LANGUAGE""","","/**
 * Optional IETF language tag (as defined by BCP 47), for example ""en-US"". This tag informs the
 * recognizer to perform speech recognition in a language different than the one set in the
 * {@link java.util.Locale#getDefault()}.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_ONLY_RETURN_LANGUAGE_PREFERENCE","true","false","false","true","true","String","""android.speech.extra.ONLY_RETURN_LANGUAGE_PREFERENCE""","","/**
 * Specify this boolean extra in a broadcast of {@link #ACTION_GET_LANGUAGE_DETAILS} to
 * indicate that only the current language preference is needed in the response. This
 * avoids any additional computation if all you need is {@link #EXTRA_LANGUAGE_PREFERENCE}
 * in the response.
 */
","\android\speech\RecognizerIntent.java"
"android.speech.RecognizerIntent.EXTRA_SPEECH_INPUT_POSSIBLY_COMPLETE_SILENCE_LENGTH_MILLIS","true","false","false","true","true","String","""android.speech.extras.SPEECH_INPUT_POSSIBLY_COMPLETE_SILENCE_LENGTH_MILLIS""","","/**
 * The amount of time that it should take after we stop hearing speech to consider the input
 * possibly complete. This is used to prevent the endpointer cutting off during very short
 * mid-speech pauses.
 *
 * Note that it is extremely rare you'd want to specify this value in an intent. If
 * you don't have a very good reason to change these, you should leave them as they are. Note
 * also that certain values may cause undesired or unexpected results - use judiciously!
 * Additionally, depending on the recognizer implementation, these values may have no effect.
 */
","\android\speech\RecognizerIntent.java"
"android.database.sqlite.SQLiteOpenHelper.mContext","false","false","true","false","true","Context","","","","\android\database\sqlite\SQLiteOpenHelper.java"
"android.database.sqlite.SQLiteOpenHelper.mDatabase","false","false","true","false","false","SQLiteDatabase","null","","","\android\database\sqlite\SQLiteOpenHelper.java"
"android.database.sqlite.SQLiteOpenHelper.mIsInitializing","false","false","true","false","false","boolean","false","","","\android\database\sqlite\SQLiteOpenHelper.java"
"android.database.sqlite.SQLiteOpenHelper.mNewVersion","false","false","true","false","true","int","","","","\android\database\sqlite\SQLiteOpenHelper.java"
"android.database.sqlite.SQLiteOpenHelper.TAG","false","false","true","true","true","String","SQLiteOpenHelper.class.getSimpleName()","","","\android\database\sqlite\SQLiteOpenHelper.java"
"android.database.sqlite.SQLiteOpenHelper.mName","false","false","true","false","true","String","","","","\android\database\sqlite\SQLiteOpenHelper.java"
"android.database.sqlite.SQLiteOpenHelper.mFactory","false","false","true","false","true","CursorFactory","","","","\android\database\sqlite\SQLiteOpenHelper.java"
"com.android.internal.content.SyncStateContentProviderHelper.DB_VERSION","false","false","true","true","false","long","1","","","\com\android\internal\content\SyncStateContentProviderHelper.java"
"com.android.internal.content.SyncStateContentProviderHelper.SYNC_STATE_META_TABLE","false","false","true","true","true","String","""_sync_state_metadata""","","","\com\android\internal\content\SyncStateContentProviderHelper.java"
"com.android.internal.content.SyncStateContentProviderHelper.SYNC_STATE_TABLE","false","false","true","true","true","String","""_sync_state""","","","\com\android\internal\content\SyncStateContentProviderHelper.java"
"com.android.internal.content.SyncStateContentProviderHelper.SELECT_BY_ACCOUNT","false","false","true","true","true","String","SyncStateContract.Columns.ACCOUNT_NAME + ""=? AND "" + SyncStateContract.Columns.ACCOUNT_TYPE + ""=?""","","","\com\android\internal\content\SyncStateContentProviderHelper.java"
"com.android.internal.content.SyncStateContentProviderHelper.QUERY_COUNT_SYNC_STATE_ROWS","false","false","true","true","true","String","""SELECT count(*)"" + "" FROM "" + SYNC_STATE_TABLE + "" WHERE "" + SyncStateContract.Columns._ID + ""=?""","","","\com\android\internal\content\SyncStateContentProviderHelper.java"
"com.android.internal.content.SyncStateContentProviderHelper.PATH","true","false","false","true","true","String","""syncstate""","","","\com\android\internal\content\SyncStateContentProviderHelper.java"
"com.android.internal.content.SyncStateContentProviderHelper.SYNC_STATE_META_VERSION_COLUMN","false","false","true","true","true","String","""version""","","","\com\android\internal\content\SyncStateContentProviderHelper.java"
"com.android.internal.content.SyncStateContentProviderHelper.ACCOUNT_PROJECTION","false","false","true","true","true","String","new String[] { SyncStateContract.Columns.ACCOUNT_NAME, SyncStateContract.Columns.ACCOUNT_TYPE }","","","\com\android\internal\content\SyncStateContentProviderHelper.java"
"android.accounts.AbstractAccountAuthenticator.mTransport","false","false","true","false","false","Transport","new Transport()","","","\android\accounts\AbstractAccountAuthenticator.java"
"android.accounts.AbstractAccountAuthenticator.mContext","false","false","true","false","true","Context","","","","\android\accounts\AbstractAccountAuthenticator.java"
"android.accounts.AbstractAccountAuthenticator.TAG","false","false","true","true","true","String","""AccountAuthenticator""","","","\android\accounts\AbstractAccountAuthenticator.java"
"android.content.SyncStorageEngine.WRITE_STATUS_DELAY","false","false","true","true","true","long","1000 * 60 * 10","","// 10 minutes
","\android\content\SyncStorageEngine.java"
"android.content.AccountInfo.authorities","false","false","false","false","true","HashMap<String,AuthorityInfo>","new HashMap<String, AuthorityInfo>()","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.periodicSyncs","false","false","false","false","true","ArrayList<Pair<Bundle,Long>>","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.eventTime","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.PendingOperation.flatExtras","false","false","false","false","false","byte","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mNextHistoryId","false","false","true","false","false","int","0","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.authority","false","false","false","false","true","String","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.account","false","false","false","false","true","Account","","","","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.backoffDelay","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.delayUntil","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mCal","false","false","true","false","true","Calendar","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mSyncStatus","false","false","true","false","true","SparseArray<SyncStatusInfo>","new SparseArray<SyncStatusInfo>()","","","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.syncable","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.PendingOperation.extras","false","false","false","false","true","Bundle","","","// note: read-only.
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.TAG","false","false","true","true","true","String","""SyncManager""","","","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.source","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mPendingFile","false","false","true","false","true","AtomicFile","","","/**
 * This file contains the pending sync operations.  It is a binary file,
 * which must be updated every time an operation is added or removed,
 * so we have special handling of it.
 */
","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.authority","false","false","false","false","true","String","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.MSG_WRITE_STATUS","false","false","true","true","true","int","1","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.enabled","false","false","false","false","false","boolean","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.MILLIS_IN_4WEEKS","false","false","false","true","true","long","1000L * 60 * 60 * 24 * 7 * 4","","// @VisibleForTesting
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.STATISTICS_FILE_END","true","false","false","true","true","int","0","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.EVENT_STOP","true","false","false","true","true","int","1","","/**
 * Enum value for a sync stop event.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.successTime","true","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.sSyncStorageEngine","false","false","true","true","false","SyncStorageEngine","null","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mStatusFile","false","false","true","false","true","AtomicFile","","","/**
 * This file contains the current sync status.  We would like to retain
 * it across boots, but its loss is not the end of the world, so we store
 * this information as binary data.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.backoffDelay","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.SYNC_ENABLED_DEFAULT","false","false","true","true","true","boolean","false","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.day","true","false","false","false","true","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.STATISTICS_FILE_ITEM","true","false","false","true","true","int","101","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.SOURCE_SERVER","true","false","false","true","true","int","0","","/**
 * Enum value for a server-initiated sync.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.SOURCE_LOCAL","true","false","false","true","true","int","1","","/**
 * Enum value for a local-initiated sync.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.authorityId","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.syncSource","false","false","false","false","true","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.historyId","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.MSG_WRITE_STATISTICS","false","false","true","true","true","int","2","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.MESG_CANCELED","true","false","false","true","true","String","""canceled""","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.MAX_HISTORY","true","false","false","true","true","int","100","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.WRITE_STATISTICS_DELAY","false","false","true","true","true","long","1000 * 60 * 30","","// 1/2 hour
","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.enabled","false","false","false","false","false","boolean","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mChangeListeners","false","false","true","false","true","RemoteCallbackList<ISyncStatusObserver>","new RemoteCallbackList<ISyncStatusObserver>()","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mDayStats","false","false","true","false","true","DayStats","new DayStats[7 * 4]","","// We keep 4 weeks of stats.
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.flatExtras","false","false","false","false","false","byte","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.source","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.PENDING_OPERATION_VERSION","true","false","false","true","true","int","2","","","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.elapsedTime","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.DayStats.failureTime","true","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.SOURCE_POLL","true","false","false","true","true","int","2","","/**
 * Enum value for a poll-based sync (e.g., upon connection to
 * network)
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.SOURCE_USER","true","false","false","true","true","int","3","","/**
 * Enum value for a user-initiated sync.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mMasterSyncAutomatically","false","false","true","false","false","boolean","true","","","\android\content\SyncStorageEngine.java"
"android.content.PendingOperation.authority","false","false","false","false","true","String","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.failureTime","true","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.backoffTime","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mAccounts","false","false","true","false","true","HashMap<Account,AccountInfo>","new HashMap<Account, AccountInfo>()","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mNextAuthorityId","false","false","true","false","false","int","0","","","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.periodicSyncs","false","false","false","false","true","ArrayList<Pair<Bundle,Long>>","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.STATUS_FILE_ITEM","true","false","false","true","true","int","100","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mSyncHistory","false","false","true","false","true","ArrayList<SyncHistoryItem>","new ArrayList<SyncHistoryItem>()","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.authorityId","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mAuthorities","false","false","true","false","true","SparseArray<AuthorityInfo>","new SparseArray<AuthorityInfo>()","","// Primary list of all syncable authorities.  Also our global lock.
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.successCount","true","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mCurrentSync","false","false","true","false","false","SyncInfo","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.downstreamActivity","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.delayUntil","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.DayStats.successCount","true","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.PENDING_FINISH_TO_WRITE","false","false","true","true","true","int","4","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.authorities","false","false","false","false","true","HashMap<String,AuthorityInfo>","new HashMap<String, AuthorityInfo>()","","","\android\content\SyncStorageEngine.java"
"android.content.PendingOperation.syncSource","false","false","false","false","true","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mPendingOperations","false","false","true","false","true","ArrayList<PendingOperation>","new ArrayList<PendingOperation>()","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mStatisticsFile","false","false","true","false","true","AtomicFile","","","/**
 * This file contains sync statistics.  This is purely debugging information
 * so is written infrequently and can be thrown away at any time.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.NOT_IN_BACKOFF_MODE","true","false","false","true","true","long","-1","","","\android\content\SyncStorageEngine.java"
"android.content.DayStats.failureCount","true","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.PendingOperation.expedited","false","false","false","false","true","boolean","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.MESG_SUCCESS","true","false","false","true","true","String","""success""","","// The MESG column will contain one of these or one of the Error types.
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.SOURCES","true","false","false","true","true","String","{ ""SERVER"", ""LOCAL"", ""POLL"", ""USER"", ""PERIODIC"" }","","/**
 * String names for the sync source types.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.elapsedTime","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.historyId","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.EVENTS","true","false","false","true","true","String","{ ""START"", ""STOP"" }","","/**
 * String names for the sync event types.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mesg","false","false","false","false","false","String","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.EVENT_START","true","false","false","true","true","int","0","","/**
 * Enum value for a sync start event.
 */
","\android\content\SyncStorageEngine.java"
"android.content.PendingOperation.authorityId","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.extras","false","false","false","false","true","Bundle","","","// note: read-only.
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.ident","false","false","false","false","true","int","","","","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.account","false","false","false","false","true","Account","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.sAuthorityRenames","false","false","true","true","false","HashMap<String,String>","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.expedited","false","false","false","false","true","boolean","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mContext","false","false","true","false","true","Context","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.ACCOUNTS_VERSION","false","false","true","true","true","int","2","","// the version of the accounts xml file format
","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.upstreamActivity","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.mesg","false","false","false","false","false","String","","","","\android\content\SyncStorageEngine.java"
"android.content.PendingOperation.account","false","false","false","false","true","Account","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncHistoryItem.event","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mYearInDays","false","false","true","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.event","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.eventTime","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.failureCount","true","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.ident","false","false","false","false","true","int","","","","\android\content\SyncStorageEngine.java"
"android.content.DayStats.successTime","true","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.SOURCE_PERIODIC","true","false","false","true","true","int","4","","/**
 * Enum value for a periodic sync.
 */
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.STATUS_FILE_END","true","false","false","true","true","int","0","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mYear","false","false","true","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mAccountInfoFile","false","false","true","false","true","AtomicFile","","","/**
 * This file contains the core engine state: all accounts and the
 * settings for them.  It must never be lost, and should be changed
 * infrequently, so it is stored as an XML file.
 */
","\android\content\SyncStorageEngine.java"
"android.content.AccountInfo.account","false","false","false","false","true","Account","","","","\android\content\SyncStorageEngine.java"
"android.content.AuthorityInfo.backoffTime","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.DayStats.day","true","false","false","false","true","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.downstreamActivity","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.STATISTICS_FILE_ITEM_OLD","true","false","false","true","true","int","100","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.upstreamActivity","false","false","false","false","false","long","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.DEBUG_FILE","false","false","true","true","true","boolean","false","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.DEFAULT_POLL_FREQUENCY_SECONDS","false","false","true","true","true","long","60 * 60 * 24","","// One day
","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.syncable","false","false","false","false","false","int","","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.mNumPendingFinished","false","false","true","false","false","int","0","","","\android\content\SyncStorageEngine.java"
"android.content.SyncStorageEngine.SYNC_CONNECTION_SETTING_CHANGED_INTENT","false","false","true","true","true","Intent","new Intent(""com.android.sync.SYNC_CONN_STATUS_CHANGED"")","","","\android\content\SyncStorageEngine.java"
"android.widget.SimpleCursorAdapter.mCursorToStringConverter","false","false","true","false","false","CursorToStringConverter","","","","\android\widget\SimpleCursorAdapter.java"
"android.widget.SimpleCursorAdapter.mStringConversionColumn","false","false","true","false","false","int","-1","","","\android\widget\SimpleCursorAdapter.java"
"android.widget.SimpleCursorAdapter.mFrom","false","true","false","false","false","int","","","/**
 * A list of columns containing the data to bind to the UI.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\SimpleCursorAdapter.java"
"android.widget.SimpleCursorAdapter.mOriginalFrom","false","false","true","false","false","String","","","","\android\widget\SimpleCursorAdapter.java"
"android.widget.SimpleCursorAdapter.mTo","false","true","false","false","false","int","","","/**
 * A list of View ids representing the views to which the data must be bound.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\widget\SimpleCursorAdapter.java"
"android.widget.SimpleCursorAdapter.mViewBinder","false","false","true","false","false","ViewBinder","","","","\android\widget\SimpleCursorAdapter.java"
"com.android.internal.os.SamplingProfilerIntegration.pending","false","false","false","true","false","boolean","","","/**
 * Whether or not a snapshot is being persisted.
 */
","\com\android\internal\os\SamplingProfilerIntegration.java"
"com.android.internal.os.SamplingProfilerIntegration.TAG","false","false","true","true","true","String","""SamplingProfilerIntegration""","","","\com\android\internal\os\SamplingProfilerIntegration.java"
"com.android.internal.os.SamplingProfilerIntegration.dirMade","false","false","false","true","false","boolean","false","","/**
 * Whether or not we've created the snapshots dir.
 */
","\com\android\internal\os\SamplingProfilerIntegration.java"
"com.android.internal.os.SamplingProfilerIntegration.snapshotWriter","false","false","true","true","true","Executor","","","","\com\android\internal\os\SamplingProfilerIntegration.java"
"com.android.internal.os.SamplingProfilerIntegration.enabled","false","false","true","true","true","boolean","","","","\com\android\internal\os\SamplingProfilerIntegration.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\DatePicker.java"
"android.widget.SavedState.mMonth","false","false","true","false","true","int","","","","\android\widget\DatePicker.java"
"android.widget.DatePicker.DEFAULT_END_YEAR","false","false","true","true","true","int","2100","","","\android\widget\DatePicker.java"
"android.widget.DatePicker.mMonth","false","false","true","false","true","int","","","","\android\widget\DatePicker.java"
"android.widget.DatePicker.mDay","false","false","true","false","true","int","","","","\android\widget\DatePicker.java"
"android.widget.DatePicker.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\DatePicker.java"
"android.widget.SavedState.mDay","false","false","true","false","true","int","","","","\android\widget\DatePicker.java"
"android.widget.DatePicker.mYear","false","false","true","false","true","int","","","","\android\widget\DatePicker.java"
"android.widget.SavedState.mYear","false","false","true","false","true","int","","","","\android\widget\DatePicker.java"
"android.widget.DatePicker.mMonthPicker","false","false","true","false","true","NumberPicker","","","","\android\widget\DatePicker.java"
"android.widget.DatePicker.DEFAULT_START_YEAR","false","false","true","true","true","int","1900","","","\android\widget\DatePicker.java"
"android.widget.DatePicker.mOnDateChangedListener","false","false","true","false","false","OnDateChangedListener","","","/**
 * How we notify users the date has changed.
 */
","\android\widget\DatePicker.java"
"android.widget.DatePicker.mDayPicker","false","false","true","false","true","NumberPicker","","","/* UI Components */
","\android\widget\DatePicker.java"
"android.widget.DatePicker.mYearPicker","false","false","true","false","true","NumberPicker","","","","\android\widget\DatePicker.java"
"android.hardware.GeomagneticField.mPDeriv","true","false","false","false","true","float","","","// Derivative of mP, with respect to theta.
","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.mGcLatitudeRad","false","false","true","false","false","float","","","// Geocentric coordinates -- set by computeGeocentricCoordinates.
","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.mGcRadiusKm","false","false","true","false","false","float","","","","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.mP","true","false","false","false","true","float","","","// (n-m)!/(2n-1)!! (where (2n-1)!! = 1*3*5*...*2n-1)
","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.mX","false","false","true","false","false","float","","","// coordinates.
","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.mZ","false","false","true","false","false","float","","","","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.SCHMIDT_QUASI_NORM_FACTORS","false","false","true","true","true","float","computeSchmidtQuasiNormFactors(G_COEFF.length)","","// don't depend on input variables at all.
","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.mY","false","false","true","false","false","float","","","","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.EARTH_REFERENCE_RADIUS_KM","false","false","true","true","true","float","6371.2f","","","\android\hardware\GeomagneticField.java"
"android.hardware.LegendreTable.mP","true","false","false","false","true","float","","","// (n-m)!/(2n-1)!! (where (2n-1)!! = 1*3*5*...*2n-1)
","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.EARTH_SEMI_MINOR_AXIS_KM","false","false","true","true","true","float","6356.7523142f","","","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.mGcLongitudeRad","false","false","true","false","false","float","","","","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.BASE_TIME","false","false","true","true","true","long","new GregorianCalendar(2010, 1, 1).getTimeInMillis()","","","\android\hardware\GeomagneticField.java"
"android.hardware.LegendreTable.mPDeriv","true","false","false","false","true","float","","","// Derivative of mP, with respect to theta.
","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.G_COEFF","false","false","true","true","true","float","new float[][] { { 0.0f }, { -29496.6f, -1586.3f }, { -2396.6f, 3026.1f, 1668.6f }, { 1340.1f, -2326.2f, 1231.9f, 634.0f }, { 912.6f, 808.9f, 166.7f, -357.1f, 89.4f }, { -230.9f, 357.2f, 200.3f, -141.1f, -163.0f, -7.8f }, { 72.8f, 68.6f, 76.0f, -141.4f, -22.8f, 13.2f, -77.9f }, { 80.5f, -75.1f, -4.7f, 45.3f, 13.9f, 10.4f, 1.7f, 4.9f }, { 24.4f, 8.1f, -14.5f, -5.6f, -19.3f, 11.5f, 10.9f, -14.1f, -3.7f }, { 5.4f, 9.4f, 3.4f, -5.2f, 3.1f, -12.4f, -0.7f, 8.4f, -8.5f, -10.1f }, { -2.0f, -6.3f, 0.9f, -1.1f, -0.2f, 2.5f, -0.3f, 2.2f, 3.1f, -1.0f, -2.8f }, { 3.0f, -1.5f, -2.1f, 1.7f, -0.5f, 0.5f, -0.8f, 0.4f, 1.8f, 0.1f, 0.7f, 3.8f }, { -2.2f, -0.2f, 0.3f, 1.0f, -0.6f, 0.9f, -0.1f, 0.5f, -0.4f, -0.4f, 0.2f, -0.8f, 0.0f } }","","// NOAA Technical Report: The US/UK World Magnetic Model for 2010-2015
","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.DELTA_G","false","false","true","true","true","float","new float[][] { { 0.0f }, { 11.6f, 16.5f }, { -12.1f, -4.4f, 1.9f }, { 0.4f, -4.1f, -2.9f, -7.7f }, { -1.8f, 2.3f, -8.7f, 4.6f, -2.1f }, { -1.0f, 0.6f, -1.8f, -1.0f, 0.9f, 1.0f }, { -0.2f, -0.2f, -0.1f, 2.0f, -1.7f, -0.3f, 1.7f }, { 0.1f, -0.1f, -0.6f, 1.3f, 0.4f, 0.3f, -0.7f, 0.6f }, { -0.1f, 0.1f, -0.6f, 0.2f, -0.2f, 0.3f, 0.3f, -0.6f, 0.2f }, { 0.0f, -0.1f, 0.0f, 0.3f, -0.4f, -0.3f, 0.1f, -0.1f, -0.4f, -0.2f }, { 0.0f, 0.0f, -0.1f, 0.2f, 0.0f, -0.1f, -0.2f, 0.0f, -0.1f, -0.2f, -0.2f }, { 0.0f, 0.0f, 0.0f, 0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -0.1f, 0.0f }, { 0.0f, 0.0f, 0.1f, 0.1f, -0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -0.1f, 0.1f } }","","","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.DELTA_H","false","false","true","true","true","float","new float[][] { { 0.0f }, { 0.0f, -25.9f }, { 0.0f, -22.5f, -11.8f }, { 0.0f, 7.3f, -3.9f, -2.6f }, { 0.0f, 1.1f, 2.7f, 3.9f, -0.8f }, { 0.0f, 0.4f, 1.8f, 1.2f, 4.0f, -0.6f }, { 0.0f, -0.2f, -2.1f, -0.4f, -0.6f, 0.5f, 0.9f }, { 0.0f, 0.7f, 0.3f, -0.1f, -0.1f, -0.8f, -0.3f, 0.3f }, { 0.0f, -0.1f, 0.2f, 0.4f, 0.4f, 0.1f, -0.1f, 0.4f, 0.3f }, { 0.0f, 0.0f, -0.2f, 0.0f, -0.1f, 0.1f, 0.0f, -0.2f, 0.3f, 0.2f }, { 0.0f, 0.1f, -0.1f, 0.0f, -0.1f, -0.1f, 0.0f, -0.1f, -0.2f, 0.0f, -0.1f }, { 0.0f, 0.0f, 0.1f, 0.0f, 0.1f, 0.0f, 0.1f, 0.0f, -0.1f, -0.1f, 0.0f, -0.1f }, { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f } }","","","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.H_COEFF","false","false","true","true","true","float","new float[][] { { 0.0f }, { 0.0f, 4944.4f }, { 0.0f, -2707.7f, -576.1f }, { 0.0f, -160.2f, 251.9f, -536.6f }, { 0.0f, 286.4f, -211.2f, 164.3f, -309.1f }, { 0.0f, 44.6f, 188.9f, -118.2f, 0.0f, 100.9f }, { 0.0f, -20.8f, 44.1f, 61.5f, -66.3f, 3.1f, 55.0f }, { 0.0f, -57.9f, -21.1f, 6.5f, 24.9f, 7.0f, -27.7f, -3.3f }, { 0.0f, 11.0f, -20.0f, 11.9f, -17.4f, 16.7f, 7.0f, -10.8f, 1.7f }, { 0.0f, -20.5f, 11.5f, 12.8f, -7.2f, -7.4f, 8.0f, 2.1f, -6.1f, 7.0f }, { 0.0f, 2.8f, -0.1f, 4.7f, 4.4f, -7.2f, -1.0f, -3.9f, -2.0f, -2.0f, -8.3f }, { 0.0f, 0.2f, 1.7f, -0.6f, -1.8f, 0.9f, -0.4f, -2.5f, -1.3f, -2.1f, -1.9f, -1.8f }, { 0.0f, -0.9f, 0.3f, 2.1f, -2.5f, 0.5f, 0.6f, 0.0f, 0.1f, 0.3f, -0.9f, -0.2f, 0.9f } }","","","\android\hardware\GeomagneticField.java"
"android.hardware.GeomagneticField.EARTH_SEMI_MAJOR_AXIS_KM","false","false","true","true","true","float","6378.137f","","// Constants from WGS84 (the coordinate system used by GPS)
","\android\hardware\GeomagneticField.java"
"com.android.internal.os.BinderInternal.mGcWatcher","false","false","false","true","false","WeakReference<GcWatcher>","new WeakReference<GcWatcher>(new GcWatcher())","","","\com\android\internal\os\BinderInternal.java"
"com.android.internal.os.BinderInternal.mLastGcTime","false","false","false","true","false","long","","","","\com\android\internal\os\BinderInternal.java"
"android.database.AbstractCursor.TAG","false","false","true","true","true","String","""Cursor""","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mDataSetObservable","false","false","false","false","false","DataSetObservable","new DataSetObservable()","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mSelfObserver","false","false","true","false","false","ContentObserver","","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mContentResolver","false","true","false","false","false","ContentResolver","","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mContentObservable","false","false","false","false","false","ContentObservable","new ContentObservable()","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mSelfObserverLock","false","false","true","false","true","Object","new Object()","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mSelfObserverRegistered","false","false","true","false","false","boolean","","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mCursor","false","false","false","false","false","WeakReference<AbstractCursor>","","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mRowIdColumnIndex","false","true","false","false","false","int","","","/**
 * This must be set to the index of the row ID column by any
 * subclass that wishes to support updates.
 */
","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mClosed","false","true","false","false","false","boolean","false","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mPos","false","true","false","false","false","int","","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mUpdatedRows","false","true","false","false","false","HashMap<Long,Map<String,Object>>","","","/**
 * This HashMap contains a mapping from Long rowIDs to another Map
 * that maps from String column names to new values. A NULL value means to
 * remove an existing value, and all numeric values are in their class
 * forms, i.e. Integer, Long, Float, etc.
 */
","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mCurrentRowID","false","true","false","false","false","Long","","","","\android\database\AbstractCursor.java"
"android.database.SelfContentObserver.mCursor","false","false","false","false","false","WeakReference<AbstractCursor>","","","","\android\database\AbstractCursor.java"
"android.database.AbstractCursor.mNotifyUri","false","false","true","false","false","Uri","","","","\android\database\AbstractCursor.java"
"android.text.style.RasterizerSpan.mRasterizer","false","false","true","false","false","Rasterizer","","","","\android\text\style\RasterizerSpan.java"
"com.android.internal.http.multipart.Part.CONTENT_TYPE","false","true","false","true","true","String","""Content-Type: ""","","/**
 * Content type header
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.boundaryBytes","false","false","true","false","false","byte","","","/**
 * The ASCII bytes to use as the multipart boundary.
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CRLF_BYTES","false","true","false","true","true","byte","EncodingUtils.getAsciiBytes(CRLF)","","/**
 * Carriage return/linefeed as a byte array
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.QUOTE_BYTES","false","true","false","true","true","byte","EncodingUtils.getAsciiBytes(QUOTE)","","/**
 * Content dispostion as a byte array
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CONTENT_TRANSFER_ENCODING_BYTES","false","true","false","true","true","byte","EncodingUtils.getAsciiBytes(CONTENT_TRANSFER_ENCODING)","","/**
 * Content type header as a byte array
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CONTENT_TYPE_BYTES","false","true","false","true","true","byte","EncodingUtils.getAsciiBytes(CONTENT_TYPE)","","/**
 * Content type header as a byte array
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CRLF","false","true","false","true","true","String","""\r\n""","","/**
 * Carriage return/linefeed
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.EXTRA_BYTES","false","true","false","true","true","byte","EncodingUtils.getAsciiBytes(EXTRA)","","/**
 * Extra characters as a byte array
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.BOUNDARY","false","true","false","true","true","String","""----------------314159265358979323846""","","/**
 * The boundary
 * @deprecated use {@link org.apache.http.client.methods.multipart#MULTIPART_BOUNDARY}
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.DEFAULT_BOUNDARY_BYTES","false","false","true","true","true","byte","BOUNDARY_BYTES","","/**
 * The default boundary to be used if {@link #setPartBoundary(byte[])} has not
 * been called.
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CONTENT_TRANSFER_ENCODING","false","true","false","true","true","String","""Content-Transfer-Encoding: ""","","/**
 * Content type header
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CONTENT_DISPOSITION_BYTES","false","true","false","true","true","byte","EncodingUtils.getAsciiBytes(CONTENT_DISPOSITION)","","/**
 * Content dispostion as a byte array
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CONTENT_DISPOSITION","false","true","false","true","true","String","""Content-Disposition: form-data; name=""","","/**
 * Content dispostion characters
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CHARSET_BYTES","false","true","false","true","true","byte","EncodingUtils.getAsciiBytes(CHARSET)","","/**
 * Content charset as a byte array
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.CHARSET","false","true","false","true","true","String","""; charset=""","","/**
 * Content charset
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.BOUNDARY_BYTES","false","true","false","true","true","byte","EncodingUtils.getAsciiBytes(BOUNDARY)","","/**
 * The boundary as a byte array.
 * @deprecated
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.LOG","false","false","true","true","true","Log","LogFactory.getLog(Part.class)","","/**
 * Log object for this class.
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.EXTRA","false","true","false","true","true","String","""--""","","/**
 * Extra characters
 */
","\com\android\internal\http\multipart\Part.java"
"com.android.internal.http.multipart.Part.QUOTE","false","true","false","true","true","String","""\""""","","/**
 * Content dispostion characters
 */
","\com\android\internal\http\multipart\Part.java"
"android.text.SpannableStringBuilder.mGapStart","false","false","true","false","false","int","","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.mSpanCount","false","false","true","false","false","int","","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.mSpans","false","false","true","false","false","Object","","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.START_SHIFT","false","false","true","true","true","int","4","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.END_MASK","false","false","true","true","true","int","0x0F","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.PARAGRAPH","false","false","true","true","true","int","3","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.POINT","false","false","true","true","true","int","2","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.mSpanStarts","false","false","true","false","false","int","","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.NO_FILTERS","false","false","true","true","true","InputFilter","new InputFilter[0]","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.mFilters","false","false","true","false","false","InputFilter","NO_FILTERS","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.mText","false","false","true","false","false","char","","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.mGapLength","false","false","true","false","false","int","","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.mSpanFlags","false","false","true","false","false","int","","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.MARK","false","false","true","true","true","int","1","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.START_MASK","false","false","true","true","true","int","0xF0","","","\android\text\SpannableStringBuilder.java"
"android.text.SpannableStringBuilder.mSpanEnds","false","false","true","false","false","int","","","","\android\text\SpannableStringBuilder.java"
"android.ddm.DdmHandleThread.CHUNK_STKL","true","false","false","true","true","int","type(""STKL"")","","","\android\ddm\DdmHandleThread.java"
"android.ddm.DdmHandleThread.CHUNK_THST","true","false","false","true","true","int","type(""THST"")","","","\android\ddm\DdmHandleThread.java"
"android.ddm.DdmHandleThread.mInstance","false","false","true","true","false","DdmHandleThread","new DdmHandleThread()","","","\android\ddm\DdmHandleThread.java"
"android.ddm.DdmHandleThread.CHUNK_THCR","true","false","false","true","true","int","type(""THCR"")","","","\android\ddm\DdmHandleThread.java"
"android.ddm.DdmHandleThread.CHUNK_THDE","true","false","false","true","true","int","type(""THDE"")","","","\android\ddm\DdmHandleThread.java"
"android.ddm.DdmHandleThread.CHUNK_THEN","true","false","false","true","true","int","type(""THEN"")","","","\android\ddm\DdmHandleThread.java"
"android.os.storage.StorageResultCode.OperationFailedStorageNotMounted","true","false","false","true","true","int","-5","","/**
 * Operation failed: Storage not mounted.
 * @see android.os.storage.StorageManager
 */
","\android\os\storage\StorageResultCode.java"
"android.os.storage.StorageResultCode.OperationFailedStorageBusy","true","false","false","true","true","int","-7","","/**
 * Operation failed: Storage is busy.
 * @see android.os.storage.StorageManager
 */
","\android\os\storage\StorageResultCode.java"
"android.os.storage.StorageResultCode.OperationFailedNoMedia","true","false","false","true","true","int","-2","","/**
 * Operation failed: Missing media.
 * @see android.os.storage.StorageManager
 */
","\android\os\storage\StorageResultCode.java"
"android.os.storage.StorageResultCode.OperationFailedMediaCorrupt","true","false","false","true","true","int","-4","","/**
 * Operation failed: Media is corrupt.
 * @see android.os.storage.StorageManager
 */
","\android\os\storage\StorageResultCode.java"
"android.os.storage.StorageResultCode.OperationFailedInternalError","true","false","false","true","true","int","-1","","/**
 * Operation failed: Internal error.
 * @see android.os.storage.StorageManager
 */
","\android\os\storage\StorageResultCode.java"
"android.os.storage.StorageResultCode.OperationSucceeded","true","false","false","true","true","int","0","","/**
 * Operation succeeded.
 * @see android.os.storage.StorageManager
 */
","\android\os\storage\StorageResultCode.java"
"android.os.storage.StorageResultCode.OperationFailedMediaBlank","true","false","false","true","true","int","-3","","/**
 * Operation failed: Media is blank.
 * @see android.os.storage.StorageManager
 */
","\android\os\storage\StorageResultCode.java"
"android.os.storage.StorageResultCode.OperationFailedStorageMounted","true","false","false","true","true","int","-6","","/**
 * Operation failed: Storage is mounted.
 * @see android.os.storage.StorageManager
 */
","\android\os\storage\StorageResultCode.java"
"android.os.PowerManager.WAKE_BIT_CPU_STRONG","false","false","true","true","true","int","1","","/**
 * These internal values define the underlying power elements that we might
 * want to control individually.  Eventually we'd like to expose them.
 */
","\android\os\PowerManager.java"
"android.os.PowerManager.PARTIAL_WAKE_LOCK","true","false","false","true","true","int","WAKE_BIT_CPU_STRONG","","/**
 * Wake lock that ensures that the CPU is running.  The screen might
 * not be on.
 */
","\android\os\PowerManager.java"
"android.os.PowerManager.FULL_WAKE_LOCK","true","false","false","true","true","int","WAKE_BIT_CPU_WEAK | WAKE_BIT_SCREEN_BRIGHT | WAKE_BIT_KEYBOARD_BRIGHT","","/**
 * Wake lock that ensures that the screen and keyboard are on at
 * full brightness.
 */
","\android\os\PowerManager.java"
"android.os.PowerManager.WAKE_BIT_KEYBOARD_BRIGHT","false","false","true","true","true","int","16","","","\android\os\PowerManager.java"
"android.os.WakeLock.mTag","false","false","false","false","false","String","","","","\android\os\PowerManager.java"
"android.os.PowerManager.ON_AFTER_RELEASE","true","false","false","true","true","int","0x20000000","","/**
 * When this wake lock is released, poke the user activity timer
 * so the screen stays on for a little longer.
 * <p>
 * Will not turn the screen on if it is not already on.  See {@link #ACQUIRE_CAUSES_WAKEUP}
 * if you want that.
 * <p>
 * Does not work with PARTIAL_WAKE_LOCKs.
 */
","\android\os\PowerManager.java"
"android.os.PowerManager.mService","false","false","false","false","false","IPowerManager","","","","\android\os\PowerManager.java"
"android.os.PowerManager.WAIT_FOR_PROXIMITY_NEGATIVE","true","false","false","true","true","int","1","","/**
 * Flag for {@link WakeLock#release release(int)} to defer releasing a
 * {@link #WAKE_BIT_PROXIMITY_SCREEN_OFF} wakelock until the proximity sensor returns
 * a negative value.
 *
 * {@hide}
 */
","\android\os\PowerManager.java"
"android.os.WakeLock.mReleaser","false","false","false","false","false","Runnable","new Runnable() {

    public void run() {
        release();
    }
}","","","\android\os\PowerManager.java"
"android.os.PowerManager.WAKE_BIT_PROXIMITY_SCREEN_OFF","false","false","true","true","true","int","32","","","\android\os\PowerManager.java"
"android.os.PowerManager.TAG","false","false","true","true","true","String","""PowerManager""","","","\android\os\PowerManager.java"
"android.os.WakeLock.RELEASE_WAKE_LOCK","false","false","false","true","true","int","1","","","\android\os\PowerManager.java"
"android.os.PowerManager.LOCK_MASK","false","false","true","true","true","int","WAKE_BIT_CPU_STRONG | WAKE_BIT_CPU_WEAK | WAKE_BIT_SCREEN_DIM | WAKE_BIT_SCREEN_BRIGHT | WAKE_BIT_KEYBOARD_BRIGHT | WAKE_BIT_PROXIMITY_SCREEN_OFF","","","\android\os\PowerManager.java"
"android.os.PowerManager.WAKE_BIT_CPU_WEAK","false","false","true","true","true","int","2","","","\android\os\PowerManager.java"
"android.os.WakeLock.mCount","false","false","false","false","false","int","0","","","\android\os\PowerManager.java"
"android.os.PowerManager.mTag","false","false","false","false","false","String","","","","\android\os\PowerManager.java"
"android.os.WakeLock.mToken","false","false","false","false","false","IBinder","","","","\android\os\PowerManager.java"
"android.os.PowerManager.PROXIMITY_SCREEN_OFF_WAKE_LOCK","true","false","false","true","true","int","WAKE_BIT_PROXIMITY_SCREEN_OFF","","/**
 * Wake lock that turns the screen off when the proximity sensor activates.
 * Since not all devices have proximity sensors, use
 * {@link #getSupportedWakeLockFlags() getSupportedWakeLockFlags()} to determine if
 * this wake lock mode is supported.
 *
 * {@hide}
 */
","\android\os\PowerManager.java"
"android.os.PowerManager.mCount","false","false","false","false","false","int","0","","","\android\os\PowerManager.java"
"android.os.PowerManager.mHandler","false","false","false","false","false","Handler","","","","\android\os\PowerManager.java"
"android.os.PowerManager.mToken","false","false","false","false","false","IBinder","","","","\android\os\PowerManager.java"
"android.os.WakeLock.mRefCounted","false","false","false","false","false","boolean","true","","","\android\os\PowerManager.java"
"android.os.WakeLock.mHeld","false","false","false","false","false","boolean","false","","","\android\os\PowerManager.java"
"android.os.PowerManager.mRefCounted","false","false","false","false","false","boolean","true","","","\android\os\PowerManager.java"
"android.os.PowerManager.mReleaser","false","false","false","false","false","Runnable","new Runnable() {

    public void run() {
        release();
    }
}","","","\android\os\PowerManager.java"
"android.os.PowerManager.RELEASE_WAKE_LOCK","false","false","false","true","true","int","1","","","\android\os\PowerManager.java"
"android.os.PowerManager.mHeld","false","false","false","false","false","boolean","false","","","\android\os\PowerManager.java"
"android.os.PowerManager.WAKE_BIT_SCREEN_BRIGHT","false","false","true","true","true","int","8","","","\android\os\PowerManager.java"
"android.os.PowerManager.WAKE_BIT_SCREEN_DIM","false","false","true","true","true","int","4","","","\android\os\PowerManager.java"
"android.os.PowerManager.mFlags","false","false","false","false","false","int","","","","\android\os\PowerManager.java"
"android.os.PowerManager.ACQUIRE_CAUSES_WAKEUP","true","false","false","true","true","int","0x10000000","","/**
 * Normally wake locks don't actually wake the device, they just cause
 * it to remain on once it's already on.  Think of the video player
 * app as the normal behavior.  Notifications that pop up and want
 * the device to be on are the exception; use this flag to be like them.
 * <p>
 * Does not work with PARTIAL_WAKE_LOCKs.
 */
","\android\os\PowerManager.java"
"android.os.PowerManager.SCREEN_DIM_WAKE_LOCK","true","false","false","true","true","int","WAKE_BIT_CPU_WEAK | WAKE_BIT_SCREEN_DIM","","/**
 * Wake lock that ensures that the screen is on (but may be dimmed);
 * the keyboard backlight will be allowed to go off.
 */
","\android\os\PowerManager.java"
"android.os.PowerManager.SCREEN_BRIGHT_WAKE_LOCK","true","false","false","true","true","int","WAKE_BIT_CPU_WEAK | WAKE_BIT_SCREEN_BRIGHT","","/**
 * Wake lock that ensures that the screen is on at full brightness;
 * the keyboard backlight will be allowed to go off.
 */
","\android\os\PowerManager.java"
"android.os.WakeLock.mFlags","false","false","false","false","false","int","","","","\android\os\PowerManager.java"
"android.app.TabActivity.mDefaultTab","false","false","true","false","false","String","null","","","\android\app\TabActivity.java"
"android.app.TabActivity.mDefaultTabIndex","false","false","true","false","false","int","-1","","","\android\app\TabActivity.java"
"android.app.TabActivity.mTabHost","false","false","true","false","false","TabHost","","","","\android\app\TabActivity.java"
"com.android.internal.http.TimeOfDay.hour","false","false","false","false","false","int","","","","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.HttpDateTime.HTTP_DATE_ANSIC_REGEXP","false","false","true","true","true","String","""[ ]([A-Za-z]{3,9})[ ]+([0-9]{1,2})[ ]"" + ""([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])[ ]([0-9]{2,4})""","","","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.HttpDateTime.second","false","false","false","false","false","int","","","","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.TimeOfDay.minute","false","false","false","false","false","int","","","","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.HttpDateTime.minute","false","false","false","false","false","int","","","","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.TimeOfDay.second","false","false","false","false","false","int","","","","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.HttpDateTime.HTTP_DATE_RFC_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(HTTP_DATE_RFC_REGEXP)","","/**
 * The compiled version of the HTTP-date regular expressions.
 */
","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.HttpDateTime.hour","false","false","false","false","false","int","","","","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.HttpDateTime.HTTP_DATE_RFC_REGEXP","false","false","true","true","true","String","""([0-9]{1,2})[- ]([A-Za-z]{3,9})[- ]([0-9]{2,4})[ ]"" + ""([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])""","","/*
     * Regular expression for parsing HTTP-date.
     *
     * Wdy, DD Mon YYYY HH:MM:SS GMT
     * RFC 822, updated by RFC 1123
     *
     * Weekday, DD-Mon-YY HH:MM:SS GMT
     * RFC 850, obsoleted by RFC 1036
     *
     * Wdy Mon DD HH:MM:SS YYYY
     * ANSI C's asctime() format
     *
     * with following variations
     *
     * Wdy, DD-Mon-YYYY HH:MM:SS GMT
     * Wdy, (SP)D Mon YYYY HH:MM:SS GMT
     * Wdy,DD Mon YYYY HH:MM:SS GMT
     * Wdy, DD-Mon-YY HH:MM:SS GMT
     * Wdy, DD Mon YYYY HH:MM:SS -HHMM
     * Wdy, DD Mon YYYY HH:MM:SS
     * Wdy Mon (SP)D HH:MM:SS YYYY
     * Wdy Mon DD HH:MM:SS YYYY GMT
     * 
     * HH can be H if the first digit is zero.
     * 
     * Mon can be the full name of the month.
     */
","\com\android\internal\http\HttpDateTime.java"
"com.android.internal.http.HttpDateTime.HTTP_DATE_ANSIC_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(HTTP_DATE_ANSIC_REGEXP)","","","\com\android\internal\http\HttpDateTime.java"
"android.text.style.CharacterStyle.mStyle","false","false","true","false","false","CharacterStyle","","","","\android\text\style\CharacterStyle.java"
"android.text.style.Passthrough.mStyle","false","false","true","false","false","CharacterStyle","","","","\android\text\style\CharacterStyle.java"
"android.webkit.CookieSyncManager.sRef","false","false","true","true","false","CookieSyncManager","","","","\android\webkit\CookieSyncManager.java"
"android.webkit.CookieSyncManager.mLastUpdate","false","false","true","false","false","long","","","// time when last update happened
","\android\webkit\CookieSyncManager.java"
"android.text.Factory.sInstance","false","false","true","true","false","Editable.Factory","new Editable.Factory()","","","\android\text\Editable.java"
"android.text.Editable.sInstance","false","false","true","true","false","Editable.Factory","new Editable.Factory()","","","\android\text\Editable.java"
"android.text.method.DragState.mY","true","false","false","false","false","float","","","","\android\text\method\Touch.java"
"android.text.method.DragState.mX","true","false","false","false","false","float","","","","\android\text\method\Touch.java"
"android.text.method.DragState.mScrollY","true","false","false","false","false","int","","","","\android\text\method\Touch.java"
"android.text.method.DragState.mScrollX","true","false","false","false","false","int","","","","\android\text\method\Touch.java"
"android.text.method.Touch.mScrollY","true","false","false","false","false","int","","","","\android\text\method\Touch.java"
"android.text.method.Touch.mScrollX","true","false","false","false","false","int","","","","\android\text\method\Touch.java"
"android.text.method.Touch.mX","true","false","false","false","false","float","","","","\android\text\method\Touch.java"
"android.text.method.Touch.mY","true","false","false","false","false","float","","","","\android\text\method\Touch.java"
"android.text.method.Touch.mFarEnough","true","false","false","false","false","boolean","","","","\android\text\method\Touch.java"
"android.text.method.Touch.mUsed","true","false","false","false","false","boolean","","","","\android\text\method\Touch.java"
"android.text.method.DragState.mFarEnough","true","false","false","false","false","boolean","","","","\android\text\method\Touch.java"
"android.text.method.DragState.mUsed","true","false","false","false","false","boolean","","","","\android\text\method\Touch.java"
"android.content.SyncAdaptersCache.TAG","false","false","true","true","true","String","""Account""","","","\android\content\SyncAdaptersCache.java"
"android.content.SyncAdaptersCache.SERVICE_META_DATA","false","false","true","true","true","String","""android.content.SyncAdapter""","","","\android\content\SyncAdaptersCache.java"
"android.content.SyncAdaptersCache.ATTRIBUTES_NAME","false","false","true","true","true","String","""sync-adapter""","","","\android\content\SyncAdaptersCache.java"
"android.content.SyncAdaptersCache.sSerializer","false","false","true","true","true","MySerializer","new MySerializer()","","","\android\content\SyncAdaptersCache.java"
"android.content.SyncAdaptersCache.SERVICE_INTERFACE","false","false","true","true","true","String","""android.content.SyncAdapter""","","","\android\content\SyncAdaptersCache.java"
"android.widget.AnalogClock.mMinutes","false","false","true","false","false","float","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mIntentReceiver","false","false","true","false","true","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent.getAction().equals(Intent.ACTION_TIMEZONE_CHANGED)) {
            String tz = intent.getStringExtra(""time-zone"");
            mCalendar = new Time(TimeZone.getTimeZone(tz).getID());
        }
        onTimeChanged();
        invalidate();
    }
}","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mAttached","false","false","true","false","false","boolean","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mHourHand","false","false","true","false","false","Drawable","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mHandler","false","false","true","false","true","Handler","new Handler()","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mCalendar","false","false","true","false","false","Time","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mDialHeight","false","false","true","false","false","int","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mChanged","false","false","true","false","false","boolean","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mDial","false","false","true","false","false","Drawable","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mMinuteHand","false","false","true","false","false","Drawable","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mDialWidth","false","false","true","false","false","int","","","","\android\widget\AnalogClock.java"
"android.widget.AnalogClock.mHour","false","false","true","false","false","float","","","","\android\widget\AnalogClock.java"
"android.app.UiModeManager.ACTION_ENTER_CAR_MODE","true","false","false","true","false","String","""android.app.action.ENTER_CAR_MODE""","","/**
 * Broadcast sent when the device's UI has switched to car mode, either
 * by being placed in a car dock or explicit action of the user.  After
 * sending the broadcast, the system will start the intent
 * {@link android.content.Intent#ACTION_MAIN} with category
 * {@link android.content.Intent#CATEGORY_CAR_DOCK}
 * to display the car UI, which typically what an application would
 * implement to provide their own interface.  However, applications can
 * also monitor this Intent in order to be informed of mode changes or
 * prevent the normal car UI from being displayed by setting the result
 * of the broadcast to {@link Activity#RESULT_CANCELED}.
 */
","\android\app\UiModeManager.java"
"android.app.UiModeManager.ACTION_EXIT_CAR_MODE","true","false","false","true","false","String","""android.app.action.EXIT_CAR_MODE""","","/**
 * Broadcast sent when the device's UI has switch away from car mode back
 * to normal mode.  Typically used by a car mode app, to dismiss itself
 * when the user exits car mode.
 */
","\android\app\UiModeManager.java"
"android.app.UiModeManager.ACTION_ENTER_DESK_MODE","true","false","false","true","false","String","""android.app.action.ENTER_DESK_MODE""","","/**
 * Broadcast sent when the device's UI has switched to desk mode,
 * by being placed in a desk dock.  After
 * sending the broadcast, the system will start the intent
 * {@link android.content.Intent#ACTION_MAIN} with category
 * {@link android.content.Intent#CATEGORY_DESK_DOCK}
 * to display the desk UI, which typically what an application would
 * implement to provide their own interface.  However, applications can
 * also monitor this Intent in order to be informed of mode changes or
 * prevent the normal desk UI from being displayed by setting the result
 * of the broadcast to {@link Activity#RESULT_CANCELED}.
 */
","\android\app\UiModeManager.java"
"android.app.UiModeManager.DISABLE_CAR_MODE_GO_HOME","true","false","false","true","true","int","0x0001","","/**
 * Flag for use with {@link #disableCarMode(int)}: go to the normal
 * home activity as part of the disable.  Disabling this way ensures
 * a clean transition between the current activity (in car mode) and
 * the original home activity (which was typically last running without
 * being in car mode).
 */
","\android\app\UiModeManager.java"
"android.app.UiModeManager.MODE_NIGHT_AUTO","true","false","false","true","true","int","Configuration.UI_MODE_NIGHT_UNDEFINED >> 4","","/**
 * Constant for {@link #setNightMode(int)} and {@link #getNightMode()}:
 * automatically switch night mode on and off based on the time.
 */
","\android\app\UiModeManager.java"
"android.app.UiModeManager.ACTION_EXIT_DESK_MODE","true","false","false","true","false","String","""android.app.action.EXIT_DESK_MODE""","","/**
 * Broadcast sent when the device's UI has switched away from desk mode back
 * to normal mode.  Typically used by a desk mode app, to dismiss itself
 * when the user exits desk mode.
 */
","\android\app\UiModeManager.java"
"android.app.UiModeManager.MODE_NIGHT_YES","true","false","false","true","true","int","Configuration.UI_MODE_NIGHT_YES >> 4","","/**
 * Constant for {@link #setNightMode(int)} and {@link #getNightMode()}:
 * always run in night mode.
 */
","\android\app\UiModeManager.java"
"android.app.UiModeManager.mService","false","false","true","false","false","IUiModeManager","","","","\android\app\UiModeManager.java"
"android.app.UiModeManager.TAG","false","false","true","true","true","String","""UiModeManager""","","","\android\app\UiModeManager.java"
"android.app.UiModeManager.MODE_NIGHT_NO","true","false","false","true","true","int","Configuration.UI_MODE_NIGHT_NO >> 4","","/**
 * Constant for {@link #setNightMode(int)} and {@link #getNightMode()}:
 * never run in night mode.
 */
","\android\app\UiModeManager.java"
"android.app.UiModeManager.ENABLE_CAR_MODE_GO_CAR_HOME","true","false","false","true","true","int","0x0001","","/**
 * Flag for use with {@link #enableCarMode(int)}: go to the car
 * home activity as part of the enable.  Enabling this way ensures
 * a clean transition between the current activity (in non-car-mode) and
 * the car home activity that will serve as home while in car mode.  This
 * will switch to the car home activity even if we are already in car mode.
 */
","\android\app\UiModeManager.java"
"android.database.MergeCursor.mObserver","false","false","true","false","false","DataSetObserver","new DataSetObserver() {

    @Override
    public void onChanged() {
        // Reset our position so the optimizations in move-related code
        // don't screw us over
        mPos = -1;
    }

    @Override
    public void onInvalidated() {
        mPos = -1;
    }
}","","","\android\database\MergeCursor.java"
"android.database.MergeCursor.mCursor","false","false","true","false","false","Cursor","","","// updated in onMove
","\android\database\MergeCursor.java"
"android.database.MergeCursor.mCursors","false","false","true","false","false","Cursor","","","","\android\database\MergeCursor.java"
"android.text.AutoText.sInstance","false","false","true","true","false","AutoText","new AutoText(Resources.getSystem())","","","\android\text\AutoText.java"
"android.text.AutoText.TRIE_CHILD","false","false","true","true","true","int","2","","","\android\text\AutoText.java"
"android.text.AutoText.RIGHT","false","false","true","true","true","int","9300","","// Size of 'right' 13 Aug 2007
","\android\text\AutoText.java"
"android.text.AutoText.sLock","false","false","true","true","false","Object","new Object()","","","\android\text\AutoText.java"
"android.text.AutoText.TRIE_SIZEOF","false","false","true","true","true","int","4","","","\android\text\AutoText.java"
"android.text.AutoText.DEFAULT","false","false","true","true","true","int","14337","","// Size of the Trie 13 Aug 2007
","\android\text\AutoText.java"
"android.text.AutoText.TRIE_NULL","false","false","true","true","true","char","(char) -1","","","\android\text\AutoText.java"
"android.text.AutoText.mTrie","false","false","true","false","false","char","","","","\android\text\AutoText.java"
"android.text.AutoText.TRIE_ROOT","false","false","true","true","true","int","0","","","\android\text\AutoText.java"
"android.text.AutoText.mSize","false","false","true","false","false","int","","","","\android\text\AutoText.java"
"android.text.AutoText.mTrieUsed","false","false","true","false","false","char","","","","\android\text\AutoText.java"
"android.text.AutoText.TRIE_C","false","false","true","true","true","int","0","","","\android\text\AutoText.java"
"android.text.AutoText.mLocale","false","false","true","false","false","Locale","","","","\android\text\AutoText.java"
"android.text.AutoText.TRIE_OFF","false","false","true","true","true","int","1","","","\android\text\AutoText.java"
"android.text.AutoText.mText","false","false","true","false","false","String","","","","\android\text\AutoText.java"
"android.text.AutoText.TRIE_NEXT","false","false","true","true","true","int","3","","","\android\text\AutoText.java"
"android.text.AutoText.INCREMENT","false","false","true","true","true","int","1024","","","\android\text\AutoText.java"
"android.os.RemoteCallbackList.mCallback","false","false","false","false","true","E","","","","\android\os\RemoteCallbackList.java"
"android.os.RemoteCallbackList.mKilled","false","false","true","false","false","boolean","false","","","\android\os\RemoteCallbackList.java"
"android.os.RemoteCallbackList.mActiveBroadcast","false","false","true","false","false","Object","","","","\android\os\RemoteCallbackList.java"
"android.os.Callback.mCallback","false","false","false","false","true","E","","","","\android\os\RemoteCallbackList.java"
"android.os.Callback.mCookie","false","false","false","false","true","Object","","","","\android\os\RemoteCallbackList.java"
"android.os.RemoteCallbackList.mCallbacks","false","false","false","false","false","HashMap<IBinder,Callback>","new HashMap<IBinder, Callback>()","","/*package*/
","\android\os\RemoteCallbackList.java"
"android.os.RemoteCallbackList.mCookie","false","false","false","false","true","Object","","","","\android\os\RemoteCallbackList.java"
"android.os.RemoteCallbackList.mBroadcastCount","false","false","true","false","false","int","-1","","","\android\os\RemoteCallbackList.java"
"android.webkit.WebSettings.mDatabasePathHasBeenSet","false","false","true","false","false","boolean","false","","// once. Keep track of when the path has been set.
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mAppCachePath","false","false","true","false","false","String","""""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mDefaultZoom","false","false","true","false","false","ZoomDensity","ZoomDensity.MEDIUM","","// native WebCore code.
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mSerifFontFamily","false","false","true","false","false","String","""serif""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mDefaultTextEncoding","false","false","true","false","false","String","","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mUseDefaultUserAgent","false","false","true","false","false","boolean","","","","\android\webkit\WebSettings.java"
"android.webkit.EventHandler.SYNC","false","false","false","true","true","int","0","","// Message id for syncing
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mDomStorageEnabled","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mHandler","false","false","true","false","false","Handler","","","// Actual WebCore thread handler
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.value","false","false","false","false","false","int","","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mStandardFontFamily","false","false","true","false","false","String","""sans-serif""","","","\android\webkit\WebSettings.java"
"android.webkit.EventHandler.SET_DOUBLE_TAP_TOAST_COUNT","false","false","false","true","true","int","2","","// Message id for writing double-tap toast count
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mLoadWithOverviewMode","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.DOUBLE_TAP_TOAST_COUNT","false","false","true","true","true","String","""double_tap_toast_count""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mUserAgent","false","false","true","false","false","String","","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mBlockNetworkLoads","false","false","true","false","false","boolean","","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mRenderPriority","false","false","true","false","false","RenderPriority","RenderPriority.NORMAL","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mNavDump","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.IPHONE_USERAGENT","false","false","true","true","true","String","""Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us)"" + "" AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0"" + "" Mobile/7A341 Safari/528.16""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mPageCacheCapacity","false","false","true","false","false","int","0","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mDoubleTapToastCount","false","false","true","true","false","int","3","","// private WebSettings, not accessible by the host activity
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.DESKTOP_USERAGENT","false","false","true","true","true","String","""Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us)"" + "" AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0"" + "" Safari/530.17""","","// User agent strings.
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mAppCacheMaxSize","false","false","true","false","false","long","Long.MAX_VALUE","","// HTML5 configuration parameters
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.LOAD_NO_CACHE","true","false","false","true","true","int","2","","/**
 * Don't use the cache, load from network
 * Use with {@link #setCacheMode}.
 */
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mGeolocationDatabasePath","false","false","true","false","false","String","""""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mOverrideCacheMode","false","false","true","false","false","int","LOAD_DEFAULT","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mLoadsImagesAutomatically","false","false","true","false","false","boolean","true","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mWebView","false","false","true","false","false","WebView","","","// WebView associated with this WebSettings.
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.SYNC","false","false","false","true","true","int","0","","// Message id for syncing
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.sLocale","false","false","true","true","false","Locale","","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mLightTouchEnabled","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mDatabasePath","false","false","true","false","false","String","""""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mAcceptLanguage","false","false","true","false","false","String","","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mDatabaseEnabled","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mSupportZoom","false","false","true","false","false","boolean","true","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mDefaultFixedFontSize","false","false","true","false","false","int","13","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mBuiltInZoomControls","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mPluginState","false","false","true","false","false","PluginState","PluginState.OFF","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mDefaultFontSize","false","false","true","false","false","int","16","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mSavePassword","false","false","true","false","false","boolean","true","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mSansSerifFontFamily","false","false","true","false","false","String","""sans-serif""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mSupportMultipleWindows","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mUseWideViewport","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mJavaScriptEnabled","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mUseDoubleTree","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mMinimumFontSize","false","false","true","false","false","int","8","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mSaveFormData","false","false","true","false","false","boolean","true","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.sLockForLocaleSettings","false","false","true","true","false","Object","","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mCursiveFontFamily","false","false","true","false","false","String","""cursive""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mAllowFileAccess","false","false","true","false","false","boolean","true","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mWorkersEnabled","false","false","true","false","false","boolean","false","","// only affects V8.
","\android\webkit\WebSettings.java"
"android.webkit.EventHandler.PRIORITY","false","false","false","true","true","int","1","","// Message id for setting priority
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.LOAD_NORMAL","true","false","false","true","true","int","0","","/**
 * Normal cache usage pattern  Use with {@link #setCacheMode}.
 */
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mJavaScriptCanOpenWindowsAutomatically","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mLayoutAlgorithm","false","false","true","false","false","LayoutAlgorithm","LayoutAlgorithm.NARROW_COLUMNS","","// know what they are.
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.LOAD_CACHE_ELSE_NETWORK","true","false","false","true","true","int","1","","/**
 * Use cache if content is there, even if expired (eg, history nav)
 * If it is not in the cache, load from network.
 * Use with {@link #setCacheMode}.
 */
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.PREF_FILE","false","false","true","true","true","String","""WebViewSettings""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mNeedInitialFocus","false","false","true","false","false","boolean","true","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mShrinksStandaloneImagesToFit","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mGeolocationEnabled","false","false","true","false","false","boolean","true","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mSyncPending","false","false","true","false","false","boolean","false","","// Flag to prevent multiple SYNC messages at one time.
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mFixedFontFamily","false","false","true","false","false","String","""monospace""","","","\android\webkit\WebSettings.java"
"android.webkit.EventHandler.mHandler","false","false","true","false","false","Handler","","","// Actual WebCore thread handler
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mContext","false","false","true","false","false","Context","","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mEventHandler","false","false","true","false","true","EventHandler","","","// Custom handler that queues messages until the WebCore thread is active.
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mBlockNetworkImage","false","false","true","false","false","boolean","false","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.LOAD_DEFAULT","true","false","false","true","true","int","-1","","/**
 * Default cache usage pattern  Use with {@link #setCacheMode}.
 */
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mAppCacheEnabled","false","false","true","false","false","boolean","false","","// HTML5 API flags
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.LOAD_CACHE_ONLY","true","false","false","true","true","int","3","","/**
 * Don't use the network, load from cache only.
 * Use with {@link #setCacheMode}.
 */
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mMinimumLogicalFontSize","false","false","true","false","false","int","8","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mFantasyFontFamily","false","false","true","false","false","String","""fantasy""","","","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.PRIORITY","false","false","false","true","true","int","1","","// Message id for setting priority
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.SET_DOUBLE_TAP_TOAST_COUNT","false","false","false","true","true","int","2","","// Message id for writing double-tap toast count
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mBrowserFrame","false","false","true","false","false","BrowserFrame","","","// BrowserFrame used to access the native frame pointer.
","\android\webkit\WebSettings.java"
"android.webkit.WebSettings.mTextSize","false","false","true","false","false","TextSize","TextSize.NORMAL","","","\android\webkit\WebSettings.java"
"android.net.StringUri.path","false","false","true","false","false","PathPart","","","","\android\net\Uri.java"
"android.net.PathSegments.segments","false","false","false","false","true","String","","","","\android\net\Uri.java"
"android.net.StringUri.uriString","false","false","true","false","true","String","","","/**
 * URI string representation.
 */
","\android\net\Uri.java"
"android.net.Part.NULL","false","false","false","true","true","Part","new EmptyPart(null)","","/**
 * A part with null values.
 */
","\android\net\Uri.java"
"android.net.StringUri.fragment","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.AbstractHierarchicalUri.port","false","false","true","false","false","int","NOT_CALCULATED","","","\android\net\Uri.java"
"android.net.Uri.ssp","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.HierarchicalUri.ssp","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.Uri.authority","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.AbstractPart.encoded","false","false","false","false","false","String","","","","\android\net\Uri.java"
"android.net.Uri.HEX_DIGITS","false","false","true","true","true","char","""0123456789ABCDEF"".toCharArray()","","","\android\net\Uri.java"
"android.net.StringUri.query","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.Uri.host","false","false","true","false","false","String","NOT_CACHED","","","\android\net\Uri.java"
"android.net.HierarchicalUri.uriString","false","false","true","false","false","String","NOT_CACHED","","","\android\net\Uri.java"
"android.net.Part.EMPTY","false","false","false","true","true","Part","new EmptyPart("""")","","/**
 * A part with empty strings for values.
 */
","\android\net\Uri.java"
"android.net.Uri.cachedSsi","false","false","true","false","false","int","NOT_CALCULATED","","/**
 * Cached scheme separator index.
 */
","\android\net\Uri.java"
"android.net.OpaqueUri.ssp","false","false","true","false","true","Part","","","","\android\net\Uri.java"
"android.net.Uri.pathSegments","false","false","true","false","false","PathSegments","","","/**
 * Cached path segments. This doesn't need to be volatile--we don't
 * care if other threads see the result.
 */
","\android\net\Uri.java"
"android.net.Uri.NULL","false","false","false","true","true","PathPart","new PathPart(null, null)","","/**
 * A part with null values.
 */
","\android\net\Uri.java"
"android.net.AbstractPart.BOTH","false","false","false","true","true","int","0","","","\android\net\Uri.java"
"android.net.AbstractPart.DECODED","false","false","false","true","true","int","2","","","\android\net\Uri.java"
"android.net.Representation.DECODED","false","false","false","true","true","int","2","","","\android\net\Uri.java"
"android.net.Uri.query","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.Builder.scheme","false","false","true","false","false","String","","","","\android\net\Uri.java"
"android.net.Uri.fragment","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.OpaqueUri.fragment","false","false","true","false","true","Part","","","","\android\net\Uri.java"
"android.net.OpaqueUri.cachedString","false","false","true","false","false","String","NOT_CACHED","","","\android\net\Uri.java"
"android.net.AbstractHierarchicalUri.host","false","false","true","false","false","String","NOT_CACHED","","","\android\net\Uri.java"
"android.net.Uri.segments","false","false","false","false","false","String","","","","\android\net\Uri.java"
"android.net.StringUri.ssp","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.StringUri.cachedFsi","false","false","true","false","false","int","NOT_CALCULATED","","/**
 * Cached fragment separator index.
 */
","\android\net\Uri.java"
"android.net.StringUri.authority","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.Uri.NOT_CACHED","false","false","true","true","true","String","new String(""NOT CACHED"")","@SuppressWarnings(""RedundantStringConstructorCall"")","/**
 * NOTE: EMPTY accesses this field during its own initialization, so this
 * field *must* be initialized first, or else EMPTY will see a null value!
 *
 * Placeholder for strings which haven't been cached. This enables us
 * to cache null. We intentionally create a new String instance so we can
 * compare its identity and there is no chance we will confuse it with
 * user data.
 */
","\android\net\Uri.java"
"android.net.PathPart.EMPTY","false","false","false","true","true","PathPart","new PathPart("""", """")","","/**
 * A part with empty strings for values.
 */
","\android\net\Uri.java"
"android.net.StringUri.TYPE_ID","false","false","false","true","true","int","1","","/**
 * Used in parcelling.
 */
","\android\net\Uri.java"
"android.net.Uri.LOG","false","false","true","true","true","String","Uri.class.getSimpleName()","","/**
 * Log tag.
 */
","\android\net\Uri.java"
"android.net.Uri.DEFAULT_ENCODING","false","false","true","true","true","String","""UTF-8""","","/**
 * Default encoding.
 */
","\android\net\Uri.java"
"android.net.Uri.cachedFsi","false","false","true","false","false","int","NOT_CALCULATED","","/**
 * Cached fragment separator index.
 */
","\android\net\Uri.java"
"android.net.AbstractPart.decoded","false","false","false","false","false","String","","","","\android\net\Uri.java"
"android.net.Uri.CREATOR","true","false","false","true","true","Parcelable.Creator<Uri>","new Parcelable.Creator<Uri>() {

    public Uri createFromParcel(Parcel in) {
        int type = in.readInt();
        switch(type) {
            case NULL_TYPE_ID:
                return null;
            case StringUri.TYPE_ID:
                return StringUri.readFrom(in);
            case OpaqueUri.TYPE_ID:
                return OpaqueUri.readFrom(in);
            case HierarchicalUri.TYPE_ID:
                return HierarchicalUri.readFrom(in);
        }
        throw new AssertionError(""Unknown URI type: "" + type);
    }

    public Uri[] newArray(int size) {
        return new Uri[size];
    }
}","","/**
 * Reads Uris from Parcels.
 */
","\android\net\Uri.java"
"android.net.Uri.NOT_FOUND","false","false","true","true","true","int","-1","","/**
 * Index of a component which was not found.
 */
","\android\net\Uri.java"
"android.net.PathSegments.size","false","false","false","false","true","int","","","","\android\net\Uri.java"
"android.net.Uri.userInfo","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.Uri.decoded","false","false","false","false","false","String","","","","\android\net\Uri.java"
"android.net.Uri.TYPE_ID","false","false","false","true","true","int","3","","/**
 * Used in parcelling.
 */
","\android\net\Uri.java"
"android.net.Uri.NULL_TYPE_ID","false","false","true","true","true","int","0","","/**
 * Identifies a null parcelled Uri.
 */
","\android\net\Uri.java"
"android.net.HierarchicalUri.scheme","false","false","true","false","true","String","","","// can be null
","\android\net\Uri.java"
"android.net.Uri.port","false","false","true","false","false","int","NOT_CALCULATED","","","\android\net\Uri.java"
"android.net.AbstractPart.ENCODED","false","false","false","true","true","int","1","","","\android\net\Uri.java"
"android.net.Representation.ENCODED","false","false","false","true","true","int","1","","","\android\net\Uri.java"
"android.net.Uri.scheme","false","false","true","false","false","String","","","","\android\net\Uri.java"
"android.net.StringUri.cachedSsi","false","false","true","false","false","int","NOT_CALCULATED","","/**
 * Cached scheme separator index.
 */
","\android\net\Uri.java"
"android.net.Uri.REPLACEMENT","false","false","true","true","true","byte","{ (byte) 0xFF, (byte) 0xFD }","","/**
 * Unicode replacement character: \\uFFFD.
 */
","\android\net\Uri.java"
"android.net.Uri.path","false","false","true","false","false","PathPart","","","","\android\net\Uri.java"
"android.net.HierarchicalUri.query","false","false","true","false","true","Part","","","","\android\net\Uri.java"
"android.net.Builder.opaquePart","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.Builder.fragment","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.StringUri.scheme","false","false","true","false","false","String","NOT_CACHED","","","\android\net\Uri.java"
"android.net.Uri.size","false","false","false","false","false","int","0","","","\android\net\Uri.java"
"android.net.HierarchicalUri.path","false","false","true","false","true","PathPart","","","","\android\net\Uri.java"
"android.net.Uri.ENCODED","false","false","false","true","true","int","1","","","\android\net\Uri.java"
"android.net.PathSegmentsBuilder.size","false","false","false","false","false","int","0","","","\android\net\Uri.java"
"android.net.Builder.path","false","false","true","false","false","PathPart","","","","\android\net\Uri.java"
"android.net.Uri.DECODED","false","false","false","true","true","int","2","","","\android\net\Uri.java"
"android.net.Uri.opaquePart","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.HierarchicalUri.authority","false","false","true","false","true","Part","","","","\android\net\Uri.java"
"android.net.Uri.EMPTY","false","false","false","true","true","PathPart","new PathPart("""", """")","","/**
 * A part with empty strings for values.
 */
","\android\net\Uri.java"
"android.net.Uri.NOT_HIERARCHICAL","false","false","true","true","true","String","""This isn't a hierarchical URI.""","","/**
 * Error message presented when a user tries to treat an opaque URI as
 * hierarchical.
 */
","\android\net\Uri.java"
"android.net.PathSegmentsBuilder.segments","false","false","false","false","false","String","","","","\android\net\Uri.java"
"android.net.Uri.uriString","false","false","true","false","false","String","NOT_CACHED","","","\android\net\Uri.java"
"android.net.Uri.encoded","false","false","false","false","false","String","","","","\android\net\Uri.java"
"android.net.Uri.BOTH","false","false","false","true","true","int","0","","","\android\net\Uri.java"
"android.net.PathSegments.EMPTY","false","false","false","true","true","PathSegments","new PathSegments(null, 0)","","","\android\net\Uri.java"
"android.net.HierarchicalUri.fragment","false","false","true","false","true","Part","","","","\android\net\Uri.java"
"android.net.Uri.cachedString","false","false","true","false","false","String","NOT_CACHED","","","\android\net\Uri.java"
"android.net.PathPart.NULL","false","false","false","true","true","PathPart","new PathPart(null, null)","","/**
 * A part with null values.
 */
","\android\net\Uri.java"
"android.net.Builder.authority","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.OpaqueUri.scheme","false","false","true","false","true","String","","","","\android\net\Uri.java"
"android.net.AbstractHierarchicalUri.userInfo","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.Uri.NOT_CALCULATED","false","false","true","true","true","int","-2","","/**
 * Placeholder value for an index which hasn't been calculated yet.
 */
","\android\net\Uri.java"
"android.net.Representation.BOTH","false","false","false","true","true","int","0","","","\android\net\Uri.java"
"android.net.Builder.query","false","false","true","false","false","Part","","","","\android\net\Uri.java"
"android.net.OpaqueUri.TYPE_ID","false","false","false","true","true","int","2","","/**
 * Used in parcelling.
 */
","\android\net\Uri.java"
"android.net.PathPart.pathSegments","false","false","true","false","false","PathSegments","","","/**
 * Cached path segments. This doesn't need to be volatile--we don't
 * care if other threads see the result.
 */
","\android\net\Uri.java"
"android.net.HierarchicalUri.TYPE_ID","false","false","false","true","true","int","3","","/**
 * Used in parcelling.
 */
","\android\net\Uri.java"
"com.android.internal.util.BitwiseInputStream.mPos","false","false","true","false","false","int","","","// The current position offset, in bits, from the msb in byte 0.
","\com\android\internal\util\BitwiseInputStream.java"
"com.android.internal.util.BitwiseInputStream.mBuf","false","false","true","false","false","byte","","","// The byte array being read from.
","\com\android\internal\util\BitwiseInputStream.java"
"com.android.internal.util.BitwiseInputStream.mEnd","false","false","true","false","false","int","","","// The last valid bit offset.
","\com\android\internal\util\BitwiseInputStream.java"
"com.google.android.mms.pdu.Base64.BASELENGTH","false","false","false","true","true","int","255","","/**
 * The base length.
 */
","\com\google\android\mms\pdu\Base64.java"
"com.google.android.mms.pdu.Base64.base64Alphabet","false","false","true","true","false","byte","new byte[BASELENGTH]","","// Create arrays to hold the base64 characters
","\com\google\android\mms\pdu\Base64.java"
"com.google.android.mms.pdu.Base64.PAD","false","false","false","true","true","byte","(byte) '='","","/**
 * Byte used to pad output.
 */
","\com\google\android\mms\pdu\Base64.java"
"com.google.android.mms.pdu.Base64.FOURBYTE","false","false","false","true","true","int","4","","/**
 * Used to get the number of Quadruples.
 */
","\com\google\android\mms\pdu\Base64.java"
"android.net.http.CacheEntry.mSave","true","false","false","false","false","long","","","// TODO: debug only!
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CacheEntry.mHash","false","false","true","false","false","byte","","","/**
 * The hash associated with this cache entry
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CacheEntry.mDomain","false","false","true","false","false","String","","","/**
 * The host associated with this cache entry
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.mSave","true","false","false","false","false","long","","","// TODO: debug only!
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.sCertificateFactory","false","false","true","true","false","CertificateFactory","","","/**
 * The certificate factory
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.mTime","false","false","true","false","false","long","","","/**
 * The time associated with this cache entry
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CacheEntry.mTime","false","false","true","false","false","long","","","/**
 * The time associated with this cache entry
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.mDomain","false","false","true","false","false","String","","","/**
 * The host associated with this cache entry
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.mBigScrew","false","false","true","false","false","int","","","/**
 * Random salt
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.mCost","true","false","false","true","false","long","0","","","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.mHash","false","false","true","false","false","byte","","","/**
 * The hash associated with this cache entry
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.CACHE_ENTRY_LIFETIME","false","false","true","true","true","long","10 * 60 * 1000","","/**
 * The cache-entry lifetime in milliseconds (here, 10 minutes)
 */
","\android\net\http\CertificateValidatorCache.java"
"android.net.http.CertificateValidatorCache.mCacheMap","false","false","true","false","false","HashMap<Integer,CacheEntry>","","","/**
 * The certificate validator cache map (domain to a cache entry)
 */
","\android\net\http\CertificateValidatorCache.java"
"android.text.HtmlToSpannedConverter.mTagHandler","false","false","true","false","false","Html.TagHandler","","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.mImageGetter","false","false","true","false","false","Html.ImageGetter","","","","\android\text\Html.java"
"android.text.Html.schema","false","false","true","true","true","HTMLSchema","new HTMLSchema()","","","\android\text\Html.java"
"android.text.Font.mColor","true","false","false","false","false","String","","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.mHref","true","false","false","false","false","String","","","","\android\text\Html.java"
"android.text.HtmlParser.schema","false","false","true","true","true","HTMLSchema","new HTMLSchema()","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.mFace","true","false","false","false","false","String","","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.mLevel","false","false","true","false","false","int","","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.mColor","true","false","false","false","false","String","","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.HEADER_SIZES","false","false","true","true","true","float","{ 1.5f, 1.4f, 1.3f, 1.2f, 1.1f, 1f }","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.mReader","false","false","true","false","false","XMLReader","","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.mSpannableStringBuilder","false","false","true","false","false","SpannableStringBuilder","","","","\android\text\Html.java"
"android.text.Header.mLevel","false","false","true","false","false","int","","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.COLORS","false","false","true","true","false","HashMap<String,Integer>","buildColorMap()","","","\android\text\Html.java"
"android.text.Href.mHref","true","false","false","false","false","String","","","","\android\text\Html.java"
"android.text.HtmlToSpannedConverter.mSource","false","false","true","false","false","String","","","","\android\text\Html.java"
"android.text.Font.mFace","true","false","false","false","false","String","","","","\android\text\Html.java"
"android.app.DatePickerDialog.YEAR","false","false","true","true","true","String","""year""","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.mCallBack","false","false","true","false","true","OnDateSetListener","","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.mInitialDay","false","false","true","false","false","int","","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.DAY","false","false","true","true","true","String","""day""","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.MONTH","false","false","true","true","true","String","""month""","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.mInitialYear","false","false","true","false","false","int","","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.mTitleDateFormat","false","false","true","false","true","java.text.DateFormat","","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.mCalendar","false","false","true","false","true","Calendar","","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.mDatePicker","false","false","true","false","true","DatePicker","","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.mWeekDays","false","false","true","false","true","String","","","","\android\app\DatePickerDialog.java"
"android.app.DatePickerDialog.mInitialMonth","false","false","true","false","false","int","","","","\android\app\DatePickerDialog.java"
"com.android.internal.view.InputBindResult.TAG","false","false","false","true","true","String","""InputBindResult""","","","\com\android\internal\view\InputBindResult.java"
"com.android.internal.view.InputBindResult.sequence","true","false","false","false","true","int","","","/**
 * Sequence number of this binding.
 */
","\com\android\internal\view\InputBindResult.java"
"com.android.internal.view.InputBindResult.CREATOR","true","false","false","true","true","Parcelable.Creator<InputBindResult>","new Parcelable.Creator<InputBindResult>() {

    public InputBindResult createFromParcel(Parcel source) {
        return new InputBindResult(source);
    }

    public InputBindResult[] newArray(int size) {
        return new InputBindResult[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\com\android\internal\view\InputBindResult.java"
"com.android.internal.view.InputBindResult.method","true","false","false","false","true","IInputMethodSession","","","/**
 * The input method service.
 */
","\com\android\internal\view\InputBindResult.java"
"com.android.internal.view.InputBindResult.id","true","false","false","false","true","String","","","/**
 * The ID for this input method, as found in InputMethodInfo; null if
 * no input method will be bound.
 */
","\com\android\internal\view\InputBindResult.java"
"android.webkit.URLUtil.RESOURCE_BASE","false","false","false","true","true","String","""file:///android_res/""","","// ""drawable-hdpi"" directory as well.
","\android\webkit\URLUtil.java"
"android.webkit.URLUtil.CONTENT_DISPOSITION_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""attachment;\\s*filename\\s*=\\s*(\""?)([^\""]*)\\1\\s*$"", Pattern.CASE_INSENSITIVE)","","/**
 * Regex used to parse content-disposition headers
 */
","\android\webkit\URLUtil.java"
"android.webkit.URLUtil.FILE_BASE","false","false","false","true","true","String","""file://""","","","\android\webkit\URLUtil.java"
"android.webkit.URLUtil.PROXY_BASE","false","false","false","true","true","String","""file:///cookieless_proxy/""","","","\android\webkit\URLUtil.java"
"android.webkit.URLUtil.ASSET_BASE","false","false","false","true","true","String","""file:///android_asset/""","","// ""file:///android_asset/foo/bar.png"".
","\android\webkit\URLUtil.java"
"android.webkit.URLUtil.LOGTAG","false","false","true","true","true","String","""webkit""","","","\android\webkit\URLUtil.java"
"android.app.SearchDialog.mUserQuery","false","false","true","false","false","String","","","// the suggestion, the resulting string is saved.
","\android\app\SearchDialog.java"
"android.app.SearchDialog.INSTANCE_KEY_USER_QUERY","false","false","true","true","true","String","""uQry""","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mConfChangeListener","false","false","true","false","false","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent.getAction().equals(Intent.ACTION_CONFIGURATION_CHANGED)) {
            onConfigurationChanged();
        }
    }
}","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mLastLogTime","false","false","true","false","false","AtomicLong","new AtomicLong(SystemClock.uptimeMillis())","","/**
 * For debugging only, sample the millisecond clock and log it.
 * Uses AtomicLong so we can use in multiple threads
 */
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mAppSearchData","false","false","true","false","false","Bundle","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.LOG_TAG","false","false","true","true","true","String","""SearchDialog""","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mSearchable","false","false","true","false","false","SearchableInfo","","","// interaction with searchable application
","\android\app\SearchDialog.java"
"android.app.SearchDialog.SEARCH_PLATE_LEFT_PADDING_GLOBAL","false","false","true","true","true","int","12","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mGoButtonClickListener","false","false","false","false","false","View.OnClickListener","new View.OnClickListener() {

    public void onClick(View v) {
        // guard against possible race conditions
        if (mSearchable == null) {
            return;
        }
        launchQuerySearch();
    }
}","","/**
 * React to a click in the GO button by launching a search.
 */
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mSearchPlate","false","false","true","false","false","View","","","","\android\app\SearchDialog.java"
"android.app.SearchAutoComplete.mThreshold","false","false","true","false","false","int","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mButtonsKeyListener","false","false","false","false","false","View.OnKeyListener","new View.OnKeyListener() {

    public boolean onKey(View v, int keyCode, KeyEvent event) {
        // guard against possible race conditions
        if (mSearchable == null) {
            return false;
        }
        if (!event.isSystem() && (keyCode != KeyEvent.KEYCODE_DPAD_UP) && (keyCode != KeyEvent.KEYCODE_DPAD_LEFT) && (keyCode != KeyEvent.KEYCODE_DPAD_RIGHT) && (keyCode != KeyEvent.KEYCODE_DPAD_CENTER)) {
            // restore focus and give key to EditText ...
            if (mSearchAutoComplete.requestFocus()) {
                return mSearchAutoComplete.dispatchKeyEvent(event);
            }
        }
        return false;
    }
}","","/**
 * React to typing in the GO search button by refocusing to EditText.
 * Continue typing the query.
 */
","\android\app\SearchDialog.java"
"android.app.SearchDialog.INSTANCE_KEY_COMPONENT","false","false","true","true","true","String","""comp""","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.REWRITE_QUERIES","false","false","true","true","true","boolean","true","","// Whether to rewrite queries when selecting suggestions
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mBadgeLabel","false","false","true","false","false","TextView","","","// views & widgets
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mAppIcon","false","false","true","false","false","ImageView","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.INSTANCE_KEY_APPDATA","false","false","true","true","true","String","""data""","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.DBG_LOG_TIMING","false","false","true","true","true","boolean","false","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mTextWatcher","false","false","true","false","false","TextWatcher","new TextWatcher() {

    public void beforeTextChanged(CharSequence s, int start, int before, int after) {
    }

    public void onTextChanged(CharSequence s, int start, int before, int after) {
        if (DBG_LOG_TIMING) {
            dbgLogTiming(""onTextChanged()"");
        }
        if (mSearchable == null) {
            return;
        }
        if (!mSearchAutoComplete.isPerformingCompletion()) {
            // The user changed the query, remember it.
            mUserQuery = s == null ? """" : s.toString();
        }
        updateWidgetState();
        // Always want to show the microphone if the context is voice.
        // Also show the microphone if this is a browser search and the
        // query matches the initial query.
        updateVoiceButton(mSearchAutoComplete.isEmpty() || (isBrowserSearch() && mInitialQuery.equals(mUserQuery)) || (mAppSearchData != null && mAppSearchData.getBoolean(SearchManager.CONTEXT_IS_VOICE)));
    }

    public void afterTextChanged(Editable s) {
        if (mSearchable == null) {
            return;
        }
        if (mSearchable.autoUrlDetect() && !mSearchAutoComplete.isPerformingCompletion()) {
            // The user changed the query, check if it is a URL and if so change the search
            // button in the soft keyboard to the 'Go' button.
            int options = (mSearchAutoComplete.getImeOptions() & (~EditorInfo.IME_MASK_ACTION)) | EditorInfo.IME_ACTION_GO;
            if (options != mSearchAutoCompleteImeOptions) {
                mSearchAutoCompleteImeOptions = options;
                mSearchAutoComplete.setImeOptions(options);
                // This call is required to update the soft keyboard UI with latest IME flags.
                mSearchAutoComplete.setInputType(mSearchAutoComplete.getInputType());
            }
        }
    }
}","","/**
 * Callback to watch the textedit field for empty/non-empty
 */
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mVoiceAppSearchIntent","false","false","true","false","true","Intent","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.SEARCH_PLATE_LEFT_PADDING_NON_GLOBAL","false","false","true","true","true","int","7","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mOutsideDrawablesCache","false","false","true","false","true","WeakHashMap<String,Drawable.ConstantState>","new WeakHashMap<String, Drawable.ConstantState>()","","// more than once.
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mVoiceButtonClickListener","false","false","false","false","false","View.OnClickListener","new View.OnClickListener() {

    public void onClick(View v) {
        // guard against possible race conditions
        if (mSearchable == null) {
            return;
        }
        SearchableInfo searchable = mSearchable;
        try {
            if (searchable.getVoiceSearchLaunchWebSearch()) {
                Intent webSearchIntent = createVoiceWebSearchIntent(mVoiceWebSearchIntent, searchable);
                getContext().startActivity(webSearchIntent);
            } else if (searchable.getVoiceSearchLaunchRecognizer()) {
                Intent appSearchIntent = createVoiceAppSearchIntent(mVoiceAppSearchIntent, searchable);
                getContext().startActivity(appSearchIntent);
            }
        } catch (ActivityNotFoundException e) {
            // Should not happen, since we check the availability of
            // voice search before showing the button. But just in case...
            Log.w(LOG_TAG, ""Could not find voice search activity"");
        }
        dismiss();
    }
}","","/**
 * React to a click in the voice search button.
 */
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mWorkingSpinner","false","false","true","false","false","Drawable","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mTextKeyListener","false","false","false","false","false","View.OnKeyListener","new View.OnKeyListener() {

    public boolean onKey(View v, int keyCode, KeyEvent event) {
        // guard against possible race conditions
        if (mSearchable == null) {
            return false;
        }
        if (DBG_LOG_TIMING)
            dbgLogTiming(""doTextKey()"");
        if (DBG) {
            Log.d(LOG_TAG, ""mTextListener.onKey("" + keyCode + "","" + event + ""), selection: "" + mSearchAutoComplete.getListSelection());
        }
        // as presses on the selected suggestion
        if (mSearchAutoComplete.isPopupShowing() && mSearchAutoComplete.getListSelection() != ListView.INVALID_POSITION) {
            return onSuggestionsKey(v, keyCode, event);
        }
        // The search key is handled by the dialog's onKeyDown().
        if (!mSearchAutoComplete.isEmpty()) {
            if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_UP) {
                v.cancelLongPress();
                // the user clicked, launch the url instead of using it as a search query.
                if (mSearchable.autoUrlDetect() && (mSearchAutoCompleteImeOptions & EditorInfo.IME_MASK_ACTION) == EditorInfo.IME_ACTION_GO) {
                    Uri uri = Uri.parse(fixUrl(mSearchAutoComplete.getText().toString()));
                    Intent intent = new Intent(Intent.ACTION_VIEW, uri);
                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                    launchIntent(intent);
                } else {
                    // Launch as a regular search.
                    launchQuerySearch();
                }
                return true;
            }
            if (event.getAction() == KeyEvent.ACTION_DOWN) {
                SearchableInfo.ActionKeyInfo actionKey = mSearchable.findActionKey(keyCode);
                if ((actionKey != null) && (actionKey.getQueryActionMsg() != null)) {
                    launchQuerySearch(keyCode, actionKey.getQueryActionMsg());
                    return true;
                }
            }
        }
        return false;
    }
}","","/**
 * React to the user typing ""enter"" or other hardwired keys while typing in the search box.
 * This handles these special keys while the edit box has focus.
 */
","\android\app\SearchDialog.java"
"android.app.SearchDialog.INSTANCE_KEY_STORED_APPDATA","false","false","true","true","true","String","""sData""","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mLaunchComponent","false","false","true","false","false","ComponentName","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.DBG","false","false","true","true","true","boolean","false","","// Debugging support
","\android\app\SearchDialog.java"
"android.app.SearchDialog.IME_OPTION_NO_MICROPHONE","false","false","true","true","true","String","""nm""","","// a microphone button since one already exists in the search dialog.
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mGoButton","false","false","true","false","false","Button","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mSearchAutoComplete","false","false","true","false","false","SearchAutoComplete","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mSearchManager","false","false","true","false","false","SearchManager","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mActivityContext","false","false","true","false","false","Context","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mInitialQuery","false","false","true","false","false","String","","","// case to determine whether the user has edited the query.
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mSearchDialog","false","false","true","false","false","SearchDialog","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mVoiceButton","false","false","true","false","false","ImageButton","","","","\android\app\SearchDialog.java"
"android.app.SearchBar.mSearchDialog","false","false","true","false","false","SearchDialog","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mVoiceWebSearchIntent","false","false","true","false","true","Intent","","","// For voice searching
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mSearchAutoCompleteImeOptions","false","false","true","false","false","int","","","// Last known IME options value for the search edit text.
","\android\app\SearchDialog.java"
"android.app.SearchDialog.mThreshold","false","false","true","false","false","int","","","","\android\app\SearchDialog.java"
"android.app.SearchDialog.mSuggestionsAdapter","false","false","true","false","false","SuggestionsAdapter","","","// support for AutoCompleteTextView suggestions display
","\android\app\SearchDialog.java"
"android.database.sqlite.SQLiteQuery.mClosed","false","false","true","false","false","boolean","false","","","\android\database\sqlite\SQLiteQuery.java"
"android.database.sqlite.SQLiteQuery.mBindArgs","false","false","true","false","false","String","","","/**
 * Args to bind on requery
 */
","\android\database\sqlite\SQLiteQuery.java"
"android.database.sqlite.SQLiteQuery.mOffsetIndex","false","false","true","false","false","int","","","/**
 * The index of the unbound OFFSET parameter
 */
","\android\database\sqlite\SQLiteQuery.java"
"android.database.sqlite.SQLiteQuery.TAG","false","false","true","true","true","String","""Cursor""","","","\android\database\sqlite\SQLiteQuery.java"
"android.widget.ZoomControls.mZoomOut","false","false","true","false","true","ZoomButton","","","","\android\widget\ZoomControls.java"
"android.widget.ZoomControls.mZoomIn","false","false","true","false","true","ZoomButton","","","","\android\widget\ZoomControls.java"
"com.android.internal.net.DNParser.pos","false","false","true","false","false","int","","","","\com\android\internal\net\DNParser.java"
"com.android.internal.net.DNParser.length","false","false","true","false","true","int","","","// length of distinguished name string
","\com\android\internal\net\DNParser.java"
"com.android.internal.net.DNParser.dn","false","false","true","false","true","String","","","/**
 * DN to be parsed.
 */
","\com\android\internal\net\DNParser.java"
"com.android.internal.net.DNParser.TAG","false","false","true","true","true","String","""DNParser""","","","\com\android\internal\net\DNParser.java"
"com.android.internal.net.DNParser.chars","false","false","true","false","false","char","","","// distinguished name chars
","\com\android\internal\net\DNParser.java"
"com.android.internal.net.DNParser.ERROR_PARSE_ERROR","false","false","true","true","true","String","""Failed to parse DN""","","/**
 * Exception message thrown when we failed to parse DN, which shouldn't happen because we
 * only handle DNs that {@link X500Principal#getName} returns, which shouldn't be malformed.
 */
","\com\android\internal\net\DNParser.java"
"com.android.internal.net.DNParser.cur","false","false","true","false","false","int","","","// tmp vars to store positions of the currently parsed item
","\com\android\internal\net\DNParser.java"
"android.widget.SimpleAdapter.mDropDownResource","false","false","true","false","false","int","","","","\android\widget\SimpleAdapter.java"
"android.widget.SimpleAdapter.mResource","false","false","true","false","false","int","","","","\android\widget\SimpleAdapter.java"
"android.widget.SimpleAdapter.mUnfilteredData","false","false","true","false","false","ArrayList<Map<String,?>>","","","","\android\widget\SimpleAdapter.java"
"android.widget.SimpleAdapter.mTo","false","false","true","false","false","int","","","","\android\widget\SimpleAdapter.java"
"android.widget.SimpleAdapter.mData","false","false","true","false","false","List<? extends Map<String,?>>","","","","\android\widget\SimpleAdapter.java"
"android.widget.SimpleAdapter.mViewBinder","false","false","true","false","false","ViewBinder","","","","\android\widget\SimpleAdapter.java"
"android.widget.SimpleAdapter.mFrom","false","false","true","false","false","String","","","","\android\widget\SimpleAdapter.java"
"android.widget.SimpleAdapter.mFilter","false","false","true","false","false","SimpleFilter","","","","\android\widget\SimpleAdapter.java"
"android.widget.SimpleAdapter.mInflater","false","false","true","false","false","LayoutInflater","","","","\android\widget\SimpleAdapter.java"
"android.view.TouchDelegate.mSlop","false","false","true","false","false","int","","","","\android\view\TouchDelegate.java"
"android.view.TouchDelegate.TO_LEFT","true","false","false","true","true","int","4","","/**
 * The touchable region of the View extends to the left of its
 * actual extent.
 */
","\android\view\TouchDelegate.java"
"android.view.TouchDelegate.mBounds","false","false","true","false","false","Rect","","","/**
 * Bounds in local coordinates of the containing view that should be mapped to the delegate
 * view. This rect is used for initial hit testing.
 */
","\android\view\TouchDelegate.java"
"android.view.TouchDelegate.mDelegateView","false","false","true","false","false","View","","","/**
 * View that should receive forwarded touch events
 */
","\android\view\TouchDelegate.java"
"android.view.TouchDelegate.BELOW","true","false","false","true","true","int","2","","/**
 * The touchable region of the View extends below its actual extent.
 */
","\android\view\TouchDelegate.java"
"android.view.TouchDelegate.mSlopBounds","false","false","true","false","false","Rect","","","/**
 * mBounds inflated to include some slop. This rect is to track whether the motion events
 * should be considered to be be within the delegate view.
 */
","\android\view\TouchDelegate.java"
"android.view.TouchDelegate.TO_RIGHT","true","false","false","true","true","int","8","","/**
 * The touchable region of the View extends to the right of its
 * actual extent.
 */
","\android\view\TouchDelegate.java"
"android.view.TouchDelegate.mDelegateTargeted","false","false","true","false","false","boolean","","","/**
 * True if the delegate had been targeted on a down event (intersected mBounds).
 */
","\android\view\TouchDelegate.java"
"android.view.TouchDelegate.ABOVE","true","false","false","true","true","int","1","","/**
 * The touchable region of the View extends above its actual extent.
 */
","\android\view\TouchDelegate.java"
"android.os.Debug.otherPrivateDirty","true","false","false","false","false","int","","","/**
 * The private dirty pages used by everything else.
 */
","\android\os\Debug.java"
"android.os.Debug.dalvikPrivateDirty","true","false","false","false","false","int","","","/**
 * The private dirty pages used by dalvik.
 */
","\android\os\Debug.java"
"android.os.Debug.nativePss","true","false","false","false","false","int","","","/**
 * The proportional set size for the native heap.
 */
","\android\os\Debug.java"
"android.os.MemoryInfo.dalvikSharedDirty","true","false","false","false","false","int","","","/**
 * The shared dirty pages used by dalvik.
 */
","\android\os\Debug.java"
"android.os.InstructionCount.NUM_INSTR","false","false","true","true","true","int","256","","","\android\os\Debug.java"
"android.os.Debug.SHOW_CLASSLOADER","true","false","false","true","true","int","(1 << 1)","","","\android\os\Debug.java"
"android.os.Debug.debugProperties","false","false","true","true","true","TypedProperties","","","/**
 * A Map of typed debug properties.
 */
","\android\os\Debug.java"
"android.os.MemoryInfo.nativePss","true","false","false","false","false","int","","","/**
 * The proportional set size for the native heap.
 */
","\android\os\Debug.java"
"android.os.Debug.NUM_INSTR","false","false","true","true","true","int","256","","","\android\os\Debug.java"
"android.os.MemoryInfo.nativePrivateDirty","true","false","false","false","false","int","","","/**
 * The private dirty pages used by the native heap.
 */
","\android\os\Debug.java"
"android.os.Debug.dalvikPss","true","false","false","false","false","int","","","/**
 * The proportional set size for dalvik.
 */
","\android\os\Debug.java"
"android.os.MemoryInfo.otherPrivateDirty","true","false","false","false","false","int","","","/**
 * The private dirty pages used by everything else.
 */
","\android\os\Debug.java"
"android.os.Debug.mCounts","false","false","true","false","false","int","","","","\android\os\Debug.java"
"android.os.Debug.SYSFS_QEMU_TRACE_STATE","false","false","true","true","true","String","""/sys/qemu_trace/state""","","/**
 * This is the pathname to the sysfs file that enables and disables
 * tracing on the qemu emulator.
 */
","\android\os\Debug.java"
"android.os.MemoryInfo.nativeSharedDirty","true","false","false","false","false","int","","","/**
 * The shared dirty pages used by the native heap.
 */
","\android\os\Debug.java"
"android.os.Debug.SPIN_DELAY","false","false","true","true","true","int","200","","// msec
","\android\os\Debug.java"
"android.os.MemoryInfo.dalvikPrivateDirty","true","false","false","false","false","int","","","/**
 * The private dirty pages used by dalvik.
 */
","\android\os\Debug.java"
"android.os.Debug.mWaiting","false","false","true","true","false","boolean","false","","// set/cleared by waitForDebugger()
","\android\os\Debug.java"
"android.os.Debug.DEFAULT_TRACE_FILE_PATH","false","false","true","true","true","String","DEFAULT_TRACE_PATH_PREFIX + DEFAULT_TRACE_BODY + DEFAULT_TRACE_EXTENSION","","","\android\os\Debug.java"
"android.os.InstructionCount.mCounts","false","false","true","false","false","int","","","","\android\os\Debug.java"
"android.os.Debug.otherSharedDirty","true","false","false","false","false","int","","","/**
 * The shared dirty pages used by everything else.
 */
","\android\os\Debug.java"
"android.os.Debug.TRACE_COUNT_ALLOCS","true","false","false","true","true","int","VMDebug.TRACE_COUNT_ALLOCS","","/**
 * Flags for startMethodTracing().  These can be ORed together.
 *
 * TRACE_COUNT_ALLOCS adds the results from startAllocCounting to the
 * trace key file.
 */
","\android\os\Debug.java"
"android.os.Debug.DEFAULT_TRACE_PATH_PREFIX","false","false","true","true","true","String","""/sdcard/""","","/**
 * Default trace file path and file
 */
","\android\os\Debug.java"
"android.os.Debug.DEFAULT_TRACE_BODY","false","false","true","true","true","String","""dmtrace""","","","\android\os\Debug.java"
"android.os.Debug.DEFAULT_TRACE_EXTENSION","false","false","true","true","true","String",""".trace""","","","\android\os\Debug.java"
"android.os.Debug.nativePrivateDirty","true","false","false","false","false","int","","","/**
 * The private dirty pages used by the native heap.
 */
","\android\os\Debug.java"
"android.os.MemoryInfo.otherPss","true","false","false","false","false","int","","","/**
 * The proportional set size for everything else.
 */
","\android\os\Debug.java"
"android.os.MemoryInfo.dalvikPss","true","false","false","false","false","int","","","/**
 * The proportional set size for dalvik.
 */
","\android\os\Debug.java"
"android.os.Debug.SHOW_FULL_DETAIL","true","false","false","true","true","int","1","","/**
 * Flags for printLoadedClasses().  Default behavior is to only show
 * the class name.
 */
","\android\os\Debug.java"
"android.os.Debug.nativeSharedDirty","true","false","false","false","false","int","","","/**
 * The shared dirty pages used by the native heap.
 */
","\android\os\Debug.java"
"android.os.Debug.CREATOR","true","false","false","true","true","Creator<MemoryInfo>","new Creator<MemoryInfo>() {

    public MemoryInfo createFromParcel(Parcel source) {
        return new MemoryInfo(source);
    }

    public MemoryInfo[] newArray(int size) {
        return new MemoryInfo[size];
    }
}","","","\android\os\Debug.java"
"android.os.Debug.MIN_DEBUGGER_IDLE","false","false","true","true","true","int","1300","","// msec
","\android\os\Debug.java"
"android.os.Debug.otherPss","true","false","false","false","false","int","","","/**
 * The proportional set size for everything else.
 */
","\android\os\Debug.java"
"android.os.MemoryInfo.otherSharedDirty","true","false","false","false","false","int","","","/**
 * The shared dirty pages used by everything else.
 */
","\android\os\Debug.java"
"android.os.Debug.TAG","false","false","true","true","true","String","""Debug""","","","\android\os\Debug.java"
"android.os.Debug.dalvikSharedDirty","true","false","false","false","false","int","","","/**
 * The shared dirty pages used by dalvik.
 */
","\android\os\Debug.java"
"android.os.MemoryInfo.CREATOR","true","false","false","true","true","Creator<MemoryInfo>","new Creator<MemoryInfo>() {

    public MemoryInfo createFromParcel(Parcel source) {
        return new MemoryInfo(source);
    }

    public MemoryInfo[] newArray(int size) {
        return new MemoryInfo[size];
    }
}","","","\android\os\Debug.java"
"android.os.Debug.SHOW_INITIALIZED","true","false","false","true","true","int","(1 << 2)","","","\android\os\Debug.java"
"android.database.IBulkCursor.REQUERY_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 6","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.COUNT_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 1","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.descriptor","false","false","false","true","true","String","""android.content.IBulkCursor""","","/* IPC constants */
","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.DEACTIVATE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 5","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.GET_COLUMN_NAMES_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 2","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.RESPOND_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 10","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.WANTS_ON_MOVE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 8","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.GET_CURSOR_WINDOW_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.GET_EXTRAS_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 9","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.DELETE_ROW_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 4","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.ON_MOVE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 7","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.UPDATE_ROWS_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 3","","","\android\database\IBulkCursor.java"
"android.database.IBulkCursor.CLOSE_TRANSACTION","false","false","false","true","true","int","IBinder.FIRST_CALL_TRANSACTION + 11","","","\android\database\IBulkCursor.java"
"android.widget.CursorTreeAdapter.mRowIDColumn","false","false","true","false","false","int","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.MyCursorHelper.mContentObserver","false","false","true","false","false","MyContentObserver","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mCursorFilter","false","false","false","false","false","CursorFilter","","","// Filter related
","\android\widget\CursorTreeAdapter.java"
"android.widget.MyCursorHelper.mDataValid","false","false","true","false","false","boolean","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mDataSetObserver","false","false","true","false","false","MyDataSetObserver","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.MyCursorHelper.mCursor","false","false","true","false","false","Cursor","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mChildrenCursorHelpers","false","false","false","false","false","SparseArray<MyCursorHelper>","","","/**
 * The map of a group position to the group's children cursor helper (the
 * cursor helper that is used to get the children for that group)
 */
","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mHandler","false","false","true","false","false","Handler","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mDataValid","false","false","true","false","false","boolean","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mGroupCursorHelper","false","false","false","false","false","MyCursorHelper","","","/**
 * The cursor helper that is used to get the groups
 */
","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mFilterQueryProvider","false","false","false","false","false","FilterQueryProvider","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mAutoRequery","false","false","true","false","false","boolean","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.MyCursorHelper.mDataSetObserver","false","false","true","false","false","MyDataSetObserver","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mContentObserver","false","false","true","false","false","MyContentObserver","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mContext","false","false","true","false","false","Context","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.CursorTreeAdapter.mCursor","false","false","true","false","false","Cursor","","","","\android\widget\CursorTreeAdapter.java"
"android.widget.MyCursorHelper.mRowIDColumn","false","false","true","false","false","int","","","","\android\widget\CursorTreeAdapter.java"
"android.server.BluetoothEventLoop.mContext","false","false","true","false","true","Context","","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.mBluetoothService","false","false","true","false","true","BluetoothService","","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.CREATE_DEVICE_FAILED","false","false","true","true","true","int","-1","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.mStarted","false","false","true","false","false","boolean","","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.EVENT_PAIRING_CONSENT_DELAYED_ACCEPT","false","false","true","true","true","int","3","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.mAdapter","false","false","true","false","true","BluetoothAdapter","","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.mThread","false","false","true","false","false","Thread","","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.MAX_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY","false","false","true","true","true","long","12000","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.mNativeData","false","false","true","false","false","int","","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.CREATE_DEVICE_ALREADY_EXISTS","false","false","true","true","true","int","1","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.EVENT_RESTART_BLUETOOTH","false","false","true","true","true","int","2","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.BLUETOOTH_PERM","false","false","true","true","true","String","android.Manifest.permission.BLUETOOTH","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.EVENT_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY","false","false","true","true","true","int","1","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.BLUETOOTH_ADMIN_PERM","false","false","true","true","true","String","android.Manifest.permission.BLUETOOTH_ADMIN","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.mInterrupted","false","false","true","false","false","boolean","","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.DBG","false","false","true","true","true","boolean","false","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.TAG","false","false","true","true","true","String","""BluetoothEventLoop""","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.EVENT_AGENT_CANCEL","false","false","true","true","true","int","4","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.mPasskeyAgentRequestData","false","false","true","false","true","HashMap<String,Integer>","","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.CREATE_DEVICE_SUCCESS","false","false","true","true","true","int","0","","","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.INIT_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY","false","false","true","true","true","long","3000","","// MAX_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY as the max value.
","\android\server\BluetoothEventLoop.java"
"android.server.BluetoothEventLoop.mHandler","false","false","true","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        String address = null;
        switch(msg.what) {
            case EVENT_AUTO_PAIRING_FAILURE_ATTEMPT_DELAY:
                address = (String) msg.obj;
                if (address != null) {
                    mBluetoothService.createBond(address);
                    return;
                }
                break;
            case EVENT_RESTART_BLUETOOTH:
                mBluetoothService.restart();
                break;
            case EVENT_PAIRING_CONSENT_DELAYED_ACCEPT:
                address = (String) msg.obj;
                if (address != null) {
                    mBluetoothService.setPairingConfirmation(address, true);
                }
                break;
            case EVENT_AGENT_CANCEL:
                // Set the Bond State to BOND_NONE.
                // We always have only 1 device in BONDING state.
                String[] devices = mBluetoothService.getBondState().listInState(BluetoothDevice.BOND_BONDING);
                if (devices.length == 0) {
                    break;
                } else if (devices.length > 1) {
                    Log.e(TAG, "" There is more than one device in the Bonding State"");
                    break;
                }
                address = devices[0];
                mBluetoothService.getBondState().setBondState(address, BluetoothDevice.BOND_NONE, BluetoothDevice.UNBOND_REASON_REMOTE_AUTH_CANCELED);
                break;
        }
    }
}","","","\android\server\BluetoothEventLoop.java"
"android.text.Layout.EMOJI_FACTORY","false","false","false","true","true","EmojiFactory","EmojiFactory.newAvailableInstance()","","/* package */
","\android\text\Layout.java"
"android.text.Layout.mMethod","false","false","false","false","false","TextUtils.TruncateAt","","","/* package */
","\android\text\Layout.java"
"android.text.Layout.DIR_REQUEST_DEFAULT_RTL","false","false","false","true","true","int","-2","","/* package */
","\android\text\Layout.java"
"android.text.Layout.DIR_LEFT_TO_RIGHT","true","false","false","true","true","int","1","","","\android\text\Layout.java"
"android.text.Layout.NO_PARA_SPANS","false","false","true","true","true","ParagraphStyle","ArrayUtils.emptyArray(ParagraphStyle.class)","","","\android\text\Layout.java"
"android.text.Layout.DIRS_ALL_LEFT_TO_RIGHT","false","false","false","true","true","Directions","new Directions(new short[] { 32767 })","","/* package */
","\android\text\Layout.java"
"android.text.Layout.mSpannedText","false","false","true","false","false","boolean","","","","\android\text\Layout.java"
"android.text.Layout.MIN_EMOJI","false","false","false","true","true","int","","","/* package */
","\android\text\Layout.java"
"android.text.Layout.DIR_REQUEST_LTR","false","false","false","true","true","int","1","","/* package */
","\android\text\Layout.java"
"android.text.Ellipsizer.mText","false","false","false","false","false","CharSequence","","","/* package */
","\android\text\Layout.java"
"android.text.Layout.mDirections","false","false","true","false","false","short","","","","\android\text\Layout.java"
"android.text.Layout.mWidth","false","false","true","false","false","int","","","","\android\text\Layout.java"
"android.text.Layout.DIR_RIGHT_TO_LEFT","true","false","false","true","true","int","-1","","","\android\text\Layout.java"
"android.text.Ellipsizer.mMethod","false","false","false","false","false","TextUtils.TruncateAt","","","/* package */
","\android\text\Layout.java"
"android.text.Layout.sTempRect","false","false","true","true","false","Rect","new Rect()","","","\android\text\Layout.java"
"android.text.Layout.mSpacingMult","false","false","true","false","false","float","","","","\android\text\Layout.java"
"android.text.Directions.mDirections","false","false","true","false","false","short","","","","\android\text\Layout.java"
"android.text.Layout.mAlignment","false","false","true","false","false","Alignment","Alignment.ALIGN_NORMAL","","","\android\text\Layout.java"
"android.text.Layout.mSpacingAdd","false","false","true","false","false","float","","","","\android\text\Layout.java"
"android.text.SpannedEllipsizer.mSpanned","false","false","true","false","false","Spanned","","","","\android\text\Layout.java"
"android.text.Layout.DEBUG","false","false","true","true","true","boolean","false","","","\android\text\Layout.java"
"android.text.Ellipsizer.mLayout","false","false","false","false","false","Layout","","","/* package */
","\android\text\Layout.java"
"android.text.Layout.mSpanned","false","false","true","false","false","Spanned","","","","\android\text\Layout.java"
"android.text.Layout.DIR_REQUEST_DEFAULT_LTR","false","false","false","true","true","int","2","","/* package */
","\android\text\Layout.java"
"android.text.Ellipsizer.mWidth","false","false","false","false","false","int","","","/* package */
","\android\text\Layout.java"
"android.text.Layout.TAB_INCREMENT","false","false","true","true","true","int","20","","","\android\text\Layout.java"
"android.text.Layout.DIRS_ALL_RIGHT_TO_LEFT","false","false","false","true","true","Directions","new Directions(new short[] { 0, 32767 })","","/* package */
","\android\text\Layout.java"
"android.text.Layout.mPaint","false","false","true","false","false","TextPaint","","","","\android\text\Layout.java"
"android.text.Layout.mText","false","false","true","false","false","CharSequence","","","","\android\text\Layout.java"
"android.text.Layout.mLayout","false","false","false","false","false","Layout","","","/* package */
","\android\text\Layout.java"
"android.text.Layout.mEmojiRect","false","false","true","false","false","RectF","","","","\android\text\Layout.java"
"android.text.Layout.mWorkPaint","false","false","false","false","false","TextPaint","","","/* package */
","\android\text\Layout.java"
"android.text.Layout.DIR_REQUEST_RTL","false","false","false","true","true","int","-1","","/* package */
","\android\text\Layout.java"
"android.text.style.BulletSpan.mColor","false","false","true","false","true","int","","","","\android\text\style\BulletSpan.java"
"android.text.style.BulletSpan.STANDARD_GAP_WIDTH","true","false","false","true","true","int","2","","","\android\text\style\BulletSpan.java"
"android.text.style.BulletSpan.mGapWidth","false","false","true","false","true","int","","","","\android\text\style\BulletSpan.java"
"android.text.style.BulletSpan.BULLET_RADIUS","false","false","true","true","true","int","3","","","\android\text\style\BulletSpan.java"
"android.text.style.BulletSpan.mWantColor","false","false","true","false","true","boolean","","","","\android\text\style\BulletSpan.java"
"android.widget.ScrollBarDrawable.mTempBounds","false","false","true","false","true","Rect","new Rect()","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mAlwaysDrawVerticalTrack","false","false","true","false","false","boolean","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mHorizontalTrack","false","false","true","false","false","Drawable","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mRangeChanged","false","false","true","false","false","boolean","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mVertical","false","false","true","false","false","boolean","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mChanged","false","false","true","false","false","boolean","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mOffset","false","false","true","false","false","int","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mHorizontalThumb","false","false","true","false","false","Drawable","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mAlwaysDrawHorizontalTrack","false","false","true","false","false","boolean","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mRange","false","false","true","false","false","int","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mVerticalTrack","false","false","true","false","false","Drawable","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mExtent","false","false","true","false","false","int","","","","\android\widget\ScrollBarDrawable.java"
"android.widget.ScrollBarDrawable.mVerticalThumb","false","false","true","false","false","Drawable","","","","\android\widget\ScrollBarDrawable.java"
"android.webkit.WebViewClient.ERROR_FILE_NOT_FOUND","true","false","false","true","true","int","-14","","/**
 * File not found
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_UNSUPPORTED_SCHEME","true","false","false","true","true","int","-10","","/**
 * Unsupported URI scheme
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_CONNECT","true","false","false","true","true","int","-6","","/**
 * Failed to connect to the server
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_FAILED_SSL_HANDSHAKE","true","false","false","true","true","int","-11","","/**
 * Failed to perform SSL handshake
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_FILE","true","false","false","true","true","int","-13","","/**
 * Generic file error
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_HOST_LOOKUP","true","false","false","true","true","int","-2","","/**
 * Server or proxy hostname lookup failed
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_TOO_MANY_REQUESTS","true","false","false","true","true","int","-15","","/**
 * Too many requests during this load
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_REDIRECT_LOOP","true","false","false","true","true","int","-9","","/**
 * Too many redirects
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_IO","true","false","false","true","true","int","-7","","/**
 * Failed to read or write to the server
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_UNSUPPORTED_AUTH_SCHEME","true","false","false","true","true","int","-3","","/**
 * Unsupported authentication scheme (not basic or digest)
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_PROXY_AUTHENTICATION","true","false","false","true","true","int","-5","","/**
 * User authentication failed on proxy
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_BAD_URL","true","false","false","true","true","int","-12","","/**
 * Malformed URL
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_UNKNOWN","true","false","false","true","true","int","-1","","/**
 * Generic error
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_AUTHENTICATION","true","false","false","true","true","int","-4","","/**
 * User authentication failed on server
 */
","\android\webkit\WebViewClient.java"
"android.webkit.WebViewClient.ERROR_TIMEOUT","true","false","false","true","true","int","-8","","/**
 * Connection timed out
 */
","\android\webkit\WebViewClient.java"
"android.speech.tts.Engine.PARAM_POSITION_STREAM","false","true","false","true","true","int","8","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.KEY_PARAM_PITCH","true","false","false","true","true","String","""pitch""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.CHECK_VOICE_DATA_FAIL","true","false","false","true","true","int","0","","/**
 * Indicates failure when checking the installation status of the resources used by the
 * TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mITts","false","false","true","false","false","ITts","null","","","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.ACTION_TTS_QUEUE_PROCESSING_COMPLETED","true","false","false","true","true","String","""android.speech.tts.TTS_QUEUE_PROCESSING_COMPLETED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The TextToSpeech synthesizer has completed processing
 * of all the text in the speech queue.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.EXTRA_VOICE_DATA_FILES","true","false","false","true","true","String","""dataFiles""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine specifies the file names of its resources under the
 * resource path.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.ACTION_TTS_DATA_INSTALLED","true","false","false","true","true","String","""android.speech.tts.engine.TTS_DATA_INSTALLED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: broadcast to signal the completion of the installation of
 * the data files used by the synthesis engine. Success or failure is indicated in the
 * {@link #EXTRA_TTS_DATA_INSTALLED} extra.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.EXTRA_TTS_DATA_INSTALLED","true","false","false","true","true","String","""dataInstalled""","","/**
 * Extra information received with the {@link #ACTION_TTS_DATA_INSTALLED} intent.
 * It indicates whether the data files for the synthesis engine were successfully
 * installed. The installation was initiated with the  {@link #ACTION_INSTALL_TTS_DATA}
 * intent. The possible values for this extra are
 * {@link TextToSpeech#SUCCESS} and {@link TextToSpeech#ERROR}.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.PARAM_POSITION_LANGUAGE","false","true","false","true","true","int","2","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mInitListener","false","false","true","false","false","OnInitListener","null","","","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.CHECK_VOICE_DATA_PASS","true","false","false","true","true","int","1","","/**
 * Indicates success when checking the installation status of the resources used by the
 * TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.CHECK_VOICE_DATA_MISSING_DATA","true","false","false","true","true","int","-2","","/**
 * Indicates missing resources when checking the installation status of the resources used
 * by the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.PARAM_POSITION_COUNTRY","false","true","false","true","true","int","4","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.KEY_PARAM_RATE","true","false","false","true","true","String","""rate""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.PARAM_POSITION_VARIANT","false","true","false","true","true","int","6","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.QUEUE_ADD","true","false","false","true","true","int","1","","/**
 * Queue mode where the new entry is added at the end of the playback queue.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.EXTRA_VOICE_DATA_FILES_INFO","true","false","false","true","true","String","""dataFilesInfo""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine specifies the locale associated with each resource file.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.KEY_PARAM_UTTERANCE_ID","true","false","false","true","true","String","""utteranceId""","","/**
 * Parameter key to identify an utterance in the
 * {@link TextToSpeech.OnUtteranceCompletedListener} after text has been
 * spoken, a file has been played back or a silence duration has elapsed.
 * @see TextToSpeech#speak(String, int, HashMap)
 * @see TextToSpeech#playEarcon(String, int, HashMap)
 * @see TextToSpeech#synthesizeToFile(String, HashMap, String)
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.PARAM_POSITION_ENGINE","false","true","false","true","true","int","12","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.PARAM_POSITION_RATE","false","true","false","true","true","int","0","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.KEY_PARAM_STREAM","true","false","false","true","true","String","""streamType""","","/**
 * Parameter key to specify the audio stream type to be used when speaking text
 * or playing back a file.
 * @see TextToSpeech#speak(String, int, HashMap)
 * @see TextToSpeech#playEarcon(String, int, HashMap)
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.KEY_PARAM_COUNTRY","true","false","false","true","true","String","""country""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.EXTRA_AVAILABLE_VOICES","true","false","false","true","true","String","""availableVoices""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine returns an ArrayList<String> of all the available voices.
 * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are
 * optional (ie, ""eng"" or ""eng-USA"" or ""eng-USA-FEMALE"").
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.EXTRA_VOICE_DATA_FILES_INFO","true","false","false","true","true","String","""dataFilesInfo""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine specifies the locale associated with each resource file.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mServiceConnection","false","false","true","false","false","ServiceConnection","","","/**
 * Connection needed for the TTS.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mPackageName","false","false","true","false","false","String","""""","","","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.PARAM_POSITION_ENGINE","false","true","false","true","true","int","12","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.DEFAULT_RATE","true","false","false","true","true","int","100","","// 1x
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.ACTION_INSTALL_TTS_DATA","true","false","false","true","true","String","""android.speech.tts.engine.INSTALL_TTS_DATA""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Triggers the platform TextToSpeech engine to
 * start the activity that installs the resource files on the device
 * that are required for TTS to be operational. Since the installation
 * of the data can be interrupted or declined by the user, the application
 * shouldn't expect successful installation upon return from that intent,
 * and if need be, should check installation status with
 * {@link #ACTION_CHECK_TTS_DATA}.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.CHECK_VOICE_DATA_PASS","true","false","false","true","true","int","1","","/**
 * Indicates success when checking the installation status of the resources used by the
 * TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.PARAM_POSITION_LANGUAGE","false","true","false","true","true","int","2","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.DEFAULT_PITCH","true","false","false","true","true","int","100","","// 1x
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mStarted","false","false","true","false","false","boolean","false","","","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.KEY_PARAM_COUNTRY","true","false","false","true","true","String","""country""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mContext","false","false","true","false","false","Context","null","","","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.PARAM_POSITION_UTTERANCE_ID","false","true","false","true","true","int","10","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.KEY_PARAM_LANGUAGE","true","false","false","true","true","String","""language""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mCachedParams","false","false","true","false","false","String","","","/**
 * Used to store the cached parameters sent along with each synthesis request to the
 * TTS service.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.EXTRA_VOICE_DATA_ROOT_DIRECTORY","true","false","false","true","true","String","""dataRoot""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine specifies the path to its resources.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.ERROR","true","false","false","true","true","int","-1","","/**
 * Denotes a generic operation failure.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.LANG_MISSING_DATA","true","false","false","true","true","int","-1","","/**
 * Denotes the language data is missing.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.EXTRA_UNAVAILABLE_VOICES","true","false","false","true","true","String","""unavailableVoices""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine returns an ArrayList<String> of all the unavailable voices.
 * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are
 * optional (ie, ""eng"" or ""eng-USA"" or ""eng-USA-FEMALE"").
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.CHECK_VOICE_DATA_MISSING_VOLUME","true","false","false","true","true","int","-3","","/**
 * Indicates missing storage volume when checking the installation status of the resources
 * used by the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.PARAM_POSITION_STREAM","false","true","false","true","true","int","8","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.CHECK_VOICE_DATA_FAIL","true","false","false","true","true","int","0","","/**
 * Indicates failure when checking the installation status of the resources used by the
 * TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.KEY_PARAM_ENGINE","true","false","false","true","true","String","""engine""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.USE_DEFAULTS","true","false","false","true","true","int","0","","// false
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.USE_DEFAULTS","true","false","false","true","true","int","0","","// false
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.DEFAULT_SYNTH","true","false","false","true","true","String","""com.svox.pico""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.PARAM_POSITION_COUNTRY","false","true","false","true","true","int","4","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.EXTRA_UNAVAILABLE_VOICES","true","false","false","true","true","String","""unavailableVoices""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine returns an ArrayList<String> of all the unavailable voices.
 * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are
 * optional (ie, ""eng"" or ""eng-USA"" or ""eng-USA-FEMALE"").
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.NB_CACHED_PARAMS","false","true","false","true","true","int","8","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.KEY_PARAM_ENGINE","true","false","false","true","true","String","""engine""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.QUEUE_FLUSH","true","false","false","true","true","int","0","","/**
 * Queue mode where all entries in the playback queue (media to be played
 * and text to be synthesized) are dropped and replaced by the new entry.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.KEY_PARAM_UTTERANCE_ID","true","false","false","true","true","String","""utteranceId""","","/**
 * Parameter key to identify an utterance in the
 * {@link TextToSpeech.OnUtteranceCompletedListener} after text has been
 * spoken, a file has been played back or a silence duration has elapsed.
 * @see TextToSpeech#speak(String, int, HashMap)
 * @see TextToSpeech#playEarcon(String, int, HashMap)
 * @see TextToSpeech#synthesizeToFile(String, HashMap, String)
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.DEFAULT_STREAM","true","false","false","true","true","int","AudioManager.STREAM_MUSIC","","/**
 * Default audio stream used when playing synthesized speech.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.CHECK_VOICE_DATA_BAD_DATA","true","false","false","true","true","int","-1","","/**
 * Indicates erroneous data when checking the installation status of the resources used by
 * the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.EXTRA_VOICE_DATA_FILES","true","false","false","true","true","String","""dataFiles""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine specifies the file names of its resources under the
 * resource path.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mStartLock","false","false","true","false","true","Object","new Object()","","","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.ACTION_CHECK_TTS_DATA","true","false","false","true","true","String","""android.speech.tts.engine.CHECK_TTS_DATA""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Starts the activity from the platform TextToSpeech
 * engine to verify the proper installation and availability of the
 * resource files on the system. Upon completion, the activity will
 * return one of the following codes:
 * {@link #CHECK_VOICE_DATA_PASS},
 * {@link #CHECK_VOICE_DATA_FAIL},
 * {@link #CHECK_VOICE_DATA_BAD_DATA},
 * {@link #CHECK_VOICE_DATA_MISSING_DATA}, or
 * {@link #CHECK_VOICE_DATA_MISSING_VOLUME}.
 * <p> Moreover, the data received in the activity result will contain the following
 * fields:
 * <ul>
 * <li>{@link #EXTRA_VOICE_DATA_ROOT_DIRECTORY} which
 * indicates the path to the location of the resource files,</li>
 * <li>{@link #EXTRA_VOICE_DATA_FILES} which contains
 * the list of all the resource files,</li>
 * <li>and {@link #EXTRA_VOICE_DATA_FILES_INFO} which
 * contains, for each resource file, the description of the language covered by
 * the file in the xxx-YYY format, where xxx is the 3-letter ISO language code,
 * and YYY is the 3-letter ISO country code.</li>
 * </ul>
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.NB_CACHED_PARAMS","false","true","false","true","true","int","8","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.EXTRA_CHECK_VOICE_DATA_FOR","true","false","false","true","true","String","""checkVoiceDataFor""","","/**
 * Extra information sent with the {@link #ACTION_CHECK_TTS_DATA} intent where the
 * caller indicates to the TextToSpeech engine which specific sets of voice data to
 * check for by sending an ArrayList<String> of the voices that are of interest.
 * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are
 * optional (ie, ""eng"" or ""eng-USA"" or ""eng-USA-FEMALE"").
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.EXTRA_CHECK_VOICE_DATA_FOR","true","false","false","true","true","String","""checkVoiceDataFor""","","/**
 * Extra information sent with the {@link #ACTION_CHECK_TTS_DATA} intent where the
 * caller indicates to the TextToSpeech engine which specific sets of voice data to
 * check for by sending an ArrayList<String> of the voices that are of interest.
 * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are
 * optional (ie, ""eng"" or ""eng-USA"" or ""eng-USA-FEMALE"").
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.DEFAULT_RATE","true","false","false","true","true","int","100","","// 1x
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.EXTRA_TTS_DATA_INSTALLED","true","false","false","true","true","String","""dataInstalled""","","/**
 * Extra information received with the {@link #ACTION_TTS_DATA_INSTALLED} intent.
 * It indicates whether the data files for the synthesis engine were successfully
 * installed. The installation was initiated with the  {@link #ACTION_INSTALL_TTS_DATA}
 * intent. The possible values for this extra are
 * {@link TextToSpeech#SUCCESS} and {@link TextToSpeech#ERROR}.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.LANG_AVAILABLE","true","false","false","true","true","int","0","","/**
 * Denotes the language is available for the language by the locale,
 * but not the country and variant.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.LANG_NOT_SUPPORTED","true","false","false","true","true","int","-2","","/**
 * Denotes the language is not supported.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.ACTION_TTS_DATA_INSTALLED","true","false","false","true","true","String","""android.speech.tts.engine.TTS_DATA_INSTALLED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: broadcast to signal the completion of the installation of
 * the data files used by the synthesis engine. Success or failure is indicated in the
 * {@link #EXTRA_TTS_DATA_INSTALLED} extra.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.PARAM_POSITION_RATE","false","true","false","true","true","int","0","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.LANG_COUNTRY_VAR_AVAILABLE","true","false","false","true","true","int","2","","/**
 * Denotes the language is available exactly as specified by the locale.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.KEY_PARAM_RATE","true","false","false","true","true","String","""rate""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.CHECK_VOICE_DATA_MISSING_DATA","true","false","false","true","true","int","-2","","/**
 * Indicates missing resources when checking the installation status of the resources used
 * by the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.KEY_PARAM_VARIANT","true","false","false","true","true","String","""variant""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.KEY_PARAM_STREAM","true","false","false","true","true","String","""streamType""","","/**
 * Parameter key to specify the audio stream type to be used when speaking text
 * or playing back a file.
 * @see TextToSpeech#speak(String, int, HashMap)
 * @see TextToSpeech#playEarcon(String, int, HashMap)
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.ACTION_CHECK_TTS_DATA","true","false","false","true","true","String","""android.speech.tts.engine.CHECK_TTS_DATA""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Starts the activity from the platform TextToSpeech
 * engine to verify the proper installation and availability of the
 * resource files on the system. Upon completion, the activity will
 * return one of the following codes:
 * {@link #CHECK_VOICE_DATA_PASS},
 * {@link #CHECK_VOICE_DATA_FAIL},
 * {@link #CHECK_VOICE_DATA_BAD_DATA},
 * {@link #CHECK_VOICE_DATA_MISSING_DATA}, or
 * {@link #CHECK_VOICE_DATA_MISSING_VOLUME}.
 * <p> Moreover, the data received in the activity result will contain the following
 * fields:
 * <ul>
 * <li>{@link #EXTRA_VOICE_DATA_ROOT_DIRECTORY} which
 * indicates the path to the location of the resource files,</li>
 * <li>{@link #EXTRA_VOICE_DATA_FILES} which contains
 * the list of all the resource files,</li>
 * <li>and {@link #EXTRA_VOICE_DATA_FILES_INFO} which
 * contains, for each resource file, the description of the language covered by
 * the file in the xxx-YYY format, where xxx is the 3-letter ISO language code,
 * and YYY is the 3-letter ISO country code.</li>
 * </ul>
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.PARAM_POSITION_UTTERANCE_ID","false","true","false","true","true","int","10","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.LANG_COUNTRY_AVAILABLE","true","false","false","true","true","int","1","","/**
 * Denotes the language is available for the language and country specified
 * by the locale, but not the variant.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.CHECK_VOICE_DATA_BAD_DATA","true","false","false","true","true","int","-1","","/**
 * Indicates erroneous data when checking the installation status of the resources used by
 * the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.KEY_PARAM_LANGUAGE","true","false","false","true","true","String","""language""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.DEFAULT_PITCH","true","false","false","true","true","int","100","","// 1x
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.KEY_PARAM_VARIANT","true","false","false","true","true","String","""variant""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.KEY_PARAM_PITCH","true","false","false","true","true","String","""pitch""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.PARAM_POSITION_PITCH","false","true","false","true","true","int","14","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.DEFAULT_STREAM","true","false","false","true","true","int","AudioManager.STREAM_MUSIC","","/**
 * Default audio stream used when playing synthesized speech.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.SUCCESS","true","false","false","true","true","int","0","","/**
 * Denotes a successful operation.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.DEFAULT_SYNTH","true","false","false","true","true","String","""com.svox.pico""","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.PARAM_POSITION_PITCH","false","true","false","true","true","int","14","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.EXTRA_VOICE_DATA_ROOT_DIRECTORY","true","false","false","true","true","String","""dataRoot""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine specifies the path to its resources.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.EXTRA_AVAILABLE_VOICES","true","false","false","true","true","String","""availableVoices""","","/**
 * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent where
 * the TextToSpeech engine returns an ArrayList<String> of all the available voices.
 * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are
 * optional (ie, ""eng"" or ""eng-USA"" or ""eng-USA-FEMALE"").
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.mITtscallback","false","false","true","false","false","ITtsCallback","null","","","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.ACTION_INSTALL_TTS_DATA","true","false","false","true","true","String","""android.speech.tts.engine.INSTALL_TTS_DATA""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Triggers the platform TextToSpeech engine to
 * start the activity that installs the resource files on the device
 * that are required for TTS to be operational. Since the installation
 * of the data can be interrupted or declined by the user, the application
 * shouldn't expect successful installation upon return from that intent,
 * and if need be, should check installation status with
 * {@link #ACTION_CHECK_TTS_DATA}.
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.TextToSpeech.PARAM_POSITION_VARIANT","false","true","false","true","true","int","6","","/**
 * {@hide}
 */
","\android\speech\tts\TextToSpeech.java"
"android.speech.tts.Engine.CHECK_VOICE_DATA_MISSING_VOLUME","true","false","false","true","true","int","-3","","/**
 * Indicates missing storage volume when checking the installation status of the resources
 * used by the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.
 */
","\android\speech\tts\TextToSpeech.java"
"android.gesture.FileGestureLibrary.mPath","false","false","true","false","true","File","","","","\android\gesture\GestureLibraries.java"
"android.gesture.GestureLibraries.mResourceId","false","false","true","false","true","int","","","","\android\gesture\GestureLibraries.java"
"android.gesture.ResourceGestureLibrary.mResourceId","false","false","true","false","true","int","","","","\android\gesture\GestureLibraries.java"
"android.gesture.GestureLibraries.mPath","false","false","true","false","true","File","","","","\android\gesture\GestureLibraries.java"
"android.gesture.ResourceGestureLibrary.mContext","false","false","true","false","true","WeakReference<Context>","","","","\android\gesture\GestureLibraries.java"
"android.gesture.GestureLibraries.mContext","false","false","true","false","true","WeakReference<Context>","","","","\android\gesture\GestureLibraries.java"
"android.widget.AutoCompleteTextView.mAdapter","false","false","true","false","false","ListAdapter","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mObserver","false","false","true","false","false","PopupDataSetObserver","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mPopup","false","false","true","false","false","PopupWindow","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.TAG","false","false","false","true","true","String","""AutoCompleteTextView""","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownAlwaysVisible","false","false","true","false","false","boolean","false","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownDismissedOnCompletion","false","false","true","false","false","boolean","true","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mItemClickListener","false","false","true","false","false","AdapterView.OnItemClickListener","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.DEBUG","false","false","false","true","true","boolean","false","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownItemClickListener","false","false","true","false","true","DropDownItemClickListener","new DropDownItemClickListener()","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mShowDropDownRunnable","false","false","true","false","false","Runnable","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mListSelectionHidden","false","false","true","false","false","boolean","","","/*
         * WARNING: This is a workaround for a touch mode issue.
         *
         * Touch mode is propagated lazily to windows. This causes problems in
         * the following scenario:
         * - Type something in the AutoCompleteTextView and get some results
         * - Move down with the d-pad to select an item in the list
         * - Move up with the d-pad until the selection disappears
         * - Type more text in the AutoCompleteTextView *using the soft keyboard*
         *   and get new results; you are now in touch mode
         * - The selection comes back on the first item in the list, even though
         *   the list is supposed to be in touch mode
         *
         * Using the soft keyboard triggers the touch mode change but that change
         * is propagated to our window only after the first list layout, therefore
         * after the list attempts to resurrect the selection.
         *
         * The trick to work around this issue is to pretend the list is in touch
         * mode when we know that the selection should not appear, that is when
         * we know the user moved the selection away from the list.
         *
         * This boolean is set to true whenever we explicitely hide the list's
         * selection and reset to false whenver we know the user moved the
         * selection back to the list.
         *
         * When this boolean is true, isInTouchMode() returns true, otherwise it
         * returns super.isInTouchMode().
         */
","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mHintResource","false","false","true","false","false","int","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mValidator","false","false","true","false","false","Validator","null","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mLastKeyCode","false","false","true","false","false","int","KeyEvent.KEYCODE_UNKNOWN","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mResizePopupRunnable","false","false","true","false","false","Runnable","new ResizePopupRunnable()","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mHideSelector","false","false","true","false","false","ListSelectorHider","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mPassThroughClickListener","false","false","true","false","false","PassThroughClickListener","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownHeight","false","false","true","false","false","int","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownListHighlight","false","false","true","false","false","Drawable","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownList","false","false","true","false","false","DropDownListView","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownAnchorId","false","false","true","false","false","int","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.PassThroughClickListener.mWrapped","false","false","true","false","false","View.OnClickListener","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mThreshold","false","false","true","false","false","int","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mOpenBefore","false","false","true","false","false","boolean","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mWrapped","false","false","true","false","false","View.OnClickListener","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.DropDownListView.mListSelectionHidden","false","false","true","false","false","boolean","","","/*
         * WARNING: This is a workaround for a touch mode issue.
         *
         * Touch mode is propagated lazily to windows. This causes problems in
         * the following scenario:
         * - Type something in the AutoCompleteTextView and get some results
         * - Move down with the d-pad to select an item in the list
         * - Move up with the d-pad until the selection disappears
         * - Type more text in the AutoCompleteTextView *using the soft keyboard*
         *   and get new results; you are now in touch mode
         * - The selection comes back on the first item in the list, even though
         *   the list is supposed to be in touch mode
         *
         * Using the soft keyboard triggers the touch mode change but that change
         * is propagated to our window only after the first list layout, therefore
         * after the list attempts to resurrect the selection.
         *
         * The trick to work around this issue is to pretend the list is in touch
         * mode when we know that the selection should not appear, that is when
         * we know the user moved the selection away from the list.
         *
         * This boolean is set to true whenever we explicitely hide the list's
         * selection and reset to false whenver we know the user moved the
         * selection back to the list.
         *
         * When this boolean is true, isInTouchMode() returns true, otherwise it
         * returns super.isInTouchMode().
         */
","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownWidth","false","false","true","false","false","int","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownHorizontalOffset","false","false","true","false","false","int","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.EXPAND_LIST_TIMEOUT","false","false","true","true","true","int","250","","/**
 * This value controls the length of time that the user
 * must leave a pointer down without scrolling to expand
 * the autocomplete dropdown list to cover the IME.
 */
","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.HINT_VIEW_ID","false","false","true","true","true","int","0x17","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mFilter","false","false","true","false","false","Filter","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownVerticalOffset","false","false","true","false","false","int","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mTempRect","false","false","true","false","true","Rect","new Rect()","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mDropDownAnchorView","false","false","true","false","false","View","","","// view is retrieved lazily from id once needed
","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mItemSelectedListener","false","false","true","false","false","AdapterView.OnItemSelectedListener","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mBlockCompletion","false","false","true","false","false","boolean","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mHintText","false","false","true","false","false","CharSequence","","","","\android\widget\AutoCompleteTextView.java"
"android.widget.AutoCompleteTextView.mForceIgnoreOutsideTouch","false","false","true","false","false","boolean","false","","","\android\widget\AutoCompleteTextView.java"
"android.os.PerformanceCollector.METRIC_KEY_RECEIVED_TRANSACTIONS","true","false","false","true","true","String","""received_transactions""","","/**
 * In a snapshot Bundle, this key reports the number of received
 * transactions from the binder driver.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.mPerfSnapshot","false","false","true","false","false","Bundle","","","","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_OTHER_PRIVATE_DIRTY","true","false","false","true","true","String","""other_private_dirty""","","/**
 * In a snapshot Bundle, this key reports the number of private dirty pages
 * used by everything else.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_JAVA_FREE","true","false","false","true","true","String","""java_free""","","/**
 * In a snapshot Bundle, this key reports the amount of free memory
 * available to the running program.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_GLOBAL_FREED_SIZE","true","false","false","true","true","String","""global_freed_size""","","/**
 * In a snapshot Bundle, this key reports the size of all objects freed
 * globally.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_SENT_TRANSACTIONS","true","false","false","true","true","String","""sent_transactions""","","/**
 * In a snapshot Bundle, this key reports the number of transactions sent by
 * the running program.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_PRE_RECEIVED_TRANSACTIONS","true","false","false","true","true","String","""pre_received_transactions""","","/**
 * In a snapshot Bundle, this key reports the number of received
 * transactions from the binder driver before collection started.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.mExecTime","false","false","true","false","false","long","","","","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_GLOBAL_ALLOC_COUNT","true","false","false","true","true","String","""global_alloc_count""","","/**
 * In a snapshot Bundle, this key reports the number of objects allocated
 * globally.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_NATIVE_SIZE","true","false","false","true","true","String","""native_size""","","/**
 * In a snapshot Bundle, this key reports the size of the native heap.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_JAVA_SIZE","true","false","false","true","true","String","""java_size""","","/**
 * In a snapshot Bundle, this key reports the total amount of memory
 * available to the running program.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_JAVA_PSS","true","false","false","true","true","String","""java_pss""","","/**
 * In a snapshot Bundle, this key reports the proportional set size for
 * dalvik.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_NATIVE_PRIVATE_DIRTY","true","false","false","true","true","String","""native_private_dirty""","","/**
 * In a snapshot Bundle, this key reports the number of private dirty pages
 * used by the native heap.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_JAVA_PRIVATE_DIRTY","true","false","false","true","true","String","""java_private_dirty""","","/**
 * In a snapshot Bundle, this key reports the number of private dirty pages
 * used by dalvik.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_NATIVE_SHARED_DIRTY","true","false","false","true","true","String","""native_shared_dirty""","","/**
 * In a snapshot Bundle, this key reports the number of shared dirty pages
 * used by the native heap.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_GC_INVOCATION_COUNT","true","false","false","true","true","String","""gc_invocation_count""","","/**
 * In a snapshot Bundle, this key reports the number of garbage collection
 * invocations.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.mPerfWriter","false","false","true","false","false","PerformanceResultsWriter","","","","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_PRE_SENT_TRANSACTIONS","true","false","false","true","true","String","""pre_sent_transactions""","","/**
 * In a snapshot Bundle, this key reports the number of transactions sent by
 * the running program before collection started.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_GLOBAL_FREED_COUNT","true","false","false","true","true","String","""global_freed_count""","","/**
 * In a snapshot Bundle, this key reports the number of objects freed
 * globally.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_JAVA_ALLOCATED","true","false","false","true","true","String","""java_allocated""","","/**
 * In a snapshot Bundle, this key reports the amount of allocated memory
 * used by the running program.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_JAVA_SHARED_DIRTY","true","false","false","true","true","String","""java_shared_dirty""","","/**
 * In a snapshot Bundle, this key reports the number of shared dirty pages
 * used by dalvik.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_ITERATIONS","true","false","false","true","true","String","""iterations""","","/**
 * In a results Bundle, this key references a List of iteration Bundles.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.mPerfMeasurement","false","false","true","false","false","Bundle","","","","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_OTHER_SHARED_DIRTY","true","false","false","true","true","String","""other_shared_dirty""","","/**
 * In a snapshot Bundle, this key reports the number of shared dirty pages
 * used by everything else.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.mSnapshotCpuTime","false","false","true","false","false","long","","","","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_EXECUTION_TIME","true","false","false","true","true","String","""execution_time""","","/**
 * In a results Bundle, this key reports the execution time of the code
 * block under measurement.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_NATIVE_PSS","true","false","false","true","true","String","""native_pss""","","/**
 * In a snapshot Bundle, this key reports the proportional set size for the
 * native heap.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.mCpuTime","false","false","true","false","false","long","","","","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.mSnapshotExecTime","false","false","true","false","false","long","","","","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_GLOBAL_ALLOC_SIZE","true","false","false","true","true","String","""global_alloc_size""","","/**
 * In a snapshot Bundle, this key reports the size of all objects allocated
 * globally.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_NATIVE_FREE","true","false","false","true","true","String","""native_free""","","/**
 * In a snapshot Bundle, this key reports the amount of free memory in the
 * native heap.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_OTHER_PSS","true","false","false","true","true","String","""other_pss""","","/**
 * In a snapshot Bundle, this key reports the proportional set size for
 * everything else.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_CPU_TIME","true","false","false","true","true","String","""cpu_time""","","/**
 * In a results Bundle, this key reports the cpu time of the code block
 * under measurement.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_LABEL","true","false","false","true","true","String","""label""","","/**
 * In an iteration Bundle, this key describes the iteration.
 */
","\android\os\PerformanceCollector.java"
"android.os.PerformanceCollector.METRIC_KEY_NATIVE_ALLOCATED","true","false","false","true","true","String","""native_allocated""","","/**
 * In a snapshot Bundle, this key reports the amount of allocated memory in
 * the native heap.
 */
","\android\os\PerformanceCollector.java"
"com.android.internal.view.BaseIWindow.mSession","false","false","true","false","false","IWindowSession","","","","\com\android\internal\view\BaseIWindow.java"
"android.widget.GridView.NO_STRETCH","true","false","false","true","true","int","0","","","\android\widget\GridView.java"
"android.widget.GridView.mTempRect","false","false","true","false","true","Rect","new Rect()","","","\android\widget\GridView.java"
"android.widget.GridView.mRequestedNumColumns","false","false","true","false","false","int","","","","\android\widget\GridView.java"
"android.widget.GridView.mReferenceViewInSelectedRow","false","false","true","false","false","View","null","","","\android\widget\GridView.java"
"android.widget.GridView.STRETCH_COLUMN_WIDTH","true","false","false","true","true","int","2","","","\android\widget\GridView.java"
"android.widget.GridView.mNumColumns","false","false","true","false","false","int","AUTO_FIT","","","\android\widget\GridView.java"
"android.widget.GridView.STRETCH_SPACING","true","false","false","true","true","int","1","","","\android\widget\GridView.java"
"android.widget.GridView.mRequestedHorizontalSpacing","false","false","true","false","false","int","","","","\android\widget\GridView.java"
"android.widget.GridView.mStretchMode","false","false","true","false","false","int","STRETCH_COLUMN_WIDTH","","","\android\widget\GridView.java"
"android.widget.GridView.mVerticalSpacing","false","false","true","false","false","int","0","","","\android\widget\GridView.java"
"android.widget.GridView.mGravity","false","false","true","false","false","int","Gravity.LEFT","","","\android\widget\GridView.java"
"android.widget.GridView.mRequestedColumnWidth","false","false","true","false","false","int","","","","\android\widget\GridView.java"
"android.widget.GridView.mHorizontalSpacing","false","false","true","false","false","int","0","","","\android\widget\GridView.java"
"android.widget.GridView.mReferenceView","false","false","true","false","false","View","null","","","\android\widget\GridView.java"
"android.widget.GridView.STRETCH_SPACING_UNIFORM","true","false","false","true","true","int","3","","","\android\widget\GridView.java"
"android.widget.GridView.AUTO_FIT","true","false","false","true","true","int","-1","","","\android\widget\GridView.java"
"android.widget.GridView.mColumnWidth","false","false","true","false","false","int","","","","\android\widget\GridView.java"
"android.util.XmlPullAttributes.mParser","false","false","true","false","false","XmlPullParser","","","","\android\util\XmlPullAttributes.java"
"android.widget.ViewFlipper.TAG","false","false","true","true","true","String","""ViewFlipper""","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.DEFAULT_INTERVAL","false","false","true","true","true","int","3000","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.mReceiver","false","false","true","false","true","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        final String action = intent.getAction();
        if (Intent.ACTION_SCREEN_OFF.equals(action)) {
            mUserPresent = false;
            updateRunning();
        } else if (Intent.ACTION_USER_PRESENT.equals(action)) {
            mUserPresent = true;
            updateRunning();
        }
    }
}","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.mAutoStart","false","false","true","false","false","boolean","false","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.mVisible","false","false","true","false","false","boolean","false","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.mUserPresent","false","false","true","false","false","boolean","true","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.mHandler","false","false","true","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        if (msg.what == FLIP_MSG) {
            if (mRunning) {
                showNext();
                msg = obtainMessage(FLIP_MSG);
                sendMessageDelayed(msg, mFlipInterval);
            }
        }
    }
}","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.FLIP_MSG","false","false","true","false","true","int","1","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.mStarted","false","false","true","false","false","boolean","false","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.mFlipInterval","false","false","true","false","false","int","DEFAULT_INTERVAL","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.LOGD","false","false","true","true","true","boolean","false","","","\android\widget\ViewFlipper.java"
"android.widget.ViewFlipper.mRunning","false","false","true","false","false","boolean","false","","","\android\widget\ViewFlipper.java"
"android.content.ComponentName.mClass","false","false","true","false","true","String","","","","\android\content\ComponentName.java"
"android.content.ComponentName.mPackage","false","false","true","false","true","String","","","","\android\content\ComponentName.java"
"android.content.ComponentName.CREATOR","true","false","false","true","true","Parcelable.Creator<ComponentName>","new Parcelable.Creator<ComponentName>() {

    public ComponentName createFromParcel(Parcel in) {
        return new ComponentName(in);
    }

    public ComponentName[] newArray(int size) {
        return new ComponentName[size];
    }
}","","","\android\content\ComponentName.java"
"android.content.pm.ResolveInfo.activityInfo","true","false","false","false","false","ActivityInfo","","","/**
 * The activity that corresponds to this resolution match, if this
 * resolution is for an activity.  One and only one of this and
 * serviceInfo must be non-null.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.DisplayNameComparator.sCollator","false","false","true","false","true","Collator","Collator.getInstance()","","","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.CREATOR","true","false","false","true","true","Creator<ResolveInfo>","new Creator<ResolveInfo>() {

    public ResolveInfo createFromParcel(Parcel source) {
        return new ResolveInfo(source);
    }

    public ResolveInfo[] newArray(int size) {
        return new ResolveInfo[size];
    }
}","","","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.isDefault","true","false","false","false","false","boolean","","","/**
 * This filter has specified the Intent.CATEGORY_DEFAULT, meaning it
 * would like to be considered a default action that the user can
 * perform on this data.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.serviceInfo","true","false","false","false","false","ServiceInfo","","","/**
 * The service that corresponds to this resolution match, if this
 * resolution is for a service. One and only one of this and
 * activityInfo must be non-null.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.match","true","false","false","false","false","int","","","/**
 * The system's evaluation of how well the activity matches the
 * IntentFilter.  This is a match constant, a combination of
 * {@link IntentFilter#MATCH_CATEGORY_MASK IntentFilter.MATCH_CATEGORY_MASK}
 * and {@link IntentFilter#MATCH_ADJUSTMENT_MASK IntentFiler.MATCH_ADJUSTMENT_MASK}.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.labelRes","true","false","false","false","false","int","","","/**
 * A string resource identifier (in the package's resources) of this
 * match's label.  From the ""label"" attribute or, if not set, 0.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.DisplayNameComparator.mPM","false","false","true","false","false","PackageManager","","","","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.priority","true","false","false","false","false","int","","","/**
 * The declared priority of this match.  Comes from the ""priority""
 * attribute or, if not set, defaults to 0.  Higher values are a higher
 * priority.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.preferredOrder","true","false","false","false","false","int","","","/**
 * Order of result according to the user's preference.  If the user
 * has not set a preference for this result, the value is 0; higher
 * values are a higher priority.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.specificIndex","true","false","false","false","false","int","-1","","/**
 * Only set when returned by
 * {@link PackageManager#queryIntentActivityOptions}, this tells you
 * which of the given specific intents this result came from.  0 is the
 * first in the list, < 0 means it came from the generic Intent query.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.filter","true","false","false","false","false","IntentFilter","","","/**
 * The IntentFilter that was matched for this ResolveInfo.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.mPM","false","false","true","false","false","PackageManager","","","","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.sCollator","false","false","true","false","true","Collator","Collator.getInstance()","","","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.resolvePackageName","true","false","false","false","false","String","","","/**
 * Optional -- if non-null, the {@link #labelRes} and {@link #icon}
 * resources will be loaded from this package, rather than the one
 * containing the resolved component.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.nonLocalizedLabel","true","false","false","false","false","CharSequence","","","/**
 * The actual string retrieve from <var>labelRes</var> or null if none
 * was provided.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.pm.ResolveInfo.icon","true","false","false","false","false","int","","","/**
 * A drawable resource identifier (in the package's resources) of this
 * match's icon.  From the ""icon"" attribute or, if not set, 0.
 */
","\android\content\pm\ResolveInfo.java"
"android.content.res.Configuration.KEYBOARDHIDDEN_YES","true","false","false","true","true","int","2","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_TYPE_CAR","true","false","false","true","true","int","0x03","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_NIGHT_MASK","true","false","false","true","true","int","0x30","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.ORIENTATION_LANDSCAPE","true","false","false","true","true","int","2","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.NAVIGATION_UNDEFINED","true","false","false","true","true","int","0","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.NAVIGATION_DPAD","true","false","false","true","true","int","2","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.navigation","true","false","false","false","false","int","","","/**
 * The kind of navigation method available on the device.
 * One of: {@link #NAVIGATION_NONAV}, {@link #NAVIGATION_DPAD},
 * {@link #NAVIGATION_TRACKBALL}, {@link #NAVIGATION_WHEEL}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.orientation","true","false","false","false","false","int","","","/**
 * Overall orientation of the screen.  May be one of
 * {@link #ORIENTATION_LANDSCAPE}, {@link #ORIENTATION_PORTRAIT},
 * or {@link #ORIENTATION_SQUARE}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_SIZE_LARGE","true","false","false","true","true","int","0x03","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.TOUCHSCREEN_UNDEFINED","true","false","false","true","true","int","0","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.KEYBOARD_12KEY","true","false","false","true","true","int","3","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.TOUCHSCREEN_FINGER","true","false","false","true","true","int","3","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.NAVIGATION_WHEEL","true","false","false","true","true","int","4","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.keyboardHidden","true","false","false","false","false","int","","","/**
 * A flag indicating whether any keyboard is available.  Unlike
 * {@link #hardKeyboardHidden}, this also takes into account a soft
 * keyboard, so if the hard keyboard is hidden but there is soft
 * keyboard available, it will be set to NO.  Value is one of:
 * {@link #KEYBOARDHIDDEN_NO}, {@link #KEYBOARDHIDDEN_YES}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.keyboard","true","false","false","false","false","int","","","/**
 * The kind of keyboard attached to the device.
 * One of: {@link #KEYBOARD_NOKEYS}, {@link #KEYBOARD_QWERTY},
 * {@link #KEYBOARD_12KEY}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.KEYBOARD_UNDEFINED","true","false","false","true","true","int","0","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.navigationHidden","true","false","false","false","false","int","","","/**
 * A flag indicating whether any 5-way or DPAD navigation available.
 * This will be set on a device with a mechanism to hide the navigation
 * controls from the user, when that mechanism is closed.  One of:
 * {@link #NAVIGATIONHIDDEN_NO}, {@link #NAVIGATIONHIDDEN_YES}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.KEYBOARD_NOKEYS","true","false","false","true","true","int","1","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_LONG_YES","true","false","false","true","true","int","0x20","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.mnc","true","false","false","false","false","int","","","/**
 * IMSI MNC (Mobile Network Code).  0 if undefined.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.KEYBOARDHIDDEN_NO","true","false","false","true","true","int","1","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_TYPE_UNDEFINED","true","false","false","true","true","int","0x00","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_SIZE_MASK","true","false","false","true","true","int","0x0f","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_TYPE_MASK","true","false","false","true","true","int","0x0f","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.CREATOR","true","false","false","true","true","Parcelable.Creator<Configuration>","new Parcelable.Creator<Configuration>() {

    public Configuration createFromParcel(Parcel source) {
        return new Configuration(source);
    }

    public Configuration[] newArray(int size) {
        return new Configuration[size];
    }
}","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.KEYBOARDHIDDEN_SOFT","true","false","false","true","true","int","3","","/**
 * Constant matching actual resource implementation. {@hide}
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.NAVIGATIONHIDDEN_YES","true","false","false","true","true","int","2","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.ORIENTATION_UNDEFINED","true","false","false","true","true","int","0","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.screenLayout","true","false","false","false","false","int","","","/**
 * Bit mask of overall layout of the screen.  Currently there are two
 * fields:
 * <p>The {@link #SCREENLAYOUT_SIZE_MASK} bits define the overall size
 * of the screen.  They may be one of
 * {@link #SCREENLAYOUT_SIZE_SMALL}, {@link #SCREENLAYOUT_SIZE_NORMAL},
 * or {@link #SCREENLAYOUT_SIZE_LARGE}.
 *
 * <p>The {@link #SCREENLAYOUT_LONG_MASK} defines whether the screen
 * is wider/taller than normal.  They may be one of
 * {@link #SCREENLAYOUT_LONG_NO} or {@link #SCREENLAYOUT_LONG_YES}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.touchscreen","true","false","false","false","false","int","","","/**
 * The kind of touch screen attached to the device.
 * One of: {@link #TOUCHSCREEN_NOTOUCH}, {@link #TOUCHSCREEN_STYLUS},
 * {@link #TOUCHSCREEN_FINGER}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.KEYBOARDHIDDEN_UNDEFINED","true","false","false","true","true","int","0","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_LONG_MASK","true","false","false","true","true","int","0x30","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.HARDKEYBOARDHIDDEN_YES","true","false","false","true","true","int","2","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_TYPE_DESK","true","false","false","true","true","int","0x02","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.uiMode","true","false","false","false","false","int","","","/**
 * Bit mask of the ui mode.  Currently there are two fields:
 * <p>The {@link #UI_MODE_TYPE_MASK} bits define the overall ui mode of the
 * device. They may be one of {@link #UI_MODE_TYPE_UNDEFINED},
 * {@link #UI_MODE_TYPE_NORMAL}, {@link #UI_MODE_TYPE_DESK},
 * or {@link #UI_MODE_TYPE_CAR}.
 *
 * <p>The {@link #UI_MODE_NIGHT_MASK} defines whether the screen
 * is in a special mode. They may be one of {@link #UI_MODE_NIGHT_UNDEFINED},
 * {@link #UI_MODE_NIGHT_NO} or {@link #UI_MODE_NIGHT_YES}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_NIGHT_YES","true","false","false","true","true","int","0x20","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_NIGHT_UNDEFINED","true","false","false","true","true","int","0x00","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_SIZE_SMALL","true","false","false","true","true","int","0x01","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.HARDKEYBOARDHIDDEN_UNDEFINED","true","false","false","true","true","int","0","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.TOUCHSCREEN_STYLUS","true","false","false","true","true","int","2","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.hardKeyboardHidden","true","false","false","false","false","int","","","/**
 * A flag indicating whether the hard keyboard has been hidden.  This will
 * be set on a device with a mechanism to hide the keyboard from the
 * user, when that mechanism is closed.  One of:
 * {@link #HARDKEYBOARDHIDDEN_NO}, {@link #HARDKEYBOARDHIDDEN_YES}.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.NAVIGATION_TRACKBALL","true","false","false","true","true","int","3","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.ORIENTATION_PORTRAIT","true","false","false","true","true","int","1","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.NAVIGATION_NONAV","true","false","false","true","true","int","1","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.NAVIGATIONHIDDEN_NO","true","false","false","true","true","int","1","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.seq","true","false","false","false","false","int","","","/**
 * @hide Internal book-keeping.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.fontScale","true","false","false","false","false","float","","","/**
 * Current user preference for the scaling factor for fonts, relative
 * to the base density scaling.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.ORIENTATION_SQUARE","true","false","false","true","true","int","3","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.locale","true","false","false","false","false","Locale","","","/**
 * Current user preference for the locale.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.KEYBOARD_QWERTY","true","false","false","true","true","int","2","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_NIGHT_NO","true","false","false","true","true","int","0x10","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_COMPAT_NEEDED","true","false","false","true","true","int","0x10000000","","/**
 * Special flag we generate to indicate that the screen layout requires
 * us to use a compatibility mode for apps that are not modern layout
 * aware.
 * @hide
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_LONG_UNDEFINED","true","false","false","true","true","int","0x00","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_SIZE_UNDEFINED","true","false","false","true","true","int","0x00","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.NAVIGATIONHIDDEN_UNDEFINED","true","false","false","true","true","int","0","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.userSetLocale","true","false","false","false","false","boolean","","","/**
 * Locale should persist on setting.  This is hidden because it is really
 * questionable whether this is the right way to expose the functionality.
 * @hide
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_SIZE_NORMAL","true","false","false","true","true","int","0x02","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.mcc","true","false","false","false","false","int","","","/**
 * IMSI MCC (Mobile Country Code).  0 if undefined.
 */
","\android\content\res\Configuration.java"
"android.content.res.Configuration.TOUCHSCREEN_NOTOUCH","true","false","false","true","true","int","1","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.SCREENLAYOUT_LONG_NO","true","false","false","true","true","int","0x10","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.HARDKEYBOARDHIDDEN_NO","true","false","false","true","true","int","1","","","\android\content\res\Configuration.java"
"android.content.res.Configuration.UI_MODE_TYPE_NORMAL","true","false","false","true","true","int","0x01","","","\android\content\res\Configuration.java"
"android.speech.RecognitionService.mInternalService","false","false","true","false","false","RecognitionService","","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.SERVICE_INTERFACE","true","false","false","true","true","String","""android.speech.RecognitionService""","@SdkConstant(SdkConstantType.SERVICE_ACTION)","/**
 * The {@link Intent} that must be declared as handled by the service.
 */
","\android\speech\RecognitionService.java"
"android.speech.StartListeningArgs.mListener","true","false","false","false","true","IRecognitionListener","","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.DBG","false","false","true","true","true","boolean","false","","/**
 * Debugging flag
 */
","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.mCurrentCallback","false","false","true","false","false","Callback","null","","/**
 * The current callback of an application that invoked the
 * {@link RecognitionService#onStartListening(Intent, Callback)} method
 */
","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.mListener","false","false","true","false","true","IRecognitionListener","","","","\android\speech\RecognitionService.java"
"android.speech.StartListeningArgs.mIntent","true","false","false","false","true","Intent","","","","\android\speech\RecognitionService.java"
"android.speech.Callback.mListener","false","false","true","false","true","IRecognitionListener","","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.mHandler","false","false","true","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        switch(msg.what) {
            case MSG_START_LISTENING:
                StartListeningArgs args = (StartListeningArgs) msg.obj;
                dispatchStartListening(args.mIntent, args.mListener);
                break;
            case MSG_STOP_LISTENING:
                dispatchStopListening((IRecognitionListener) msg.obj);
                break;
            case MSG_CANCEL:
                dispatchCancel((IRecognitionListener) msg.obj);
        }
    }
}","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionServiceBinder.mInternalService","false","false","true","false","false","RecognitionService","","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.MSG_START_LISTENING","false","false","true","true","true","int","1","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.MSG_CANCEL","false","false","true","true","true","int","3","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.MSG_STOP_LISTENING","false","false","true","true","true","int","2","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.mIntent","true","false","false","false","true","Intent","","","","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.mBinder","false","false","true","false","false","RecognitionServiceBinder","new RecognitionServiceBinder(this)","","/**
 * Binder of the recognition service
 */
","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.SERVICE_META_DATA","true","false","false","true","true","String","""android.speech""","","/**
 * Name under which a RecognitionService component publishes information about itself.
 * This meta-data should reference an XML resource containing a
 * <code>&lt;{@link android.R.styleable#RecognitionService recognition-service}&gt;</code> tag.
 */
","\android\speech\RecognitionService.java"
"android.speech.RecognitionService.TAG","false","false","true","true","true","String","""RecognitionService""","","/**
 * Log messages identifier
 */
","\android\speech\RecognitionService.java"
"android.net.http.HttpAuthHeader.mRealm","false","false","true","false","false","String","","","/**
 * A string to be displayed to users so they know which username and
 * password to use.
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.UNKNOWN","true","false","false","true","true","int","0","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mUsername","false","false","true","false","false","String","","","/**
 * Username string we get from the user.
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.BASIC","true","false","false","true","true","int","1","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mQop","false","false","true","false","false","String","","","/**
 * This directive is optional, but is made so only for backward
 * compatibility with RFC 2069 [6]; it SHOULD be used by all
 * implementations compliant with this version of the Digest scheme.
 * If present, it is a quoted string of one or more tokens indicating
 * the ""quality of protection"" values supported by the server.  The
 * value ""auth"" indicates authentication; the value ""auth-int""
 * indicates authentication with integrity protection.
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.OPAQUE_TOKEN","false","false","true","true","true","String","""opaque""","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.REALM_TOKEN","false","false","true","true","true","String","""realm""","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.QOP_TOKEN","false","false","true","true","true","String","""qop""","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mIsProxy","false","false","true","false","false","boolean","","","/**
 * Is this authentication request a proxy authentication request?
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.STALE_TOKEN","false","false","true","true","true","String","""stale""","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mAlgorithm","false","false","true","false","false","String","","","/**
 * A string indicating a pair of algorithms used to produce the digest
 * and a checksum. If this is not present it is assumed to be ""MD5"".
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.DIGEST_TOKEN","true","false","false","true","true","String","""Digest""","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.BASIC_TOKEN","true","false","false","true","true","String","""Basic""","","/**
 * Possible HTTP-authentication header tokens to search for:
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.ALGORITHM_TOKEN","false","false","true","true","true","String","""algorithm""","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mStale","false","false","true","false","false","boolean","","","/**
 * A flag, indicating that the previous request from the client was
 * rejected because the nonce value was stale. If stale is TRUE
 * (case-insensitive), the client may wish to simply retry the request
 * with a new encrypted response, without reprompting the user for a
 * new username and password.
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mOpaque","false","false","true","false","false","String","","","/**
 * A string of data, specified by the server, which should be returned
 * by the client unchanged in the Authorization header of subsequent
 * requests with URIs in the same protection space.
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mPassword","false","false","true","false","false","String","","","/**
 * Password string we get from the user.
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mScheme","false","false","true","false","false","int","","","/**
 * An authentication scheme. We currently support two different schemes:
 * HttpAuthHeader.BASIC  - basic, and
 * HttpAuthHeader.DIGEST - digest (algorithm=MD5, QOP=""auth"").
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.mNonce","false","false","true","false","false","String","","","/**
 * A server-specified data string which should be uniquely generated
 * each time a 401 response is made.
 */
","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.NONCE_TOKEN","false","false","true","true","true","String","""nonce""","","","\android\net\http\HttpAuthHeader.java"
"android.net.http.HttpAuthHeader.DIGEST","true","false","false","true","true","int","2","","","\android\net\http\HttpAuthHeader.java"
"android.text.style.URLSpan.mURL","false","false","true","false","true","String","","","","\android\text\style\URLSpan.java"
"android.preference.VolumePreference.mVolumeStore","false","false","false","false","false","VolumeStore","new VolumeStore()","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mSeekBar","false","false","true","false","false","SeekBar","","","","\android\preference\VolumePreference.java"
"android.preference.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mContext","false","false","true","false","false","Context","","","","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mLastProgress","false","false","true","false","false","int","-1","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.originalVolume","true","false","false","false","false","int","-1","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mAudioManager","false","false","true","false","false","AudioManager","","","","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mRingtone","false","false","true","false","false","Ringtone","","","","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mHandler","false","false","true","false","false","Handler","new Handler()","","","\android\preference\VolumePreference.java"
"android.preference.SavedState.mVolumeStore","false","false","false","false","false","VolumeStore","new VolumeStore()","","","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mVolumeObserver","false","false","true","false","false","ContentObserver","new ContentObserver(mHandler) {

    @Override
    public void onChange(boolean selfChange) {
        super.onChange(selfChange);
        if (mSeekBar != null) {
            int volume = System.getInt(mContext.getContentResolver(), System.VOLUME_SETTINGS[mStreamType], -1);
            // TODO: Fix the actual issue, probably in AudioService
            if (volume >= 0) {
                mSeekBar.setProgress(volume);
            }
        }
    }
}","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.TAG","false","false","true","true","true","String","""VolumePreference""","","","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mOriginalStreamVolume","false","false","true","false","false","int","","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mOriginalStreamVolume","false","false","true","false","false","int","","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mVolumeObserver","false","false","true","false","false","ContentObserver","new ContentObserver(mHandler) {

    @Override
    public void onChange(boolean selfChange) {
        super.onChange(selfChange);
        if (mSeekBar != null) {
            int volume = System.getInt(mContext.getContentResolver(), System.VOLUME_SETTINGS[mStreamType], -1);
            // TODO: Fix the actual issue, probably in AudioService
            if (volume >= 0) {
                mSeekBar.setProgress(volume);
            }
        }
    }
}","","","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mAudioManager","false","false","true","false","false","AudioManager","","","","\android\preference\VolumePreference.java"
"android.preference.VolumeStore.volume","true","false","false","false","false","int","-1","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mSeekBarVolumizer","false","false","true","false","false","SeekBarVolumizer","","","/**
 * May be null if the dialog isn't visible.
 */
","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mContext","false","false","true","false","false","Context","","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mHandler","false","false","true","false","false","Handler","new Handler()","","","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mSeekBar","false","false","true","false","false","SeekBar","","","","\android\preference\VolumePreference.java"
"android.preference.VolumeStore.originalVolume","true","false","false","false","false","int","-1","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mLastProgress","false","false","true","false","false","int","-1","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mStreamType","false","false","true","false","false","int","","","","\android\preference\VolumePreference.java"
"android.preference.SeekBarVolumizer.mStreamType","false","false","true","false","false","int","","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.volume","true","false","false","false","false","int","-1","","","\android\preference\VolumePreference.java"
"android.preference.VolumePreference.mRingtone","false","false","true","false","false","Ringtone","","","","\android\preference\VolumePreference.java"
"android.os.ServiceManager.TAG","false","false","true","true","true","String","""ServiceManager""","","","\android\os\ServiceManager.java"
"android.os.ServiceManager.sCache","false","false","true","true","false","HashMap<String,IBinder>","new HashMap<String, IBinder>()","","","\android\os\ServiceManager.java"
"android.os.ServiceManager.sServiceManager","false","false","true","true","false","IServiceManager","","","","\android\os\ServiceManager.java"
"android.view.animation.GridLayoutAnimationController.mDirection","false","false","true","false","false","int","","","","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.mDirectionPriority","false","false","true","false","false","int","","","","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.DIRECTION_RIGHT_TO_LEFT","true","false","false","true","true","int","0x1","","/**
 * Animates the children starting from the right of the grid to the left.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.AnimationParameters.columnsCount","true","false","false","false","false","int","","","/**
 * The number of columns in the view's enclosing grid layout.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.columnsCount","true","false","false","false","false","int","","","/**
 * The number of columns in the view's enclosing grid layout.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.DIRECTION_TOP_TO_BOTTOM","true","false","false","true","true","int","0x0","","/**
 * Animates the children starting from the top of the grid to the bottom.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.DIRECTION_LEFT_TO_RIGHT","true","false","false","true","true","int","0x0","","/**
 * Animates the children starting from the left of the grid to the right.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.mRowDelay","false","false","true","false","false","float","","","","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.PRIORITY_NONE","true","false","false","true","true","int","0","","/**
 * Rows and columns are animated at the same time.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.DIRECTION_HORIZONTAL_MASK","true","false","false","true","true","int","0x1","","/**
 * Bitmask used to retrieve the horizontal component of the direction.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.row","true","false","false","false","false","int","","","/**
 * The view group's row to which the view belongs.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.AnimationParameters.column","true","false","false","false","false","int","","","/**
 * The view group's column to which the view belongs.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.column","true","false","false","false","false","int","","","/**
 * The view group's column to which the view belongs.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.DIRECTION_VERTICAL_MASK","true","false","false","true","true","int","0x2","","/**
 * Bitmask used to retrieve the vertical component of the direction.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.mColumnDelay","false","false","true","false","false","float","","","","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.PRIORITY_ROW","true","false","false","true","true","int","2","","/**
 * Rows are animated first.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.AnimationParameters.rowsCount","true","false","false","false","false","int","","","/**
 * The number of rows in the view's enclosing grid layout.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.rowsCount","true","false","false","false","false","int","","","/**
 * The number of rows in the view's enclosing grid layout.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.DIRECTION_BOTTOM_TO_TOP","true","false","false","true","true","int","0x2","","/**
 * Animates the children starting from the bottom of the grid to the top.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.AnimationParameters.row","true","false","false","false","false","int","","","/**
 * The view group's row to which the view belongs.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.animation.GridLayoutAnimationController.PRIORITY_COLUMN","true","false","false","true","true","int","1","","/**
 * Columns are animated first.
 */
","\android\view\animation\GridLayoutAnimationController.java"
"android.view.SurfaceSession.mClient","false","false","true","false","false","int","","","","\android\view\SurfaceSession.java"
"android.hardware.SensorManager.SENSOR_ORIENTATION_RAW","true","false","false","true","true","int","1 << 7","@Deprecated","/**
 * A constant describing an orientation sensor.
 * See {@link android.hardware.SensorListener SensorListener} for more details.
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_LIGHT","true","false","false","true","true","int","1 << 4","@Deprecated","/**
 * A constant describing an ambient light sensor
 * See {@link android.hardware.SensorListener SensorListener} for more details.
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_MERCURY","true","false","false","true","true","float","3.70f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.sListeners","false","false","false","true","true","ArrayList<ListenerDelegate>","new ArrayList<ListenerDelegate>()","","","\android\hardware\SensorManager.java"
"android.hardware.LegacyListener.mValues","false","false","true","false","false","float","new float[6]","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.PREDICTION_TIME","false","false","true","true","true","float","(SENSORS_RATE_MS * COUNT / 1000.0f) * PREDICTION_RATIO","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mValuesPool","false","false","true","false","false","SensorEvent","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.LIGHT_CLOUDY","true","false","false","true","true","float","100.0f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.DATA_Y","true","false","false","true","true","int","1","@Deprecated","/**
 * Index of the Y value in the array returned by
 * {@link android.hardware.SensorListener#onSensorChanged}
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.DATA_Z","true","false","false","true","true","int","2","@Deprecated","/**
 * Index of the Z value in the array returned by
 * {@link android.hardware.SensorListener#onSensorChanged}
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.DATA_X","true","false","false","true","true","int","0","@Deprecated","/**
 * Index of the X value in the array returned by
 * {@link android.hardware.SensorListener#onSensorChanged}
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.LmsFilter.PREDICTION_RATIO","false","false","true","true","true","float","1.0f / 3.0f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.LIGHT_SUNRISE","true","false","false","true","true","float","400.0f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mSensorList","false","false","true","false","true","ArrayList<Sensor>","new ArrayList<Sensor>()","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.AXIS_MINUS_Y","true","false","false","true","true","int","AXIS_Y | 0x80","","/**
 * see {@link #remapCoordinateSystem}
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.AXIS_MINUS_Z","true","false","false","true","true","int","AXIS_Z | 0x80","","/**
 * see {@link #remapCoordinateSystem}
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.AXIS_MINUS_X","true","false","false","true","true","int","AXIS_X | 0x80","","/**
 * see {@link #remapCoordinateSystem}
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mSensors","false","false","true","false","false","int","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_PROXIMITY","true","false","false","true","true","int","1 << 5","@Deprecated","/**
 * A constant describing a proximity sensor
 * See {@link android.hardware.SensorListener SensorListener} for more details.
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.ListenerDelegate.mSensorList","false","false","true","false","true","ArrayList<Sensor>","new ArrayList<Sensor>()","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.RAW_DATA_INDEX","true","false","false","true","true","int","3","@Deprecated","/**
 * Offset to the untransformed values in the array returned by
 * {@link android.hardware.SensorListener#onSensorChanged}
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.ListenerDelegate.mValuesPool","false","false","true","false","false","SensorEvent","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_MARS","true","false","false","true","true","float","3.71f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.LIGHT_SUNLIGHT","true","false","false","true","true","float","110000.0f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_URANUS","true","false","false","true","true","float","8.69f","","","\android\hardware\SensorManager.java"
"android.hardware.ListenerDelegate.mSensorEventListener","false","false","false","false","true","SensorEventListener","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_DELAY_FASTEST","true","false","false","true","true","int","0","","/**
 * get sensor data as fast as possible
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_ORIENTATION","true","false","false","true","true","int","1 << 0","@Deprecated","/**
 * A constant describing an orientation sensor.
 * See {@link android.hardware.SensorListener SensorListener} for more details.
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.LegacyListener.mTarget","false","false","true","false","false","SensorListener","","@SuppressWarnings(""deprecation"")","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_STATUS_ACCURACY_LOW","true","false","false","true","true","int","1","","/**
 * This sensor is reporting data with low accuracy, calibration with the
 * environment is needed
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.sWindowManager","false","false","true","true","false","IWindowManager","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_MOON","true","false","false","true","true","float","1.6f","","","\android\hardware\SensorManager.java"
"android.hardware.ListenerDelegate.mSensors","true","false","false","false","false","int","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mHandler","false","false","true","false","true","Handler","","","","\android\hardware\SensorManager.java"
"android.hardware.ListenerDelegate.mHandler","false","false","true","false","true","Handler","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mIndex","false","false","true","false","false","int","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mYawfilter","false","false","true","false","true","LmsFilter","new LmsFilter()","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_MAX","true","false","false","true","true","int","((SENSOR_ALL + 1) >> 1)","@Deprecated","/**
 * Largest sensor ID
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_TEMPERATURE","true","false","false","true","true","int","1 << 2","@Deprecated","/**
 * A constant describing a temperature sensor
 * See {@link android.hardware.SensorListener SensorListener} for more details.
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_NEPTUNE","true","false","false","true","true","float","11.0f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.sRotation","false","false","true","true","false","int","Surface.ROTATION_0","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_STATUS_ACCURACY_MEDIUM","true","false","false","true","true","int","2","","/**
 * This sensor is reporting data with an average level of accuracy,
 * calibration with the environment may improve the readings
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mTarget","false","false","true","false","false","SensorListener","","@SuppressWarnings(""deprecation"")","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mValues","false","false","true","false","false","float","new float[6]","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.sSensorModuleInitialized","false","false","true","true","false","boolean","false","","","\android\hardware\SensorManager.java"
"android.hardware.LmsFilter.COUNT","false","false","true","true","true","int","12","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.TAG","false","false","true","true","true","String","""SensorManager""","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_SATURN","true","false","false","true","true","float","8.96f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_ALL","true","false","false","true","true","int","0x7F","@Deprecated","/**
 * A constant that includes all sensors
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.LegacyListener.mSensors","false","false","true","false","false","int","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.LIGHT_SUNLIGHT_MAX","true","false","false","true","true","float","120000.0f","","/**
 * Various luminance values during the day (lux)
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mT","false","false","true","false","false","float","new float[COUNT * 2]","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mV","false","false","true","false","false","float","new float[COUNT * 2]","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_STATUS_UNRELIABLE","true","false","false","true","true","int","0","","/**
 * The values returned by this sensor cannot be trusted, calibration
 * is needed or the environment doesn't allow readings
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.AXIS_Z","true","false","false","true","true","int","3","","/**
 * see {@link #remapCoordinateSystem}
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.AXIS_Y","true","false","false","true","true","int","2","","/**
 * see {@link #remapCoordinateSystem}
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.AXIS_X","true","false","false","true","true","int","1","","/**
 * see {@link #remapCoordinateSystem}
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_DISABLE","false","false","true","true","true","int","-1","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.STANDARD_GRAVITY","true","false","false","true","true","float","9.80665f","","/**
 * Standard gravity (g) on Earth. This value is equivalent to 1G
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mSensorsReady","false","false","false","false","false","boolean","","","","\android\hardware\SensorManager.java"
"android.hardware.LmsFilter.mV","false","false","true","false","false","float","new float[COUNT * 2]","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_MIN","true","false","false","true","true","int","SENSOR_ORIENTATION","@Deprecated","/**
 * Smallest sensor ID
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.LmsFilter.mT","false","false","true","false","false","float","new float[COUNT * 2]","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.RAW_DATA_X","true","false","false","true","true","int","3","@Deprecated","/**
 * Index of the untransformed X value in the array returned by
 * {@link android.hardware.SensorListener#onSensorChanged}
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.RAW_DATA_Y","true","false","false","true","true","int","4","@Deprecated","/**
 * Index of the untransformed Y value in the array returned by
 * {@link android.hardware.SensorListener#onSensorChanged}
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.RAW_DATA_Z","true","false","false","true","true","int","5","@Deprecated","/**
 * Index of the untransformed Z value in the array returned by
 * {@link android.hardware.SensorListener#onSensorChanged}
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mLegacyListenersMap","false","false","true","false","false","HashMap<SensorListener,LegacyListener>","new HashMap<SensorListener, LegacyListener>()","@SuppressWarnings(""deprecation"")","","\android\hardware\SensorManager.java"
"android.hardware.SensorThreadRunnable.mDataChannel","false","false","true","false","false","Bundle","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_DELAY_NORMAL","true","false","false","true","true","int","3","","/**
 * rate (default) suitable for screen orientation changes
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.LIGHT_SHADE","true","false","false","true","true","float","20000.0f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mTempMatrix","false","false","true","true","true","float","new float[16]","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.MAGNETIC_FIELD_EARTH_MAX","true","false","false","true","true","float","60.0f","","/**
 * Maximum magnetic field on Earth's surface
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_TRICORDER","true","false","false","true","true","int","1 << 6","@Deprecated","/**
 * A constant describing a Tricorder
 * See {@link android.hardware.SensorListener SensorListener} for more details.
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.LmsFilter.PREDICTION_TIME","false","false","true","true","true","float","(SENSORS_RATE_MS * COUNT / 1000.0f) * PREDICTION_RATIO","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mSensorService","false","false","true","false","false","ISensorService","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_JUPITER","true","false","false","true","true","float","23.12f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.sFullSensorsList","false","false","true","true","false","ArrayList<Sensor>","new ArrayList<Sensor>()","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.LIGHT_NO_MOON","true","false","false","true","true","float","0.001f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_THE_ISLAND","true","false","false","true","true","float","4.815162342f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_SUN","true","false","false","true","true","float","275.0f","","/**
 * values returned by the accelerometer in various locations in the universe.
 * all values are in SI units (m/s^2)
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_EARTH","true","false","false","true","true","float","9.80665f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.PREDICTION_RATIO","false","false","true","true","true","float","1.0f / 3.0f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.COUNT","false","false","true","true","true","int","12","","","\android\hardware\SensorManager.java"
"android.hardware.LmsFilter.SENSORS_RATE_MS","false","false","true","true","true","int","20","","","\android\hardware\SensorManager.java"
"android.hardware.SensorThread.mDataChannel","false","false","true","false","false","Bundle","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mThread","false","false","false","false","false","Thread","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.LIGHT_FULLMOON","true","false","false","true","true","float","0.25f","","/**
 * Various luminance values during the night (lux)
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.sSensorThread","false","false","true","true","false","SensorThread","","","/* The thread and the sensor list are global to the process
     * but the actual thread is spawned on demand */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.MAGNETIC_FIELD_EARTH_MIN","true","false","false","true","true","float","30.0f","","/**
 * Minimum magnetic field on Earth's surface
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorThread.mSensorsReady","false","false","false","false","false","boolean","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.LIGHT_OVERCAST","true","false","false","true","true","float","10000.0f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorThread.mThread","false","false","false","false","false","Thread","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_DELAY_UI","true","false","false","true","true","int","2","","/**
 * rate suitable for the user interface
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_DELAY_GAME","true","false","false","true","true","int","1","","/**
 * rate suitable for games
 */
","\android\hardware\SensorManager.java"
"android.hardware.LegacyListener.mYawfilter","false","false","true","false","true","LmsFilter","new LmsFilter()","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_DEATH_STAR_I","true","false","false","true","true","float","0.000000353036145f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mDataChannel","false","false","true","false","false","Bundle","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_ACCELEROMETER","true","false","false","true","true","int","1 << 1","@Deprecated","/**
 * A constant describing an accelerometer.
 * See {@link android.hardware.SensorListener SensorListener} for more details.
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.sHandleToSensor","false","false","false","true","false","SparseArray<Sensor>","new SparseArray<Sensor>()","","// Used within this module from outside SensorManager, don't make private
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_VENUS","true","false","false","true","true","float","8.87f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mSensorEventListener","false","false","false","false","true","SensorEventListener","","","","\android\hardware\SensorManager.java"
"android.hardware.LmsFilter.mIndex","false","false","true","false","false","int","","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.GRAVITY_PLUTO","true","false","false","true","true","float","0.6f","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSORS_RATE_MS","false","false","true","true","true","int","20","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_MAGNETIC_FIELD","true","false","false","true","true","int","1 << 3","@Deprecated","/**
 * A constant describing a magnetic sensor
 * See {@link android.hardware.SensorListener SensorListener} for more details.
 * @deprecated use {@link android.hardware.Sensor Sensor} instead.
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.SENSOR_STATUS_ACCURACY_HIGH","true","false","false","true","true","int","3","","/**
 * This sensor is reporting data with maximum accuracy
 */
","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.sSensorListByType","false","false","true","true","false","SparseArray<List<Sensor>>","new SparseArray<List<Sensor>>()","","","\android\hardware\SensorManager.java"
"android.hardware.SensorManager.mMainLooper","false","false","false","false","false","Looper","","","","\android\hardware\SensorManager.java"
"android.provider.BookmarkColumns.USER_ENTERED","true","false","false","true","true","String","""user_entered""","","/**
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.TRUNCATE_HISTORY_PROJECTION_ID_INDEX","true","false","false","true","true","int","0","","","\android\provider\Browser.java"
"android.provider.Browser.TRUNCATE_N_OLDEST","true","false","false","true","true","int","5","","/* truncate this many history items at a time */
","\android\provider\Browser.java"
"android.provider.Browser.TRUNCATE_HISTORY_PROJECTION","true","false","false","true","true","String","new String[] { BookmarkColumns._ID, BookmarkColumns.DATE }","","/* columns needed to determine whether to truncate history */
","\android\provider\Browser.java"
"android.provider.BookmarkColumns.BOOKMARK","true","false","false","true","true","String","""bookmark""","","","\android\provider\Browser.java"
"android.provider.Browser.CREATED","true","false","false","true","true","String","""created""","","","\android\provider\Browser.java"
"android.provider.SearchColumns.DATE","true","false","false","true","true","String","""date""","","","\android\provider\Browser.java"
"android.provider.Browser.EXTRA_SHARE_SCREENSHOT","true","false","false","true","true","String","""share_screenshot""","","/**
 * Stores a Bitmap extra in an {@link Intent} representing the screenshot of
 * a page to share.  When receiving an {@link Intent#ACTION_SEND} from the
 * Browser, use this to access the screenshot.
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_VISITS_INDEX","true","false","false","true","true","int","2","","","\android\provider\Browser.java"
"android.provider.Browser.VISITS","true","false","false","true","true","String","""visits""","","","\android\provider\Browser.java"
"android.provider.Browser.SEARCHES_WHERE_CLAUSE","false","false","true","true","true","String","""search = ?""","","","\android\provider\Browser.java"
"android.provider.Browser.FAVICON","true","false","false","true","true","String","""favicon""","","","\android\provider\Browser.java"
"android.provider.BookmarkColumns.TOUCH_ICON","true","false","false","true","true","String","""touch_icon""","","/**
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.URL","true","false","false","true","true","String","""url""","","","\android\provider\Browser.java"
"android.provider.Browser.MAX_HISTORY_COUNT","false","false","true","true","true","int","250","","/* Set a cap on the count of history items in the history/bookmark
       table, to prevent db and layout operations from dragging to a
       crawl.  Revisit this cap when/if db/layout performance
       improvements are made.  Note: this does not affect bookmark
       entries -- if the user wants more bookmarks than the cap, they
       get them. */
","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_ID_INDEX","true","false","false","true","true","int","0","","/* these indices dependent on HISTORY_PROJECTION */
","\android\provider\Browser.java"
"android.provider.SearchColumns.SEARCH","true","false","false","true","true","String","""search""","","","\android\provider\Browser.java"
"android.provider.Browser.SEARCHES_PROJECTION","true","false","false","true","true","String","new String[] { SearchColumns._ID, SearchColumns.SEARCH, SearchColumns.DATE }","","/* if you change column order you must also change indices
       below */
","\android\provider\Browser.java"
"android.provider.BookmarkColumns.URL","true","false","false","true","true","String","""url""","","","\android\provider\Browser.java"
"android.provider.Browser.INITIAL_ZOOM_LEVEL","true","false","false","true","true","String","""browser.initialZoomLevel""","","/**
 * The name of extra data when starting Browser with ACTION_VIEW or
 * ACTION_SEARCH intent.
 * <p>
 * The value should be an integer between 0 and 1000. If not set or set to
 * 0, the Browser will use default. If set to 100, the Browser will start
 * with 100%.
 */
","\android\provider\Browser.java"
"android.provider.Browser.SEARCHES_PROJECTION_SEARCH_INDEX","true","false","false","true","true","int","1","","/* these indices dependent on SEARCHES_PROJECTION */
","\android\provider\Browser.java"
"android.provider.Browser.SEARCHES_URI","true","false","false","true","true","Uri","Uri.parse(""content://browser/searches"")","","","\android\provider\Browser.java"
"android.provider.Browser.TITLE","true","false","false","true","true","String","""title""","","","\android\provider\Browser.java"
"android.provider.Browser.EXTRA_HEADERS","true","false","false","true","true","String","""com.android.browser.headers""","","/**
 * The name of the extra data in the VIEW intent. The data are key/value
 * pairs in the format of Bundle. They will be sent in the HTTP request
 * headers for the provided url. The keys can't be the standard HTTP headers
 * as they are set by the WebView. The url's schema must be http(s).
 * <p>
 */
","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_FAVICON_INDEX","true","false","false","true","true","int","6","","","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_DATE_INDEX","true","false","false","true","true","int","3","","","\android\provider\Browser.java"
"android.provider.SearchColumns.URL","true","false","false","true","true","String","""url""","","","\android\provider\Browser.java"
"android.provider.Browser.TOUCH_ICON","true","false","false","true","true","String","""touch_icon""","","/**
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION","true","false","false","true","true","String","new String[] { BookmarkColumns._ID, BookmarkColumns.URL, BookmarkColumns.VISITS, BookmarkColumns.DATE, BookmarkColumns.BOOKMARK, BookmarkColumns.TITLE, BookmarkColumns.FAVICON, BookmarkColumns.THUMBNAIL, BookmarkColumns.TOUCH_ICON, BookmarkColumns.USER_ENTERED }","","/* if you change column order you must also change indices
       below */
","\android\provider\Browser.java"
"android.provider.Browser.BOOKMARKS_URI","true","false","false","true","true","Uri","Uri.parse(""content://browser/bookmarks"")","","","\android\provider\Browser.java"
"android.provider.Browser.USER_ENTERED","true","false","false","true","true","String","""user_entered""","","/**
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.EXTRA_SHARE_FAVICON","true","false","false","true","true","String","""share_favicon""","","/**
 * Stores a Bitmap extra in an {@link Intent} representing the favicon of a
 * page to share.  When receiving an {@link Intent#ACTION_SEND} from the
 * Browser, use this to access the favicon.
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.BookmarkColumns.TITLE","true","false","false","true","true","String","""title""","","","\android\provider\Browser.java"
"android.provider.Browser.EXTRA_APPLICATION_ID","true","false","false","true","true","String","""com.android.browser.application_id""","","/**
 * The name of the extra data when starting the Browser from another
 * application.
 * <p>
 * The value is a unique identification string that will be used to
 * indentify the calling application. The Browser will attempt to reuse the
 * same window each time the application launches the Browser with the same
 * identifier.
 */
","\android\provider\Browser.java"
"android.provider.Browser.SEARCHES_PROJECTION_DATE_INDEX","true","false","false","true","true","int","2","","","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_TOUCH_ICON_INDEX","true","false","false","true","true","int","8","","/**
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.DATE","true","false","false","true","true","String","""date""","","","\android\provider\Browser.java"
"android.provider.BookmarkColumns.FAVICON","true","false","false","true","true","String","""favicon""","","","\android\provider\Browser.java"
"android.provider.Browser.SEARCH","true","false","false","true","true","String","""search""","","","\android\provider\Browser.java"
"android.provider.BookmarkColumns.VISITS","true","false","false","true","true","String","""visits""","","","\android\provider\Browser.java"
"android.provider.BookmarkColumns.THUMBNAIL","true","false","false","true","true","String","""thumbnail""","","/**
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_TITLE_INDEX","true","false","false","true","true","int","5","","","\android\provider\Browser.java"
"android.provider.BookmarkColumns.CREATED","true","false","false","true","true","String","""created""","","","\android\provider\Browser.java"
"android.provider.BookmarkColumns.DATE","true","false","false","true","true","String","""date""","","","\android\provider\Browser.java"
"android.provider.Browser.BOOKMARK","true","false","false","true","true","String","""bookmark""","","","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_BOOKMARK_INDEX","true","false","false","true","true","int","4","","","\android\provider\Browser.java"
"android.provider.Browser.LOGTAG","false","false","true","true","true","String","""browser""","","","\android\provider\Browser.java"
"android.provider.Browser.THUMBNAIL","true","false","false","true","true","String","""thumbnail""","","/**
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_THUMBNAIL_INDEX","true","false","false","true","true","int","7","","/**
 * @hide
 */
","\android\provider\Browser.java"
"android.provider.Browser.HISTORY_PROJECTION_URL_INDEX","true","false","false","true","true","int","1","","","\android\provider\Browser.java"
"android.text.style.TextAppearanceSpan.mTextColor","false","false","true","false","true","ColorStateList","","","","\android\text\style\TextAppearanceSpan.java"
"android.text.style.TextAppearanceSpan.mTypeface","false","false","true","false","true","String","","","","\android\text\style\TextAppearanceSpan.java"
"android.text.style.TextAppearanceSpan.mTextSize","false","false","true","false","true","int","","","","\android\text\style\TextAppearanceSpan.java"
"android.text.style.TextAppearanceSpan.mTextColorLink","false","false","true","false","true","ColorStateList","","","","\android\text\style\TextAppearanceSpan.java"
"android.text.style.TextAppearanceSpan.mStyle","false","false","true","false","true","int","","","","\android\text\style\TextAppearanceSpan.java"
"android.text.TextUtils.sTemp","false","false","true","true","false","char","null","","","\android\text\TextUtils.java"
"android.text.TextUtils.TEXT_APPEARANCE_SPAN","true","false","false","true","true","int","17","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.STRIKETHROUGH_SPAN","true","false","false","true","true","int","5","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.FOREGROUND_COLOR_SPAN","true","false","false","true","true","int","2","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.CAP_MODE_CHARACTERS","true","false","false","true","true","int","InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS","","/**
 * Capitalization mode for {@link #getCapsMode}: capitalize all
 * characters.  This value is explicitly defined to be the same as
 * {@link InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}.
 */
","\android\text\TextUtils.java"
"android.text.SimpleStringSplitter.mPosition","false","false","true","false","false","int","","","","\android\text\TextUtils.java"
"android.text.TextUtils.CHAR_SEQUENCE_CREATOR","true","false","false","true","true","Parcelable.Creator<CharSequence>","new Parcelable.Creator<CharSequence>() {

    /**
     * Read and return a new CharSequence, possibly with styles,
     * from the parcel.
     */
    public CharSequence createFromParcel(Parcel p) {
        int kind = p.readInt();
        if (kind == 1)
            return p.readString();
        SpannableString sp = new SpannableString(p.readString());
        while (true) {
            kind = p.readInt();
            if (kind == 0)
                break;
            switch(kind) {
                case ALIGNMENT_SPAN:
                    readSpan(p, sp, new AlignmentSpan.Standard(p));
                    break;
                case FOREGROUND_COLOR_SPAN:
                    readSpan(p, sp, new ForegroundColorSpan(p));
                    break;
                case RELATIVE_SIZE_SPAN:
                    readSpan(p, sp, new RelativeSizeSpan(p));
                    break;
                case SCALE_X_SPAN:
                    readSpan(p, sp, new ScaleXSpan(p));
                    break;
                case STRIKETHROUGH_SPAN:
                    readSpan(p, sp, new StrikethroughSpan(p));
                    break;
                case UNDERLINE_SPAN:
                    readSpan(p, sp, new UnderlineSpan(p));
                    break;
                case STYLE_SPAN:
                    readSpan(p, sp, new StyleSpan(p));
                    break;
                case BULLET_SPAN:
                    readSpan(p, sp, new BulletSpan(p));
                    break;
                case QUOTE_SPAN:
                    readSpan(p, sp, new QuoteSpan(p));
                    break;
                case LEADING_MARGIN_SPAN:
                    readSpan(p, sp, new LeadingMarginSpan.Standard(p));
                    break;
                case URL_SPAN:
                    readSpan(p, sp, new URLSpan(p));
                    break;
                case BACKGROUND_COLOR_SPAN:
                    readSpan(p, sp, new BackgroundColorSpan(p));
                    break;
                case TYPEFACE_SPAN:
                    readSpan(p, sp, new TypefaceSpan(p));
                    break;
                case SUPERSCRIPT_SPAN:
                    readSpan(p, sp, new SuperscriptSpan(p));
                    break;
                case SUBSCRIPT_SPAN:
                    readSpan(p, sp, new SubscriptSpan(p));
                    break;
                case ABSOLUTE_SIZE_SPAN:
                    readSpan(p, sp, new AbsoluteSizeSpan(p));
                    break;
                case TEXT_APPEARANCE_SPAN:
                    readSpan(p, sp, new TextAppearanceSpan(p));
                    break;
                case ANNOTATION:
                    readSpan(p, sp, new Annotation(p));
                    break;
                default:
                    throw new RuntimeException(""bogus span encoding "" + kind);
            }
        }
        return sp;
    }

    public CharSequence[] newArray(int size) {
        return new CharSequence[size];
    }
}","","","\android\text\TextUtils.java"
"android.text.TextUtils.mStart","false","false","true","false","false","int","","","","\android\text\TextUtils.java"
"android.text.TextUtils.ABSOLUTE_SIZE_SPAN","true","false","false","true","true","int","16","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.ANNOTATION","true","false","false","true","true","int","18","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.TYPEFACE_SPAN","true","false","false","true","true","int","13","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.LEADING_MARGIN_SPAN","true","false","false","true","true","int","10","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.STYLE_SPAN","true","false","false","true","true","int","7","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.sEllipsis","false","false","true","true","false","String","null","","","\android\text\TextUtils.java"
"android.text.TextUtils.mEnd","false","false","true","false","false","int","","","","\android\text\TextUtils.java"
"android.text.TextUtils.mSource","false","false","true","false","false","CharSequence","","","","\android\text\TextUtils.java"
"android.text.TextUtils.mDelimiter","false","false","true","false","false","char","","","","\android\text\TextUtils.java"
"android.text.SimpleStringSplitter.mString","false","false","true","false","false","String","","","","\android\text\TextUtils.java"
"android.text.TextUtils.mString","false","false","true","false","false","String","","","","\android\text\TextUtils.java"
"android.text.TextUtils.BULLET_SPAN","true","false","false","true","true","int","8","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.Reverser.mSource","false","false","true","false","false","CharSequence","","","","\android\text\TextUtils.java"
"android.text.TextUtils.mLength","false","false","true","false","false","int","","","","\android\text\TextUtils.java"
"android.text.TextUtils.SUPERSCRIPT_SPAN","true","false","false","true","true","int","14","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.SimpleStringSplitter.mLength","false","false","true","false","false","int","","","","\android\text\TextUtils.java"
"android.text.TextUtils.QUOTE_SPAN","true","false","false","true","true","int","9","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.ALIGNMENT_SPAN","true","false","false","true","true","int","1","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.URL_SPAN","true","false","false","true","true","int","11","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.SCALE_X_SPAN","true","false","false","true","true","int","4","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.UNDERLINE_SPAN","true","false","false","true","true","int","6","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.BACKGROUND_COLOR_SPAN","true","false","false","true","true","int","12","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.Reverser.mEnd","false","false","true","false","false","int","","","","\android\text\TextUtils.java"
"android.text.TextUtils.CAP_MODE_SENTENCES","true","false","false","true","true","int","InputType.TYPE_TEXT_FLAG_CAP_SENTENCES","","/**
 * Capitalization mode for {@link #getCapsMode}: capitalize the first
 * character of each sentence.  This value is explicitly defined to be the same as
 * {@link InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}.
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.CAP_MODE_WORDS","true","false","false","true","true","int","InputType.TYPE_TEXT_FLAG_CAP_WORDS","","/**
 * Capitalization mode for {@link #getCapsMode}: capitalize the first
 * character of all words.  This value is explicitly defined to be the same as
 * {@link InputType#TYPE_TEXT_FLAG_CAP_WORDS}.
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.RELATIVE_SIZE_SPAN","true","false","false","true","true","int","3","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.EMPTY_STRING_ARRAY","false","false","true","true","false","String","new String[] {}","","","\android\text\TextUtils.java"
"android.text.SimpleStringSplitter.mDelimiter","false","false","true","false","false","char","","","","\android\text\TextUtils.java"
"android.text.Reverser.mStart","false","false","true","false","false","int","","","","\android\text\TextUtils.java"
"android.text.TextUtils.SUBSCRIPT_SPAN","true","false","false","true","true","int","15","","/**
 * @hide
 */
","\android\text\TextUtils.java"
"android.text.TextUtils.mPosition","false","false","true","false","false","int","","","","\android\text\TextUtils.java"
"android.text.TextUtils.sLock","false","false","true","true","false","Object","new Object()","","","\android\text\TextUtils.java"
"com.android.internal.app.AlertParams.mInflater","true","false","false","false","true","LayoutInflater","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mViewSpacingSpecified","true","false","false","false","false","boolean","false","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mLabelIndex","false","false","true","false","true","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mNeutralButtonListener","true","false","false","false","false","DialogInterface.OnClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mViewSpacingTop","true","false","false","false","false","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mMessage","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mTitle","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mPositiveButtonText","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mOnCancelListener","true","false","false","false","false","DialogInterface.OnCancelListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonNegativeText","false","false","true","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mIsSingleChoice","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonPositiveMessage","false","false","true","false","false","Message","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mOnCancelListener","true","false","false","false","false","DialogInterface.OnCancelListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mView","true","false","false","false","false","View","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mOnItemSelectedListener","true","false","false","false","false","AdapterView.OnItemSelectedListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mNegativeButtonText","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mView","true","false","false","false","false","View","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mOnCheckboxClickListener","true","false","false","false","false","DialogInterface.OnMultiChoiceClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mNegativeButtonListener","true","false","false","false","false","DialogInterface.OnClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mNeutralButtonText","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mHandler","false","false","true","false","false","Handler","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mViewSpacingRight","true","false","false","false","false","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mCustomTitleView","true","false","false","false","false","View","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mPositiveButtonText","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mRecycleOnMeasure","true","false","false","false","false","boolean","true","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mAdapter","true","false","false","false","false","ListAdapter","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mOnKeyListener","true","false","false","false","false","DialogInterface.OnKeyListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mViewSpacingLeft","true","false","false","false","false","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mIsCheckedIndex","false","false","true","false","true","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mItems","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mCheckedItem","true","false","false","false","false","int","-1","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.ButtonHandler.mDialog","false","false","true","false","false","WeakReference<DialogInterface>","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonNeutral","false","false","true","false","false","Button","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mCheckedItems","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mLabelIndex","false","false","true","false","true","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mCustomTitleView","true","false","false","false","false","View","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mIconView","false","false","true","false","false","ImageView","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.MSG_DISMISS_DIALOG","false","false","true","true","true","int","1","","// Button clicks have Message.what as the BUTTON{1,2,3} constant
","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mViewSpacingTop","true","false","false","false","false","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mTitleView","false","false","true","false","false","TextView","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mCursor","true","false","false","false","false","Cursor","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mDialogInterface","false","false","true","false","true","DialogInterface","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mCheckedItems","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mContext","true","false","false","false","true","Context","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mOnKeyListener","true","false","false","false","false","DialogInterface.OnKeyListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mOnClickListener","true","false","false","false","false","DialogInterface.OnClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mViewSpacingSpecified","true","false","false","false","false","boolean","false","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mContext","true","false","false","false","true","Context","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mCursor","true","false","false","false","false","Cursor","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mIsCheckedColumn","true","false","false","false","false","String","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mViewSpacingBottom","true","false","false","false","false","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mOnPrepareListViewListener","true","false","false","false","false","OnPrepareListViewListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonNegative","false","false","true","false","false","Button","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonPositive","false","false","true","false","false","Button","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mCheckedItem","true","false","false","false","false","int","-1","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mNeutralButtonListener","true","false","false","false","false","DialogInterface.OnClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonNeutralText","false","false","true","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mForceInverseBackground","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mIcon","true","false","false","false","false","Drawable","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mItems","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mMessage","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mInflater","true","false","false","false","true","LayoutInflater","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mOnPrepareListViewListener","true","false","false","false","false","OnPrepareListViewListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonNeutralMessage","false","false","true","false","false","Message","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mMessageView","false","false","true","false","false","TextView","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mLabelColumn","true","false","false","false","false","String","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mPositiveButtonListener","true","false","false","false","false","DialogInterface.OnClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mIsCheckedColumn","true","false","false","false","false","String","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mLabelColumn","true","false","false","false","false","String","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.RecycleListView.mRecycleOnMeasure","false","false","false","false","false","boolean","true","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonPositiveText","false","false","true","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mViewSpacingBottom","true","false","false","false","false","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mNeutralButtonText","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonHandler","false","false","false","false","false","View.OnClickListener","new View.OnClickListener() {

    public void onClick(View v) {
        Message m = null;
        if (v == mButtonPositive && mButtonPositiveMessage != null) {
            m = Message.obtain(mButtonPositiveMessage);
        } else if (v == mButtonNegative && mButtonNegativeMessage != null) {
            m = Message.obtain(mButtonNegativeMessage);
        } else if (v == mButtonNeutral && mButtonNeutralMessage != null) {
            m = Message.obtain(mButtonNeutralMessage);
        }
        if (m != null) {
            m.sendToTarget();
        }
        // Post a message so we dismiss after the above handlers are executed
        mHandler.obtainMessage(ButtonHandler.MSG_DISMISS_DIALOG, mDialogInterface).sendToTarget();
    }
}","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mIsSingleChoice","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mViewSpacingRight","true","false","false","false","false","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mIsCheckedIndex","false","false","true","false","true","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mDialog","false","false","true","false","false","WeakReference<DialogInterface>","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mTitle","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mIconId","true","false","false","false","false","int","-1","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mIsMultiChoice","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mCancelable","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mRecycleOnMeasure","true","false","false","false","false","boolean","true","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mOnCheckboxClickListener","true","false","false","false","false","DialogInterface.OnMultiChoiceClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mForceInverseBackground","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mViewSpacingLeft","true","false","false","false","false","int","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mScrollView","false","false","true","false","false","ScrollView","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mIcon","true","false","false","false","false","Drawable","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mAdapter","true","false","false","false","false","ListAdapter","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mIconId","true","false","false","false","false","int","-1","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mButtonNegativeMessage","false","false","true","false","false","Message","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mOnItemSelectedListener","true","false","false","false","false","AdapterView.OnItemSelectedListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mOnClickListener","true","false","false","false","false","DialogInterface.OnClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.ButtonHandler.MSG_DISMISS_DIALOG","false","false","true","true","true","int","1","","// Button clicks have Message.what as the BUTTON{1,2,3} constant
","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertParams.mPositiveButtonListener","true","false","false","false","false","DialogInterface.OnClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mNegativeButtonListener","true","false","false","false","false","DialogInterface.OnClickListener","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mCancelable","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mIsMultiChoice","true","false","false","false","false","boolean","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mWindow","false","false","true","false","true","Window","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mNegativeButtonText","true","false","false","false","false","CharSequence","","","","\com\android\internal\app\AlertController.java"
"com.android.internal.app.AlertController.mListView","false","false","true","false","false","ListView","","","","\com\android\internal\app\AlertController.java"
"android.provider.System.SETTINGS_CLASSNAME","true","false","false","true","true","String","Secure.SETTINGS_CLASSNAME","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#SETTINGS_CLASSNAME} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.ENHANCED_VOICE_PRIVACY_ENABLED","true","false","false","true","true","String","""enhanced_voice_privacy_enabled""","","/**
 * Whether the enhanced voice privacy mode is enabled.
 * 0 = normal voice privacy
 * 1 = enhanced voice privacy
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TETHER_DUN_REQUIRED","true","false","false","true","true","String","""tether_dun_required""","","/**
 * Used to require DUN APN on the device or not - defaults to a build config value
 * which defaults to false
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.CDMA_SUBSCRIPTION_MODE","true","false","false","true","true","String","""subscription_mode""","","/**
 * The CDMA subscription mode 0 = RUIM/SIM (default)
 * 1 = NV
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTS_DEFAULT_SYNTH","true","false","false","true","true","String","""tts_default_synth""","","/**
 * Default text-to-speech engine.
 */
","\android\provider\Settings.java"
"android.provider.System.SHOW_PROCESSES","true","false","false","true","true","String","""show_processes""","","/**
 * Control whether the process CPU usage meter should be shown.
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_MAX_RESULTS_TO_DISPLAY","true","false","false","true","true","String","""search_max_results_to_display""","","/**
 * The maximum number of suggestions returned by GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_MIN_IMPRESSIONS_FOR_SOURCE_RANKING","true","false","false","true","true","String","""search_min_impressions_for_source_ranking""","","/**
 * The minimum number of impressions needed to rank a source in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_IDLE_MS","true","false","false","true","true","String","""wifi_idle_ms""","","/**
 * The interval in milliseconds after which Wi-Fi is considered idle.
 * When idle, it is possible for the device to be switched from Wi-Fi to
 * the mobile data network.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_MIN_ALARM","true","false","false","true","true","String","""memcheck_min_alarm""","","/**
 * How much time there must be until the next alarm in order to kill processes
 * or reboot.  This number is in seconds.  Note: this value must be
 * smaller than {@link #MEMCHECK_RECHECK_INTERVAL} or else it will
 * always see an alarm scheduled within its time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.AIRPLANE_MODE_TOGGLEABLE_RADIOS","true","false","false","true","true","String","""airplane_mode_toggleable_radios""","","/**
 * A comma separated list of radios that should to be disabled when airplane mode
 * is on, but can be manually reenabled by the user.  For example, if RADIO_WIFI is
 * added to both AIRPLANE_MODE_RADIOS and AIRPLANE_MODE_TOGGLEABLE_RADIOS, then Wifi
 * will be turned off when entering airplane mode, but the user will be able to reenable
 * Wifi in the Settings app.
 *
 * {@hide}
 */
","\android\provider\Settings.java"
"android.provider.Secure.LOCK_PATTERN_ENABLED","true","false","false","true","true","String","""lock_pattern_autolock""","","/**
 * Whether autolock is enabled (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.NameValueCache.SELECT_VALUE","false","false","true","true","true","String","new String[] { Settings.NameValueTable.VALUE }","","","\android\provider\Settings.java"
"android.provider.Settings.mValues","false","false","true","false","true","HashMap<String,String>","new HashMap<String, String>()","","// Must synchronize on 'this' to access mValues and mValuesVersion.
","\android\provider\Settings.java"
"android.provider.System.HTTP_PROXY","true","false","false","true","true","String","Secure.HTTP_PROXY","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#HTTP_PROXY} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.DROPBOX_MAX_FILES","true","false","false","true","true","String","""dropbox_max_files""","","/**
 * Maximum number of entry files which {@link android.os.IDropBox} will keep around.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SMS_OUTGOING_CHECK_MAX_COUNT","true","false","false","true","true","String","""sms_outgoing_check_max_count""","","/**
 * The number of outgoing SMS sent without asking for user permit
 * (of {@link #SMS_OUTGOING_CHECK_INTERVAL_MS}
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.DESK_DOCK_SOUND","true","false","false","true","true","String","""desk_dock_sound""","","/**
 * URI for the desk dock ""in"" event sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.NITZ_UPDATE_DIFF","true","false","false","true","true","String","""nitz_update_diff""","","/**
 * If the NITZ_UPDATE_DIFF time is exceeded then an automatic adjustment
 * to SystemClock will be allowed even if NITZ_UPDATE_SPACING has not been
 * exceeded.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.VOLUME_NOTIFICATION","true","false","false","true","true","String","""volume_notification""","","/**
 * Notification volume. This is used internally, changing this
 * value will not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Secure.ACCESSIBILITY_ENABLED","true","false","false","true","true","String","""accessibility_enabled""","","/**
 * If accessibility is enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.REBOOT_INTERVAL","true","false","false","true","true","String","""reboot_interval""","","/**
 * How frequently (in DAYS) to reboot the device.  If 0, no reboots
 * will occur.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_INTERNAL_STORAGE_SETTINGS","true","false","false","true","true","String","""android.settings.INTERNAL_STORAGE_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings for internal storage.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.System.SCREEN_OFF_TIMEOUT","true","false","false","true","true","String","""screen_off_timeout""","","/**
 * The timeout before the screen turns off.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SOUND_EFFECTS_ENABLED","true","false","false","true","true","String","""sound_effects_enabled""","","/**
 * Whether the sounds effects (key clicks, lid open ...) are enabled. The value is
 * boolean (1 or 0).
 */
","\android\provider\Settings.java"
"android.provider.Settings.HTTP_PROXY","true","false","false","true","true","String","""http_proxy""","","/**
 * Host name and port for a user-selected proxy.
 */
","\android\provider\Settings.java"
"android.provider.Settings.THROTTLE_NOTIFICATION_TYPE","true","false","false","true","true","String","""throttle_notification_type""","","/**
 * The throttling notifications we should send
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_MAX_AP_CHECKS","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_MAX_AP_CHECKS","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#WIFI_WATCHDOG_MAX_AP_CHECKS}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.MOUNT_UMS_NOTIFY_ENABLED","true","false","false","true","true","String","""mount_ums_notify_enabled""","","/**
 * Whether or not a notification is displayed while UMS is enabled. (0 = false, 1 = true)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SCREEN_BRIGHTNESS_MODE_AUTOMATIC","true","false","false","true","true","int","1","","/**
 * SCREEN_BRIGHTNESS_MODE value for manual mode.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_AP_SSID","true","false","false","true","true","String","""wifi_ap_ssid""","","/**
 * AP SSID
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.mUri","false","false","true","false","true","Uri","","","","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_MAX_SOURCE_EVENT_AGE_MILLIS","true","false","false","true","true","String","""search_max_source_event_age_millis""","","/**
 * The maximum age of log data used for source ranking in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.sShortcutSelection","false","false","true","true","true","String","SHORTCUT + ""=?""","","","\android\provider\Settings.java"
"android.provider.Settings.DROPBOX_TAG_PREFIX","true","false","false","true","true","String","""dropbox:""","","/**
 * Prefix for per-tag dropbox disable/enable settings.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY","true","false","false","true","true","String","""wifi_networks_available_repeat_delay""","","/**
 * Delay (in seconds) before repeating the Wi-Fi networks available notification.
 * Connecting to a network will reset the timer.
 */
","\android\provider\Settings.java"
"android.provider.Settings.NOTIFICATION_SOUND","true","false","false","true","true","String","""notification_sound""","","/**
 * Persistent store for the system-wide default notification sound.
 *
 * @see #RINGTONE
 * @see #DEFAULT_NOTIFICATION_URI
 */
","\android\provider\Settings.java"
"android.provider.Settings.WTF_IS_FATAL","true","false","false","true","true","String","""wtf_is_fatal""","","/**
 * Nonzero causes Log.wtf() to crash.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_DATA_ROAMING_SETTINGS","true","false","false","true","true","String","""android.settings.DATA_ROAMING_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings for selection of 2G/3G.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.NameValueTable.VALUE","true","false","false","true","true","String","""value""","","","\android\provider\Settings.java"
"android.provider.Settings.CALL_METHOD_GET_SECURE","true","false","false","true","true","String","""GET_secure""","","/**
 * @hide - Private call() method on SettingsProvider to read from 'secure' table.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DEVICE_PROVISIONED","true","false","false","true","true","String","""device_provisioned""","","/**
 * Whether the device has been provisioned (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_MAX_SHORTCUTS_RETURNED","true","false","false","true","true","String","""search_max_shortcuts_returned""","","/**
 * The maximum number of shortcuts shown by GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.THROTTLE_THRESHOLD_BYTES","true","false","false","true","true","String","""throttle_threshold_bytes""","","/**
 * The bandwidth throttle threshold (long)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTS_DEFAULT_PITCH","true","false","false","true","true","String","""tts_default_pitch""","","/**
 * Default text-to-speech engine pitch. 100 = 1x
 */
","\android\provider\Settings.java"
"android.provider.Settings.DEBUG_APP","true","false","false","true","true","String","""debug_app""","","/**
 * Name of an application package to be debugged.
 */
","\android\provider\Settings.java"
"android.provider.Settings.mCallCommand","false","false","true","false","true","String","","","// for the fast path of retrieving settings.
","\android\provider\Settings.java"
"android.provider.System.MUTE_STREAMS_AFFECTED","true","false","false","true","true","String","""mute_streams_affected""","","/**
 * Determines which streams are affected by mute. The
 * stream type's bit should be set to 1 if it should be muted when a mute request
 * is received.
 */
","\android\provider\Settings.java"
"android.provider.Secure.PARENTAL_CONTROL_ENABLED","true","false","false","true","true","String","""parental_control_enabled""","","/**
 * No longer supported.
 */
","\android\provider\Settings.java"
"android.provider.Secure.SETTINGS_CLASSNAME","true","false","false","true","true","String","""settings_classname""","","// TODO: 881807
","\android\provider\Settings.java"
"android.provider.Settings.CALL_AUTO_RETRY","true","false","false","true","true","String","""call_auto_retry""","","/**
 * CDMA only settings
 * Whether the auto retry is enabled. The value is
 * boolean (1 or 0).
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MOUNT_UMS_AUTOSTART","true","false","false","true","true","String","""mount_ums_autostart""","","/**
 * Whether or not UMS auto-starts on UMS host detection. (0 = false, 1 = true)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.MOUNT_PLAY_NOTIFICATION_SND","true","false","false","true","true","String","""mount_play_not_snd""","","/**
 * Whether or not alert sounds are played on MountService events. (0 = false, 1 = true)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_NUM_PROMOTED_SOURCES","true","false","false","true","true","String","""search_num_promoted_sources""","","/**
 * The number of promoted sources in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_STATIC_IP","true","false","false","true","true","String","""wifi_static_ip""","","/**
 * The static IP address.
 * <p>
 * Example: ""192.168.1.51""
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTS_DEFAULT_RATE","true","false","false","true","true","String","""tts_default_rate""","","/**
 * Default text-to-speech engine speech rate. 100 = 1x
 */
","\android\provider\Settings.java"
"android.provider.Settings.TAG","false","false","true","true","true","String","""Bookmarks""","","","\android\provider\Settings.java"
"android.provider.Settings.WIFI_SLEEP_POLICY_DEFAULT","true","false","false","true","true","int","0","","/**
 * Value for {@link #WIFI_SLEEP_POLICY} to use the default Wi-Fi sleep
 * policy, which is to sleep shortly after the turning off
 * according to the {@link #STAY_ON_WHILE_PLUGGED_IN} setting.
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_PHONE_SOFT_THRESHOLD","true","false","false","true","true","String","""memcheck_phone_soft""","","/**
 * How many bytes the phone process must be below to avoid scheduling
 * a soft restart.  This restart will happen when it is next determined
 * to be a good time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY","true","false","false","true","true","String","Secure.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY} instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.ASSISTED_GPS_ENABLED","true","false","false","true","true","String","""assisted_gps_enabled""","","/**
 * Whether assisted GPS should be enabled or not.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS","true","false","false","true","true","String","Secure.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.RADIO_CELL","true","false","false","true","true","String","""cell""","","/**
 * Constant for use in AIRPLANE_MODE_RADIOS to specify Cellular radio.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SCREEN_BRIGHTNESS_MODE_MANUAL","true","false","false","true","true","int","0","","/**
 * SCREEN_BRIGHTNESS_MODE value for manual mode.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_PING_COUNT","true","false","false","true","true","String","""wifi_watchdog_ping_count""","","/**
 * The number of pings to test if an access point is a good connection.
 */
","\android\provider\Settings.java"
"android.provider.Secure.ERROR_LOGCAT_PREFIX","true","false","false","true","true","String","""logcat_for_""","","/**
 * Lines of logcat to include with system crash/ANR/etc. reports,
 * as a prefix of the dropbox tag of the report type.
 * For example, ""logcat_for_system_server_anr"" controls the lines
 * of logcat captured with system server ANR reports.  0 to disable.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_USE_STATIC_IP","true","false","false","true","true","String","""wifi_use_static_ip""","","/**
 * Whether to use static IP and other static network attributes.
 * <p>
 * Set to 1 for true and 0 for false.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_SOUND_SETTINGS","true","false","false","true","true","String","""android.settings.SOUND_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of sound and volume.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Secure.PDP_WATCHDOG_LONG_POLL_INTERVAL_MS","true","false","false","true","true","String","""pdp_watchdog_long_poll_interval_ms""","","/**
 * The interval in milliseconds at which to check packet counts on the
 * mobile data interface when screen is off, to detect possible data
 * connection problems.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_WIRELESS_SETTINGS","true","false","false","true","true","String","""android.settings.WIRELESS_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of wireless controls
 * such as Wi-Fi, Bluetooth and Mobile networks.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.PARENTAL_CONTROL_REDIRECT_URL","true","false","false","true","true","String","""parental_control_redirect_url""","","/**
 * No longer supported.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_DEVICE_INFO_SETTINGS","true","false","false","true","true","String","""android.settings.DEVICE_INFO_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show general device information settings (serial
 * number, software version, phone number, etc.).
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing
 */
","\android\provider\Settings.java"
"android.provider.Secure.THROTTLE_HELP_URI","true","false","false","true","true","String","""throttle_help_uri""","","/**
 * Help URI for data throttling policy
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_MAX_DHCP_RETRY_COUNT","true","false","false","true","true","String","""wifi_max_dhcp_retry_count""","","/**
 * The maximum number of times we will retry a connection to an access
 * point for which we have failed in acquiring an IP address from DHCP.
 * A value of N means that we will make N+1 connection attempts in all.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_AP_SECURITY","true","false","false","true","true","String","""wifi_ap_security""","","/**
 * AP security
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.TEXT_AUTO_CAPS","true","false","false","true","true","String","""auto_caps""","","/**
 * Setting to enable Auto Caps in text editors. 1 = On, 0 = Off
 */
","\android\provider\Settings.java"
"android.provider.Secure.BACKUP_AUTO_RESTORE","true","false","false","true","true","String","""backup_auto_restore""","","/**
 * Controls whether application data is automatically restored from backup
 * at install time.
 * Type: int ( 0 = disabled, 1 = enabled )
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.NITZ_UPDATE_SPACING","true","false","false","true","true","String","""nitz_update_spacing""","","/**
 * The length of time in milli-seconds that automatic small adjustments to
 * SystemClock are ignored if NITZ_UPDATE_DIFF is not exceeded.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TIME_12_24","true","false","false","true","true","String","""time_12_24""","","/**
 * Display times as 12 or 24 hours
 * 12
 * 24
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_AP_PASSWD","true","false","false","true","true","String","""wifi_ap_passwd""","","/**
 * AP passphrase
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.CDMA_ROAMING_MODE","true","false","false","true","true","String","""roaming_settings""","","/**
 * The CDMA roaming mode 0 = Home Networks, CDMA default
 * 1 = Roaming on Affiliated networks
 * 2 = Roaming on any networks
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_NETWORK_OPERATOR_SETTINGS","true","false","false","true","true","String","""android.settings.NETWORK_OPERATOR_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings for selecting the network operator.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.GPRS_REGISTER_CHECK_PERIOD_MS","true","false","false","true","true","String","""gprs_register_check_period_ms""","","/**
 * The interval in milliseconds at which to check gprs registration
 * after the first registration mismatch of gprs and voice service,
 * to detect possible data network registration problems.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/secure"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Settings.java"
"android.provider.Settings.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED","true","false","false","true","true","String","""lock_pattern_tactile_feedback_enabled""","","/**
 * Whether lock pattern will vibrate as user enters (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.Secure.ANR_SHOW_BACKGROUND","true","false","false","true","true","String","""anr_show_background""","","/**
 * If nonzero, ANRs in invisible background processes bring up a dialog.
 * Otherwise, the process will be silently killed.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_SLEEP_POLICY_NEVER","true","false","false","true","true","int","2","","/**
 * Value for {@link #WIFI_SLEEP_POLICY} to never go to sleep.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SYS_STORAGE_THRESHOLD_PERCENTAGE","true","false","false","true","true","String","""sys_storage_threshold_percentage""","","/**
 * Minimum percentage of free storage on the device that is used to determine if
 * the device is running low on storage.
 * Say this value is set to 10, the device is considered running low on storage
 * if 90% or more of the device storage is filled up.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.THROTTLE_RESET_DAY","true","false","false","true","true","String","""throttle_reset_day""","","/**
 * The bandwidth throttle reset calendar day (1-28)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_WATCH_LIST","true","false","false","true","true","String","""wifi_watchdog_watch_list""","","/**
 * A comma-separated list of SSIDs for which the Wi-Fi watchdog should be enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTS_ENABLED_PLUGINS","true","false","false","true","true","String","""tts_enabled_plugins""","","/**
 * Space delimited list of plugin packages that are enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.TETHER_SUPPORTED","true","false","false","true","true","String","""tether_supported""","","/**
 * Used to disable Tethering on a device - defaults to true
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_DISPLAY_SETTINGS","true","false","false","true","true","String","""android.settings.DISPLAY_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of display.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.System.DEFAULT_ALARM_ALERT_URI","true","false","false","true","true","Uri","getUriFor(ALARM_ALERT)","","/**
 * A {@link Uri} that will point to the current default alarm alert at
 * any given time.
 *
 * @see #DEFAULT_ALARM_ALERT_URI
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_SHORTCUT_REFRESH_MAX_POOL_SIZE","true","false","false","true","true","String","""search_shortcut_refresh_max_pool_size""","","/**
 * The maximum size of the thread pool for shortcut refreshing in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.RADIO_BLUETOOTH","true","false","false","true","true","String","""bluetooth""","","/**
 * Constant for use in AIRPLANE_MODE_RADIOS to specify Bluetooth radio.
 */
","\android\provider\Settings.java"
"android.provider.NameValueCache.mVersionSystemProperty","false","false","true","false","true","String","","","","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_EXEC_START_TIME","true","false","false","true","true","String","""memcheck_exec_start_time""","","/**
 * First time during the day it is okay to kill processes
 * or reboot the device due to low memory situations.  This number is
 * in seconds since midnight.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED","true","false","false","true","true","String","""lock_pattern_tactile_feedback_enabled""","","/**
 * Whether lock pattern will vibrate as user enters (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.Settings.LOCK_SOUND","true","false","false","true","true","String","""lock_sound""","","/**
 * URI for the ""device locked"" (keyguard shown) sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.DIM_SCREEN","true","false","false","true","true","String","""dim_screen""","","/**
 * Whether or not to dim the screen. 0=no  1=yes
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_LOG_REALTIME_INTERVAL","true","false","false","true","true","String","""memcheck_log_realtime_interval""","","/**
 * Max frequency (in seconds) to log memory check stats, in realtime
 * seconds.  This allows for throttling of logs when the device is
 * running for large amounts of time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.LOGGING_ID","true","false","false","true","true","String","""logging_id""","@Deprecated","/**
 * The Logging ID (a unique 64-bit value) as a hex string.
 * Used as a pseudonymous identifier for logging.
 * @deprecated This identifier is poorly initialized and has
 * many collisions.  It should not be used.
 */
","\android\provider\Settings.java"
"android.provider.Settings.LOW_BATTERY_SOUND","true","false","false","true","true","String","""low_battery_sound""","","/**
 * URI for the low battery sound file.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_THREAD_KEEPALIVE_SECONDS","true","false","false","true","true","String","""search_thread_keepalive_seconds""","","/**
 * The maximun time that excess threads in the GlobalSeach thread pools will
 * wait before terminating.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SYS_FREE_STORAGE_LOG_INTERVAL","true","false","false","true","true","String","""sys_free_storage_log_interval""","","/**
 * The interval in minutes after which the amount of free storage left on the
 * device is logged to the event log
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.BLUETOOTH_DISCOVERABILITY_TIMEOUT","true","false","false","true","true","String","""bluetooth_discoverability_timeout""","","/**
 * Bluetooth discoverability timeout.  If this value is nonzero, then
 * Bluetooth becomes discoverable for a certain number of seconds,
 * after which is becomes simply connectable.  The value is in seconds.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ALARM_ALERT","true","false","false","true","true","String","""alarm_alert""","","/**
 * Persistent store for the system-wide default alarm alert.
 *
 * @see #RINGTONE
 * @see #DEFAULT_ALARM_ALERT_URI
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_SYSTEM_ENABLED","true","false","false","true","true","String","""memcheck_system_enabled""","","/**
 * Boolean indicating whether rebooting due to system memory checks
 * is enabled.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WALLPAPER_ACTIVITY","true","false","false","true","true","String","""wallpaper_activity""","","/**
 * Name of activity to use for wallpaper on the home screen.
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTY_MODE_ENABLED","true","false","false","true","true","String","""tty_mode_enabled""","","/**
 * Whether the TTY mode mode is enabled.
 * 0 = disabled
 * 1 = enabled
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_SLEEP_POLICY_DEFAULT","true","false","false","true","true","int","0","","/**
 * Value for {@link #WIFI_SLEEP_POLICY} to use the default Wi-Fi sleep
 * policy, which is to sleep shortly after the turning off
 * according to the {@link #STAY_ON_WHILE_PLUGGED_IN} setting.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_LOCALE_SETTINGS","true","false","false","true","true","String","""android.settings.LOCALE_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of locale.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.PDP_WATCHDOG_ERROR_POLL_COUNT","true","false","false","true","true","String","""pdp_watchdog_error_poll_count""","","/**
 * The number of polls to perform (at {@link #PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS})
 * after hitting {@link #PDP_WATCHDOG_TRIGGER_PACKET_COUNT} before
 * attempting data connection recovery.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.INCALL_POWER_BUTTON_BEHAVIOR_DEFAULT","true","false","false","true","true","int","INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF","","/**
 * INCALL_POWER_BUTTON_BEHAVIOR default value.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.VIBRATE_ON","true","false","false","true","true","String","""vibrate_on""","","/**
 * Whether vibrate is on for different events. This is used internally,
 * changing this value will not change the vibrate. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_WIFI_SETTINGS","true","false","false","true","true","String","""android.settings.WIFI_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of Wi-Fi.
 *
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.LOCATION_PROVIDERS_ALLOWED","true","false","false","true","true","String","""location_providers_allowed""","","/**
 * Comma-separated list of location providers that activities may access.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_WIFI_IP_SETTINGS","true","false","false","true","true","String","""android.settings.WIFI_IP_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of a static IP
 * address for Wi-Fi.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you safeguard
 * against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Secure.BACKUP_ENABLED","true","false","false","true","true","String","""backup_enabled""","","/**
 * Controls whether settings backup is enabled.
 * Type: int ( 0 = disabled, 1 = enabled )
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MOUNT_PLAY_NOTIFICATION_SND","true","false","false","true","true","String","""mount_play_not_snd""","","/**
 * Whether or not alert sounds are played on MountService events. (0 = false, 1 = true)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.EMERGENCY_TONE","true","false","false","true","true","String","""emergency_tone""","","/**
 * CDMA only settings
 * Emergency Tone  0 = Off
 * 1 = Alert
 * 2 = Vibrate
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_MAX_RESULTS_PER_SOURCE","true","false","false","true","true","String","""search_max_results_per_source""","","/**
 * The number of suggestions GlobalSearch will ask each non-web search source for.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED","true","false","false","true","true","int","1","","/**
 * Value for {@link #WIFI_SLEEP_POLICY} to use the default policy when
 * the device is on battery, and never go to sleep when the device is
 * plugged in.
 */
","\android\provider\Settings.java"
"android.provider.Secure.PREFERRED_NETWORK_MODE","true","false","false","true","true","String","""preferred_network_mode""","","/**
 * The preferred network mode   7 = Global
 * 6 = EvDo only
 * 5 = CDMA w/o EvDo
 * 4 = CDMA / EvDo auto
 * 3 = GSM / WCDMA auto
 * 2 = WCDMA only
 * 1 = GSM only
 * 0 = GSM / WCDMA preferred
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SELECT_VALUE","false","false","true","true","true","String","new String[] { Settings.NameValueTable.VALUE }","","","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_PREFILL_MILLIS","true","false","false","true","true","String","""search_prefill_millis""","","/**
 * The maximum number of milliseconds that GlobalSearch shows the previous results
 * after receiving a new query.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEND_ACTION_APP_ERROR","true","false","false","true","true","String","""send_action_app_error""","","/**
 * Flag for allowing ActivityManagerService to send ACTION_APP_ERROR intents
 * on application crashes and ANRs. If this is disabled, the crash/ANR dialog
 * will never display the ""Report"" button.
 * Type: int ( 0 = disallow, 1 = allow )
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.TIME_12_24","true","false","false","true","true","String","""time_12_24""","","/**
 * Display times as 12 or 24 hours
 * 12
 * 24
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_RECHECK_INTERVAL","true","false","false","true","true","String","""memcheck_recheck_interval""","","/**
 * How frequently to check whether it is a good time to restart things,
 * if the device is in a bad state.  This number is in seconds.  Note:
 * this value must be larger than {@link #MEMCHECK_MIN_ALARM} or else
 * the alarm to schedule the recheck will always appear within the
 * minimum ""do not execute now"" time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_MAX_SOURCE_EVENT_AGE_MILLIS","true","false","false","true","true","String","""search_max_source_event_age_millis""","","/**
 * The maximum age of log data used for source ranking in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.PDP_WATCHDOG_POLL_INTERVAL_MS","true","false","false","true","true","String","""pdp_watchdog_poll_interval_ms""","","/**
 * The interval in milliseconds at which to check packet counts on the
 * mobile data interface when screen is on, to detect possible data
 * connection problems.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.POINTER_LOCATION","true","false","false","true","true","String","""pointer_location""","","/**
 * Show pointer location on screen?
 * 0 = no
 * 1 = yes
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.TRANSITION_ANIMATION_SCALE","true","false","false","true","true","String","""transition_animation_scale""","","/**
 * Scaling factor for activity transition animations. Setting to 0 will disable window
 * animations.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DEFAULT_ALARM_ALERT_URI","true","false","false","true","true","Uri","getUriFor(ALARM_ALERT)","","/**
 * A {@link Uri} that will point to the current default alarm alert at
 * any given time.
 *
 * @see #DEFAULT_ALARM_ALERT_URI
 */
","\android\provider\Settings.java"
"android.provider.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC","true","false","false","true","true","int","1","","/**
 * SCREEN_BRIGHTNESS_MODE value for manual mode.
 */
","\android\provider\Settings.java"
"android.provider.Settings.sShortcutProjection","false","false","true","true","true","String","{ ID, SHORTCUT }","","","\android\provider\Settings.java"
"android.provider.Secure.REBOOT_START_TIME","true","false","false","true","true","String","""reboot_start_time""","","/**
 * First time during the day it is okay to force a reboot of the
 * device (if REBOOT_INTERVAL is set).  This number is
 * in seconds since midnight.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP","true","false","false","true","true","int","0x2","","/**
 * INCALL_POWER_BUTTON_BEHAVIOR value for ""hang up"".
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.INSTALL_NON_MARKET_APPS","true","false","false","true","true","String","Secure.INSTALL_NON_MARKET_APPS","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#INSTALL_NON_MARKET_APPS} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_NUM_PROMOTED_SOURCES","true","false","false","true","true","String","""search_num_promoted_sources""","","/**
 * The number of promoted sources in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.PARENTAL_CONTROL_LAST_UPDATE","true","false","false","true","true","String","Secure.PARENTAL_CONTROL_LAST_UPDATE","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#PARENTAL_CONTROL_LAST_UPDATE}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.System.BLUETOOTH_DISCOVERABILITY_TIMEOUT","true","false","false","true","true","String","""bluetooth_discoverability_timeout""","","/**
 * Bluetooth discoverability timeout.  If this value is nonzero, then
 * Bluetooth becomes discoverable for a certain number of seconds,
 * after which is becomes simply connectable.  The value is in seconds.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_APPLICATION_SETTINGS","true","false","false","true","true","String","""android.settings.APPLICATION_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of application-related settings.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SYNC_MAX_RETRY_DELAY_IN_SECONDS","true","false","false","true","true","String","""sync_max_retry_delay_in_seconds""","","/**
 * The maximum reconnect delay for short network outages or when the network is suspended
 * due to phone use.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.INCALL_POWER_BUTTON_BEHAVIOR","true","false","false","true","true","String","""incall_power_button_behavior""","","/**
 * What happens when the user presses the Power button while in-call
 * and the screen is on.<br/>
 * <b>Values:</b><br/>
 * 1 - The Power button turns off the screen and locks the device. (Default behavior)<br/>
 * 2 - The Power button hangs up the current call.<br/>
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT","true","false","false","true","true","String","""wifi_watchdog_initial_ignored_ping_count""","","/**
 * The number of initial pings to perform that *may* be ignored if they
 * fail. Again, if these fail, they will *not* be used in packet loss
 * calculation. For example, one network always seemed to time out for
 * the first couple pings, so this is set to 3 by default.
 */
","\android\provider\Settings.java"
"android.provider.Secure.VOICE_RECOGNITION_SERVICE","true","false","false","true","true","String","""voice_recognition_service""","","/**
 * The {@link ComponentName} string of the service to be used as the voice recognition
 * service.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTY_MODE_ENABLED","true","false","false","true","true","String","""tty_mode_enabled""","","/**
 * Whether the TTY mode mode is enabled.
 * 0 = disabled
 * 1 = enabled
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_SLEEP_POLICY_NEVER","true","false","false","true","true","int","2","","/**
 * Value for {@link #WIFI_SLEEP_POLICY} to never go to sleep.
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_SYSTEM_HARD_THRESHOLD","true","false","false","true","true","String","""memcheck_system_hard""","","/**
 * How many bytes the system process must be below to avoid scheduling
 * a hard reboot.  This reboot will happen immediately.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_MIN_ALARM","true","false","false","true","true","String","""memcheck_min_alarm""","","/**
 * How much time there must be until the next alarm in order to kill processes
 * or reboot.  This number is in seconds.  Note: this value must be
 * smaller than {@link #MEMCHECK_RECHECK_INTERVAL} or else it will
 * always see an alarm scheduled within its time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_PHONE_ENABLED","true","false","false","true","true","String","""memcheck_phone_enabled""","","/**
 * Boolean indicating whether restarting the phone process due to
 * memory checks is enabled.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.sIntentProjection","false","false","true","true","true","String","{ INTENT }","","","\android\provider\Settings.java"
"android.provider.Settings.TEXT_AUTO_REPLACE","true","false","false","true","true","String","""auto_replace""","","/**
 * Setting to enable Auto Replace (AutoText) in text editors. 1 = On, 0 = Off
 */
","\android\provider\Settings.java"
"android.provider.Settings.STAY_ON_WHILE_PLUGGED_IN","true","false","false","true","true","String","""stay_on_while_plugged_in""","","/**
 * Whether we keep the device on while the device is plugged in.
 * Supported values are:
 * <ul>
 * <li>{@code 0} to never stay on while plugged in</li>
 * <li>{@link BatteryManager#BATTERY_PLUGGED_AC} to stay on for AC charger</li>
 * <li>{@link BatteryManager#BATTERY_PLUGGED_USB} to stay on for USB charger</li>
 * </ul>
 * These values can be OR-ed together.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WTF_IS_FATAL","true","false","false","true","true","String","""wtf_is_fatal""","","/**
 * Nonzero causes Log.wtf() to crash.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MOVED_TO_SECURE","false","false","true","true","true","HashSet<String>","","","","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_SYSTEM_ENABLED","true","false","false","true","true","String","""memcheck_system_enabled""","","/**
 * Boolean indicating whether rebooting due to system memory checks
 * is enabled.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.VIBRATE_ON","true","false","false","true","true","String","""vibrate_on""","","/**
 * Whether vibrate is on for different events. This is used internally,
 * changing this value will not change the vibrate. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_MAX_STAT_AGE_MILLIS","true","false","false","true","true","String","""search_max_stat_age_millis""","","/**
 * The maximum age of log data used for shortcuts in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_LOG_REALTIME_INTERVAL","true","false","false","true","true","String","""memcheck_log_realtime_interval""","","/**
 * Max frequency (in seconds) to log memory check stats, in realtime
 * seconds.  This allows for throttling of logs when the device is
 * running for large amounts of time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.END_BUTTON_BEHAVIOR_DEFAULT","true","false","false","true","true","int","END_BUTTON_BEHAVIOR_SLEEP","","/**
 * END_BUTTON_BEHAVIOR default value.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.THROTTLE_POLLING_SEC","true","false","false","true","true","String","""throttle_polling_sec""","","/**
 * The bandwidth throttle polling freqency in seconds
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED","true","false","false","true","true","String","""wifi_watchdog_background_check_enabled""","","/**
 * Whether the Wi-Fi watchdog is enabled for background checking even
 * after it thinks the user has connected to a good access point.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_SECURITY_SETTINGS","true","false","false","true","true","String","""android.settings.SECURITY_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of security and
 * location privacy.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.AIRPLANE_MODE_ON","true","false","false","true","true","String","""airplane_mode_on""","","/**
 * Whether Airplane Mode is on.
 */
","\android\provider\Settings.java"
"android.provider.NameValueCache.mCallCommand","false","false","true","false","true","String","","","// for the fast path of retrieving settings.
","\android\provider\Settings.java"
"android.provider.System.VOLUME_SYSTEM","true","false","false","true","true","String","""volume_system""","","/**
 * System/notifications volume. This is used internally, changing this
 * value will not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.END_BUTTON_BEHAVIOR","true","false","false","true","true","String","""end_button_behavior""","","/**
 * What happens when the user presses the end call button if they're not
 * on a call.<br/>
 * <b>Values:</b><br/>
 * 0 - The end button does nothing.<br/>
 * 1 - The end button goes to the home screen.<br/>
 * 2 - The end button puts the device to sleep and locks the keyguard.<br/>
 * 3 - The end button goes to the home screen.  If the user is already on the
 * home screen, it puts the device to sleep.
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/bookmarks"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Settings.java"
"android.provider.System.sNameValueCache","false","false","true","true","false","NameValueCache","null","","// Populated lazily, guarded by class object:
","\android\provider\Settings.java"
"android.provider.Secure.USB_MASS_STORAGE_ENABLED","true","false","false","true","true","String","""usb_mass_storage_enabled""","","/**
 * USB Mass Storage Enabled
 */
","\android\provider\Settings.java"
"android.provider.Settings.DISK_FREE_CHANGE_REPORTING_THRESHOLD","true","false","false","true","true","String","""disk_free_change_reporting_threshold""","","/**
 * Threshold for the amount of change in disk free space required to report the amount of
 * free space. Used to prevent spamming the logs when the disk free space isn't changing
 * frequently.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.sShortcutSelection","false","false","true","true","true","String","SHORTCUT + ""=?""","","","\android\provider\Settings.java"
"android.provider.System.DTMF_TONE_WHEN_DIALING","true","false","false","true","true","String","""dtmf_tone""","","/**
 * Whether the audible DTMF tones are played by the dialer when dialing. The value is
 * boolean (1 or 0).
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS","true","false","false","true","true","String","""wifi_watchdog_background_check_delay_ms""","","/**
 * The delay between background checks.
 */
","\android\provider\Settings.java"
"android.provider.System.FONT_SCALE","true","false","false","true","true","String","""font_scale""","","/**
 * Scaling factor for fonts, float.
 */
","\android\provider\Settings.java"
"android.provider.System.SHOW_WEB_SUGGESTIONS","true","false","false","true","true","String","""show_web_suggestions""","","/**
 * Whether live web suggestions while the user types into search dialogs are
 * enabled. Browsers and other search UIs should respect this, as it allows
 * a user to avoid sending partial queries to a search engine, if it poses
 * any privacy concern. The value is boolean (1 or 0).
 */
","\android\provider\Settings.java"
"android.provider.Settings.mContentProvider","false","false","true","false","false","IContentProvider","null","","// Initially null; set lazily and held forever.  Synchronized on 'this'.
","\android\provider\Settings.java"
"android.provider.Settings.SHOW_WEB_SUGGESTIONS","true","false","false","true","true","String","""show_web_suggestions""","","/**
 * Whether live web suggestions while the user types into search dialogs are
 * enabled. Browsers and other search UIs should respect this, as it allows
 * a user to avoid sending partial queries to a search engine, if it poses
 * any privacy concern. The value is boolean (1 or 0).
 */
","\android\provider\Settings.java"
"android.provider.Settings.DTMF_TONE_TYPE_WHEN_DIALING","true","false","false","true","true","String","""dtmf_tone_type""","","/**
 * CDMA only settings
 * DTMF tone type played by the dialer when dialing.
 * 0 = Normal
 * 1 = Long
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_PING_TIMEOUT_MS","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_PING_TIMEOUT_MS","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#WIFI_WATCHDOG_PING_TIMEOUT_MS}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.BATTERY_DISCHARGE_DURATION_THRESHOLD","true","false","false","true","true","String","""battery_discharge_duration_threshold""","","/**
 * Threshold values for the duration and level of a discharge cycle, under
 * which we log discharge cycle info.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.DISABLED_SYSTEM_INPUT_METHODS","true","false","false","true","true","String","""disabled_system_input_methods""","","/**
 * List of system input methods that are currently disabled.  This is a string
 * containing the IDs of all disabled input methods, each ID separated
 * by ':'.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SYNC_MAX_RETRY_DELAY_IN_SECONDS","true","false","false","true","true","String","""sync_max_retry_delay_in_seconds""","","/**
 * The maximum reconnect delay for short network outages or when the network is suspended
 * due to phone use.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_STATIC_NETMASK","true","false","false","true","true","String","""wifi_static_netmask""","","/**
 * If using static IP, the net mask.
 * <p>
 * Example: ""255.255.255.0""
 */
","\android\provider\Settings.java"
"android.provider.Secure.DISK_FREE_CHANGE_REPORTING_THRESHOLD","true","false","false","true","true","String","""disk_free_change_reporting_threshold""","","/**
 * Threshold for the amount of change in disk free space required to report the amount of
 * free space. Used to prevent spamming the logs when the disk free space isn't changing
 * frequently.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.THROTTLE_VALUE_KBITSPS","true","false","false","true","true","String","""throttle_value_kbitsps""","","/**
 * The bandwidth throttle value (kbps)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.sShortcutProjection","false","false","true","true","true","String","{ ID, SHORTCUT }","","","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_PER_SOURCE_CONCURRENT_QUERY_LIMIT","true","false","false","true","true","String","""search_per_source_concurrent_query_limit""","","/**
 * The maximum number of concurrent suggestion queries to each source.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.SCREEN_BRIGHTNESS_MODE_MANUAL","true","false","false","true","true","int","0","","/**
 * SCREEN_BRIGHTNESS_MODE value for manual mode.
 */
","\android\provider\Settings.java"
"android.provider.Secure.DROPBOX_AGE_SECONDS","true","false","false","true","true","String","""dropbox_age_seconds""","","/**
 * Maximum age of entries kept by {@link android.os.IDropBox}.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.POWER_SOUNDS_ENABLED","true","false","false","true","true","String","""power_sounds_enabled""","","/**
 * Whether to play a sound for low-battery alerts.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.DESK_UNDOCK_SOUND","true","false","false","true","true","String","""desk_undock_sound""","","/**
 * URI for the desk dock ""out"" event sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.DROPBOX_QUOTA_PERCENT","true","false","false","true","true","String","""dropbox_quota_percent""","","/**
 * Percent of free disk (excluding reserve) which {@link android.os.IDropBox} will use.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.LOCKSCREEN_SOUNDS_ENABLED","true","false","false","true","true","String","""lockscreen_sounds_enabled""","","/**
 * Whether to play sounds when the keyguard is shown and dismissed.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.POWER_SOUNDS_ENABLED","true","false","false","true","true","String","""power_sounds_enabled""","","/**
 * Whether to play a sound for low-battery alerts.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.ENHANCED_VOICE_PRIVACY_ENABLED","true","false","false","true","true","String","""enhanced_voice_privacy_enabled""","","/**
 * Whether the enhanced voice privacy mode is enabled.
 * 0 = normal voice privacy
 * 1 = enhanced voice privacy
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.NameValueCache.mUri","false","false","true","false","true","Uri","","","","\android\provider\Settings.java"
"android.provider.Settings.WIFI_MAX_DHCP_RETRY_COUNT","true","false","false","true","true","String","""wifi_max_dhcp_retry_count""","","/**
 * The maximum number of times we will retry a connection to an access
 * point for which we have failed in acquiring an IP address from DHCP.
 * A value of N means that we will make N+1 connection attempts in all.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_ON","true","false","false","true","true","String","""wifi_on""","","/**
 * Whether the Wi-Fi should be on.  Only the Wi-Fi service should touch this.
 */
","\android\provider\Settings.java"
"android.provider.Secure.CDMA_CELL_BROADCAST_SMS","true","false","false","true","true","String","""cdma_cell_broadcast_sms""","","/**
 * CDMA Cell Broadcast SMS
 * 0 = CDMA Cell Broadcast SMS disabled
 * 1 = CDMA Cell Broadcast SMS enabled
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.PDP_WATCHDOG_PING_ADDRESS","true","false","false","true","true","String","""pdp_watchdog_ping_address""","","/**
 * Address to ping as a last sanity check before attempting any recovery.
 * Unset or set to ""0.0.0.0"" to skip this check.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_AP_SSID","true","false","false","true","true","String","""wifi_ap_ssid""","","/**
 * AP SSID
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.DEFAULT_INSTALL_LOCATION","true","false","false","true","true","String","""default_install_location""","","/**
 * Default install location value.
 * 0 = auto, let system decide
 * 1 = internal
 * 2 = sdcard
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_PREFILL_MILLIS","true","false","false","true","true","String","""search_prefill_millis""","","/**
 * The maximum number of milliseconds that GlobalSearch shows the previous results
 * after receiving a new query.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEND_ACTION_APP_ERROR","true","false","false","true","true","String","""send_action_app_error""","","/**
 * Flag for allowing ActivityManagerService to send ACTION_APP_ERROR intents
 * on application crashes and ANRs. If this is disabled, the crash/ANR dialog
 * will never display the ""Report"" button.
 * Type: int ( 0 = disallow, 1 = allow )
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_AP_PASSWD","true","false","false","true","true","String","""wifi_ap_passwd""","","/**
 * AP passphrase
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.COMPATIBILITY_MODE","true","false","false","true","true","String","""compatibility_mode""","","/**
 * If 0, the compatibility mode is off for all applications.
 * If 1, older applications run under compatibility mode.
 * TODO: remove this settings before code freeze (bug/1907571)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOLUME_SETTINGS","true","false","false","true","true","String","{ VOLUME_VOICE, VOLUME_SYSTEM, VOLUME_RING, VOLUME_MUSIC, VOLUME_ALARM, VOLUME_NOTIFICATION, VOLUME_BLUETOOTH_SCO }","","/**
 * The mapping of stream type (integer) to its setting.
 */
","\android\provider\Settings.java"
"android.provider.Settings.AUTO_TIME","true","false","false","true","true","String","""auto_time""","","/**
 * Value to specify if the user prefers the date, time and time zone
 * to be automatically fetched from the network (NITZ). 1=yes, 0=no
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_AP_COUNT","true","false","false","true","true","String","""wifi_watchdog_ap_count""","","/**
 * The number of access points required for a network in order for the
 * watchdog to monitor it.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DIM_SCREEN","true","false","false","true","true","String","""dim_screen""","","/**
 * Whether or not to dim the screen. 0=no  1=yes
 */
","\android\provider\Settings.java"
"android.provider.Secure.ALLOWED_GEOLOCATION_ORIGINS","true","false","false","true","true","String","""allowed_geolocation_origins""","","/**
 * Origins for which browsers should allow geolocation by default.
 * The value is a space-separated list of origins.
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_MIN_IMPRESSIONS_FOR_SOURCE_RANKING","true","false","false","true","true","String","""search_min_impressions_for_source_ranking""","","/**
 * The minimum number of impressions needed to rank a source in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_SHORTCUT_REFRESH_MAX_POOL_SIZE","true","false","false","true","true","String","""search_shortcut_refresh_max_pool_size""","","/**
 * The maximum size of the thread pool for shortcut refreshing in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.SCREEN_BRIGHTNESS_MODE","true","false","false","true","true","String","""screen_brightness_mode""","","/**
 * Control whether to enable automatic brightness mode.
 */
","\android\provider\Settings.java"
"android.provider.System.ALARM_ALERT","true","false","false","true","true","String","""alarm_alert""","","/**
 * Persistent store for the system-wide default alarm alert.
 *
 * @see #RINGTONE
 * @see #DEFAULT_ALARM_ALERT_URI
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_BLUETOOTH_SETTINGS","true","false","false","true","true","String","""android.settings.BLUETOOTH_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of Bluetooth.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.END_BUTTON_BEHAVIOR_HOME","true","false","false","true","true","int","0x1","","/**
 * END_BUTTON_BEHAVIOR value for ""go home"".
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.EMERGENCY_TONE","true","false","false","true","true","String","""emergency_tone""","","/**
 * CDMA only settings
 * Emergency Tone  0 = Off
 * 1 = Alert
 * 2 = Vibrate
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.HEARING_AID","true","false","false","true","true","String","""hearing_aid""","","/**
 * Whether the hearing aid is enabled. The value is
 * boolean (1 or 0).
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.PDP_WATCHDOG_TRIGGER_PACKET_COUNT","true","false","false","true","true","String","""pdp_watchdog_trigger_packet_count""","","/**
 * The number of outgoing packets sent without seeing an incoming packet
 * that triggers a countdown (of {@link #PDP_WATCHDOG_ERROR_POLL_COUNT}
 * device is logged to the event log
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.RINGTONE","true","false","false","true","true","String","""ringtone""","","/**
 * Persistent store for the system-wide default ringtone URI.
 * <p>
 * If you need to play the default ringtone at any given time, it is recommended
 * you give {@link #DEFAULT_RINGTONE_URI} to the media player.  It will resolve
 * to the set default ringtone at the time of playing.
 *
 * @see #DEFAULT_RINGTONE_URI
 */
","\android\provider\Settings.java"
"android.provider.System.MOVED_TO_SECURE","false","false","true","true","true","HashSet<String>","","","","\android\provider\Settings.java"
"android.provider.Settings.ACTION_PRIVACY_SETTINGS","true","false","false","true","true","String","""android.settings.PRIVACY_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of privacy options.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_MAX_STAT_AGE_MILLIS","true","false","false","true","true","String","""search_max_stat_age_millis""","","/**
 * The maximum age of log data used for shortcuts in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.INSTALL_NON_MARKET_APPS","true","false","false","true","true","String","""install_non_market_apps""","","/**
 * Whether the package installer should allow installation of apps downloaded from
 * sources other than the Android Market (vending machine).
 *
 * 1 = allow installing from other sources
 * 0 = only allow installing from the Android Market
 */
","\android\provider\Settings.java"
"android.provider.Settings.AUTHORITY","true","false","false","true","true","String","""settings""","","","\android\provider\Settings.java"
"android.provider.System.USE_GOOGLE_MAIL","true","false","false","true","true","String","Secure.USE_GOOGLE_MAIL","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#USE_GOOGLE_MAIL} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_NUM_OPEN_NETWORKS_KEPT","true","false","false","true","true","String","""wifi_num_open_networks_kept""","","/**
 * When the number of open networks exceeds this number, the
 * least-recently-used excess networks will be removed.
 */
","\android\provider\Settings.java"
"android.provider.Secure.TETHER_DUN_APN","true","false","false","true","true","String","""tether_dun_apn""","","/**
 * Used to hold a gservices-provisioned apn value for DUN.  If set, or the
 * corresponding build config values are set it will override the APN DB
 * values.
 * Consists of a comma seperated list of strings:
 * ""name,apn,proxy,port,username,password,server,mmsc,mmsproxy,mmsport,mcc,mnc,auth,type""
 * note that empty fields can be ommitted: ""name,apn,,,,,,,,,310,260,,DUN""
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.PARENTAL_CONTROL_REDIRECT_URL","true","false","false","true","true","String","Secure.PARENTAL_CONTROL_REDIRECT_URL","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#PARENTAL_CONTROL_REDIRECT_URL}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.PDP_WATCHDOG_PING_ADDRESS","true","false","false","true","true","String","""pdp_watchdog_ping_address""","","/**
 * Address to ping as a last sanity check before attempting any recovery.
 * Unset or set to ""0.0.0.0"" to skip this check.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTS_USE_DEFAULTS","true","false","false","true","true","String","""tts_use_defaults""","","/**
 * Setting to always use the default text-to-speech settings regardless
 * of the application settings.
 * 1 = override application settings,
 * 0 = use application settings (if specified).
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_STATIC_GATEWAY","true","false","false","true","true","String","""wifi_static_gateway""","","/**
 * If using static IP, the gateway's IP address.
 * <p>
 * Example: ""192.168.1.1""
 */
","\android\provider\Settings.java"
"android.provider.Settings.SCREEN_OFF_TIMEOUT","true","false","false","true","true","String","""screen_off_timeout""","","/**
 * The timeout before the screen turns off.
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_SYSTEM_SOFT_THRESHOLD","true","false","false","true","true","String","""memcheck_system_soft""","","/**
 * How many bytes the system process must be below to avoid scheduling
 * a soft reboot.  This reboot will happen when it is next determined
 * to be a good time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ERROR_LOGCAT_PREFIX","true","false","false","true","true","String","""logcat_for_""","","/**
 * Lines of logcat to include with system crash/ANR/etc. reports,
 * as a prefix of the dropbox tag of the report type.
 * For example, ""logcat_for_system_server_anr"" controls the lines
 * of logcat captured with system server ANR reports.  0 to disable.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_STATIC_NETMASK","true","false","false","true","true","String","""wifi_static_netmask""","","/**
 * If using static IP, the net mask.
 * <p>
 * Example: ""255.255.255.0""
 */
","\android\provider\Settings.java"
"android.provider.Settings.EXTRA_AUTHORITIES","true","false","false","true","true","String","""authorities""","","/**
 * Activity Extra: Limit available options in launched activity based on the given authority.
 * <p>
 * This can be passed as an extra field in an Activity Intent with one or more syncable content
 * provider's authorities as a String[]. This field is used by some intents to alter the
 * behavior of the called activity.
 * <p>
 * Example: The {@link #ACTION_ADD_ACCOUNT} intent restricts the account types available based
 * on the authority given.
 */
","\android\provider\Settings.java"
"android.provider.Secure.PDP_WATCHDOG_ERROR_POLL_COUNT","true","false","false","true","true","String","""pdp_watchdog_error_poll_count""","","/**
 * The number of polls to perform (at {@link #PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS})
 * after hitting {@link #PDP_WATCHDOG_TRIGGER_PACKET_COUNT} before
 * attempting data connection recovery.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_NUM_ALLOWED_CHANNELS","true","false","false","true","true","String","""wifi_num_allowed_channels""","","/**
 * The number of radio channels that are allowed in the local
 * 802.11 regulatory domain.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_MAX_RESULTS_PER_SOURCE","true","false","false","true","true","String","""search_max_results_per_source""","","/**
 * The number of suggestions GlobalSearch will ask each non-web search source for.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.AUTO_TIME","true","false","false","true","true","String","""auto_time""","","/**
 * Value to specify if the user prefers the date, time and time zone
 * to be automatically fetched from the network (NITZ). 1=yes, 0=no
 */
","\android\provider\Settings.java"
"android.provider.Settings.LOGGING_ID","true","false","false","true","true","String","""logging_id""","@Deprecated","/**
 * The Logging ID (a unique 64-bit value) as a hex string.
 * Used as a pseudonymous identifier for logging.
 * @deprecated This identifier is poorly initialized and has
 * many collisions.  It should not be used.
 */
","\android\provider\Settings.java"
"android.provider.Secure.BACKUP_PROVISIONED","true","false","false","true","true","String","""backup_provisioned""","","/**
 * Indicates whether settings backup has been fully provisioned.
 * Type: int ( 0 = unprovisioned, 1 = fully provisioned )
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SYS_STORAGE_THRESHOLD_PERCENTAGE","true","false","false","true","true","String","""sys_storage_threshold_percentage""","","/**
 * Minimum percentage of free storage on the device that is used to determine if
 * the device is running low on storage.
 * Say this value is set to 10, the device is considered running low on storage
 * if 90% or more of the device storage is filled up.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.NOTIFICATIONS_USE_RING_VOLUME","true","false","false","true","true","String","""notifications_use_ring_volume""","","/**
 * Whether the notifications should use the ring volume (value of 1) or
 * a separate notification volume (value of 0). In most cases, users
 * will have this enabled so the notification and ringer volumes will be
 * the same. However, power users can disable this and use the separate
 * notification volume control.
 * <p>
 * Note: This is a one-off setting that will be removed in the future
 * when there is profile support. For this reason, it is kept hidden
 * from the public APIs.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ASSISTED_GPS_ENABLED","true","false","false","true","true","String","""assisted_gps_enabled""","","/**
 * Whether assisted GPS should be enabled or not.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.PDP_WATCHDOG_TRIGGER_PACKET_COUNT","true","false","false","true","true","String","""pdp_watchdog_trigger_packet_count""","","/**
 * The number of outgoing packets sent without seeing an incoming packet
 * that triggers a countdown (of {@link #PDP_WATCHDOG_ERROR_POLL_COUNT}
 * device is logged to the event log
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.BATTERY_DISCHARGE_DURATION_THRESHOLD","true","false","false","true","true","String","""battery_discharge_duration_threshold""","","/**
 * Threshold values for the duration and level of a discharge cycle, under
 * which we log discharge cycle info.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TEXT_SHOW_PASSWORD","true","false","false","true","true","String","""show_password""","","/**
 * Setting to showing password characters in text editors. 1 = On, 0 = Off
 */
","\android\provider\Settings.java"
"android.provider.System.NOTIFICATIONS_USE_RING_VOLUME","true","false","false","true","true","String","""notifications_use_ring_volume""","","/**
 * Whether the notifications should use the ring volume (value of 1) or
 * a separate notification volume (value of 0). In most cases, users
 * will have this enabled so the notification and ringer volumes will be
 * the same. However, power users can disable this and use the separate
 * notification volume control.
 * <p>
 * Note: This is a one-off setting that will be removed in the future
 * when there is profile support. For this reason, it is kept hidden
 * from the public APIs.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTS_DEFAULT_COUNTRY","true","false","false","true","true","String","""tts_default_country""","","/**
 * Default text-to-speech country.
 */
","\android\provider\Settings.java"
"android.provider.Settings.MODE_RINGER","true","false","false","true","true","String","""mode_ringer""","","/**
 * Ringer mode. This is used internally, changing this value will not
 * change the ringer mode. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.System.WINDOW_ANIMATION_SCALE","true","false","false","true","true","String","""window_animation_scale""","","/**
 * Scaling factor for normal window animations. Setting to 0 will disable window
 * animations.
 */
","\android\provider\Settings.java"
"android.provider.Settings.APPEND_FOR_LAST_AUDIBLE","true","false","false","true","true","String","""_last_audible""","","/**
 * Appended to various volume related settings to record the previous
 * values before they the settings were affected by a silent/vibrate
 * ringer mode change.
 */
","\android\provider\Settings.java"
"android.provider.System.VOLUME_BLUETOOTH_SCO","true","false","false","true","true","String","""volume_bluetooth_sco""","","/**
 * Bluetooth Headset volume. This is used internally, changing this value will
 * not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE","true","false","false","true","true","String","""wifi_watchdog_acceptable_packet_loss_percentage""","","/**
 * The acceptable packet loss percentage (range 0 - 100) before trying
 * another AP on the same network.
 */
","\android\provider\Settings.java"
"android.provider.System.COMPATIBILITY_MODE","true","false","false","true","true","String","""compatibility_mode""","","/**
 * If 0, the compatibility mode is off for all applications.
 * If 1, older applications run under compatibility mode.
 * TODO: remove this settings before code freeze (bug/1907571)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOLUME_BLUETOOTH_SCO","true","false","false","true","true","String","""volume_bluetooth_sco""","","/**
 * Bluetooth Headset volume. This is used internally, changing this value will
 * not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.FANCY_IME_ANIMATIONS","true","false","false","true","true","String","""fancy_ime_animations""","","/**
 * Scaling factor for normal window animations. Setting to 0 will disable window
 * animations.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.ALLOW_MOCK_LOCATION","true","false","false","true","true","String","""mock_location""","","/**
 * Setting to allow mock locations and location provider status to be injected into the
 * LocationManager service for testing purposes during application development.  These
 * locations and status values  override actual location and status information generated
 * by network, gps, or other location providers.
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTS_DEFAULT_COUNTRY","true","false","false","true","true","String","""tts_default_country""","","/**
 * Default text-to-speech country.
 */
","\android\provider\Settings.java"
"android.provider.Settings.BACKUP_PROVISIONED","true","false","false","true","true","String","""backup_provisioned""","","/**
 * Indicates whether settings backup has been fully provisioned.
 * Type: int ( 0 = unprovisioned, 1 = fully provisioned )
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.DEVICE_PROVISIONED","true","false","false","true","true","String","""device_provisioned""","","/**
 * Whether the device has been provisioned (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.System.CAR_UNDOCK_SOUND","true","false","false","true","true","String","""car_undock_sound""","","/**
 * URI for the car dock ""out"" event sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_MANAGE_APPLICATIONS_SETTINGS","true","false","false","true","true","String","""android.settings.MANAGE_APPLICATIONS_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to manage installed applications.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.NAME_EQ_PLACEHOLDER","false","false","true","true","true","String","""name=?""","","","\android\provider\Settings.java"
"android.provider.Secure.THROTTLE_MAX_NTP_CACHE_AGE_SEC","true","false","false","true","true","String","""throttle_max_ntp_cache_age_sec""","","/**
 * The length of time in Sec that we allow our notion of NTP time
 * to be cached before we refresh it
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_SOURCE_TIMEOUT_MILLIS","true","false","false","true","true","String","""search_source_timeout_millis""","","/**
 * The number of milliseconds before GlobalSearch aborts search suggesiton queries.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.NITZ_UPDATE_SPACING","true","false","false","true","true","String","""nitz_update_spacing""","","/**
 * The length of time in milli-seconds that automatic small adjustments to
 * SystemClock are ignored if NITZ_UPDATE_DIFF is not exceeded.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.THROTTLE_POLLING_SEC","true","false","false","true","true","String","""throttle_polling_sec""","","/**
 * The bandwidth throttle polling freqency in seconds
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.HEARING_AID","true","false","false","true","true","String","""hearing_aid""","","/**
 * Whether the hearing aid is enabled. The value is
 * boolean (1 or 0).
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.REBOOT_WINDOW","true","false","false","true","true","String","""reboot_window""","","/**
 * The window of time (in seconds) after each REBOOT_INTERVAL in which
 * a reboot can be executed.  If 0, a reboot will always be executed at
 * exactly the given time.  Otherwise, it will only be executed if
 * the device is idle within the window.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ANDROID_ID","true","false","false","true","true","String","""android_id""","","/**
 * A 64-bit number (as a hex string) that is randomly
 * generated on the device's first boot and should remain
 * constant for the lifetime of the device.  (The value may
 * change if a factory reset is performed on the device.)
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_WEB_RESULTS_OVERRIDE_LIMIT","true","false","false","true","true","String","""search_web_results_override_limit""","","/**
 * The number of suggestions the GlobalSearch will ask the web search source for.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.LAST_SETUP_SHOWN","true","false","false","true","true","String","""last_setup_shown""","","/**
 * Version for which the setup wizard was last shown.  Bumped for
 * each release when there is new setup information to show.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_MIN_CLICKS_FOR_SOURCE_RANKING","true","false","false","true","true","String","""search_min_clicks_for_source_ranking""","","/**
 * The minimum number of clicks needed to rank a source in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE","true","false","false","true","true","String","""wifi_watchdog_acceptable_packet_loss_percentage""","","/**
 * The acceptable packet loss percentage (range 0 - 100) before trying
 * another AP on the same network.
 */
","\android\provider\Settings.java"
"android.provider.Settings.AIRPLANE_MODE_RADIOS","true","false","false","true","true","String","""airplane_mode_radios""","","/**
 * A comma separated list of radios that need to be disabled when airplane mode
 * is on. This overrides WIFI_ON and BLUETOOTH_ON, if Wi-Fi and bluetooth are
 * included in the comma separated list.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_PING_TIMEOUT_MS","true","false","false","true","true","String","""wifi_watchdog_ping_timeout_ms""","","/**
 * The timeout per ping.
 */
","\android\provider\Settings.java"
"android.provider.Settings.CDMA_ROAMING_MODE","true","false","false","true","true","String","""roaming_settings""","","/**
 * The CDMA roaming mode 0 = Home Networks, CDMA default
 * 1 = Roaming on Affiliated networks
 * 2 = Roaming on any networks
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTS_DEFAULT_RATE","true","false","false","true","true","String","""tts_default_rate""","","/**
 * Default text-to-speech engine speech rate. 100 = 1x
 */
","\android\provider\Settings.java"
"android.provider.System.FANCY_IME_ANIMATIONS","true","false","false","true","true","String","""fancy_ime_animations""","","/**
 * Scaling factor for normal window animations. Setting to 0 will disable window
 * animations.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.REBOOT_WINDOW","true","false","false","true","true","String","""reboot_window""","","/**
 * The window of time (in seconds) after each REBOOT_INTERVAL in which
 * a reboot can be executed.  If 0, a reboot will always be executed at
 * exactly the given time.  Otherwise, it will only be executed if
 * the device is idle within the window.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.AIRPLANE_MODE_RADIOS","true","false","false","true","true","String","""airplane_mode_radios""","","/**
 * A comma separated list of radios that need to be disabled when airplane mode
 * is on. This overrides WIFI_ON and BLUETOOTH_ON, if Wi-Fi and bluetooth are
 * included in the comma separated list.
 */
","\android\provider\Settings.java"
"android.provider.Secure.DROPBOX_RESERVE_PERCENT","true","false","false","true","true","String","""dropbox_reserve_percent""","","/**
 * Percent of total disk which {@link android.os.IDropBox} will never dip into.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_AP_COUNT","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_AP_COUNT","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#WIFI_WATCHDOG_AP_COUNT} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.PDP_WATCHDOG_LONG_POLL_INTERVAL_MS","true","false","false","true","true","String","""pdp_watchdog_long_poll_interval_ms""","","/**
 * The interval in milliseconds at which to check packet counts on the
 * mobile data interface when screen is off, to detect possible data
 * connection problems.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_SLEEP_POLICY","true","false","false","true","true","String","""wifi_sleep_policy""","","/**
 * The policy for deciding when Wi-Fi should go to sleep (which will in
 * turn switch to using the mobile data as an Internet connection).
 * <p>
 * Set to one of {@link #WIFI_SLEEP_POLICY_DEFAULT},
 * {@link #WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED}, or
 * {@link #WIFI_SLEEP_POLICY_NEVER}.
 */
","\android\provider\Settings.java"
"android.provider.System.PARENTAL_CONTROL_ENABLED","true","false","false","true","true","String","Secure.PARENTAL_CONTROL_ENABLED","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#PARENTAL_CONTROL_ENABLED}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.System.RADIO_WIFI","true","false","false","true","true","String","""wifi""","","/**
 * Constant for use in AIRPLANE_MODE_RADIOS to specify Wi-Fi radio.
 */
","\android\provider\Settings.java"
"android.provider.Secure.ENABLED_ACCESSIBILITY_SERVICES","true","false","false","true","true","String","""enabled_accessibility_services""","","/**
 * List of the enabled accessibility providers.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_AP_SECURITY","true","false","false","true","true","String","""wifi_ap_security""","","/**
 * AP security
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.MODE_RINGER","true","false","false","true","true","String","""mode_ringer""","","/**
 * Ringer mode. This is used internally, changing this value will not
 * change the ringer mode. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_SLEEP_POLICY","true","false","false","true","true","String","""wifi_sleep_policy""","","/**
 * The policy for deciding when Wi-Fi should go to sleep (which will in
 * turn switch to using the mobile data as an Internet connection).
 * <p>
 * Set to one of {@link #WIFI_SLEEP_POLICY_DEFAULT},
 * {@link #WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED}, or
 * {@link #WIFI_SLEEP_POLICY_NEVER}.
 */
","\android\provider\Settings.java"
"android.provider.NameValueTable.NAME","true","false","false","true","true","String","""name""","","","\android\provider\Settings.java"
"android.provider.Settings.ACTION_SYSTEM_UPDATE_SETTINGS","true","false","false","true","true","String","""android.settings.SYSTEM_UPDATE_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings for system update functionality.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY","true","false","false","true","true","String","""wifi_networks_available_repeat_delay""","","/**
 * Delay (in seconds) before repeating the Wi-Fi networks available notification.
 * Connecting to a network will reset the timer.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_WEB_RESULTS_OVERRIDE_LIMIT","true","false","false","true","true","String","""search_web_results_override_limit""","","/**
 * The number of suggestions the GlobalSearch will ask the web search source for.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACCELEROMETER_ROTATION","true","false","false","true","true","String","""accelerometer_rotation""","","/**
 * Control whether the accelerometer will be used to change screen
 * orientation.  If 0, it will not be used unless explicitly requested
 * by the application; if 1, it will be used by default unless explicitly
 * disabled by the application.
 */
","\android\provider\Settings.java"
"android.provider.Settings.CAR_UNDOCK_SOUND","true","false","false","true","true","String","""car_undock_sound""","","/**
 * URI for the car dock ""out"" event sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.LOCATION_PROVIDERS_ALLOWED","true","false","false","true","true","String","Secure.LOCATION_PROVIDERS_ALLOWED","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#LOCATION_PROVIDERS_ALLOWED}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_EXEC_END_TIME","true","false","false","true","true","String","""memcheck_exec_end_time""","","/**
 * Last time during the day it is okay to kill processes
 * or reboot the device due to low memory situations.  This number is
 * in seconds since midnight.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.END_BUTTON_BEHAVIOR","true","false","false","true","true","String","""end_button_behavior""","","/**
 * What happens when the user presses the end call button if they're not
 * on a call.<br/>
 * <b>Values:</b><br/>
 * 0 - The end button does nothing.<br/>
 * 1 - The end button goes to the home screen.<br/>
 * 2 - The end button puts the device to sleep and locks the keyguard.<br/>
 * 3 - The end button goes to the home screen.  If the user is already on the
 * home screen, it puts the device to sleep.
 */
","\android\provider\Settings.java"
"android.provider.System.AIRPLANE_MODE_ON","true","false","false","true","true","String","""airplane_mode_on""","","/**
 * Whether Airplane Mode is on.
 */
","\android\provider\Settings.java"
"android.provider.System.DEVICE_PROVISIONED","true","false","false","true","true","String","Secure.DEVICE_PROVISIONED","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#DEVICE_PROVISIONED} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_INPUT_METHOD_SETTINGS","true","false","false","true","true","String","""android.settings.INPUT_METHOD_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to configure input methods, in particular
 * allowing the user to enable input methods.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.PREFERRED_CDMA_SUBSCRIPTION","true","false","false","true","true","String","""preferred_cdma_subscription""","","/**
 * The cdma subscription 0 = Subscription from RUIM, when available
 * 1 = Subscription from NV
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ANR_SHOW_BACKGROUND","true","false","false","true","true","String","""anr_show_background""","","/**
 * If nonzero, ANRs in invisible background processes bring up a dialog.
 * Otherwise, the process will be silently killed.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.NameValueCache.mContentProvider","false","false","true","false","false","IContentProvider","null","","// Initially null; set lazily and held forever.  Synchronized on 'this'.
","\android\provider\Settings.java"
"android.provider.Settings.SHORT_KEYLIGHT_DELAY_MS","true","false","false","true","true","String","""short_keylight_delay_ms""","","/**
 * Screen timeout in milliseconds corresponding to the
 * PowerManager's POKE_LOCK_SHORT_TIMEOUT flag (i.e. the fastest
 * possible screen timeout behavior.)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTY_MODE","true","false","false","true","true","String","""tty_mode""","","/**
 * CDMA only settings
 * TTY Mode
 * 0 = OFF
 * 1 = FULL
 * 2 = VCO
 * 3 = HCO
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SMS_OUTGOING_CHECK_INTERVAL_MS","true","false","false","true","true","String","""sms_outgoing_check_interval_ms""","","/**
 * The interval in milliseconds at which to check the number of SMS sent
 * out without asking for use permit, to limit the un-authorized SMS
 * usage.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_INTERVAL","true","false","false","true","true","String","""memcheck_interval""","","/**
 * How frequently (in seconds) to check the memory status of the
 * device.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.CDMA_CELL_BROADCAST_SMS","true","false","false","true","true","String","""cdma_cell_broadcast_sms""","","/**
 * CDMA Cell Broadcast SMS
 * 0 = CDMA Cell Broadcast SMS disabled
 * 1 = CDMA Cell Broadcast SMS enabled
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_PING_DELAY_MS","true","false","false","true","true","String","""wifi_watchdog_ping_delay_ms""","","/**
 * The delay between pings.
 */
","\android\provider\Settings.java"
"android.provider.System.CALL_AUTO_RETRY","true","false","false","true","true","String","""call_auto_retry""","","/**
 * CDMA only settings
 * Whether the auto retry is enabled. The value is
 * boolean (1 or 0).
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.BACKUP_AUTO_RESTORE","true","false","false","true","true","String","""backup_auto_restore""","","/**
 * Controls whether application data is automatically restored from backup
 * at install time.
 * Type: int ( 0 = disabled, 1 = enabled )
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_ON","true","false","false","true","true","String","Secure.WIFI_ON","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#WIFI_ON} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_RECHECK_INTERVAL","true","false","false","true","true","String","""memcheck_recheck_interval""","","/**
 * How frequently to check whether it is a good time to restart things,
 * if the device is in a bad state.  This number is in seconds.  Note:
 * this value must be larger than {@link #MEMCHECK_MIN_ALARM} or else
 * the alarm to schedule the recheck will always appear within the
 * minimum ""do not execute now"" time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.TETHER_DUN_REQUIRED","true","false","false","true","true","String","""tether_dun_required""","","/**
 * Used to require DUN APN on the device or not - defaults to a build config value
 * which defaults to false
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.DOCK_SOUNDS_ENABLED","true","false","false","true","true","String","""dock_sounds_enabled""","","/**
 * Whether to play a sound for dock events.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.DROPBOX_QUOTA_KB","true","false","false","true","true","String","""dropbox_quota_kb""","","/**
 * Maximum amount of disk space used by {@link android.os.IDropBox} no matter what.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.DEFAULT_RINGTONE_URI","true","false","false","true","true","Uri","getUriFor(RINGTONE)","","/**
 * A {@link Uri} that will point to the current default ringtone at any
 * given time.
 * <p>
 * If the current default ringtone is in the DRM provider and the caller
 * does not have permission, the exception will be a
 * FileNotFoundException.
 */
","\android\provider\Settings.java"
"android.provider.Secure.THROTTLE_NOTIFICATION_TYPE","true","false","false","true","true","String","""throttle_notification_type""","","/**
 * The throttling notifications we should send
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTS_DEFAULT_SYNTH","true","false","false","true","true","String","""tts_default_synth""","","/**
 * Default text-to-speech engine.
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_MIN_CLICKS_FOR_SOURCE_RANKING","true","false","false","true","true","String","""search_min_clicks_for_source_ranking""","","/**
 * The minimum number of clicks needed to rank a source in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MUTE_STREAMS_AFFECTED","true","false","false","true","true","String","""mute_streams_affected""","","/**
 * Determines which streams are affected by mute. The
 * stream type's bit should be set to 1 if it should be muted when a mute request
 * is received.
 */
","\android\provider\Settings.java"
"android.provider.Secure.MOUNT_UMS_AUTOSTART","true","false","false","true","true","String","""mount_ums_autostart""","","/**
 * Whether or not UMS auto-starts on UMS host detection. (0 = false, 1 = true)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.HTTP_PROXY","true","false","false","true","true","String","""http_proxy""","","/**
 * Host name and port for a user-selected proxy.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT","true","false","false","true","true","String","""wifi_watchdog_initial_ignored_ping_count""","","/**
 * The number of initial pings to perform that *may* be ignored if they
 * fail. Again, if these fail, they will *not* be used in packet loss
 * calculation. For example, one network always seemed to time out for
 * the first couple pings, so this is set to 3 by default.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_MAX_SHORTCUTS_RETURNED","true","false","false","true","true","String","""search_max_shortcuts_returned""","","/**
 * The maximum number of shortcuts shown by GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_PING_COUNT","true","false","false","true","true","String","""wifi_watchdog_ping_count""","","/**
 * The number of pings to test if an access point is a good connection.
 */
","\android\provider\Settings.java"
"android.provider.Settings.THROTTLE_HELP_URI","true","false","false","true","true","String","""throttle_help_uri""","","/**
 * Help URI for data throttling policy
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.DROPBOX_MAX_FILES","true","false","false","true","true","String","""dropbox_max_files""","","/**
 * Maximum number of entry files which {@link android.os.IDropBox} will keep around.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.TEXT_SHOW_PASSWORD","true","false","false","true","true","String","""show_password""","","/**
 * Setting to showing password characters in text editors. 1 = On, 0 = Off
 */
","\android\provider\Settings.java"
"android.provider.Settings.THROTTLE_MAX_NTP_CACHE_AGE_SEC","true","false","false","true","true","String","""throttle_max_ntp_cache_age_sec""","","/**
 * The length of time in Sec that we allow our notion of NTP time
 * to be cached before we refresh it
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.BACKGROUND_DATA","true","false","false","true","true","String","""background_data""","","/**
 * Whether background data usage is allowed by the user. See
 * ConnectivityManager for more info.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_STATIC_GATEWAY","true","false","false","true","true","String","""wifi_static_gateway""","","/**
 * If using static IP, the gateway's IP address.
 * <p>
 * Example: ""192.168.1.1""
 */
","\android\provider\Settings.java"
"android.provider.Settings.HAPTIC_FEEDBACK_ENABLED","true","false","false","true","true","String","""haptic_feedback_enabled""","","/**
 * Whether the haptic feedback (long presses, ...) are enabled. The value is
 * boolean (1 or 0).
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_PING_TIMEOUT_MS","true","false","false","true","true","String","""wifi_watchdog_ping_timeout_ms""","","/**
 * The timeout per ping.
 */
","\android\provider\Settings.java"
"android.provider.System.TEXT_AUTO_REPLACE","true","false","false","true","true","String","""auto_replace""","","/**
 * Setting to enable Auto Replace (AutoText) in text editors. 1 = On, 0 = Off
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_SHORTCUT_REFRESH_CORE_POOL_SIZE","true","false","false","true","true","String","""search_shortcut_refresh_core_pool_size""","","/**
 * The size of the core thread pool for shortcut refreshing in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.FOLDER","true","false","false","true","true","String","""folder""","","/**
 * Arbitrary string (displayed to the user) that allows bookmarks to be
 * organized into categories.  There are some special names for
 * standard folders, which all start with '@'.  The label displayed for
 * the folder changes with the locale (via {@link #getLabelForFolder}) but
 * the folder name does not change so you can consistently query for
 * the folder regardless of the current locale.
 *
 * <P>Type: TEXT</P>
 */
","\android\provider\Settings.java"
"android.provider.System.DEFAULT_NOTIFICATION_URI","true","false","false","true","true","Uri","getUriFor(NOTIFICATION_SOUND)","","/**
 * A {@link Uri} that will point to the current default notification
 * sound at any given time.
 *
 * @see #DEFAULT_RINGTONE_URI
 */
","\android\provider\Settings.java"
"android.provider.Settings.INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF","true","false","false","true","true","int","0x1","","/**
 * INCALL_POWER_BUTTON_BEHAVIOR value for ""turn off screen"".
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.REBOOT_START_TIME","true","false","false","true","true","String","""reboot_start_time""","","/**
 * First time during the day it is okay to force a reboot of the
 * device (if REBOOT_INTERVAL is set).  This number is
 * in seconds since midnight.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_MAX_AP_CHECKS","true","false","false","true","true","String","""wifi_watchdog_max_ap_checks""","","/**
 * The maximum number of access points (per network) to attempt to test.
 * If this number is reached, the watchdog will no longer monitor the
 * initial connection state for the network. This is a safeguard for
 * networks containing multiple APs whose DNS does not respond to pings.
 */
","\android\provider\Settings.java"
"android.provider.Settings.PDP_WATCHDOG_POLL_INTERVAL_MS","true","false","false","true","true","String","""pdp_watchdog_poll_interval_ms""","","/**
 * The interval in milliseconds at which to check packet counts on the
 * mobile data interface when screen is on, to detect possible data
 * connection problems.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_PROMOTED_SOURCE_DEADLINE_MILLIS","true","false","false","true","true","String","""search_promoted_source_deadline_millis""","","/**
 * The number of milliseconds that GlobalSearch will wait for suggestions from
 * promoted sources before continuing with all other sources.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_MAX_AP_CHECKS","true","false","false","true","true","String","""wifi_watchdog_max_ap_checks""","","/**
 * The maximum number of access points (per network) to attempt to test.
 * If this number is reached, the watchdog will no longer monitor the
 * initial connection state for the network. This is a safeguard for
 * networks containing multiple APs whose DNS does not respond to pings.
 */
","\android\provider\Settings.java"
"android.provider.Settings.CALL_METHOD_GET_SYSTEM","true","false","false","true","true","String","""GET_system""","","/**
 * @hide - Private call() method on SettingsProvider to read from 'system' table.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_STATIC_DNS1","true","false","false","true","true","String","""wifi_static_dns1""","","/**
 * If using static IP, the primary DNS's IP address.
 * <p>
 * Example: ""192.168.1.1""
 */
","\android\provider\Settings.java"
"android.provider.Secure.LAST_SETUP_SHOWN","true","false","false","true","true","String","""last_setup_shown""","","/**
 * Version for which the setup wizard was last shown.  Bumped for
 * each release when there is new setup information to show.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.TITLE","true","false","false","true","true","String","""title""","","/**
 * Descriptive name of the bookmark that can be displayed to the user.
 * If this is empty, the title should be resolved at display time (use
 * {@link #getTitle(Context, Cursor)} any time you want to display the
 * title of a bookmark.)
 * <P>
 * Type: TEXT
 * </P>
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_STATIC_DNS2","true","false","false","true","true","String","""wifi_static_dns2""","","/**
 * If using static IP, the secondary DNS's IP address.
 * <p>
 * Example: ""192.168.1.2""
 */
","\android\provider\Settings.java"
"android.provider.Secure.PDP_WATCHDOG_MAX_PDP_RESET_FAIL_COUNT","true","false","false","true","true","String","""pdp_watchdog_max_pdp_reset_fail_count""","","/**
 * The number of failed PDP reset attempts before moving to something more
 * drastic: re-registering to the network.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.USB_MASS_STORAGE_ENABLED","true","false","false","true","true","String","Secure.USB_MASS_STORAGE_ENABLED","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#USB_MASS_STORAGE_ENABLED} instead
 */
","\android\provider\Settings.java"
"android.provider.System.TEXT_AUTO_PUNCTUATE","true","false","false","true","true","String","""auto_punctuate""","","/**
 * Setting to enable Auto Punctuate in text editors. 1 = On, 0 = Off. This
 * feature converts two spaces to a ""."" and space.
 */
","\android\provider\Settings.java"
"android.provider.System.DESK_DOCK_SOUND","true","false","false","true","true","String","""desk_dock_sound""","","/**
 * URI for the desk dock ""in"" event sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_QUERY_THREAD_MAX_POOL_SIZE","true","false","false","true","true","String","""search_query_thread_max_pool_size""","","/**
 * The maximum size of the thread pool for suggestion queries in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED","true","false","false","true","true","String","""lock_pattern_tactile_feedback_enabled""","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.RADIO_WIFI","true","false","false","true","true","String","""wifi""","","/**
 * Constant for use in AIRPLANE_MODE_RADIOS to specify Wi-Fi radio.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ENABLED_ACCESSIBILITY_SERVICES","true","false","false","true","true","String","""enabled_accessibility_services""","","/**
 * List of the enabled accessibility providers.
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_PHONE_ENABLED","true","false","false","true","true","String","""memcheck_phone_enabled""","","/**
 * Boolean indicating whether restarting the phone process due to
 * memory checks is enabled.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.BLUETOOTH_DISCOVERABILITY","true","false","false","true","true","String","""bluetooth_discoverability""","","/**
 * Determines whether remote devices may discover and/or connect to
 * this device.
 * <P>Type: INT</P>
 * 2 -- discoverable and connectable
 * 1 -- connectable but not discoverable
 * 0 -- neither connectable nor discoverable
 */
","\android\provider\Settings.java"
"android.provider.Secure.ADB_ENABLED","true","false","false","true","true","String","""adb_enabled""","","/**
 * Whether ADB is enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOICE_RECOGNITION_SERVICE","true","false","false","true","true","String","""voice_recognition_service""","","/**
 * The {@link ComponentName} string of the service to be used as the voice recognition
 * service.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.END_BUTTON_BEHAVIOR_SLEEP","true","false","false","true","true","int","0x2","","/**
 * END_BUTTON_BEHAVIOR value for ""go to sleep"".
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_SETTINGS","true","false","false","true","true","String","""android.settings.SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show system settings.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: nothing.
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.SHORTCUT","true","false","false","true","true","String","""shortcut""","","/**
 * Optional shortcut character associated with this bookmark.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_ON","true","false","false","true","true","String","""wifi_on""","","/**
 * Whether the Wi-Fi should be on.  Only the Wi-Fi service should touch this.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SHOW_PROCESSES","true","false","false","true","true","String","""show_processes""","","/**
 * Control whether the process CPU usage meter should be shown.
 */
","\android\provider\Settings.java"
"android.provider.Settings.BACKUP_ENABLED","true","false","false","true","true","String","""backup_enabled""","","/**
 * Controls whether settings backup is enabled.
 * Type: int ( 0 = disabled, 1 = enabled )
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.TAG","false","false","true","true","true","String","""Bookmarks""","","","\android\provider\Settings.java"
"android.provider.System.WAIT_FOR_DEBUGGER","true","false","false","true","true","String","""wait_for_debugger""","","/**
 * If 1, when launching DEBUG_APP it will wait for the debugger before
 * starting user code.  If 0, it will run normally.
 */
","\android\provider\Settings.java"
"android.provider.Settings.PDP_WATCHDOG_MAX_PDP_RESET_FAIL_COUNT","true","false","false","true","true","String","""pdp_watchdog_max_pdp_reset_fail_count""","","/**
 * The number of failed PDP reset attempts before moving to something more
 * drastic: re-registering to the network.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.DESK_UNDOCK_SOUND","true","false","false","true","true","String","""desk_undock_sound""","","/**
 * URI for the desk dock ""out"" event sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SHORTCUT","true","false","false","true","true","String","""shortcut""","","/**
 * Optional shortcut character associated with this bookmark.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Settings.java"
"android.provider.System.SOUND_EFFECTS_ENABLED","true","false","false","true","true","String","""sound_effects_enabled""","","/**
 * Whether the sounds effects (key clicks, lid open ...) are enabled. The value is
 * boolean (1 or 0).
 */
","\android\provider\Settings.java"
"android.provider.NameValueCache.mValuesVersion","false","false","true","false","false","long","0","","","\android\provider\Settings.java"
"android.provider.System.LOCK_PATTERN_VISIBLE","true","false","false","true","true","String","""lock_pattern_visible_pattern""","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#LOCK_PATTERN_VISIBLE}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.ALWAYS_FINISH_ACTIVITIES","true","false","false","true","true","String","""always_finish_activities""","","/**
 * If 1, the activity manager will aggressively finish activities and
 * processes as soon as they are no longer needed.  If 0, the normal
 * extended lifetime is used.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON","true","false","false","true","true","String","Secure.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON} instead
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_NUM_ALLOWED_CHANNELS","true","false","false","true","true","String","""wifi_num_allowed_channels""","","/**
 * The number of radio channels that are allowed in the local
 * 802.11 regulatory domain.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.END_BUTTON_BEHAVIOR_SLEEP","true","false","false","true","true","int","0x2","","/**
 * END_BUTTON_BEHAVIOR value for ""go to sleep"".
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SETTINGS_TO_BACKUP","true","false","false","true","true","String","{ ADB_ENABLED, ALLOW_MOCK_LOCATION, PARENTAL_CONTROL_ENABLED, PARENTAL_CONTROL_REDIRECT_URL, USB_MASS_STORAGE_ENABLED, ACCESSIBILITY_ENABLED, BACKUP_AUTO_RESTORE, ENABLED_ACCESSIBILITY_SERVICES, TTS_USE_DEFAULTS, TTS_DEFAULT_RATE, TTS_DEFAULT_PITCH, TTS_DEFAULT_SYNTH, TTS_DEFAULT_LANG, TTS_DEFAULT_COUNTRY, TTS_ENABLED_PLUGINS, WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON, WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY, WIFI_NUM_ALLOWED_CHANNELS, WIFI_NUM_OPEN_NETWORKS_KEPT, MOUNT_PLAY_NOTIFICATION_SND, MOUNT_UMS_AUTOSTART, MOUNT_UMS_PROMPT, MOUNT_UMS_NOTIFY_ENABLED, UI_NIGHT_MODE }","","/**
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.USE_GOOGLE_MAIL","true","false","false","true","true","String","""use_google_mail""","","/**
 * If this setting is set (to anything), then all references
 * to Gmail on the device must change to Google Mail.
 */
","\android\provider\Settings.java"
"android.provider.System.STAY_ON_WHILE_PLUGGED_IN","true","false","false","true","true","String","""stay_on_while_plugged_in""","","/**
 * Whether we keep the device on while the device is plugged in.
 * Supported values are:
 * <ul>
 * <li>{@code 0} to never stay on while plugged in</li>
 * <li>{@link BatteryManager#BATTERY_PLUGGED_AC} to stay on for AC charger</li>
 * <li>{@link BatteryManager#BATTERY_PLUGGED_USB} to stay on for USB charger</li>
 * </ul>
 * These values can be OR-ed together.
 */
","\android\provider\Settings.java"
"android.provider.Secure.SHORT_KEYLIGHT_DELAY_MS","true","false","false","true","true","String","""short_keylight_delay_ms""","","/**
 * Screen timeout in milliseconds corresponding to the
 * PowerManager's POKE_LOCK_SHORT_TIMEOUT flag (i.e. the fastest
 * possible screen timeout behavior.)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON","true","false","false","true","true","String","""wifi_networks_available_notification_on""","","/**
 * Whether to notify the user of open networks.
 * <p>
 * If not connected and the scan results have an open network, we will
 * put this notification up. If we attempt to connect to a network or
 * the open network(s) disappear, we remove the notification. When we
 * show the notification, we will not show it again for
 * {@link android.provider.Settings.Secure#WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY} time.
 */
","\android\provider\Settings.java"
"android.provider.System.BLUETOOTH_DISCOVERABILITY","true","false","false","true","true","String","""bluetooth_discoverability""","","/**
 * Determines whether remote devices may discover and/or connect to
 * this device.
 * <P>Type: INT</P>
 * 2 -- discoverable and connectable
 * 1 -- connectable but not discoverable
 * 0 -- neither connectable nor discoverable
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_STATIC_DNS2","true","false","false","true","true","String","""wifi_static_dns2""","","/**
 * If using static IP, the secondary DNS's IP address.
 * <p>
 * Example: ""192.168.1.2""
 */
","\android\provider\Settings.java"
"android.provider.System.VOLUME_RING","true","false","false","true","true","String","""volume_ring""","","/**
 * Ringer volume. This is used internally, changing this value will not
 * change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_STATIC_DNS1","true","false","false","true","true","String","""wifi_static_dns1""","","/**
 * If using static IP, the primary DNS's IP address.
 * <p>
 * Example: ""192.168.1.1""
 */
","\android\provider\Settings.java"
"android.provider.Settings.LOCK_PATTERN_VISIBLE","true","false","false","true","true","String","""lock_pattern_visible_pattern""","","/**
 * Whether lock pattern is visible as user enters (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.Settings.MOBILE_DATA","true","false","false","true","true","String","""mobile_data""","","/**
 * Whether mobile data connections are allowed by the user.  See
 * ConnectivityManager for more info.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MOUNT_UMS_NOTIFY_ENABLED","true","false","false","true","true","String","""mount_ums_notify_enabled""","","/**
 * Whether or not a notification is displayed while UMS is enabled. (0 = false, 1 = true)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.END_BUTTON_BEHAVIOR_HOME","true","false","false","true","true","int","0x1","","/**
 * END_BUTTON_BEHAVIOR value for ""go home"".
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.LOCK_PATTERN_VISIBLE","true","false","false","true","true","String","""lock_pattern_visible_pattern""","","/**
 * Whether lock pattern is visible as user enters (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTS_DEFAULT_LANG","true","false","false","true","true","String","""tts_default_lang""","","/**
 * Default text-to-speech language.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_SHORTCUT_REFRESH_CORE_POOL_SIZE","true","false","false","true","true","String","""search_shortcut_refresh_core_pool_size""","","/**
 * The size of the core thread pool for shortcut refreshing in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOLUME_MUSIC","true","false","false","true","true","String","""volume_music""","","/**
 * Music/media/gaming volume. This is used internally, changing this
 * value will not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.VIBRATE_IN_SILENT","true","false","false","true","true","String","""vibrate_in_silent""","","/**
 * Whether silent mode should allow vibration feedback. This is used
 * internally in AudioService and the Sound settings activity to
 * coordinate decoupling of vibrate and silent modes. This setting
 * will likely be removed in a future release with support for
 * audio/vibe feedback profiles.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.NameValueCache.mValues","false","false","true","false","true","HashMap<String,String>","new HashMap<String, String>()","","// Must synchronize on 'this' to access mValues and mValuesVersion.
","\android\provider\Settings.java"
"android.provider.Settings.SYS_PROP_SETTING_VERSION","true","false","false","true","true","String","""sys.settings_secure_version""","","","\android\provider\Settings.java"
"android.provider.Secure.sNameValueCache","false","false","true","true","false","NameValueCache","null","","// Populated lazily, guarded by class object:
","\android\provider\Settings.java"
"android.provider.Settings.ALLOW_MOCK_LOCATION","true","false","false","true","true","String","""mock_location""","","/**
 * Setting to allow mock locations and location provider status to be injected into the
 * LocationManager service for testing purposes during application development.  These
 * locations and status values  override actual location and status information generated
 * by network, gps, or other location providers.
 */
","\android\provider\Settings.java"
"android.provider.System.DATE_FORMAT","true","false","false","true","true","String","""date_format""","","/**
 * Date format string
 * mm/dd/yyyy
 * dd/mm/yyyy
 * yyyy/mm/dd
 */
","\android\provider\Settings.java"
"android.provider.Settings.SCREEN_BRIGHTNESS_MODE","true","false","false","true","true","String","""screen_brightness_mode""","","/**
 * Control whether to enable automatic brightness mode.
 */
","\android\provider\Settings.java"
"android.provider.System.NEXT_ALARM_FORMATTED","true","false","false","true","true","String","""next_alarm_formatted""","","/**
 * A formatted string of the next alarm that is set, or the empty string
 * if there is no alarm set.
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTS_ENABLED_PLUGINS","true","false","false","true","true","String","""tts_enabled_plugins""","","/**
 * Space delimited list of plugin packages that are enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.LOCKSCREEN_SOUNDS_ENABLED","true","false","false","true","true","String","""lockscreen_sounds_enabled""","","/**
 * Whether to play sounds when the keyguard is shown and dismissed.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.NEXT_ALARM_FORMATTED","true","false","false","true","true","String","""next_alarm_formatted""","","/**
 * A formatted string of the next alarm that is set, or the empty string
 * if there is no alarm set.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_USER_DICTIONARY_SETTINGS","true","false","false","true","true","String","""android.settings.USER_DICTIONARY_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to manage the user input dictionary.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.System.UNLOCK_SOUND","true","false","false","true","true","String","""unlock_sound""","","/**
 * URI for the ""device unlocked"" (keyguard dismissed) sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON","true","false","false","true","true","String","""wifi_networks_available_notification_on""","","/**
 * Whether to notify the user of open networks.
 * <p>
 * If not connected and the scan results have an open network, we will
 * put this notification up. If we attempt to connect to a network or
 * the open network(s) disappear, we remove the notification. When we
 * show the notification, we will not show it again for
 * {@link android.provider.Settings.Secure#WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY} time.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ORDERING","true","false","false","true","true","String","""ordering""","","/**
 * The order in which the bookmark should be displayed
 * <P>Type: INTEGER</P>
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_DATE_SETTINGS","true","false","false","true","true","String","""android.settings.DATE_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of date and time.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS","true","false","false","true","true","String","""wifi_watchdog_background_check_timeout_ms""","","/**
 * The timeout for a background ping
 */
","\android\provider\Settings.java"
"android.provider.System.SHOW_GTALK_SERVICE_STATUS","true","false","false","true","true","String","""SHOW_GTALK_SERVICE_STATUS""","","","\android\provider\Settings.java"
"android.provider.Secure.THROTTLE_RESET_DAY","true","false","false","true","true","String","""throttle_reset_day""","","/**
 * The bandwidth throttle reset calendar day (1-28)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ID","true","false","false","true","true","String","""_id""","","/**
 * The row ID.
 * <p>Type: INTEGER</p>
 */
","\android\provider\Settings.java"
"android.provider.Settings.SETTINGS_CLASSNAME","true","false","false","true","true","String","""settings_classname""","","// TODO: 881807
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS","true","false","false","true","true","String","""wifi_mobile_data_transition_wakelock_timeout_ms""","","/**
 * Maximum amount of time in milliseconds to hold a wakelock while waiting for mobile
 * data connectivity to be established after a disconnect from Wi-Fi.
 */
","\android\provider\Settings.java"
"android.provider.NameValueCache.NAME_EQ_PLACEHOLDER","false","false","true","true","true","String","""name=?""","","","\android\provider\Settings.java"
"android.provider.Settings.ACTION_APN_SETTINGS","true","false","false","true","true","String","""android.settings.APN_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of APNs.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: nothing.
 */
","\android\provider\Settings.java"
"android.provider.Secure.BATTERY_DISCHARGE_THRESHOLD","true","false","false","true","true","String","""battery_discharge_threshold""","","/**
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_NUM_ALLOWED_CHANNELS","true","false","false","true","true","String","""wifi_num_allowed_channels""","","/**
 * The number of radio channels that are allowed in the local
 * 802.11 regulatory domain.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.LOCAL_LOGV","false","false","true","true","true","boolean","Config.LOGV || false","","","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_WATCH_LIST","true","false","false","true","true","String","""wifi_watchdog_watch_list""","","/**
 * A comma-separated list of SSIDs for which the Wi-Fi watchdog should be enabled.
 */
","\android\provider\Settings.java"
"android.provider.System.NETWORK_PREFERENCE","true","false","false","true","true","String","Secure.NETWORK_PREFERENCE","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#NETWORK_PREFERENCE} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOLUME_RING","true","false","false","true","true","String","""volume_ring""","","/**
 * Ringer volume. This is used internally, changing this value will not
 * change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS","true","false","false","true","true","String","""android.settings.LOCATION_SOURCE_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of current location
 * sources.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.AIRPLANE_MODE_TOGGLEABLE_RADIOS","true","false","false","true","true","String","""airplane_mode_toggleable_radios""","","/**
 * A comma separated list of radios that should to be disabled when airplane mode
 * is on, but can be manually reenabled by the user.  For example, if RADIO_WIFI is
 * added to both AIRPLANE_MODE_RADIOS and AIRPLANE_MODE_TOGGLEABLE_RADIOS, then Wifi
 * will be turned off when entering airplane mode, but the user will be able to reenable
 * Wifi in the Settings app.
 *
 * {@hide}
 */
","\android\provider\Settings.java"
"android.provider.Settings.PARENTAL_CONTROL_ENABLED","true","false","false","true","true","String","""parental_control_enabled""","","/**
 * No longer supported.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS","true","false","false","true","true","String","""wifi_watchdog_background_check_delay_ms""","","/**
 * The delay between background checks.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_PING_DELAY_MS","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_PING_DELAY_MS","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#WIFI_WATCHDOG_PING_DELAY_MS}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.TETHER_SUPPORTED","true","false","false","true","true","String","""tether_supported""","","/**
 * Used to disable Tethering on a device - defaults to true
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.ANDROID_ID","true","false","false","true","true","String","""android_id""","","/**
 * A 64-bit number (as a hex string) that is randomly
 * generated on the device's first boot and should remain
 * constant for the lifetime of the device.  (The value may
 * change if a factory reset is performed on the device.)
 */
","\android\provider\Settings.java"
"android.provider.Settings.DEFAULT_INPUT_METHOD","true","false","false","true","true","String","""default_input_method""","","/**
 * Setting to record the input method used by default, holding the ID
 * of the desired method.
 */
","\android\provider\Settings.java"
"android.provider.Secure.INSTALL_NON_MARKET_APPS","true","false","false","true","true","String","""install_non_market_apps""","","/**
 * Whether the package installer should allow installation of apps downloaded from
 * sources other than the Android Market (vending machine).
 *
 * 1 = allow installing from other sources
 * 0 = only allow installing from the Android Market
 */
","\android\provider\Settings.java"
"android.provider.System.LOW_BATTERY_SOUND","true","false","false","true","true","String","""low_battery_sound""","","/**
 * URI for the low battery sound file.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SETTINGS_TO_BACKUP","true","false","false","true","true","String","{ ADB_ENABLED, ALLOW_MOCK_LOCATION, PARENTAL_CONTROL_ENABLED, PARENTAL_CONTROL_REDIRECT_URL, USB_MASS_STORAGE_ENABLED, ACCESSIBILITY_ENABLED, BACKUP_AUTO_RESTORE, ENABLED_ACCESSIBILITY_SERVICES, TTS_USE_DEFAULTS, TTS_DEFAULT_RATE, TTS_DEFAULT_PITCH, TTS_DEFAULT_SYNTH, TTS_DEFAULT_LANG, TTS_DEFAULT_COUNTRY, TTS_ENABLED_PLUGINS, WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON, WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY, WIFI_NUM_ALLOWED_CHANNELS, WIFI_NUM_OPEN_NETWORKS_KEPT, MOUNT_PLAY_NOTIFICATION_SND, MOUNT_UMS_AUTOSTART, MOUNT_UMS_PROMPT, MOUNT_UMS_NOTIFY_ENABLED, UI_NIGHT_MODE }","","/**
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.DROPBOX_RESERVE_PERCENT","true","false","false","true","true","String","""dropbox_reserve_percent""","","/**
 * Percent of total disk which {@link android.os.IDropBox} will never dip into.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.THROTTLE_THRESHOLD_BYTES","true","false","false","true","true","String","""throttle_threshold_bytes""","","/**
 * The bandwidth throttle threshold (long)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.PARENTAL_CONTROL_REDIRECT_URL","true","false","false","true","true","String","""parental_control_redirect_url""","","/**
 * No longer supported.
 */
","\android\provider\Settings.java"
"android.provider.System.POINTER_LOCATION","true","false","false","true","true","String","""pointer_location""","","/**
 * Show pointer location on screen?
 * 0 = no
 * 1 = yes
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.UNLOCK_SOUND","true","false","false","true","true","String","""unlock_sound""","","/**
 * URI for the ""device unlocked"" (keyguard dismissed) sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_ON","true","false","false","true","true","String","""wifi_watchdog_on""","","/**
 * Whether the Wi-Fi watchdog is enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTS_USE_DEFAULTS","true","false","false","true","true","String","""tts_use_defaults""","","/**
 * Setting to always use the default text-to-speech settings regardless
 * of the application settings.
 * 1 = override application settings,
 * 0 = use application settings (if specified).
 */
","\android\provider\Settings.java"
"android.provider.Settings.USE_GOOGLE_MAIL","true","false","false","true","true","String","""use_google_mail""","","/**
 * If this setting is set (to anything), then all references
 * to Gmail on the device must change to Google Mail.
 */
","\android\provider\Settings.java"
"android.provider.System.DEFAULT_RINGTONE_URI","true","false","false","true","true","Uri","getUriFor(RINGTONE)","","/**
 * A {@link Uri} that will point to the current default ringtone at any
 * given time.
 * <p>
 * If the current default ringtone is in the DRM provider and the caller
 * does not have permission, the exception will be a
 * FileNotFoundException.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_SAVED_STATE","true","false","false","true","true","String","""wifi_saved_state""","","/**
 * Used to save the Wifi_ON state prior to tethering.
 * This state will be checked to restore Wifi after
 * the user turns off tethering.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_STATIC_IP","true","false","false","true","true","String","""wifi_static_ip""","","/**
 * The static IP address.
 * <p>
 * Example: ""192.168.1.51""
 */
","\android\provider\Settings.java"
"android.provider.Secure.PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS","true","false","false","true","true","String","""pdp_watchdog_error_poll_interval_ms""","","/**
 * The interval in milliseconds at which to check packet counts on the
 * mobile data interface after {@link #PDP_WATCHDOG_TRIGGER_PACKET_COUNT}
 * outgoing packets has been reached without incoming packets.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.DROPBOX_AGE_SECONDS","true","false","false","true","true","String","""dropbox_age_seconds""","","/**
 * Maximum age of entries kept by {@link android.os.IDropBox}.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.MOUNT_UMS_PROMPT","true","false","false","true","true","String","""mount_ums_prompt""","","/**
 * Whether or not a notification is displayed on UMS host detection. (0 = false, 1 = true)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF","true","false","false","true","true","int","0x1","","/**
 * INCALL_POWER_BUTTON_BEHAVIOR value for ""turn off screen"".
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.NETWORK_PREFERENCE","true","false","false","true","true","String","""network_preference""","","/**
 * User preference for which network(s) should be used. Only the
 * connectivity service should touch this.
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_PHONE_SOFT_THRESHOLD","true","false","false","true","true","String","""memcheck_phone_soft""","","/**
 * How many bytes the phone process must be below to avoid scheduling
 * a soft restart.  This restart will happen when it is next determined
 * to be a good time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.FOLDER","true","false","false","true","true","String","""folder""","","/**
 * Arbitrary string (displayed to the user) that allows bookmarks to be
 * organized into categories.  There are some special names for
 * standard folders, which all start with '@'.  The label displayed for
 * the folder changes with the locale (via {@link #getLabelForFolder}) but
 * the folder name does not change so you can consistently query for
 * the folder regardless of the current locale.
 *
 * <P>Type: TEXT</P>
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT} instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.DEFAULT_INPUT_METHOD","true","false","false","true","true","String","""default_input_method""","","/**
 * Setting to record the input method used by default, holding the ID
 * of the desired method.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS","true","false","false","true","true","String","""wifi_watchdog_background_check_timeout_ms""","","/**
 * The timeout for a background ping
 */
","\android\provider\Settings.java"
"android.provider.System.SETTINGS_TO_BACKUP","true","false","false","true","true","String","{ STAY_ON_WHILE_PLUGGED_IN, WIFI_SLEEP_POLICY, WIFI_USE_STATIC_IP, WIFI_STATIC_IP, WIFI_STATIC_GATEWAY, WIFI_STATIC_NETMASK, WIFI_STATIC_DNS1, WIFI_STATIC_DNS2, BLUETOOTH_DISCOVERABILITY, BLUETOOTH_DISCOVERABILITY_TIMEOUT, DIM_SCREEN, SCREEN_OFF_TIMEOUT, SCREEN_BRIGHTNESS, SCREEN_BRIGHTNESS_MODE, VIBRATE_ON, NOTIFICATIONS_USE_RING_VOLUME, MODE_RINGER, MODE_RINGER_STREAMS_AFFECTED, MUTE_STREAMS_AFFECTED, VOLUME_VOICE, VOLUME_SYSTEM, VOLUME_RING, VOLUME_MUSIC, VOLUME_ALARM, VOLUME_NOTIFICATION, VOLUME_BLUETOOTH_SCO, VOLUME_VOICE + APPEND_FOR_LAST_AUDIBLE, VOLUME_SYSTEM + APPEND_FOR_LAST_AUDIBLE, VOLUME_RING + APPEND_FOR_LAST_AUDIBLE, VOLUME_MUSIC + APPEND_FOR_LAST_AUDIBLE, VOLUME_ALARM + APPEND_FOR_LAST_AUDIBLE, VOLUME_NOTIFICATION + APPEND_FOR_LAST_AUDIBLE, VOLUME_BLUETOOTH_SCO + APPEND_FOR_LAST_AUDIBLE, VIBRATE_IN_SILENT, TEXT_AUTO_REPLACE, TEXT_AUTO_CAPS, TEXT_AUTO_PUNCTUATE, TEXT_SHOW_PASSWORD, AUTO_TIME, TIME_12_24, DATE_FORMAT, ACCELEROMETER_ROTATION, DTMF_TONE_WHEN_DIALING, DTMF_TONE_TYPE_WHEN_DIALING, EMERGENCY_TONE, CALL_AUTO_RETRY, HEARING_AID, TTY_MODE, SOUND_EFFECTS_ENABLED, HAPTIC_FEEDBACK_ENABLED, POWER_SOUNDS_ENABLED, DOCK_SOUNDS_ENABLED, LOCKSCREEN_SOUNDS_ENABLED, SHOW_WEB_SUGGESTIONS, NOTIFICATION_LIGHT_PULSE }","","/**
 * Settings to backup. This is here so that it's in the same place as the settings
 * keys and easy to update.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SYS_FREE_STORAGE_LOG_INTERVAL","true","false","false","true","true","String","""sys_free_storage_log_interval""","","/**
 * The interval in minutes after which the amount of free storage left on the
 * device is logged to the event log
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_PING_COUNT","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_PING_COUNT","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#WIFI_WATCHDOG_PING_COUNT} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_AIRPLANE_MODE_SETTINGS","true","false","false","true","true","String","""android.settings.AIRPLANE_MODE_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow entering/exiting airplane mode.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_APPLICATION_DEVELOPMENT_SETTINGS","true","false","false","true","true","String","""android.settings.APPLICATION_DEVELOPMENT_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of application
 * development-related settings.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you safeguard
 * against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DISABLED_SYSTEM_INPUT_METHODS","true","false","false","true","true","String","""disabled_system_input_methods""","","/**
 * List of system input methods that are currently disabled.  This is a string
 * containing the IDs of all disabled input methods, each ID separated
 * by ':'.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_IDLE_MS","true","false","false","true","true","String","""wifi_idle_ms""","","/**
 * The interval in milliseconds after which Wi-Fi is considered idle.
 * When idle, it is possible for the device to be switched from Wi-Fi to
 * the mobile data network.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.CAR_DOCK_SOUND","true","false","false","true","true","String","""car_dock_sound""","","/**
 * URI for the car dock ""in"" event sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.DATE_FORMAT","true","false","false","true","true","String","""date_format""","","/**
 * Date format string
 * mm/dd/yyyy
 * dd/mm/yyyy
 * yyyy/mm/dd
 */
","\android\provider\Settings.java"
"android.provider.Settings.ADB_ENABLED","true","false","false","true","true","String","""adb_enabled""","","/**
 * Whether ADB is enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_QUERY_THREAD_CORE_POOL_SIZE","true","false","false","true","true","String","""search_query_thread_core_pool_size""","","/**
 * The size of the core thread pool for suggestion queries in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ENABLED_INPUT_METHODS","true","false","false","true","true","String","""enabled_input_methods""","","/**
 * List of input methods that are currently enabled.  This is a string
 * containing the IDs of all enabled input methods, each ID separated
 * by ':'.
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOLUME_SYSTEM","true","false","false","true","true","String","""volume_system""","","/**
 * System/notifications volume. This is used internally, changing this
 * value will not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOLUME_NOTIFICATION","true","false","false","true","true","String","""volume_notification""","","/**
 * Notification volume. This is used internally, changing this
 * value will not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.INTENT","true","false","false","true","true","String","""intent""","","/**
 * The Intent URL of the bookmark, describing what it points to.  This
 * value is given to {@link android.content.Intent#getIntent} to create
 * an Intent that can be launched.
 * <P>Type: TEXT</P>
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_MIN_SCREEN_OFF","true","false","false","true","true","String","""memcheck_min_screen_off""","","/**
 * How long the screen must have been off in order to kill processes
 * or reboot.  This number is in seconds.  A value of -1 means to
 * entirely disregard whether the screen is on.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOLUME_VOICE","true","false","false","true","true","String","""volume_voice""","","/**
 * Voice call volume. This is used internally, changing this value will
 * not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_SYNC_SETTINGS","true","false","false","true","true","String","""android.settings.SYNC_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of sync settings.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * The account types available to add via the add account button may be restricted by adding an
 * {@link #EXTRA_AUTHORITIES} extra to this Intent with one or more syncable content provider's
 * authorities. Only account types which can sync with that content provider will be offered to
 * the user.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.CDMA_SUBSCRIPTION_MODE","true","false","false","true","true","String","""subscription_mode""","","/**
 * The CDMA subscription mode 0 = RUIM/SIM (default)
 * 1 = NV
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_PHONE_HARD_THRESHOLD","true","false","false","true","true","String","""memcheck_phone_hard""","","/**
 * How many bytes the phone process must be below to avoid scheduling
 * a hard restart.  This restart will happen immediately.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ALLOWED_GEOLOCATION_ORIGINS","true","false","false","true","true","String","""allowed_geolocation_origins""","","/**
 * Origins for which browsers should allow geolocation by default.
 * The value is a space-separated list of origins.
 */
","\android\provider\Settings.java"
"android.provider.Settings.NITZ_UPDATE_DIFF","true","false","false","true","true","String","""nitz_update_diff""","","/**
 * If the NITZ_UPDATE_DIFF time is exceeded then an automatic adjustment
 * to SystemClock will be allowed even if NITZ_UPDATE_SPACING has not been
 * exceeded.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.PARENTAL_CONTROL_LAST_UPDATE","true","false","false","true","true","String","""parental_control_last_update""","","/**
 * No longer supported.
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.ID","true","false","false","true","true","String","""_id""","","/**
 * The row ID.
 * <p>Type: INTEGER</p>
 */
","\android\provider\Settings.java"
"android.provider.System.DTMF_TONE_TYPE_WHEN_DIALING","true","false","false","true","true","String","""dtmf_tone_type""","","/**
 * CDMA only settings
 * DTMF tone type played by the dialer when dialing.
 * 0 = Normal
 * 1 = Long
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_SOURCE_TIMEOUT_MILLIS","true","false","false","true","true","String","""search_source_timeout_millis""","","/**
 * The number of milliseconds before GlobalSearch aborts search suggesiton queries.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.VALUE","true","false","false","true","true","String","""value""","","","\android\provider\Settings.java"
"android.provider.Settings.END_BUTTON_BEHAVIOR_DEFAULT","true","false","false","true","true","int","END_BUTTON_BEHAVIOR_SLEEP","","/**
 * END_BUTTON_BEHAVIOR default value.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.REBOOT_INTERVAL","true","false","false","true","true","String","""reboot_interval""","","/**
 * How frequently (in DAYS) to reboot the device.  If 0, no reboots
 * will occur.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.PDP_WATCHDOG_PING_DEADLINE","true","false","false","true","true","String","""pdp_watchdog_ping_deadline""","","/**
 * The ""-w deadline"" parameter for the ping, ie, the max time in
 * seconds to spend pinging.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.PREFERRED_NETWORK_MODE","true","false","false","true","true","String","""preferred_network_mode""","","/**
 * The preferred network mode   7 = Global
 * 6 = EvDo only
 * 5 = CDMA w/o EvDo
 * 4 = CDMA / EvDo auto
 * 3 = GSM / WCDMA auto
 * 2 = WCDMA only
 * 1 = GSM only
 * 0 = GSM / WCDMA preferred
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_QUICK_LAUNCH_SETTINGS","true","false","false","true","true","String","""android.settings.QUICK_LAUNCH_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings to allow configuration of quick launch shortcuts.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.System.APPEND_FOR_LAST_AUDIBLE","true","false","false","true","true","String","""_last_audible""","","/**
 * Appended to various volume related settings to record the previous
 * values before they the settings were affected by a silent/vibrate
 * ringer mode change.
 */
","\android\provider\Settings.java"
"android.provider.Settings.RADIO_BLUETOOTH","true","false","false","true","true","String","""bluetooth""","","/**
 * Constant for use in AIRPLANE_MODE_RADIOS to specify Bluetooth radio.
 */
","\android\provider\Settings.java"
"android.provider.Settings.NOTIFICATION_LIGHT_PULSE","true","false","false","true","true","String","""notification_light_pulse""","","/**
 * Whether the notification LED should repeatedly flash when a notification is
 * pending. The value is boolean (1 or 0).
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.MODE_RINGER_STREAMS_AFFECTED","true","false","false","true","true","String","""mode_ringer_streams_affected""","","/**
 * Determines which streams are affected by ringer mode changes. The
 * stream type's bit should be set to 1 if it should be muted when going
 * into an inaudible ringer mode.
 */
","\android\provider\Settings.java"
"android.provider.System.DATA_ROAMING","true","false","false","true","true","String","Secure.DATA_ROAMING","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#DATA_ROAMING} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.WALLPAPER_ACTIVITY","true","false","false","true","true","String","""wallpaper_activity""","","/**
 * Name of activity to use for wallpaper on the home screen.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_MAX_DHCP_RETRY_COUNT","true","false","false","true","true","String","Secure.WIFI_MAX_DHCP_RETRY_COUNT","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_MAX_DHCP_RETRY_COUNT} instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.PREFERRED_CDMA_SUBSCRIPTION","true","false","false","true","true","String","""preferred_cdma_subscription""","","/**
 * The cdma subscription 0 = Subscription from RUIM, when available
 * 1 = Subscription from NV
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.BACKUP_TRANSPORT","true","false","false","true","true","String","""backup_transport""","","/**
 * Component of the transport to use for backup/restore.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_MIN_SCREEN_OFF","true","false","false","true","true","String","""memcheck_min_screen_off""","","/**
 * How long the screen must have been off in order to kill processes
 * or reboot.  This number is in seconds.  A value of -1 means to
 * entirely disregard whether the screen is on.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.NETWORK_PREFERENCE","true","false","false","true","true","String","""network_preference""","","/**
 * User preference for which network(s) should be used. Only the
 * connectivity service should touch this.
 */
","\android\provider\Settings.java"
"android.provider.System.NOTIFICATION_SOUND","true","false","false","true","true","String","""notification_sound""","","/**
 * Persistent store for the system-wide default notification sound.
 *
 * @see #RINGTONE
 * @see #DEFAULT_NOTIFICATION_URI
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_THREAD_KEEPALIVE_SECONDS","true","false","false","true","true","String","""search_thread_keepalive_seconds""","","/**
 * The maximun time that excess threads in the GlobalSeach thread pools will
 * wait before terminating.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.LOGGING_ID","true","false","false","true","true","String","Secure.LOGGING_ID","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#LOGGING_ID} instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS","true","false","false","true","true","String","""wifi_mobile_data_transition_wakelock_timeout_ms""","","/**
 * Maximum amount of time in milliseconds to hold a wakelock while waiting for mobile
 * data connectivity to be established after a disconnect from Wi-Fi.
 */
","\android\provider\Settings.java"
"android.provider.Settings.sNameValueCache","false","false","true","true","false","NameValueCache","null","","// Populated lazily, guarded by class object:
","\android\provider\Settings.java"
"android.provider.Settings.LOCK_PATTERN_ENABLED","true","false","false","true","true","String","""lock_pattern_autolock""","","/**
 * Whether autolock is enabled (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.Secure.DEFAULT_INSTALL_LOCATION","true","false","false","true","true","String","""default_install_location""","","/**
 * Default install location value.
 * 0 = auto, let system decide
 * 1 = internal
 * 2 = sdcard
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.ENABLED_INPUT_METHODS","true","false","false","true","true","String","""enabled_input_methods""","","/**
 * List of input methods that are currently enabled.  This is a string
 * containing the IDs of all enabled input methods, each ID separated
 * by ':'.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS","@Deprecated","/**
 * @deprecated Use
 * {@link android.provider.Settings.Secure#WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_ON","true","false","false","true","true","String","""wifi_watchdog_on""","","/**
 * Whether the Wi-Fi watchdog is enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DEFAULT_NOTIFICATION_URI","true","false","false","true","true","Uri","getUriFor(NOTIFICATION_SOUND)","","/**
 * A {@link Uri} that will point to the current default notification
 * sound at any given time.
 *
 * @see #DEFAULT_RINGTONE_URI
 */
","\android\provider\Settings.java"
"android.provider.Settings.MOUNT_UMS_PROMPT","true","false","false","true","true","String","""mount_ums_prompt""","","/**
 * Whether or not a notification is displayed on UMS host detection. (0 = false, 1 = true)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTS_DEFAULT_LANG","true","false","false","true","true","String","""tts_default_lang""","","/**
 * Default text-to-speech language.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WINDOW_ANIMATION_SCALE","true","false","false","true","true","String","""window_animation_scale""","","/**
 * Scaling factor for normal window animations. Setting to 0 will disable window
 * animations.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_PING_DELAY_MS","true","false","false","true","true","String","""wifi_watchdog_ping_delay_ms""","","/**
 * The delay between pings.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DTMF_TONE_WHEN_DIALING","true","false","false","true","true","String","""dtmf_tone""","","/**
 * Whether the audible DTMF tones are played by the dialer when dialing. The value is
 * boolean (1 or 0).
 */
","\android\provider\Settings.java"
"android.provider.Settings.BACKGROUND_DATA","true","false","false","true","true","String","""background_data""","","/**
 * Whether background data usage is allowed by the user. See
 * ConnectivityManager for more info.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_WATCHDOG_ON","true","false","false","true","true","String","Secure.WIFI_WATCHDOG_ON","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#WIFI_WATCHDOG_ON} instead
 */
","\android\provider\Settings.java"
"android.provider.System.ANDROID_ID","true","false","false","true","true","String","Secure.ANDROID_ID","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#ANDROID_ID} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.PARENTAL_CONTROL_LAST_UPDATE","true","false","false","true","true","String","""parental_control_last_update""","","/**
 * No longer supported.
 */
","\android\provider\Settings.java"
"android.provider.System.VIBRATE_IN_SILENT","true","false","false","true","true","String","""vibrate_in_silent""","","/**
 * Whether silent mode should allow vibration feedback. This is used
 * internally in AudioService and the Sound settings activity to
 * coordinate decoupling of vibrate and silent modes. This setting
 * will likely be removed in a future release with support for
 * audio/vibe feedback profiles.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.CAR_DOCK_SOUND","true","false","false","true","true","String","""car_dock_sound""","","/**
 * URI for the car dock ""in"" event sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.LOCK_PATTERN_ENABLED","true","false","false","true","true","String","Secure.LOCK_PATTERN_ENABLED","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#LOCK_PATTERN_ENABLED}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_PHONE_HARD_THRESHOLD","true","false","false","true","true","String","""memcheck_phone_hard""","","/**
 * How many bytes the phone process must be below to avoid scheduling
 * a hard restart.  This restart will happen immediately.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_MEMORY_CARD_SETTINGS","true","false","false","true","true","String","""android.settings.MEMORY_CARD_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings for memory card storage.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED","true","false","false","true","true","int","1","","/**
 * Value for {@link #WIFI_SLEEP_POLICY} to use the default policy when
 * the device is on battery, and never go to sleep when the device is
 * plugged in.
 */
","\android\provider\Settings.java"
"android.provider.Secure.LOCATION_PROVIDERS_ALLOWED","true","false","false","true","true","String","""location_providers_allowed""","","/**
 * Comma-separated list of location providers that activities may access.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DOCK_SOUNDS_ENABLED","true","false","false","true","true","String","""dock_sounds_enabled""","","/**
 * Whether to play a sound for dock events.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.ALWAYS_FINISH_ACTIVITIES","true","false","false","true","true","String","""always_finish_activities""","","/**
 * If 1, the activity manager will aggressively finish activities and
 * processes as soon as they are no longer needed.  If 0, the normal
 * extended lifetime is used.
 */
","\android\provider\Settings.java"
"android.provider.System.VOLUME_MUSIC","true","false","false","true","true","String","""volume_music""","","/**
 * Music/media/gaming volume. This is used internally, changing this
 * value will not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Secure.BLUETOOTH_ON","true","false","false","true","true","String","""bluetooth_on""","","/**
 * Whether bluetooth is enabled/disabled
 * 0=disabled. 1=enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SMS_OUTGOING_CHECK_MAX_COUNT","true","false","false","true","true","String","""sms_outgoing_check_max_count""","","/**
 * The number of outgoing SMS sent without asking for user permit
 * (of {@link #SMS_OUTGOING_CHECK_INTERVAL_MS}
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.SYS_PROP_SETTING_VERSION","true","false","false","true","true","String","""sys.settings_system_version""","","","\android\provider\Settings.java"
"android.provider.Secure.PREFERRED_TTY_MODE","true","false","false","true","true","String","""preferred_tty_mode""","","/**
 * The preferred TTY mode     0 = TTy Off, CDMA default
 * 1 = TTY Full
 * 2 = TTY HCO
 * 3 = TTY VCO
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_PROMOTED_SOURCE_DEADLINE_MILLIS","true","false","false","true","true","String","""search_promoted_source_deadline_millis""","","/**
 * The number of milliseconds that GlobalSearch will wait for suggestions from
 * promoted sources before continuing with all other sources.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.ACCELEROMETER_ROTATION","true","false","false","true","true","String","""accelerometer_rotation""","","/**
 * Control whether the accelerometer will be used to change screen
 * orientation.  If 0, it will not be used unless explicitly requested
 * by the application; if 1, it will be used by default unless explicitly
 * disabled by the application.
 */
","\android\provider\Settings.java"
"android.provider.System.WIFI_NUM_OPEN_NETWORKS_KEPT","true","false","false","true","true","String","Secure.WIFI_NUM_OPEN_NETWORKS_KEPT","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#WIFI_NUM_OPEN_NETWORKS_KEPT}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTS_DEFAULT_VARIANT","true","false","false","true","true","String","""tts_default_variant""","","/**
 * Default text-to-speech locale variant.
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED","true","false","false","true","true","String","""wifi_watchdog_background_check_enabled""","","/**
 * Whether the Wi-Fi watchdog is enabled for background checking even
 * after it thinks the user has connected to a good access point.
 */
","\android\provider\Settings.java"
"android.provider.Settings.JID_RESOURCE_PREFIX","false","false","true","true","true","String","""android""","","","\android\provider\Settings.java"
"android.provider.Settings.TRANSITION_ANIMATION_SCALE","true","false","false","true","true","String","""transition_animation_scale""","","/**
 * Scaling factor for activity transition animations. Setting to 0 will disable window
 * animations.
 */
","\android\provider\Settings.java"
"android.provider.System.TTY_MODE","true","false","false","true","true","String","""tty_mode""","","/**
 * CDMA only settings
 * TTY Mode
 * 0 = OFF
 * 1 = FULL
 * 2 = VCO
 * 3 = HCO
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_USE_STATIC_IP","true","false","false","true","true","String","""wifi_use_static_ip""","","/**
 * Whether to use static IP and other static network attributes.
 * <p>
 * Set to 1 for true and 0 for false.
 */
","\android\provider\Settings.java"
"android.provider.Settings.BATTERY_DISCHARGE_THRESHOLD","true","false","false","true","true","String","""battery_discharge_threshold""","","/**
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/bookmarks"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Settings.java"
"android.provider.Secure.INCALL_POWER_BUTTON_BEHAVIOR","true","false","false","true","true","String","""incall_power_button_behavior""","","/**
 * What happens when the user presses the Power button while in-call
 * and the screen is on.<br/>
 * <b>Values:</b><br/>
 * 1 - The Power button turns off the screen and locks the device. (Default behavior)<br/>
 * 2 - The Power button hangs up the current call.<br/>
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.mVersionSystemProperty","false","false","true","false","true","String","","","","\android\provider\Settings.java"
"android.provider.Settings.RINGTONE","true","false","false","true","true","String","""ringtone""","","/**
 * Persistent store for the system-wide default ringtone URI.
 * <p>
 * If you need to play the default ringtone at any given time, it is recommended
 * you give {@link #DEFAULT_RINGTONE_URI} to the media player.  It will resolve
 * to the set default ringtone at the time of playing.
 *
 * @see #DEFAULT_RINGTONE_URI
 */
","\android\provider\Settings.java"
"android.provider.Secure.SYS_PROP_SETTING_VERSION","true","false","false","true","true","String","""sys.settings_secure_version""","","","\android\provider\Settings.java"
"android.provider.System.ADB_ENABLED","true","false","false","true","true","String","Secure.ADB_ENABLED","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#ADB_ENABLED}
 * instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.WIFI_WATCHDOG_AP_COUNT","true","false","false","true","true","String","""wifi_watchdog_ap_count""","","/**
 * The number of access points required for a network in order for the
 * watchdog to monitor it.
 */
","\android\provider\Settings.java"
"android.provider.System.LOCK_SOUND","true","false","false","true","true","String","""lock_sound""","","/**
 * URI for the ""device locked"" (keyguard shown) sound.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_NUM_OPEN_NETWORKS_KEPT","true","false","false","true","true","String","""wifi_num_open_networks_kept""","","/**
 * When the number of open networks exceeds this number, the
 * least-recently-used excess networks will be removed.
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_QUERY_THREAD_MAX_POOL_SIZE","true","false","false","true","true","String","""search_query_thread_max_pool_size""","","/**
 * The maximum size of the thread pool for suggestion queries in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_INTERVAL","true","false","false","true","true","String","""memcheck_interval""","","/**
 * How frequently (in seconds) to check the memory status of the
 * device.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.WIFI_SAVED_STATE","true","false","false","true","true","String","""wifi_saved_state""","","/**
 * Used to save the Wifi_ON state prior to tethering.
 * This state will be checked to restore Wifi after
 * the user turns off tethering.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.PREFERRED_TTY_MODE","true","false","false","true","true","String","""preferred_tty_mode""","","/**
 * The preferred TTY mode     0 = TTy Off, CDMA default
 * 1 = TTY Full
 * 2 = TTY HCO
 * 3 = TTY VCO
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_QUERY_THREAD_CORE_POOL_SIZE","true","false","false","true","true","String","""search_query_thread_core_pool_size""","","/**
 * The size of the core thread pool for suggestion queries in GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.SET_INSTALL_LOCATION","true","false","false","true","true","String","""set_install_location""","","/**
 * Let user pick default install location.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SET_INSTALL_LOCATION","true","false","false","true","true","String","""set_install_location""","","/**
 * Let user pick default install location.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.HAPTIC_FEEDBACK_ENABLED","true","false","false","true","true","String","""haptic_feedback_enabled""","","/**
 * Whether the haptic feedback (long presses, ...) are enabled. The value is
 * boolean (1 or 0).
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_EXEC_END_TIME","true","false","false","true","true","String","""memcheck_exec_end_time""","","/**
 * Last time during the day it is okay to kill processes
 * or reboot the device due to low memory situations.  This number is
 * in seconds since midnight.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SEARCH_MAX_RESULTS_TO_DISPLAY","true","false","false","true","true","String","""search_max_results_to_display""","","/**
 * The maximum number of suggestions returned by GlobalSearch.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.RADIO_CELL","true","false","false","true","true","String","""cell""","","/**
 * Constant for use in AIRPLANE_MODE_RADIOS to specify Cellular radio.
 */
","\android\provider\Settings.java"
"android.provider.Secure.UI_NIGHT_MODE","true","false","false","true","true","String","""ui_night_mode""","","/**
 * The current night mode that has been selected by the user.  Owned
 * and controlled by UiModeManagerService.  Constants are as per
 * UiModeManager.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TTS_DEFAULT_VARIANT","true","false","false","true","true","String","""tts_default_variant""","","/**
 * Default text-to-speech locale variant.
 */
","\android\provider\Settings.java"
"android.provider.Settings.THROTTLE_VALUE_KBITSPS","true","false","false","true","true","String","""throttle_value_kbitsps""","","/**
 * The bandwidth throttle value (kbps)
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.mValuesVersion","false","false","true","false","false","long","0","","","\android\provider\Settings.java"
"android.provider.Settings.SCREEN_BRIGHTNESS","true","false","false","true","true","String","""screen_brightness""","","/**
 * The screen backlight brightness between 0 and 255.
 */
","\android\provider\Settings.java"
"android.provider.Settings.MODE_RINGER_STREAMS_AFFECTED","true","false","false","true","true","String","""mode_ringer_streams_affected""","","/**
 * Determines which streams are affected by ringer mode changes. The
 * stream type's bit should be set to 1 if it should be muted when going
 * into an inaudible ringer mode.
 */
","\android\provider\Settings.java"
"android.provider.Secure.DATA_ROAMING","true","false","false","true","true","String","""data_roaming""","","/**
 * Whether or not data roaming is enabled. (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.INTENT","true","false","false","true","true","String","""intent""","","/**
 * The Intent URL of the bookmark, describing what it points to.  This
 * value is given to {@link android.content.Intent#getIntent} to create
 * an Intent that can be launched.
 * <P>Type: TEXT</P>
 */
","\android\provider\Settings.java"
"android.provider.Settings.TETHER_DUN_APN","true","false","false","true","true","String","""tether_dun_apn""","","/**
 * Used to hold a gservices-provisioned apn value for DUN.  If set, or the
 * corresponding build config values are set it will override the APN DB
 * values.
 * Consists of a comma seperated list of strings:
 * ""name,apn,proxy,port,username,password,server,mmsc,mmsproxy,mmsport,mcc,mnc,auth,type""
 * note that empty fields can be ommitted: ""name,apn,,,,,,,,,310,260,,DUN""
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.DEBUG_APP","true","false","false","true","true","String","""debug_app""","","/**
 * Name of an application package to be debugged.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_ACCESSIBILITY_SETTINGS","true","false","false","true","true","String","""android.settings.ACCESSIBILITY_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings for accessibility modules.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.SHOW_GTALK_SERVICE_STATUS","true","false","false","true","true","String","""SHOW_GTALK_SERVICE_STATUS""","","","\android\provider\Settings.java"
"android.provider.Settings.TEXT_AUTO_CAPS","true","false","false","true","true","String","""auto_caps""","","/**
 * Setting to enable Auto Caps in text editors. 1 = On, 0 = Off
 */
","\android\provider\Settings.java"
"android.provider.Settings.UI_NIGHT_MODE","true","false","false","true","true","String","""ui_night_mode""","","/**
 * The current night mode that has been selected by the user.  Owned
 * and controlled by UiModeManagerService.  Constants are as per
 * UiModeManager.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.VOLUME_SETTINGS","true","false","false","true","true","String","{ VOLUME_VOICE, VOLUME_SYSTEM, VOLUME_RING, VOLUME_MUSIC, VOLUME_ALARM, VOLUME_NOTIFICATION, VOLUME_BLUETOOTH_SCO }","","/**
 * The mapping of stream type (integer) to its setting.
 */
","\android\provider\Settings.java"
"android.provider.Secure.PDP_WATCHDOG_PING_DEADLINE","true","false","false","true","true","String","""pdp_watchdog_ping_deadline""","","/**
 * The ""-w deadline"" parameter for the ping, ie, the max time in
 * seconds to spend pinging.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_SEARCH_SETTINGS","true","false","false","true","true","String","""android.search.action.SEARCH_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings for global search.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing
 */
","\android\provider\Settings.java"
"android.provider.Settings.WAIT_FOR_DEBUGGER","true","false","false","true","true","String","""wait_for_debugger""","","/**
 * If 1, when launching DEBUG_APP it will wait for the debugger before
 * starting user code.  If 0, it will run normally.
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACCESSIBILITY_ENABLED","true","false","false","true","true","String","""accessibility_enabled""","","/**
 * If accessibility is enabled.
 */
","\android\provider\Settings.java"
"android.provider.Settings.BACKUP_TRANSPORT","true","false","false","true","true","String","""backup_transport""","","/**
 * Component of the transport to use for backup/restore.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.sIntentProjection","false","false","true","true","true","String","{ INTENT }","","","\android\provider\Settings.java"
"android.provider.Secure.GPRS_REGISTER_CHECK_PERIOD_MS","true","false","false","true","true","String","""gprs_register_check_period_ms""","","/**
 * The interval in milliseconds at which to check gprs registration
 * after the first registration mismatch of gprs and voice service,
 * to detect possible data network registration problems.
 *
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_SYSTEM_HARD_THRESHOLD","true","false","false","true","true","String","""memcheck_system_hard""","","/**
 * How many bytes the system process must be below to avoid scheduling
 * a hard reboot.  This reboot will happen immediately.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.FONT_SCALE","true","false","false","true","true","String","""font_scale""","","/**
 * Scaling factor for fonts, float.
 */
","\android\provider\Settings.java"
"android.provider.System.NOTIFICATION_LIGHT_PULSE","true","false","false","true","true","String","""notification_light_pulse""","","/**
 * Whether the notification LED should repeatedly flash when a notification is
 * pending. The value is boolean (1 or 0).
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.INCALL_POWER_BUTTON_BEHAVIOR_DEFAULT","true","false","false","true","true","int","INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF","","/**
 * INCALL_POWER_BUTTON_BEHAVIOR default value.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.SETUP_WIZARD_HAS_RUN","true","false","false","true","true","String","""setup_wizard_has_run""","","/**
 * Whether the setup wizard has been run before (on first boot), or if
 * it still needs to be run.
 *
 * nonzero = it has been run in the past
 * 0 = it has not been run in the past
 */
","\android\provider\Settings.java"
"android.provider.Settings.PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS","true","false","false","true","true","String","""pdp_watchdog_error_poll_interval_ms""","","/**
 * The interval in milliseconds at which to check packet counts on the
 * mobile data interface after {@link #PDP_WATCHDOG_TRIGGER_PACKET_COUNT}
 * outgoing packets has been reached without incoming packets.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.MEMCHECK_SYSTEM_SOFT_THRESHOLD","true","false","false","true","true","String","""memcheck_system_soft""","","/**
 * How many bytes the system process must be below to avoid scheduling
 * a soft reboot.  This reboot will happen when it is next determined
 * to be a good time.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TEXT_AUTO_PUNCTUATE","true","false","false","true","true","String","""auto_punctuate""","","/**
 * Setting to enable Auto Punctuate in text editors. 1 = On, 0 = Off. This
 * feature converts two spaces to a ""."" and space.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DATA_ROAMING","true","false","false","true","true","String","""data_roaming""","","/**
 * Whether or not data roaming is enabled. (0 = false, 1 = true)
 */
","\android\provider\Settings.java"
"android.provider.Settings.USB_MASS_STORAGE_ENABLED","true","false","false","true","true","String","""usb_mass_storage_enabled""","","/**
 * USB Mass Storage Enabled
 */
","\android\provider\Settings.java"
"android.provider.Settings.ACTION_ADD_ACCOUNT","true","false","false","true","true","String","""android.settings.ADD_ACCOUNT_SETTINGS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show add account screen for creating a new account.
 * <p>
 * In some cases, a matching Activity may not exist, so ensure you
 * safeguard against this.
 * <p>
 * The account types available to add may be restricted by adding an {@link #EXTRA_AUTHORITIES}
 * extra to the Intent with one or more syncable content provider's authorities.  Only account
 * types which can sync with that content provider will be offered to the user.
 * <p>
 * Input: Nothing.
 * <p>
 * Output: Nothing.
 */
","\android\provider\Settings.java"
"android.provider.Settings.DROPBOX_QUOTA_KB","true","false","false","true","true","String","""dropbox_quota_kb""","","/**
 * Maximum amount of disk space used by {@link android.os.IDropBox} no matter what.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP","true","false","false","true","true","int","0x2","","/**
 * INCALL_POWER_BUTTON_BEHAVIOR value for ""hang up"".
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.MEMCHECK_EXEC_START_TIME","true","false","false","true","true","String","""memcheck_exec_start_time""","","/**
 * First time during the day it is okay to kill processes
 * or reboot the device due to low memory situations.  This number is
 * in seconds since midnight.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.MOBILE_DATA","true","false","false","true","true","String","""mobile_data""","","/**
 * Whether mobile data connections are allowed by the user.  See
 * ConnectivityManager for more info.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.BLUETOOTH_ON","true","false","false","true","true","String","Secure.BLUETOOTH_ON","@Deprecated","/**
 * @deprecated Use {@link android.provider.Settings.Secure#BLUETOOTH_ON} instead
 */
","\android\provider\Settings.java"
"android.provider.Settings.BLUETOOTH_ON","true","false","false","true","true","String","""bluetooth_on""","","/**
 * Whether bluetooth is enabled/disabled
 * 0=disabled. 1=enabled.
 */
","\android\provider\Settings.java"
"android.provider.System.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/system"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Settings.java"
"android.provider.System.VOLUME_ALARM","true","false","false","true","true","String","""volume_alarm""","","/**
 * Alarm volume. This is used internally, changing this
 * value will not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Settings.VOLUME_ALARM","true","false","false","true","true","String","""volume_alarm""","","/**
 * Alarm volume. This is used internally, changing this
 * value will not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.System.SCREEN_BRIGHTNESS","true","false","false","true","true","String","""screen_brightness""","","/**
 * The screen backlight brightness between 0 and 255.
 */
","\android\provider\Settings.java"
"android.provider.System.SETUP_WIZARD_HAS_RUN","true","false","false","true","true","String","""setup_wizard_has_run""","","/**
 * Whether the setup wizard has been run before (on first boot), or if
 * it still needs to be run.
 *
 * nonzero = it has been run in the past
 * 0 = it has not been run in the past
 */
","\android\provider\Settings.java"
"android.provider.Settings.DROPBOX_QUOTA_PERCENT","true","false","false","true","true","String","""dropbox_quota_percent""","","/**
 * Percent of free disk (excluding reserve) which {@link android.os.IDropBox} will use.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Secure.DROPBOX_TAG_PREFIX","true","false","false","true","true","String","""dropbox:""","","/**
 * Prefix for per-tag dropbox disable/enable settings.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Bookmarks.ORDERING","true","false","false","true","true","String","""ordering""","","/**
 * The order in which the bookmark should be displayed
 * <P>Type: INTEGER</P>
 */
","\android\provider\Settings.java"
"android.provider.Settings.NAME","true","false","false","true","true","String","""name""","","","\android\provider\Settings.java"
"android.provider.Secure.SMS_OUTGOING_CHECK_INTERVAL_MS","true","false","false","true","true","String","""sms_outgoing_check_interval_ms""","","/**
 * The interval in milliseconds at which to check the number of SMS sent
 * out without asking for use permit, to limit the un-authorized SMS
 * usage.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.System.VOLUME_VOICE","true","false","false","true","true","String","""volume_voice""","","/**
 * Voice call volume. This is used internally, changing this value will
 * not change the volume. See AudioManager.
 */
","\android\provider\Settings.java"
"android.provider.Secure.TTS_DEFAULT_PITCH","true","false","false","true","true","String","""tts_default_pitch""","","/**
 * Default text-to-speech engine pitch. 100 = 1x
 */
","\android\provider\Settings.java"
"android.provider.Secure.SEARCH_PER_SOURCE_CONCURRENT_QUERY_LIMIT","true","false","false","true","true","String","""search_per_source_concurrent_query_limit""","","/**
 * The maximum number of concurrent suggestion queries to each source.
 * @hide
 */
","\android\provider\Settings.java"
"android.provider.Settings.TITLE","true","false","false","true","true","String","""title""","","/**
 * Descriptive name of the bookmark that can be displayed to the user.
 * If this is empty, the title should be resolved at display time (use
 * {@link #getTitle(Context, Cursor)} any time you want to display the
 * title of a bookmark.)
 * <P>
 * Type: TEXT
 * </P>
 */
","\android\provider\Settings.java"
"android.net.http.DName.mUName","false","false","true","false","false","String","","","/**
 * Organizational Unit (OU) component of the name
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.mIssuedBy","false","false","true","false","false","DName","","","/**
 * Name of the entity this certificate is issued by
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.VALID_NOT_BEFORE","false","false","true","true","true","String","""valid-not-before""","","","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.mOName","false","false","true","false","false","String","","","/**
 * Organization (O) component of the name
 */
","\android\net\http\SslCertificate.java"
"android.net.http.DName.mOName","false","false","true","false","false","String","","","/**
 * Organization (O) component of the name
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.ISO_8601_DATE_FORMAT","false","false","true","true","false","String","""yyyy-MM-dd HH:mm:ssZ""","","/**
 * SimpleDateFormat pattern for an ISO 8601 date
 */
","\android\net\http\SslCertificate.java"
"android.net.http.DName.mDName","false","false","true","false","false","String","","","/**
 * Distinguished name (normally includes CN, O, and OU names)
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.ISSUED_BY","false","false","true","true","true","String","""issued-by""","","","\android\net\http\SslCertificate.java"
"android.net.http.DName.mCName","false","false","true","false","false","String","","","/**
 * Common-name (CN) component of the name
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.mValidNotAfter","false","false","true","false","false","Date","","","/**
 * Not-after date from the validity period
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.mIssuedTo","false","false","true","false","false","DName","","","/**
 * Name of the entity this certificate is issued to
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.VALID_NOT_AFTER","false","false","true","true","true","String","""valid-not-after""","","","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.mValidNotBefore","false","false","true","false","false","Date","","","/**
 * Not-before date from the validity period
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.mDName","false","false","true","false","false","String","","","/**
 * Distinguished name (normally includes CN, O, and OU names)
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.mCName","false","false","true","false","false","String","","","/**
 * Common-name (CN) component of the name
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.mUName","false","false","true","false","false","String","","","/**
 * Organizational Unit (OU) component of the name
 */
","\android\net\http\SslCertificate.java"
"android.net.http.SslCertificate.ISSUED_TO","false","false","true","true","true","String","""issued-to""","","/**
 * Bundle key names
 */
","\android\net\http\SslCertificate.java"
"android.net.http.AndroidHttpClient.curlConfiguration","false","false","true","false","false","LoggingConfiguration","","","/**
 * cURL logging configuration.
 */
","\android\net\http\AndroidHttpClient.java"
"android.net.http.LoggingConfiguration.level","false","false","true","false","true","int","","","","\android\net\http\AndroidHttpClient.java"
"android.net.http.AndroidHttpClient.mLeakedException","false","false","true","false","false","RuntimeException","new IllegalStateException(""AndroidHttpClient created and never closed"")","","","\android\net\http\AndroidHttpClient.java"
"android.net.http.AndroidHttpClient.TAG","false","false","true","true","true","String","""AndroidHttpClient""","","","\android\net\http\AndroidHttpClient.java"
"android.net.http.AndroidHttpClient.tag","false","false","true","false","true","String","","","","\android\net\http\AndroidHttpClient.java"
"android.net.http.LoggingConfiguration.tag","false","false","true","false","true","String","","","","\android\net\http\AndroidHttpClient.java"
"android.net.http.AndroidHttpClient.sThreadCheckInterceptor","false","false","true","true","true","HttpRequestInterceptor","new HttpRequestInterceptor() {

    public void process(HttpRequest request, HttpContext context) {
        // Prevent the HttpRequest from being sent on the main thread
        if (Looper.myLooper() != null && Looper.myLooper() == Looper.getMainLooper()) {
            throw new RuntimeException(""This thread forbids HTTP requests"");
        }
    }
}","","/**
 * Interceptor throws an exception if the executing thread is blocked
 */
","\android\net\http\AndroidHttpClient.java"
"android.net.http.AndroidHttpClient.level","false","false","true","false","true","int","","","","\android\net\http\AndroidHttpClient.java"
"android.net.http.AndroidHttpClient.DEFAULT_SYNC_MIN_GZIP_BYTES","true","false","false","true","false","long","256","","// Gzip of data shorter than this probably won't be worthwhile
","\android\net\http\AndroidHttpClient.java"
"android.net.http.AndroidHttpClient.delegate","false","false","true","false","true","HttpClient","","","","\android\net\http\AndroidHttpClient.java"
"android.provider.SearchRecentSuggestions.QUERIES_PROJECTION_DISPLAY2_INDEX","true","false","false","true","true","int","4","","// only when 2line active
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.MAX_HISTORY_COUNT","false","false","true","true","true","int","250","","/*
     * Set a cap on the count of items in the suggestions table, to
     * prevent db and layout operations from dragging to a crawl. Revisit this
     * cap when/if db/layout performance improvements are made.
     */
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.DISPLAY1","true","false","false","true","true","String","""display1""","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.DISPLAY2","true","false","false","true","true","String","""display2""","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.LOG_TAG","false","false","true","true","true","String","""SearchSuggestions""","","// debugging support
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.QUERIES_PROJECTION_1LINE","true","false","false","true","true","String","new String[] { SuggestionColumns._ID, SuggestionColumns.DATE, SuggestionColumns.QUERY, SuggestionColumns.DISPLAY1 }","","/**
 * This is the database projection that can be used to view saved queries, when
 * configured for one-line operation.
 */
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.QUERIES_PROJECTION_QUERY_INDEX","true","false","false","true","true","int","2","","/**
 * Index into the provided query projections.  For use with Cursor.update methods.
 */
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.TRUNCATE_HISTORY_PROJECTION","false","false","true","true","true","String","new String[] { SuggestionColumns._ID, SuggestionColumns.DATE }","","/* columns needed to determine whether to truncate history */
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.mSuggestionsUri","false","false","true","false","false","Uri","","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SuggestionColumns.DATE","true","false","false","true","true","String","""date""","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.DATE","true","false","false","true","true","String","""date""","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.QUERIES_PROJECTION_DISPLAY1_INDEX","true","false","false","true","true","int","3","","/**
 * Index into the provided query projections.  For use with Cursor.update methods.
 */
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.mQueriesProjection","false","false","true","false","false","String","","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.QUERY","true","false","false","true","true","String","""query""","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.mContext","false","false","true","false","false","Context","","","// client-provided configuration values
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SuggestionColumns.QUERY","true","false","false","true","true","String","""query""","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.DBG_SUGGESTION_TIMESTAMPS","false","false","true","true","true","int","0","","// DELETE ME (eventually)
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.QUERIES_PROJECTION_DATE_INDEX","true","false","false","true","true","int","1","","/**
 * Index into the provided query projections.  For use with Cursor.update methods.
 */
","\android\provider\SearchRecentSuggestions.java"
"android.provider.SuggestionColumns.DISPLAY2","true","false","false","true","true","String","""display2""","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SuggestionColumns.DISPLAY1","true","false","false","true","true","String","""display1""","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.mAuthority","false","false","true","false","false","String","","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.mTwoLineDisplay","false","false","true","false","false","boolean","","","","\android\provider\SearchRecentSuggestions.java"
"android.provider.SearchRecentSuggestions.QUERIES_PROJECTION_2LINE","true","false","false","true","true","String","new String[] { SuggestionColumns._ID, SuggestionColumns.DATE, SuggestionColumns.QUERY, SuggestionColumns.DISPLAY1, SuggestionColumns.DISPLAY2 }","","/**
 * This is the database projection that can be used to view saved queries, when
 * configured for two-line operation.
 */
","\android\provider\SearchRecentSuggestions.java"
"android.gesture.GestureConstants.LOG_TAG","false","false","false","true","true","String","""Gestures""","","","\android\gesture\GestureConstants.java"
"android.gesture.GestureConstants.IO_BUFFER_SIZE","false","false","false","true","true","int","32 * 1024","","// 32K
","\android\gesture\GestureConstants.java"
"android.gesture.GestureConstants.STROKE_POINT_BUFFER_SIZE","false","false","false","true","true","int","100","","// number of points
","\android\gesture\GestureConstants.java"
"android.gesture.GestureConstants.STROKE_STRING_BUFFER_SIZE","false","false","false","true","true","int","1024","","","\android\gesture\GestureConstants.java"
"android.inputmethodservice.InputMethodService.mCurCompletions","false","false","false","false","false","CompletionInfo","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.TOUCHABLE_INSETS_VISIBLE","true","false","false","true","true","int","ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_VISIBLE","","/**
 * Option for {@link #touchableInsets}: the area inside of
 * the visible insets can be touched.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mCandidatesViewStarted","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.Insets.visibleTopInsets","true","false","false","false","false","int","","","/**
 * This is the top part of the UI that is visibly covering the
 * application behind it.  This provides finer-grained control over
 * visibility, allowing you to change it relatively frequently (such
 * as hiding or showing candidates) without disrupting the underlying
 * UI too much.  For example, this will never resize the application
 * UI, will only pan if needed to make the current focus visible, and
 * will not aggressively move the pan position when this changes unless
 * needed to make the focus visible.  This value is relative to the top edge
 * of the input method window.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mFullscreenApplied","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mIsInputViewShown","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mIsFullscreen","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mWindowCreated","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mWindow","false","false","false","false","false","SoftInputWindow","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mExtractEditText","false","false","false","false","false","ExtractEditText","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mExtractAccessories","false","false","false","false","false","ViewGroup","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.Insets.TOUCHABLE_INSETS_FRAME","true","false","false","true","true","int","ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_FRAME","","/**
 * Option for {@link #touchableInsets}: the entire window frame
 * can be touched.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.TAG","false","false","false","true","true","String","""InputMethodService""","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mStartedInputConnection","false","false","false","false","false","InputConnection","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.Insets.contentTopInsets","true","false","false","false","false","int","","","/**
 * This is the top part of the UI that is the main content.  It is
 * used to determine the basic space needed, to resize/pan the
 * application behind.  It is assumed that this inset does not
 * change very much, since any change will cause a full resize/pan
 * of the application behind.  This value is relative to the top edge
 * of the input method window.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mTmpInsets","false","false","false","false","true","Insets","new Insets()","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mCandidatesVisibility","false","false","false","false","false","int","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mWindowVisible","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mActionClickListener","false","false","false","false","true","View.OnClickListener","new View.OnClickListener() {

    public void onClick(View v) {
        final EditorInfo ei = getCurrentInputEditorInfo();
        final InputConnection ic = getCurrentInputConnection();
        if (ei != null && ic != null) {
            if (ei.actionId != 0) {
                ic.performEditorAction(ei.actionId);
            } else if ((ei.imeOptions & EditorInfo.IME_MASK_ACTION) != EditorInfo.IME_ACTION_NONE) {
                ic.performEditorAction(ei.imeOptions & EditorInfo.IME_MASK_ACTION);
            }
        }
    }
}","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mShowInputFlags","false","false","false","false","false","int","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInitialized","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mExtractedToken","false","false","false","false","false","int","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.MOVEMENT_DOWN","false","false","false","true","true","int","-1","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.MOVEMENT_UP","false","false","false","true","true","int","-2","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mTmpLocation","false","false","false","false","true","int","new int[2]","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInputFrame","false","false","false","false","false","FrameLayout","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.Insets.touchableInsets","true","false","false","false","false","int","","","/**
 * Determine which area of the window is touchable by the user.  May
 * be one of: {@link #TOUCHABLE_INSETS_FRAME},
 * {@link #TOUCHABLE_INSETS_CONTENT}, or {@link #TOUCHABLE_INSETS_VISIBLE}.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInputStarted","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInputEditorInfo","false","false","false","false","false","EditorInfo","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mLastShowInputRequested","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInsetsComputer","false","false","false","false","true","ViewTreeObserver.OnComputeInternalInsetsListener","new ViewTreeObserver.OnComputeInternalInsetsListener() {

    public void onComputeInternalInsets(ViewTreeObserver.InternalInsetsInfo info) {
        if (isExtractViewShown()) {
            // In true fullscreen mode, we just say the window isn't covering
            // any content so we don't impact whatever is behind.
            View decor = getWindow().getWindow().getDecorView();
            info.contentInsets.top = info.visibleInsets.top = decor.getHeight();
            info.setTouchableInsets(ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_FRAME);
        } else {
            onComputeInsets(mTmpInsets);
            info.contentInsets.top = mTmpInsets.contentTopInsets;
            info.visibleInsets.top = mTmpInsets.visibleTopInsets;
            info.setTouchableInsets(mTmpInsets.touchableInsets);
        }
    }
}","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.touchableInsets","true","false","false","false","false","int","","","/**
 * Determine which area of the window is touchable by the user.  May
 * be one of: {@link #TOUCHABLE_INSETS_FRAME},
 * {@link #TOUCHABLE_INSETS_CONTENT}, or {@link #TOUCHABLE_INSETS_VISIBLE}.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mWindowWasVisible","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.Insets.TOUCHABLE_INSETS_CONTENT","true","false","false","true","true","int","ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_CONTENT","","/**
 * Option for {@link #touchableInsets}: the area inside of
 * the content insets can be touched.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInShowWindow","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mExtractView","false","false","false","false","false","View","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mWindowAdded","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mExtractAction","false","false","false","false","false","Button","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.DEBUG","false","false","false","true","true","boolean","false","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.visibleTopInsets","true","false","false","false","false","int","","","/**
 * This is the top part of the UI that is visibly covering the
 * application behind it.  This provides finer-grained control over
 * visibility, allowing you to change it relatively frequently (such
 * as hiding or showing candidates) without disrupting the underlying
 * UI too much.  For example, this will never resize the application
 * UI, will only pan if needed to make the current focus visible, and
 * will not aggressively move the pan position when this changes unless
 * needed to make the focus visible.  This value is relative to the top edge
 * of the input method window.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.TOUCHABLE_INSETS_FRAME","true","false","false","true","true","int","ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_FRAME","","/**
 * Option for {@link #touchableInsets}: the entire window frame
 * can be touched.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInputBinding","false","false","false","false","false","InputBinding","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mStatusIcon","false","false","false","false","false","int","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.TOUCHABLE_INSETS_CONTENT","true","false","false","true","true","int","ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_CONTENT","","/**
 * Option for {@link #touchableInsets}: the area inside of
 * the content insets can be touched.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mToken","false","false","false","false","false","IBinder","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInputViewStarted","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mShowInputRequested","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mExtractViewHidden","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mShowInputForced","false","false","false","false","false","boolean","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.Insets.TOUCHABLE_INSETS_VISIBLE","true","false","false","true","true","int","ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_VISIBLE","","/**
 * Option for {@link #touchableInsets}: the area inside of
 * the visible insets can be touched.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mTheme","false","false","false","false","false","int","android.R.style.Theme_InputMethod","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInflater","false","false","false","false","false","LayoutInflater","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mRootView","false","false","false","false","false","View","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mFullscreenArea","false","false","false","false","false","ViewGroup","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mImm","false","false","false","false","false","InputMethodManager","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.contentTopInsets","true","false","false","false","false","int","","","/**
 * This is the top part of the UI that is the main content.  It is
 * used to determine the basic space needed, to resize/pan the
 * application behind.  It is assumed that this inset does not
 * change very much, since any change will cause a full resize/pan
 * of the application behind.  This value is relative to the top edge
 * of the input method window.
 */
","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mThemeAttrs","false","false","false","false","false","TypedArray","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInputView","false","false","false","false","false","View","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mInputConnection","false","false","false","false","false","InputConnection","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mCandidatesFrame","false","false","false","false","false","FrameLayout","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mExtractFrame","false","false","false","false","false","FrameLayout","","","","\android\inputmethodservice\InputMethodService.java"
"android.inputmethodservice.InputMethodService.mExtractedText","false","false","false","false","false","ExtractedText","","","","\android\inputmethodservice\InputMethodService.java"
"android.text.PackedObjectVector.mRowGapStart","false","false","true","false","false","int","","","","\android\text\PackedObjectVector.java"
"android.text.PackedObjectVector.mValues","false","false","true","false","false","Object","","","","\android\text\PackedObjectVector.java"
"android.text.PackedObjectVector.mColumns","false","false","true","false","false","int","","","","\android\text\PackedObjectVector.java"
"android.text.PackedObjectVector.mRows","false","false","true","false","false","int","","","","\android\text\PackedObjectVector.java"
"android.text.PackedObjectVector.mRowGapLength","false","false","true","false","false","int","","","","\android\text\PackedObjectVector.java"
"android.ddm.DdmHandleProfiling.mInstance","false","false","true","true","false","DdmHandleProfiling","new DdmHandleProfiling()","","","\android\ddm\DdmHandleProfiling.java"
"android.ddm.DdmHandleProfiling.CHUNK_MPRE","true","false","false","true","true","int","type(""MPRE"")","","","\android\ddm\DdmHandleProfiling.java"
"android.ddm.DdmHandleProfiling.CHUNK_MPRQ","true","false","false","true","true","int","type(""MPRQ"")","","","\android\ddm\DdmHandleProfiling.java"
"android.ddm.DdmHandleProfiling.CHUNK_MPRS","true","false","false","true","true","int","type(""MPRS"")","","","\android\ddm\DdmHandleProfiling.java"
"android.ddm.DdmHandleProfiling.CHUNK_MPSE","true","false","false","true","true","int","type(""MPSE"")","","","\android\ddm\DdmHandleProfiling.java"
"android.ddm.DdmHandleProfiling.CHUNK_MPSS","true","false","false","true","true","int","type(""MPSS"")","","","\android\ddm\DdmHandleProfiling.java"
"com.android.internal.http.multipart.FilePart.FILE_NAME","false","true","false","true","true","String","""; filename=""","","/**
 * Attachment's file name
 */
","\com\android\internal\http\multipart\FilePart.java"
"com.android.internal.http.multipart.FilePart.DEFAULT_CONTENT_TYPE","true","false","false","true","true","String","""application/octet-stream""","","/**
 * Default content encoding of file attachments.
 */
","\com\android\internal\http\multipart\FilePart.java"
"com.android.internal.http.multipart.FilePart.source","false","false","true","false","false","PartSource","","","/**
 * Source of the file part.
 */
","\com\android\internal\http\multipart\FilePart.java"
"com.android.internal.http.multipart.FilePart.LOG","false","false","true","true","true","Log","LogFactory.getLog(FilePart.class)","","/**
 * Log object for this class.
 */
","\com\android\internal\http\multipart\FilePart.java"
"com.android.internal.http.multipart.FilePart.DEFAULT_TRANSFER_ENCODING","true","false","false","true","true","String","""binary""","","/**
 * Default transfer encoding of file attachments.
 */
","\com\android\internal\http\multipart\FilePart.java"
"com.android.internal.http.multipart.FilePart.DEFAULT_CHARSET","true","false","false","true","true","String","""ISO-8859-1""","","/**
 * Default charset of file attachments.
 */
","\com\android\internal\http\multipart\FilePart.java"
"com.android.internal.http.multipart.FilePart.FILE_NAME_BYTES","false","false","true","true","true","byte","EncodingUtils.getAsciiBytes(FILE_NAME)","","/**
 * Attachment's file name as a byte array
 */
","\com\android\internal\http\multipart\FilePart.java"
"com.android.internal.http.multipart.PartBase.name","false","false","true","false","false","String","","","/**
 * Name of the file part.
 */
","\com\android\internal\http\multipart\PartBase.java"
"com.android.internal.http.multipart.PartBase.charSet","false","false","true","false","false","String","","","/**
 * Content encoding of the file part.
 */
","\com\android\internal\http\multipart\PartBase.java"
"com.android.internal.http.multipart.PartBase.contentType","false","false","true","false","false","String","","","/**
 * Content type of the file part.
 */
","\com\android\internal\http\multipart\PartBase.java"
"com.android.internal.http.multipart.PartBase.transferEncoding","false","false","true","false","false","String","","","/**
 * The transfer encoding.
 */
","\com\android\internal\http\multipart\PartBase.java"
"android.text.method.CharacterPickerDialog.mInflater","false","false","true","false","false","LayoutInflater","","","","\android\text\method\CharacterPickerDialog.java"
"android.text.method.CharacterPickerDialog.mOptions","false","false","true","false","false","String","","","","\android\text\method\CharacterPickerDialog.java"
"android.text.method.CharacterPickerDialog.mCancelButton","false","false","true","false","false","Button","","","","\android\text\method\CharacterPickerDialog.java"
"android.text.method.CharacterPickerDialog.mInsert","false","false","true","false","false","boolean","","","","\android\text\method\CharacterPickerDialog.java"
"android.text.method.CharacterPickerDialog.mView","false","false","true","false","false","View","","","","\android\text\method\CharacterPickerDialog.java"
"android.text.method.CharacterPickerDialog.mText","false","false","true","false","false","Editable","","","","\android\text\method\CharacterPickerDialog.java"
"android.widget.TwoLineListItem.mText1","false","false","true","false","false","TextView","","","","\android\widget\TwoLineListItem.java"
"android.widget.TwoLineListItem.mText2","false","false","true","false","false","TextView","","","","\android\widget\TwoLineListItem.java"
"com.android.internal.http.multipart.MultipartEntity.MULTIPART_BOUNDARY","true","false","false","true","true","String","""http.method.multipart.boundary""","","/**
 * Sets the value to use as the multipart boundary.
 * <p>
 * This parameter expects a value if type {@link String}.
 * </p>
 */
","\com\android\internal\http\multipart\MultipartEntity.java"
"com.android.internal.http.multipart.MultipartEntity.parts","false","true","false","false","false","Part","","","/**
 * The MIME parts as set by the constructor
 */
","\com\android\internal\http\multipart\MultipartEntity.java"
"com.android.internal.http.multipart.MultipartEntity.contentConsumed","false","false","true","false","false","boolean","false","","","\com\android\internal\http\multipart\MultipartEntity.java"
"com.android.internal.http.multipart.MultipartEntity.log","false","false","true","true","true","Log","LogFactory.getLog(MultipartEntity.class)","","","\com\android\internal\http\multipart\MultipartEntity.java"
"com.android.internal.http.multipart.MultipartEntity.MULTIPART_FORM_CONTENT_TYPE","false","false","true","true","true","String","""multipart/form-data""","","/**
 * The Content-Type for multipart/form-data.
 */
","\com\android\internal\http\multipart\MultipartEntity.java"
"com.android.internal.http.multipart.MultipartEntity.MULTIPART_CHARS","false","false","true","true","false","byte","EncodingUtils.getAsciiBytes(""-_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"")","","/**
 * The pool of ASCII chars to be used for generating a multipart boundary.
 */
","\com\android\internal\http\multipart\MultipartEntity.java"
"com.android.internal.http.multipart.MultipartEntity.params","false","false","true","false","false","HttpParams","","","","\com\android\internal\http\multipart\MultipartEntity.java"
"com.android.internal.http.multipart.MultipartEntity.multipartBoundary","false","false","true","false","false","byte","","","","\com\android\internal\http\multipart\MultipartEntity.java"
"android.util.Base64OutputStream.coder","false","false","true","false","true","Base64.Coder","","","","\android\util\Base64OutputStream.java"
"android.util.Base64OutputStream.bpos","false","false","true","false","false","int","0","","","\android\util\Base64OutputStream.java"
"android.util.Base64OutputStream.buffer","false","false","true","false","false","byte","null","","","\android\util\Base64OutputStream.java"
"android.util.Base64OutputStream.flags","false","false","true","false","true","int","","","","\android\util\Base64OutputStream.java"
"android.util.Base64OutputStream.EMPTY","false","false","true","true","false","byte","new byte[0]","","","\android\util\Base64OutputStream.java"
"com.android.internal.os.PkgUsageStats.usageTime","true","false","false","false","false","long","","","","\com\android\internal\os\PkgUsageStats.java"
"com.android.internal.os.PkgUsageStats.packageName","true","false","false","false","false","String","","","","\com\android\internal\os\PkgUsageStats.java"
"com.android.internal.os.PkgUsageStats.CREATOR","true","false","false","true","true","Parcelable.Creator<PkgUsageStats>","new Parcelable.Creator<PkgUsageStats>() {

    public PkgUsageStats createFromParcel(Parcel in) {
        return new PkgUsageStats(in);
    }

    public PkgUsageStats[] newArray(int size) {
        return new PkgUsageStats[size];
    }
}","","","\com\android\internal\os\PkgUsageStats.java"
"com.android.internal.os.PkgUsageStats.launchCount","true","false","false","false","false","int","","","","\com\android\internal\os\PkgUsageStats.java"
"android.content.OperationApplicationException.mNumSuccessfulYieldPoints","false","false","true","false","true","int","","","","\android\content\OperationApplicationException.java"
"android.widget.ViewSwitcher.mFactory","false","false","false","false","false","ViewFactory","","","/**
 * The factory used to create the two children.
 */
","\android\widget\ViewSwitcher.java"
"android.content.pm.DisplayNameComparator.sCollator","false","false","true","false","true","Collator","Collator.getInstance()","","","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.publicSourceDir","true","false","false","false","false","String","","","/**
 * Full path to the location of the publicly available parts of this
 * package (i.e. the primary resource package and manifest).  For
 * non-forward-locked apps this will be the same as {@link #sourceDir).
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_NATIVE_DEBUGGABLE","true","false","false","true","true","int","1 << 21","","/**
 * Value for {@link #flags}: Set to true if the application is
 * native-debuggable, i.e. embeds a gdbserver binary in its .apk
 *
 * {@hide}
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_EXTERNAL_STORAGE","true","false","false","true","true","int","1 << 18","","/**
 * Value for {@link #flags}: Set to true if the application is
 * currently installed on external/removable/unprotected storage.  Such
 * applications may not be available if their storage is not currently
 * mounted.  When the storage it is on is not available, it will look like
 * the application has been uninstalled (its .apk is no longer available)
 * but its persistent data is not removed.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.mPM","false","false","true","false","false","PackageManager","","","","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_HAS_CODE","true","false","false","true","true","int","1 << 2","","/**
 * Value for {@link #flags}: set to true if this application has code
 * associated with it.  Comes
 * from {@link android.R.styleable#AndroidManifestApplication_hasCode
 * android:hasCode} of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.backupAgentName","true","false","false","false","false","String","","","/**
 * Class implementing the Application's backup functionality.  From
 * the ""backupAgent"" attribute.  This is an optional attribute and
 * will be null if the application does not specify it in its manifest.
 *
 * <p>If android:allowBackup is set to false, this attribute is ignored.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_FACTORY_TEST","true","false","false","true","true","int","1 << 4","","/**
 * Value for {@link #flags}: set to true if this application holds the
 * {@link android.Manifest.permission#FACTORY_TEST} permission and the
 * device is running in factory test mode.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_SUPPORTS_SCREEN_DENSITIES","true","false","false","true","true","int","1 << 13","","/**
 * Value for {@link #flags}: true when the application knows how to
 * accomodate different screen densities.  Corresponds to
 * {@link android.R.styleable#AndroidManifestSupportsScreens_anyDensity
 * android:anyDensity}.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_SUPPORTS_LARGE_SCREENS","true","false","false","true","true","int","1 << 11","","/**
 * Value for {@link #flags}: true when the application's window can be
 * increased in size for larger screens.  Corresponds to
 * {@link android.R.styleable#AndroidManifestSupportsScreens_largeScreens
 * android:smallScreens}.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.permission","true","false","false","false","false","String","","","/**
 * Optional name of a permission required to be able to access this
 * application's components.  From the ""permission"" attribute.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_ALLOW_TASK_REPARENTING","true","false","false","true","true","int","1 << 5","","/**
 * Value for {@link #flags}: default value for the corresponding ActivityInfo flag.
 * Comes from {@link android.R.styleable#AndroidManifestApplication_allowTaskReparenting
 * android:allowTaskReparenting} of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_PERSISTENT","true","false","false","true","true","int","1 << 3","","/**
 * Value for {@link #flags}: set to true if this application is persistent.
 * Comes from {@link android.R.styleable#AndroidManifestApplication_persistent
 * android:persistent} of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.descriptionRes","true","false","false","false","false","int","","","/**
 * A style resource identifier (in the package's resources) of the
 * description of an application.  From the ""description"" attribute
 * or, if not set, 0.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.DisplayNameComparator.mPM","false","false","true","false","false","PackageManager","","","","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.processName","true","false","false","false","false","String","","","/**
 * The name of the process this application should run in.  From the
 * ""process"" attribute or, if not set, the same as
 * <var>packageName</var>.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.uid","true","false","false","false","false","int","","","/**
 * The kernel user-ID that has been assigned to this application;
 * currently this is not a unique ID (multiple applications can have
 * the same uid).
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.manageSpaceActivityName","true","false","false","false","false","String","","","/**
 * Class implementing the Application's manage space
 * functionality.  From the ""manageSpaceActivity""
 * attribute. This is an optional attribute and will be null if
 * applications don't specify it in their manifest
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.dataDir","true","false","false","false","false","String","","","/**
 * Full path to a directory assigned to the package for its persistent
 * data.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_RESTORE_ANY_VERSION","true","false","false","true","true","int","1 << 17","","/**
 * Value for {@link #flags}: Set to <code>true</code> if the application's backup
 * agent claims to be able to handle restore data even ""from the future,""
 * i.e. from versions of the application with a versionCode greater than
 * the one currently installed on the device.  <i>Use with caution!</i>  By default
 * this attribute is <code>false</code> and the Backup Manager will ensure that data
 * from ""future"" versions of the application are never supplied during a restore operation.
 *
 * <p>If
 * {@link android.R.styleable#AndroidManifestApplication_allowBackup android:allowBackup}
 * is set to <code>false</code> or no
 * {@link android.R.styleable#AndroidManifestApplication_backupAgent android:backupAgent}
 * is specified, this flag will be ignored.
 *
 * <p>Comes from the
 * {@link android.R.styleable#AndroidManifestApplication_restoreAnyVersion android:restoreAnyVersion}
 * attribute of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.targetSdkVersion","true","false","false","false","false","int","","","/**
 * The minimum SDK version this application targets.  It may run on earlier
 * versions, but it knows how to work with any new behavior added at this
 * version.  Will be {@link android.os.Build.VERSION_CODES#CUR_DEVELOPMENT}
 * if this is a development build and the app is targeting that.  You should
 * compare that this number is >= the SDK version number at which your
 * behavior was introduced.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_ALLOW_CLEAR_USER_DATA","true","false","false","true","true","int","1 << 6","","/**
 * Value for {@link #flags}: default value for the corresponding ActivityInfo flag.
 * Comes from {@link android.R.styleable#AndroidManifestApplication_allowClearUserData
 * android:allowClearUserData} of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_RESIZEABLE_FOR_SCREENS","true","false","false","true","true","int","1 << 12","","/**
 * Value for {@link #flags}: true when the application knows how to adjust
 * its UI for different screen sizes.  Corresponds to
 * {@link android.R.styleable#AndroidManifestSupportsScreens_resizeable
 * android:resizeable}.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.className","true","false","false","false","false","String","","","/**
 * Class implementing the Application object.  From the ""class""
 * attribute.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.sourceDir","true","false","false","false","false","String","","","/**
 * Full path to the location of this package.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.resourceDirs","true","false","false","false","false","String","","","/**
 * Full paths to the locations of extra resource packages this application
 * uses. This field is only used if there are extra resource packages,
 * otherwise it is null.
 *
 * {@hide}
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.enabled","true","false","false","false","false","boolean","true","","/**
 * When false, indicates that all components within this application are
 * considered disabled, regardless of their individually set enabled status.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_SUPPORTS_SMALL_SCREENS","true","false","false","true","true","int","1 << 9","","/**
 * Value for {@link #flags}: true when the application's window can be
 * reduced in size for smaller screens.  Corresponds to
 * {@link android.R.styleable#AndroidManifestSupportsScreens_smallScreens
 * android:smallScreens}.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_UPDATED_SYSTEM_APP","true","false","false","true","true","int","1 << 7","","/**
 * Value for {@link #flags}: this is set if this application has been
 * install as an update to a built-in system application.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.sCollator","false","false","true","false","true","Collator","Collator.getInstance()","","","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_KILL_AFTER_RESTORE","true","false","false","true","true","int","1 << 16","","/**
 * Value for {@link #flags}: set to <code>false</code> if the application must be kept
 * in memory following a full-system restore operation; <code>true</code> otherwise.
 * Ordinarily, during a full system restore operation each application is shut down
 * following execution of its agent's onRestore() method.  Setting this attribute to
 * <code>false</code> prevents this.  Most applications will not need to set this attribute.
 *
 * <p>If
 * {@link android.R.styleable#AndroidManifestApplication_allowBackup android:allowBackup}
 * is set to <code>false</code> or no
 * {@link android.R.styleable#AndroidManifestApplication_backupAgent android:backupAgent}
 * is specified, this flag will be ignored.
 *
 * <p>Comes from the
 * {@link android.R.styleable#AndroidManifestApplication_killAfterRestore android:killAfterRestore}
 * attribute of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.taskAffinity","true","false","false","false","false","String","","","/**
 * Default task affinity of all activities in this application. See
 * {@link ActivityInfo#taskAffinity} for more information.  This comes
 * from the ""taskAffinity"" attribute.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<ApplicationInfo>","new Parcelable.Creator<ApplicationInfo>() {

    public ApplicationInfo createFromParcel(Parcel source) {
        return new ApplicationInfo(source);
    }

    public ApplicationInfo[] newArray(int size) {
        return new ApplicationInfo[size];
    }
}","","","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.sharedLibraryFiles","true","false","false","false","false","String","","","/**
 * Paths to all shared libraries this application is linked against.  This
 * field is only set if the {@link PackageManager#GET_SHARED_LIBRARY_FILES
 * PackageManager.GET_SHARED_LIBRARY_FILES} flag was used when retrieving
 * the structure.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_DEBUGGABLE","true","false","false","true","true","int","1 << 1","","/**
 * Value for {@link #flags}: set to true if this application would like to
 * allow debugging of its
 * code, even when installed on a non-development system.  Comes
 * from {@link android.R.styleable#AndroidManifestApplication_debuggable
 * android:debuggable} of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_VM_SAFE_MODE","true","false","false","true","true","int","1 << 14","","/**
 * Value for {@link #flags}: set to true if this application would like to
 * request the VM to operate under the safe mode. Comes from
 * {@link android.R.styleable#AndroidManifestApplication_vmSafeMode
 * android:vmSafeMode} of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_TEST_ONLY","true","false","false","true","true","int","1 << 8","","/**
 * Value for {@link #flags}: this is set of the application has specified
 * {@link android.R.styleable#AndroidManifestApplication_testOnly
 * android:testOnly} to be true.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_SYSTEM","true","false","false","true","true","int","1 << 0","","/**
 * Value for {@link #flags}: if set, this application is installed in the
 * device's system image.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_SUPPORTS_NORMAL_SCREENS","true","false","false","true","true","int","1 << 10","","/**
 * Value for {@link #flags}: true when the application's window can be
 * displayed on normal screens.  Corresponds to
 * {@link android.R.styleable#AndroidManifestSupportsScreens_normalScreens
 * android:normalScreens}.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.theme","true","false","false","false","false","int","","","/**
 * A style resource identifier (in the package's resources) of the
 * default visual theme of the application.  From the ""theme"" attribute
 * or, if not set, 0.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.flags","true","false","false","false","false","int","0","","/**
 * Flags associated with the application.  Any combination of
 * {@link #FLAG_SYSTEM}, {@link #FLAG_DEBUGGABLE}, {@link #FLAG_HAS_CODE},
 * {@link #FLAG_PERSISTENT}, {@link #FLAG_FACTORY_TEST}, and
 * {@link #FLAG_ALLOW_TASK_REPARENTING}
 * {@link #FLAG_ALLOW_CLEAR_USER_DATA}, {@link #FLAG_UPDATED_SYSTEM_APP},
 * {@link #FLAG_TEST_ONLY}, {@link #FLAG_SUPPORTS_SMALL_SCREENS},
 * {@link #FLAG_SUPPORTS_NORMAL_SCREENS},
 * {@link #FLAG_SUPPORTS_LARGE_SCREENS}, {@link #FLAG_RESIZEABLE_FOR_SCREENS},
 * {@link #FLAG_SUPPORTS_SCREEN_DENSITIES}, {@link #FLAG_VM_SAFE_MODE}
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_ALLOW_BACKUP","true","false","false","true","true","int","1 << 15","","/**
 * Value for {@link #flags}: set to <code>false</code> if the application does not wish
 * to permit any OS-driven backups of its data; <code>true</code> otherwise.
 *
 * <p>Comes from the
 * {@link android.R.styleable#AndroidManifestApplication_allowBackup android:allowBackup}
 * attribute of the &lt;application&gt; tag.
 */
","\android\content\pm\ApplicationInfo.java"
"android.content.pm.ApplicationInfo.FLAG_FORWARD_LOCK","true","false","false","true","true","int","1 << 20","","/**
 * Value for {@link #flags}: Set to true if the application has been
 * installed using the forward lock option.
 *
 * {@hide}
 */
","\android\content\pm\ApplicationInfo.java"
"android.preference.PreferenceScreen.isDialogShowing","false","false","false","false","false","boolean","","","","\android\preference\PreferenceScreen.java"
"android.preference.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\PreferenceScreen.java"
"android.preference.PreferenceScreen.mRootAdapter","false","false","true","false","false","ListAdapter","","","","\android\preference\PreferenceScreen.java"
"android.preference.PreferenceScreen.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\PreferenceScreen.java"
"android.preference.PreferenceScreen.mDialog","false","false","true","false","false","Dialog","","","","\android\preference\PreferenceScreen.java"
"android.preference.SavedState.dialogBundle","false","false","false","false","false","Bundle","","","","\android\preference\PreferenceScreen.java"
"android.preference.SavedState.isDialogShowing","false","false","false","false","false","boolean","","","","\android\preference\PreferenceScreen.java"
"android.preference.PreferenceScreen.dialogBundle","false","false","false","false","false","Bundle","","","","\android\preference\PreferenceScreen.java"
"android.view.inputmethod.CompletionInfo.TAG","false","false","false","true","true","String","""CompletionInfo""","","","\android\view\inputmethod\CompletionInfo.java"
"android.view.inputmethod.CompletionInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<CompletionInfo>","new Parcelable.Creator<CompletionInfo>() {

    public CompletionInfo createFromParcel(Parcel source) {
        return new CompletionInfo(source);
    }

    public CompletionInfo[] newArray(int size) {
        return new CompletionInfo[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\android\view\inputmethod\CompletionInfo.java"
"android.view.inputmethod.CompletionInfo.mPosition","false","false","false","false","true","int","","","","\android\view\inputmethod\CompletionInfo.java"
"android.view.inputmethod.CompletionInfo.mText","false","false","false","false","true","CharSequence","","","","\android\view\inputmethod\CompletionInfo.java"
"android.view.inputmethod.CompletionInfo.mId","false","false","false","false","true","long","","","","\android\view\inputmethod\CompletionInfo.java"
"android.view.inputmethod.CompletionInfo.mLabel","false","false","false","false","true","CharSequence","","","","\android\view\inputmethod\CompletionInfo.java"
"android.app.AliasActivity.ALIAS_META_DATA","true","false","false","false","true","String","""android.app.alias""","","/**
 * This is the name under which you should store in your component the
 * meta-data information about the alias.  It is a reference to an XML
 * resource describing an intent that launches the real application.
 * {@hide}
 */
","\android\app\AliasActivity.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_BIG5","true","false","false","true","true","String","""big5""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.US_ASCII","true","false","false","true","true","int","0x03","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIBENUM_NUMBERS","false","false","true","true","true","int","{ ANY_CHARSET, US_ASCII, ISO_8859_1, ISO_8859_2, ISO_8859_3, ISO_8859_4, ISO_8859_5, ISO_8859_6, ISO_8859_7, ISO_8859_8, ISO_8859_9, SHIFT_JIS, UTF_8, BIG5, UCS2, UTF_16 }","","/**
 * Array of MIB enum numbers.
 */
","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.UTF_16","true","false","false","true","true","int","0x03F7","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.DEFAULT_CHARSET_NAME","true","false","false","true","true","String","MIMENAME_UTF_8","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.UTF_8","true","false","false","true","true","int","0x6A","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_7","true","false","false","true","true","String","""iso-8859-7""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_6","true","false","false","true","true","String","""iso-8859-6""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIME_NAMES","false","false","true","true","true","String","{ MIMENAME_ANY_CHARSET, MIMENAME_US_ASCII, MIMENAME_ISO_8859_1, MIMENAME_ISO_8859_2, MIMENAME_ISO_8859_3, MIMENAME_ISO_8859_4, MIMENAME_ISO_8859_5, MIMENAME_ISO_8859_6, MIMENAME_ISO_8859_7, MIMENAME_ISO_8859_8, MIMENAME_ISO_8859_9, MIMENAME_SHIFT_JIS, MIMENAME_UTF_8, MIMENAME_BIG5, MIMENAME_UCS2, MIMENAME_UTF_16 }","","/**
 * Array of the names of character sets.
 */
","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_5","true","false","false","true","true","String","""iso-8859-5""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_4","true","false","false","true","true","String","""iso-8859-4""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_9","true","false","false","true","true","String","""iso-8859-9""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_8","true","false","false","true","true","String","""iso-8859-8""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_3","true","false","false","true","true","String","""iso-8859-3""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_2","true","false","false","true","true","String","""iso-8859-2""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ISO_8859_1","true","false","false","true","true","String","""iso-8859-1""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.UCS2","true","false","false","true","true","int","0x03E8","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ANY_CHARSET","true","false","false","true","true","int","0x00","","/**
 * IANA assigned MIB enum numbers.
 *
 * From wap-230-wsp-20010705-a.pdf
 * Any-charset = <Octet 128>
 * Equivalent to the special RFC2616 charset value ""*""
 */
","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIBENUM_TO_NAME_MAP","false","false","true","true","true","HashMap<Integer,String>","","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.DEFAULT_CHARSET","true","false","false","true","true","int","UTF_8","","/**
 * If the encoding of given data is unsupported, use UTF_8 to decode it.
 */
","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_US_ASCII","true","false","false","true","true","String","""us-ascii""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_UCS2","true","false","false","true","true","String","""iso-10646-ucs-2""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.NAME_TO_MIBENUM_MAP","false","false","true","true","true","HashMap<String,Integer>","","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.SHIFT_JIS","true","false","false","true","true","int","0x11","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_1","true","false","false","true","true","int","0x04","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_5","true","false","false","true","true","int","0x08","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_4","true","false","false","true","true","int","0x07","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_3","true","false","false","true","true","int","0x06","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_2","true","false","false","true","true","int","0x05","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_9","true","false","false","true","true","int","0x0C","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_8","true","false","false","true","true","int","0x0B","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_7","true","false","false","true","true","int","0x0A","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.ISO_8859_6","true","false","false","true","true","int","0x09","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_SHIFT_JIS","true","false","false","true","true","String","""shift_JIS""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_UTF_16","true","false","false","true","true","String","""utf-16""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.BIG5","true","false","false","true","true","int","0x07EA","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_UTF_8","true","false","false","true","true","String","""utf-8""","","","\com\google\android\mms\pdu\CharacterSets.java"
"com.google.android.mms.pdu.CharacterSets.MIMENAME_ANY_CHARSET","true","false","false","true","true","String","""*""","","/**
 * The Well-known-charset Mime name.
 */
","\com\google\android\mms\pdu\CharacterSets.java"
"android.util.Xml.instance","false","false","false","true","true","XmlPullParserFactory","","","","\android\util\Xml.java"
"android.util.Xml.TYPE","false","false","false","true","true","String","""org.kxml2.io.KXmlParser,org.kxml2.io.KXmlSerializer""","","","\android\util\Xml.java"
"android.util.Xml.FEATURE_RELAXED","true","false","false","true","false","String","ExpatPullParser.FEATURE_RELAXED","","/**
 * {@link org.xmlpull.v1.XmlPullParser} ""relaxed"" feature name.
 *
 * @see <a href=""http://xmlpull.org/v1/doc/features.html#relaxed"">
 * specification</a>
 */
","\android\util\Xml.java"
"android.util.XmlSerializerFactory.TYPE","false","false","false","true","true","String","""org.kxml2.io.KXmlParser,org.kxml2.io.KXmlSerializer""","","","\android\util\Xml.java"
"android.util.XmlSerializerFactory.instance","false","false","false","true","true","XmlPullParserFactory","","","","\android\util\Xml.java"
"android.util.Xml.expatName","false","false","false","false","true","String","","","","\android\util\Xml.java"
"android.widget.ResourceCursorAdapter.mInflater","false","false","true","false","false","LayoutInflater","","","","\android\widget\ResourceCursorAdapter.java"
"android.widget.ResourceCursorAdapter.mLayout","false","false","true","false","false","int","","","","\android\widget\ResourceCursorAdapter.java"
"android.widget.ResourceCursorAdapter.mDropDownLayout","false","false","true","false","false","int","","","","\android\widget\ResourceCursorAdapter.java"
"com.google.android.util.SmileyResources.mSmileyToRes","false","false","true","false","false","HashMap<String,Integer>","new HashMap<String, Integer>()","","","\com\google\android\util\SmileyResources.java"
"com.google.android.util.SmileyResources.smileys","false","false","true","false","true","TrieNode","new TrieNode()","","","\com\google\android\util\SmileyResources.java"
"android.view.inputmethod.BaseInputConnection.mDummyMode","false","false","false","false","true","boolean","","","","\android\view\inputmethod\BaseInputConnection.java"
"android.view.inputmethod.BaseInputConnection.mTargetView","false","false","false","false","true","View","","","","\android\view\inputmethod\BaseInputConnection.java"
"android.view.inputmethod.BaseInputConnection.COMPOSING","false","false","false","true","true","Object","new ComposingText()","","","\android\view\inputmethod\BaseInputConnection.java"
"android.view.inputmethod.BaseInputConnection.mEditable","false","false","false","false","false","Editable","","","","\android\view\inputmethod\BaseInputConnection.java"
"android.view.inputmethod.BaseInputConnection.DEBUG","false","false","true","true","true","boolean","false","","","\android\view\inputmethod\BaseInputConnection.java"
"android.view.inputmethod.BaseInputConnection.mDefaultComposingSpans","false","false","true","false","false","Object","","","","\android\view\inputmethod\BaseInputConnection.java"
"android.view.inputmethod.BaseInputConnection.mKeyCharacterMap","false","false","false","false","false","KeyCharacterMap","","","","\android\view\inputmethod\BaseInputConnection.java"
"android.view.inputmethod.BaseInputConnection.TAG","false","false","true","true","true","String","""BaseInputConnection""","","","\android\view\inputmethod\BaseInputConnection.java"
"android.view.inputmethod.BaseInputConnection.mIMM","false","false","false","false","true","InputMethodManager","","","","\android\view\inputmethod\BaseInputConnection.java"
"android.text.style.Standard.mAlignment","false","false","true","false","true","Layout.Alignment","","","","\android\text\style\AlignmentSpan.java"
"android.text.style.AlignmentSpan.mAlignment","false","false","true","false","true","Layout.Alignment","","","","\android\text\style\AlignmentSpan.java"
"android.emoji.EmojiFactory.sCacheSize","false","false","true","false","false","int","100","","","\android\emoji\EmojiFactory.java"
"android.emoji.EmojiFactory.mNativeEmojiFactory","false","false","true","false","false","int","","","// A pointer to native EmojiFactory object.
","\android\emoji\EmojiFactory.java"
"android.emoji.EmojiFactory.mCache","false","false","true","false","false","Map<Integer,WeakReference<Bitmap>>","","","// Cache.
","\android\emoji\EmojiFactory.java"
"android.emoji.EmojiFactory.mName","false","false","true","false","false","String","","","","\android\emoji\EmojiFactory.java"
"android.net.UrlQuerySanitizer.mParameter","true","false","false","false","false","String","","","/**
 * The unencoded parameter
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.mEntries","false","false","true","false","true","HashMap<String,String>","new HashMap<String, String>()","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.NON_7_BIT_ASCII_OK","true","false","false","true","true","int","1 << 2","","/**
 * Allow characters with character codes 128 to 255.
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.AMP_LEGAL","true","false","false","true","true","int","AMP_OK","","/**
 * <ul>
 * <li>Allow ampersand.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.LT_OK","true","false","false","true","true","int","1 << 5","","/**
 * Allow less-than characters. ('<')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.VBSCRIPT_PREFIX","false","false","true","true","true","String","""vbscript:""","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.SCRIPT_URL_OK","true","false","false","true","true","int","1 << 10","","/**
 * Allow text to start with a script URL
 * such as ""javascript:"" or ""vbscript:""
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.ALL_OK","true","false","false","true","true","int","0x7ff","","/**
 * Mask with all fields set to OK
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.mUnregisteredParameterValueSanitizer","false","false","true","false","false","ValueSanitizer","getAllIllegal()","","","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.ALL_ILLEGAL","true","false","false","true","true","int","0","","/**
 * <ul>
 * <li>Deny all special characters.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.PCT_OK","true","false","false","true","true","int","1 << 8","","/**
 * Allow percent-sign characters ('%')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.SPACE_OK","true","false","false","true","true","int","1 << 0","","/**
 * Allow space (' ') characters.
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sAmpLegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.AMP_LEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sSpaceLegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.SPACE_LEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.SQUOTE_OK","true","false","false","true","true","int","1 << 4","","/**
 * Allow single quote characters. ('\'')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.ALL_BUT_NUL_AND_ANGLE_BRACKETS_LEGAL","true","false","false","true","true","int","ALL_OK & ~(NUL_OK | LT_OK | GT_OK)","","/**
 * <ul>
 * <li>Allow all but.
 * <ul>
 * <li>Nul ('\0')
 * <li>Angle brackets ('<', '>')
 * </ul>
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sUrlAndSpaceLegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.URL_AND_SPACE_LEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sAmpAndSpaceLegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.AMP_AND_SPACE_LEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sAllIllegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.ALL_ILLEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.SPACE_LEGAL","true","false","false","true","true","int","SPACE_OK","","/**
 * <ul>
 * <li>Allow space.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.URL_AND_SPACE_LEGAL","true","false","false","true","true","int","URL_LEGAL | SPACE_OK","","/**
 * <ul>
 * <li>Allow characters used by encoded URLs.
 * <li>Allow spaces.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.AMP_OK","true","false","false","true","true","int","1 << 7","","/**
 * Allow ampersand characters ('&')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.JAVASCRIPT_PREFIX","false","false","true","true","true","String","""javascript:""","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.ALL_BUT_NUL_AND_ANGLE_BRACKETS_LEGAL","true","false","false","true","true","int","ALL_OK & ~(NUL_OK | LT_OK | GT_OK)","","/**
 * <ul>
 * <li>Allow all but.
 * <ul>
 * <li>Nul ('\0')
 * <li>Angle brackets ('<', '>')
 * </ul>
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.LT_OK","true","false","false","true","true","int","1 << 5","","/**
 * Allow less-than characters. ('<')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.mFlags","false","false","true","false","false","int","","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.OTHER_WHITESPACE_OK","true","false","false","true","true","int","1 << 1","","/**
 * Allow whitespace characters other than space. The
 * other whitespace characters are
 * '\t' '\f' '\n' '\r' and '\0x000b' (vertical tab)
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.mSanitizers","false","false","true","false","true","HashMap<String,ValueSanitizer>","new HashMap<String, ValueSanitizer>()","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.URL_AND_SPACE_LEGAL","true","false","false","true","true","int","URL_LEGAL | SPACE_OK","","/**
 * <ul>
 * <li>Allow characters used by encoded URLs.
 * <li>Allow spaces.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.GT_OK","true","false","false","true","true","int","1 << 6","","/**
 * Allow greater-than characters. ('>')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.PCT_OK","true","false","false","true","true","int","1 << 8","","/**
 * Allow percent-sign characters ('%')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.SCRIPT_URL_OK","true","false","false","true","true","int","1 << 10","","/**
 * Allow text to start with a script URL
 * such as ""javascript:"" or ""vbscript:""
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.ParameterValuePair.mValue","true","false","false","false","false","String","","","/**
 * The unencoded value
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.MIN_SCRIPT_PREFIX_LENGTH","false","false","true","true","true","int","Math.min(JAVASCRIPT_PREFIX.length(), VBSCRIPT_PREFIX.length())","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.AMP_AND_SPACE_LEGAL","true","false","false","true","true","int","AMP_OK | SPACE_OK","","/**
 * <ul>
 * <li>Allow ampersand.
 * <li>Allow space.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.ALL_BUT_WHITESPACE_LEGAL","true","false","false","true","true","int","ALL_OK & ~(ALL_WHITESPACE_OK | NUL_OK)","","/**
 * <ul>
 * <li>Allow all special characters except for:
 * <ul>
 * <li>whitespace characters
 * <li>Nul ('\0')
 * </ul>
 * <li>Allow script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.ALL_OK","true","false","false","true","true","int","0x7ff","","/**
 * Mask with all fields set to OK
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.ALL_BUT_NUL_LEGAL","true","false","false","true","true","int","ALL_OK & ~NUL_OK","","/**
 * <ul>
 * <li>Allow all special characters except Nul. ('\0').
 * <li>Allow script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sAllButNulAndAngleBracketsLegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.ALL_BUT_NUL_AND_ANGLE_BRACKETS_LEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.SQUOTE_OK","true","false","false","true","true","int","1 << 4","","/**
 * Allow single quote characters. ('\'')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.NUL_OK","true","false","false","true","true","int","1 << 9","","/**
 * Allow nul characters ('\0')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sURLLegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.URL_LEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.ALL_WHITESPACE_OK","true","false","false","true","true","int","SPACE_OK | OTHER_WHITESPACE_OK","","/**
 * Mask with both regular space and other whitespace OK
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.DQUOTE_OK","true","false","false","true","true","int","1 << 3","","/**
 * Allow double quote characters. ('""')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.ALL_BUT_NUL_LEGAL","true","false","false","true","true","int","ALL_OK & ~NUL_OK","","/**
 * <ul>
 * <li>Allow all special characters except Nul. ('\0').
 * <li>Allow script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.AMP_AND_SPACE_LEGAL","true","false","false","true","true","int","AMP_OK | SPACE_OK","","/**
 * <ul>
 * <li>Allow ampersand.
 * <li>Allow space.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.mFlags","false","false","true","false","false","int","","","","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.OTHER_WHITESPACE_OK","true","false","false","true","true","int","1 << 1","","/**
 * Allow whitespace characters other than space. The
 * other whitespace characters are
 * '\t' '\f' '\n' '\r' and '\0x000b' (vertical tab)
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sAllButWhitespaceLegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.ALL_BUT_WHITESPACE_LEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.mPreferFirstRepeatedParameter","false","false","true","false","false","boolean","","","","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.ALL_WHITESPACE_OK","true","false","false","true","true","int","SPACE_OK | OTHER_WHITESPACE_OK","","/**
 * Mask with both regular space and other whitespace OK
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.VBSCRIPT_PREFIX","false","false","true","true","true","String","""vbscript:""","","","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.SPACE_LEGAL","true","false","false","true","true","int","SPACE_OK","","/**
 * <ul>
 * <li>Allow space.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.AMP_LEGAL","true","false","false","true","true","int","AMP_OK","","/**
 * <ul>
 * <li>Allow ampersand.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.NON_7_BIT_ASCII_OK","true","false","false","true","true","int","1 << 2","","/**
 * Allow characters with character codes 128 to 255.
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.SPACE_OK","true","false","false","true","true","int","1 << 0","","/**
 * Allow space (' ') characters.
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.mEntriesList","false","false","true","false","true","ArrayList<ParameterValuePair>","new ArrayList<ParameterValuePair>()","","","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.JAVASCRIPT_PREFIX","false","false","true","true","true","String","""javascript:""","","","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.ALL_BUT_WHITESPACE_LEGAL","true","false","false","true","true","int","ALL_OK & ~(ALL_WHITESPACE_OK | NUL_OK)","","/**
 * <ul>
 * <li>Allow all special characters except for:
 * <ul>
 * <li>whitespace characters
 * <li>Nul ('\0')
 * </ul>
 * <li>Allow script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.GT_OK","true","false","false","true","true","int","1 << 6","","/**
 * Allow greater-than characters. ('>')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.MIN_SCRIPT_PREFIX_LENGTH","false","false","true","true","true","int","Math.min(JAVASCRIPT_PREFIX.length(), VBSCRIPT_PREFIX.length())","","","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.NUL_OK","true","false","false","true","true","int","1 << 9","","/**
 * Allow nul characters ('\0')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.URL_LEGAL","true","false","false","true","true","int","NON_7_BIT_ASCII_OK | SQUOTE_OK | AMP_OK | PCT_OK","","/**
 * <ul>
 * <li>Allow characters used by encoded URLs.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.DQUOTE_OK","true","false","false","true","true","int","1 << 3","","/**
 * Allow double quote characters. ('""')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.IllegalCharacterValueSanitizer.AMP_OK","true","false","false","true","true","int","1 << 7","","/**
 * Allow ampersand characters ('&')
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.sAllButNulLegal","false","false","true","true","true","ValueSanitizer","new IllegalCharacterValueSanitizer(IllegalCharacterValueSanitizer.ALL_BUT_NUL_LEGAL)","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.mAllowUnregisteredParamaters","false","false","true","false","false","boolean","","","","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.mValue","true","false","false","false","false","String","","","/**
 * The unencoded value
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.URL_LEGAL","true","false","false","true","true","int","NON_7_BIT_ASCII_OK | SQUOTE_OK | AMP_OK | PCT_OK","","/**
 * <ul>
 * <li>Allow characters used by encoded URLs.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.UrlQuerySanitizer.ALL_ILLEGAL","true","false","false","true","true","int","0","","/**
 * <ul>
 * <li>Deny all special characters.
 * <li>Deny script URLs.
 * </ul>
 */
","\android\net\UrlQuerySanitizer.java"
"android.net.ParameterValuePair.mParameter","true","false","false","false","false","String","","","/**
 * The unencoded parameter
 */
","\android\net\UrlQuerySanitizer.java"
"android.content.IntentFilter.MATCH_CATEGORY_MASK","true","false","false","true","true","int","0xfff0000","","/**
 * The part of a match constant that describes the category of match
 * that occurred.  May be either {@link #MATCH_CATEGORY_EMPTY},
 * {@link #MATCH_CATEGORY_SCHEME}, {@link #MATCH_CATEGORY_HOST},
 * {@link #MATCH_CATEGORY_PORT},
 * {@link #MATCH_CATEGORY_PATH}, or {@link #MATCH_CATEGORY_TYPE}.  Higher
 * values indicate a better match.
 */
","\android\content\IntentFilter.java"
"android.content.AuthorityEntry.mPort","false","false","true","false","true","int","","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.SGLOB_STR","false","false","true","true","true","String","""sglob""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.LITERAL_STR","false","false","true","true","true","String","""literal""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.CREATOR","true","false","false","true","true","Parcelable.Creator<IntentFilter>","new Parcelable.Creator<IntentFilter>() {

    public IntentFilter createFromParcel(Parcel source) {
        return new IntentFilter(source);
    }

    public IntentFilter[] newArray(int size) {
        return new IntentFilter[size];
    }
}","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.SCHEME_STR","false","false","true","true","true","String","""scheme""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.MATCH_ADJUSTMENT_MASK","true","false","false","true","true","int","0x000ffff","","/**
 * The part of a match constant that applies a quality adjustment to the
 * basic category of match.  The value {@link #MATCH_ADJUSTMENT_NORMAL}
 * is no adjustment; higher numbers than that improve the quality, while
 * lower numbers reduce it.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.TYPE_STR","false","false","true","true","true","String","""type""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.MATCH_CATEGORY_TYPE","true","false","false","true","true","int","0x0600000","","/**
 * The filter matched an intent with the same data MIME type.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.SYSTEM_HIGH_PRIORITY","true","false","false","true","true","int","1000","","/**
 * The filter {@link #setPriority} value at which system high-priority
 * receivers are placed; that is, receivers that should execute before
 * application code. Applications should never use filters with this or
 * higher priorities.
 *
 * @see #setPriority
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.NO_MATCH_TYPE","true","false","false","true","true","int","-1","","/**
 * The filter didn't match due to different MIME types.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.mActions","false","false","true","false","true","ArrayList<String>","","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.mCategories","false","false","true","false","false","ArrayList<String>","null","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.MATCH_CATEGORY_PORT","true","false","false","true","true","int","0x0400000","","/**
 * The filter matched an intent with the same data URI scheme and
 * authority host and port.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.mOrigHost","false","false","true","false","true","String","","","","\android\content\IntentFilter.java"
"android.content.AuthorityEntry.mHost","false","false","true","false","true","String","","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.NO_MATCH_DATA","true","false","false","true","true","int","-2","","/**
 * The filter didn't match due to different data URIs.
 */
","\android\content\IntentFilter.java"
"android.content.AuthorityEntry.mOrigHost","false","false","true","false","true","String","","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.MATCH_CATEGORY_PATH","true","false","false","true","true","int","0x0500000","","/**
 * The filter matched an intent with the same data URI scheme,
 * authority, and path.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.mDataPaths","false","false","true","false","false","ArrayList<PatternMatcher>","null","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.mHost","false","false","true","false","true","String","","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.mDataTypes","false","false","true","false","false","ArrayList<String>","null","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.mDataSchemes","false","false","true","false","false","ArrayList<String>","null","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.PATH_STR","false","false","true","true","true","String","""path""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.CAT_STR","false","false","true","true","true","String","""cat""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.NO_MATCH_CATEGORY","true","false","false","true","true","int","-4","","/**
 * The filter didn't match because it required one or more categories
 * that were not in the Intent.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.mPriority","false","false","true","false","false","int","","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.SYSTEM_LOW_PRIORITY","true","false","false","true","true","int","-1000","","/**
 * The filter {@link #setPriority} value at which system low-priority
 * receivers are placed; that is, receivers that should execute after
 * application code. Applications should never use filters with this or
 * lower priorities.
 *
 * @see #setPriority
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.PORT_STR","false","false","true","true","true","String","""port""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.NO_MATCH_ACTION","true","false","false","true","true","int","-3","","/**
 * The filter didn't match due to different actions.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.MATCH_CATEGORY_SCHEME","true","false","false","true","true","int","0x0200000","","/**
 * The filter matched an intent with the same data URI scheme.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.HOST_STR","false","false","true","true","true","String","""host""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.MATCH_CATEGORY_EMPTY","true","false","false","true","true","int","0x0100000","","/**
 * The filter matched an intent that had no data specified.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.mDataAuthorities","false","false","true","false","false","ArrayList<AuthorityEntry>","null","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.mPort","false","false","true","false","true","int","","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.MATCH_CATEGORY_HOST","true","false","false","true","true","int","0x0300000","","/**
 * The filter matched an intent with the same data URI scheme and
 * authority host.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.mHasPartialTypes","false","false","true","false","false","boolean","false","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.NAME_STR","false","false","true","true","true","String","""name""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.AUTH_STR","false","false","true","true","true","String","""auth""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.PREFIX_STR","false","false","true","true","true","String","""prefix""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.MATCH_ADJUSTMENT_NORMAL","true","false","false","true","true","int","0x8000","","/**
 * Quality adjustment applied to the category of match that signifies
 * the default, base value; higher numbers improve the quality while
 * lower numbers reduce it.
 */
","\android\content\IntentFilter.java"
"android.content.IntentFilter.ACTION_STR","false","false","true","true","true","String","""action""","","","\android\content\IntentFilter.java"
"android.content.IntentFilter.mWild","false","false","true","false","true","boolean","","","","\android\content\IntentFilter.java"
"android.content.AuthorityEntry.mWild","false","false","true","false","true","boolean","","","","\android\content\IntentFilter.java"
"android.content.res.Translator.mContentInsetsBuffer","false","false","true","false","false","Rect","null","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.appFlags","true","false","false","false","true","int","","","/**
 * The flags from ApplicationInfo.
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.SCALING_EXPANDABLE_MASK","false","false","true","true","true","int","SCALING_REQUIRED | EXPANDABLE | LARGE_SCREENS","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.applicationDensity","true","false","false","false","true","int","","","/**
 * The effective screen density we have selected for this application.
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.applicationInvertedScale","true","false","false","false","true","float","","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.mCompatibilityFlags","false","false","true","false","false","int","","","/**
 * A compatibility flags
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.CONFIGURED_LARGE_SCREENS","false","false","true","true","true","int","16","","/**
 * A flag mask to tell if the application supports large screens. This differs
 * from LARGE_SCREENS in that the application that does not support large
 * screens will be marked as supporting them if the current screen is not
 * large.
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.Translator.applicationScale","true","false","false","false","true","float","","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.applicationScale","true","false","false","false","true","float","","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.Translator.mVisibleInsetsBuffer","false","false","true","false","false","Rect","null","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.mContentInsetsBuffer","false","false","true","false","false","Rect","null","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.SCALING_REQUIRED","false","false","true","true","true","int","1","","/**
 * A flag mask to tell if the application needs scaling (when mApplicationScale != 1.0f)
 * {@see compatibilityFlag}
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.EXPANDABLE","false","false","true","true","true","int","2","","/**
 * A flag mask to indicates that the application can expand over the original size.
 * The flag is set to true if
 * 1) Application declares its expandable in manifest file using <supports-screens> or
 * 2) Configuration.SCREENLAYOUT_COMPAT_NEEDED is not set
 * {@see compatibilityFlag}
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.LARGE_SCREENS","false","false","true","true","true","int","8","","/**
 * A flag mask to indicates that the application supports large screens.
 * The flag is set to true if
 * 1) Application declares it supports large screens in manifest file using <supports-screens> or
 * 2) The screen size is not large
 * {@see compatibilityFlag}
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.Translator.applicationInvertedScale","true","false","false","false","true","float","","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.DEFAULT_PORTRAIT_WIDTH","true","false","false","true","true","int","320","","/**
 * The default width of the screen in portrait mode.
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.CONFIGURED_EXPANDABLE","false","false","true","true","true","int","4","","/**
 * A flag mask to tell if the application is configured to be expandable. This differs
 * from EXPANDABLE in that the application that is not expandable will be
 * marked as expandable if Configuration.SCREENLAYOUT_COMPAT_NEEDED is not set.
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.TAG","false","false","true","true","true","String","""CompatibilityInfo""","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.DBG","false","false","true","true","true","boolean","false","","","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.DEFAULT_PORTRAIT_HEIGHT","true","false","false","true","true","int","480","","/**
 * The default height of the screen in portrait mode.
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.DEFAULT_COMPATIBILITY_INFO","true","false","false","true","true","CompatibilityInfo","new CompatibilityInfo() {

    @Override
    public void setExpandable(boolean expandable) {
        throw new UnsupportedOperationException(""trying to change default compatibility info"");
    }
}","","/**
 * default compatibility info object for compatible applications
 */
","\android\content\res\CompatibilityInfo.java"
"android.content.res.CompatibilityInfo.mVisibleInsetsBuffer","false","false","true","false","false","Rect","null","","","\android\content\res\CompatibilityInfo.java"
"com.android.internal.widget.DigitalClock.mIntentReceiver","false","false","true","false","true","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        if (mLive && intent.getAction().equals(Intent.ACTION_TIMEZONE_CHANGED)) {
            mCalendar = Calendar.getInstance();
        }
        // Post a runnable to avoid blocking the broadcast.
        mHandler.post(new Runnable() {

            public void run() {
                updateTime();
            }
        });
    }
}","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mFormatChangeObserver","false","false","true","false","false","ContentObserver","","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.M12","false","false","true","true","true","String","""h:mm""","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.M24","false","false","true","true","true","String","""kk:mm""","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.AmPm.mAmString","false","false","true","false","false","String","","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mAmPm","false","false","true","false","false","TextView","","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mFormat","false","false","true","false","false","String","","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mHandler","false","false","true","false","true","Handler","new Handler()","","/* called by system on minute ticks */
","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mTimeDisplay","false","false","true","false","false","TextView","","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mAttached","false","false","true","false","false","boolean","","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mAmString","false","false","true","false","false","String","","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mLive","false","false","true","false","false","boolean","true","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.DigitalClock.mCalendar","false","false","true","false","false","Calendar","","","","\com\android\internal\widget\DigitalClock.java"
"com.android.internal.widget.AmPm.mAmPm","false","false","true","false","false","TextView","","","","\com\android\internal\widget\DigitalClock.java"
"android.net.Credentials.pid","false","false","true","false","true","int","","","/**
 * pid of process. root peers may lie.
 */
","\android\net\Credentials.java"
"android.net.Credentials.gid","false","false","true","false","true","int","","","/**
 * gid of process. root peers may lie.
 */
","\android\net\Credentials.java"
"android.net.Credentials.uid","false","false","true","false","true","int","","","/**
 * uid of process. root peers may lie.
 */
","\android\net\Credentials.java"
"android.app.StatusBarManager.DISABLE_NOTIFICATION_ALERTS","true","false","false","true","true","int","0x00000004","","/**
 * Flag for {@link #disable} to disable incoming notification alerts.  This will not block
 * icons, but it will block sound, vibrating and other visual or aural notifications.
 */
","\android\app\StatusBarManager.java"
"android.app.StatusBarManager.DISABLE_NOTIFICATION_ICONS","true","false","false","true","true","int","0x00000002","","/**
 * Flag for {@link #disable} to hide notification icons and scrolling ticker text.
 */
","\android\app\StatusBarManager.java"
"android.app.StatusBarManager.DISABLE_NONE","true","false","false","true","true","int","0x00000000","","/**
 * Re-enable all of the status bar features that you've disabled.
 */
","\android\app\StatusBarManager.java"
"android.app.StatusBarManager.DISABLE_EXPAND","true","false","false","true","true","int","0x00000001","","/**
 * Flag for {@link #disable} to make the status bar not expandable.  Unless you also
 * set {@link #DISABLE_NOTIFICATION_ICONS}, new notifications will continue to show.
 */
","\android\app\StatusBarManager.java"
"android.app.StatusBarManager.mService","false","false","true","false","false","IStatusBar","","","","\android\app\StatusBarManager.java"
"android.app.StatusBarManager.mContext","false","false","true","false","false","Context","","","","\android\app\StatusBarManager.java"
"android.app.StatusBarManager.DISABLE_NOTIFICATION_TICKER","true","false","false","true","true","int","0x00000008","","/**
 * Flag for {@link #disable} to hide only the scrolling ticker.  Note that
 * {@link #DISABLE_NOTIFICATION_ICONS} implies {@link #DISABLE_NOTIFICATION_TICKER}.
 */
","\android\app\StatusBarManager.java"
"android.app.StatusBarManager.mToken","false","false","true","false","false","IBinder","new Binder()","","","\android\app\StatusBarManager.java"
"android.provider.SyncConstValue._SYNC_ACCOUNT","true","false","false","true","true","String","""_sync_account""","","/**
 * The account that was used to sync the entry to the device.
 * <P>Type: TEXT</P>
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue._SYNC_DIRTY","true","false","false","true","true","String","""_sync_dirty""","","/**
 * Used to indicate that local, unsynced, changes are present.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue._SYNC_ID","true","false","false","true","true","String","""_sync_id""","","/**
 * The unique ID for a row assigned by the sync source. NULL if the row has never been synced.
 * <P>Type: TEXT</P>
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue._SYNC_LOCAL_ID","true","false","false","true","true","String","""_sync_local_id""","","/**
 * Used in temporary provider while syncing, always NULL for rows in persistent providers.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue._SYNC_VERSION","true","false","false","true","true","String","""_sync_version""","","/**
 * The version of the row, as assigned by the server.
 * <P>Type: TEXT</P>
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue._SYNC_TIME","true","false","false","true","true","String","""_sync_time""","","/**
 * The last time, from the sync source's point of view, that this row has been synchronized.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue._SYNC_MARK","true","false","false","true","true","String","""_sync_mark""","","/**
 * Used only in persistent providers, and only during merging.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue.NON_SYNCABLE_ACCOUNT_TYPE","true","false","false","true","true","String","""android.local""","","/**
 * Used to indicate that this account is not synced
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue.NON_SYNCABLE_ACCOUNT","true","false","false","true","true","String","""non_syncable""","","/**
 * Used to indicate that this account is not synced
 */
","\android\provider\SyncConstValue.java"
"android.provider.SyncConstValue._SYNC_ACCOUNT_TYPE","true","false","false","true","true","String","""_sync_account_type""","","/**
 * The type of the account that was used to sync the entry to the device.
 * <P>Type: TEXT</P>
 */
","\android\provider\SyncConstValue.java"
"com.google.android.mms.InvalidHeaderValueException.serialVersionUID","false","false","true","true","true","long","-2053384496042052262L","","","\com\google\android\mms\InvalidHeaderValueException.java"
"android.widget.Scroller.mInterpolator","false","false","true","false","false","Interpolator","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mDurationReciprocal","false","false","true","false","false","float","","","","\android\widget\Scroller.java"
"android.widget.Scroller.FLING_MODE","false","false","true","true","true","int","1","","","\android\widget\Scroller.java"
"android.widget.Scroller.mMode","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mCoeffX","false","false","true","false","false","float","0.0f","","","\android\widget\Scroller.java"
"android.widget.Scroller.mCoeffY","false","false","true","false","false","float","1.0f","","","\android\widget\Scroller.java"
"android.widget.Scroller.mDuration","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mCurrX","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mCurrY","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mMinX","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mMinY","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mDeltaX","false","false","true","false","false","float","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mDeltaY","false","false","true","false","false","float","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mStartY","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mStartX","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mViscousFluidNormalize","false","false","true","false","false","float","","","","\android\widget\Scroller.java"
"android.widget.Scroller.DEFAULT_DURATION","false","false","true","true","true","int","250","","","\android\widget\Scroller.java"
"android.widget.Scroller.SCROLL_MODE","false","false","true","true","true","int","0","","","\android\widget\Scroller.java"
"android.widget.Scroller.mViscousFluidScale","false","false","true","false","false","float","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mVelocity","false","false","true","false","false","float","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mDeceleration","false","false","true","false","true","float","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mMaxX","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mMaxY","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mFinished","false","false","true","false","false","boolean","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mFinalY","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mFinalX","false","false","true","false","false","int","","","","\android\widget\Scroller.java"
"android.widget.Scroller.mStartTime","false","false","true","false","false","long","","","","\android\widget\Scroller.java"
"com.google.android.mms.pdu.GenericPdu.mPduHeaders","false","false","false","false","false","PduHeaders","null","","/**
 * The headers of pdu.
 */
","\com\google\android\mms\pdu\GenericPdu.java"
"android.os.AsyncResult.result","true","false","false","false","false","Object","","","","\android\os\AsyncResult.java"
"android.os.AsyncResult.exception","true","false","false","false","false","Throwable","","","","\android\os\AsyncResult.java"
"android.os.AsyncResult.userObj","true","false","false","false","false","Object","","","// Expect either exception or result to be null
","\android\os\AsyncResult.java"
"android.webkit.CacheManager.mRefCount","false","false","true","true","false","int","","","// Reference count the enable/disable transaction
","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.mimeType","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.mTrimCacheCount","false","false","true","true","false","int","0","","// timer base. We share the same timer with less frequent update.
","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.lastModified","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.mClearCacheOnInit","false","false","true","true","false","boolean","false","","// Flag to clear the cache when the CacheManager is initialized
","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.MANIFEST_MIME","false","false","true","true","true","String","""text/cache-manifest""","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.contentLength","false","false","false","false","false","long","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.localPath","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.expires","false","false","false","false","false","long","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.inStream","false","false","false","false","false","InputStream","","","// these fields are NOT saved to the database
","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.mBaseDir","false","false","true","true","false","File","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.etag","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.expiresString","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.contentdisposition","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.location","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.encoding","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.outFile","false","false","false","false","false","File","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.CACHE_THRESHOLD","false","false","true","true","false","long","6 * 1024 * 1024","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.CACHE_TRIM_AMOUNT","false","false","true","true","false","long","2 * 1024 * 1024","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.HEADER_KEY_IFNONEMATCH","false","false","false","true","true","String","""if-none-match""","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.outStream","false","false","false","false","false","OutputStream","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.TRIM_CACHE_INTERVAL","false","false","true","true","true","int","5","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.NO_CACHE","false","false","true","true","true","String","""no-cache""","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.mDataBase","false","false","true","true","false","WebViewDatabase","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.crossDomain","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.location","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.inStream","false","false","false","false","false","InputStream","","","// these fields are NOT saved to the database
","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.outStream","false","false","false","false","false","OutputStream","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.contentLength","false","false","false","false","false","long","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.NO_STORE","false","false","true","true","true","String","""no-store""","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.encoding","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.HEADER_KEY_IFMODIFIEDSINCE","false","false","false","true","true","String","""if-modified-since""","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.httpStatusCode","false","false","false","false","false","int","","","// these fields are saved to the database
","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.expires","false","false","false","false","false","long","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.CACHE_MAX_SIZE","false","false","false","true","false","long","(CACHE_THRESHOLD - CACHE_TRIM_AMOUNT) / 2","","// Limit the maximum cache file size to half of the normal capacity
","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.outFile","false","false","false","false","false","File","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.crossDomain","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.mDisabled","false","false","true","true","false","boolean","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.lastModified","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.contentdisposition","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.MAX_AGE","false","false","true","true","true","String","""max-age""","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.mimeType","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.etag","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.expiresString","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.localPath","false","false","false","false","false","String","","","","\android\webkit\CacheManager.java"
"android.webkit.CacheManager.LOGTAG","false","false","true","true","true","String","""cache""","","","\android\webkit\CacheManager.java"
"android.webkit.CacheResult.httpStatusCode","false","false","false","false","false","int","","","// these fields are saved to the database
","\android\webkit\CacheManager.java"
"android.app.IntentService.mName","false","false","true","false","false","String","","","","\android\app\IntentService.java"
"android.app.IntentService.mServiceHandler","false","false","true","false","false","ServiceHandler","","","","\android\app\IntentService.java"
"android.app.IntentService.mRedelivery","false","false","true","false","false","boolean","","","","\android\app\IntentService.java"
"android.app.IntentService.mServiceLooper","false","false","true","false","false","Looper","","","","\android\app\IntentService.java"
"android.net.http.EventHandler.ERROR_UNSUPPORTED_SCHEME","true","false","false","true","true","int","-10","","/**
 * Unsupported URI scheme (ie, not http, https, etc)
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_CONNECT","true","false","false","true","true","int","-6","","/**
 * Could not connect to server
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_AUTH","true","false","false","true","true","int","-4","","/**
 * User authentication failed on server
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_UNSUPPORTED_AUTH_SCHEME","true","false","false","true","true","int","-3","","/**
 * Unsupported authentication scheme (ie, not basic or digest)
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_PROXYAUTH","true","false","false","true","true","int","-5","","/**
 * User authentication failed on proxy
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_REDIRECT_LOOP","true","false","false","true","true","int","-9","","/**
 * Too many redirects
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_IO","true","false","false","true","true","int","-7","","/**
 * Failed to write to or read from server
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_TIMEOUT","true","false","false","true","true","int","-8","","/**
 * Connection timed out
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.TOO_MANY_REQUESTS_ERROR","true","false","false","true","true","int","-15","","/**
 * Too many requests queued
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.errorStringResources","false","false","false","true","true","int","{ com.android.internal.R.string.httpErrorOk, com.android.internal.R.string.httpError, com.android.internal.R.string.httpErrorLookup, com.android.internal.R.string.httpErrorUnsupportedAuthScheme, com.android.internal.R.string.httpErrorAuth, com.android.internal.R.string.httpErrorProxyAuth, com.android.internal.R.string.httpErrorConnect, com.android.internal.R.string.httpErrorIO, com.android.internal.R.string.httpErrorTimeout, com.android.internal.R.string.httpErrorRedirectLoop, com.android.internal.R.string.httpErrorUnsupportedScheme, com.android.internal.R.string.httpErrorFailedSslHandshake, com.android.internal.R.string.httpErrorBadUrl, com.android.internal.R.string.httpErrorFile, com.android.internal.R.string.httpErrorFileNotFound, com.android.internal.R.string.httpErrorTooManyRequests }","","","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_LOOKUP","true","false","false","true","true","int","-2","","/**
 * Server or proxy hostname lookup failed
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_FAILED_SSL_HANDSHAKE","true","false","false","true","true","int","-11","","/**
 * Failed to perform SSL handshake
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.FILE_ERROR","true","false","false","true","true","int","-13","","/**
 * Generic file error for file:/// loads
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR","true","false","false","true","true","int","-1","","/**
 * Generic error
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.OK","true","false","false","true","true","int","0","","/**
 * Success
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.FILE_NOT_FOUND_ERROR","true","false","false","true","true","int","-14","","/**
 * File not found error for file:/// loads
 */
","\android\net\http\EventHandler.java"
"android.net.http.EventHandler.ERROR_BAD_URL","true","false","false","true","true","int","-12","","/**
 * Bad URL
 */
","\android\net\http\EventHandler.java"
"android.preference.EditTextPreference.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\EditTextPreference.java"
"android.preference.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\EditTextPreference.java"
"android.preference.EditTextPreference.mEditText","false","false","true","false","false","EditText","","","/**
 * The edit text shown in the dialog.
 */
","\android\preference\EditTextPreference.java"
"android.preference.SavedState.text","false","false","false","false","false","String","","","","\android\preference\EditTextPreference.java"
"android.preference.EditTextPreference.text","false","false","false","false","false","String","","","","\android\preference\EditTextPreference.java"
"android.preference.EditTextPreference.mText","false","false","true","false","false","String","","","","\android\preference\EditTextPreference.java"
"android.accounts.ChooseAccountActivity.mAccountManagerResponse","false","false","true","false","false","AccountManagerResponse","null","","","\android\accounts\ChooseAccountActivity.java"
"android.accounts.ChooseAccountActivity.mAccounts","false","false","true","false","false","Parcelable","null","","","\android\accounts\ChooseAccountActivity.java"
"android.accounts.ChooseAccountActivity.TAG","false","false","true","true","true","String","""AccountManager""","","","\android\accounts\ChooseAccountActivity.java"
"android.accounts.ChooseAccountActivity.mResult","false","false","true","false","false","Bundle","","","","\android\accounts\ChooseAccountActivity.java"
"android.net.TrafficStats.UNSUPPORTED","true","false","false","true","true","int","-1","","/**
 * The return value to indicate that the device does not support the statistic.
 */
","\android\net\TrafficStats.java"
"android.webkit.Plugin.mDialog","false","false","true","false","false","AlertDialog","","","","\android\webkit\Plugin.java"
"android.webkit.Plugin.mDescription","false","false","true","false","false","String","","","","\android\webkit\Plugin.java"
"android.webkit.Plugin.mHandler","false","false","true","false","false","PreferencesClickHandler","","","","\android\webkit\Plugin.java"
"android.webkit.Plugin.mPath","false","false","true","false","false","String","","","","\android\webkit\Plugin.java"
"android.webkit.DefaultClickHandler.mDialog","false","false","true","false","false","AlertDialog","","","","\android\webkit\Plugin.java"
"android.webkit.Plugin.mName","false","false","true","false","false","String","","","","\android\webkit\Plugin.java"
"android.webkit.Plugin.mFileName","false","false","true","false","false","String","","","","\android\webkit\Plugin.java"
"com.android.internal.widget.PasswordEntryKeyboard.SHIFT_OFF","false","false","true","true","true","int","0","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mF1Key","false","false","true","false","false","Key","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.LatinKey.mShiftLockEnabled","false","false","true","false","false","boolean","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mShiftKey","false","false","true","false","false","Key","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mExtensionResId","false","false","true","false","false","int","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mEnterKey","false","false","true","false","false","Key","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mShiftLockIcon","false","false","true","false","false","Drawable","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mSpaceKey","false","false","true","false","false","Key","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.SHIFT_LOCKED","false","false","true","true","true","int","2","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.sSpacebarVerticalCorrection","false","false","false","true","false","int","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.TAG","false","false","true","true","true","String","""PasswordEntryKeyboard""","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mSpaceIcon","false","false","true","false","false","Drawable","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mEnabled","false","false","true","false","false","boolean","true","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mShiftIcon","false","false","true","false","false","Drawable","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mShiftLockEnabled","false","false","true","false","false","boolean","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mOldShiftIcon","false","false","true","false","false","Drawable","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.KEYCODE_SPACE","true","false","false","true","true","int","' '","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mOldShiftPreviewIcon","false","false","true","false","false","Drawable","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.LatinKey.mEnabled","false","false","true","false","false","boolean","true","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mRes","false","false","true","false","false","Resources","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mLocale","false","false","true","false","false","Locale","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mShiftState","false","false","true","false","false","int","SHIFT_OFF","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.SHIFT_ON","false","false","true","true","true","int","1","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"com.android.internal.widget.PasswordEntryKeyboard.mShiftLockPreviewIcon","false","false","true","false","false","Drawable","","","","\com\android\internal\widget\PasswordEntryKeyboard.java"
"android.text.AndroidCharacter.EAST_ASIAN_WIDTH_FULL_WIDTH","true","false","false","true","true","int","3","","","\android\text\AndroidCharacter.java"
"android.text.AndroidCharacter.EAST_ASIAN_WIDTH_AMBIGUOUS","true","false","false","true","true","int","1","","","\android\text\AndroidCharacter.java"
"android.text.AndroidCharacter.EAST_ASIAN_WIDTH_NARROW","true","false","false","true","true","int","4","","","\android\text\AndroidCharacter.java"
"android.text.AndroidCharacter.EAST_ASIAN_WIDTH_WIDE","true","false","false","true","true","int","5","","","\android\text\AndroidCharacter.java"
"android.text.AndroidCharacter.EAST_ASIAN_WIDTH_NEUTRAL","true","false","false","true","true","int","0","","","\android\text\AndroidCharacter.java"
"android.text.AndroidCharacter.EAST_ASIAN_WIDTH_HALF_WIDTH","true","false","false","true","true","int","2","","","\android\text\AndroidCharacter.java"
"android.view.accessibility.AccessibilityEvent.INVALID_POSITION","true","false","false","true","true","int","-1","","/**
 * Invalid selection/focus position.
 *
 * @see #getCurrentItemIndex()
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mEventType","false","false","true","false","false","int","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.sPoolSize","false","false","true","true","false","int","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mItemCount","false","false","true","false","false","int","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mContentDescription","false","false","true","false","false","CharSequence","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mAddedCount","false","false","true","false","false","int","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.PASSWORD","false","false","true","true","true","int","0x00000004","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.CREATOR","true","false","false","true","true","Parcelable.Creator<AccessibilityEvent>","new Parcelable.Creator<AccessibilityEvent>() {

    public AccessibilityEvent createFromParcel(Parcel parcel) {
        AccessibilityEvent event = AccessibilityEvent.obtain();
        event.initFromParcel(parcel);
        return event;
    }

    public AccessibilityEvent[] newArray(int size) {
        return new AccessibilityEvent[size];
    }
}","","/**
 * @see Parcelable.Creator
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mFromIndex","false","false","true","false","false","int","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mPoolLock","false","false","true","true","true","Object","new Object()","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.ENABLED","false","false","true","true","true","int","0x00000002","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.FULL_SCREEN","false","false","true","true","true","int","0x00000080","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mPackageName","false","false","true","false","false","CharSequence","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mEventTime","false","false","true","false","false","long","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mBooleanProperties","false","false","true","false","false","int","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mParcelableData","false","false","true","false","false","Parcelable","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mNext","false","false","true","false","false","AccessibilityEvent","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mBeforeText","false","false","true","false","false","CharSequence","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.TYPE_VIEW_SELECTED","true","false","false","true","true","int","0x00000004","","/**
 * Represents the event of selecting an item usually in the context of an
 * {@link android.widget.AdapterView}.
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED","true","false","false","true","true","int","0x00000010","","/**
 * Represents the event of changing the text of an {@link android.widget.EditText}.
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mClassName","false","false","true","false","false","CharSequence","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.TYPE_VIEW_LONG_CLICKED","true","false","false","true","true","int","0x00000002","","/**
 * Represents the event of long clicking on a {@link android.view.View} like
 * {@link android.widget.Button}, {@link android.widget.CompoundButton}, etc.
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.MAX_POOL_SIZE","false","false","true","true","true","int","2","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.TYPE_NOTIFICATION_STATE_CHANGED","true","false","false","true","true","int","0x00000040","","/**
 * Represents the event showing/hiding a {@link android.app.Notification}.
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.TYPE_VIEW_CLICKED","true","false","false","true","true","int","0x00000001","","/**
 * Represents the event of clicking on a {@link android.view.View} like
 * {@link android.widget.Button}, {@link android.widget.CompoundButton}, etc.
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mRemovedCount","false","false","true","false","false","int","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mIsInPool","false","false","true","false","false","boolean","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.MAX_TEXT_LENGTH","true","false","false","true","true","int","500","","/**
 * Maximum length of the text fields.
 *
 * @see #getBeforeText()
 * @see #getText()
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED","true","false","false","true","true","int","0x00000020","","/**
 * Represents the event of opening/closing a {@link android.widget.PopupWindow},
 * {@link android.view.Menu}, {@link android.app.Dialog}, etc.
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.CHECKED","false","false","true","true","true","int","0x00000001","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.sPool","false","false","true","true","false","AccessibilityEvent","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mCurrentItemIndex","false","false","true","false","false","int","","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.TYPE_VIEW_FOCUSED","true","false","false","true","true","int","0x00000008","","/**
 * Represents the event of focusing a {@link android.view.View}.
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.mText","false","false","true","false","true","List<CharSequence>","new ArrayList<CharSequence>()","","","\android\view\accessibility\AccessibilityEvent.java"
"android.view.accessibility.AccessibilityEvent.TYPES_ALL_MASK","true","false","false","true","true","int","0xFFFFFFFF","","/**
 * Mask for {@link AccessibilityEvent} all types.
 *
 * @see #TYPE_VIEW_CLICKED
 * @see #TYPE_VIEW_LONG_CLICKED
 * @see #TYPE_VIEW_SELECTED
 * @see #TYPE_VIEW_FOCUSED
 * @see #TYPE_VIEW_TEXT_CHANGED
 * @see #TYPE_WINDOW_STATE_CHANGED
 * @see #TYPE_NOTIFICATION_STATE_CHANGED
 */
","\android\view\accessibility\AccessibilityEvent.java"
"android.widget.ExpandableListPosition.childPos","true","false","false","false","false","int","","","/**
 * The position of the child within its parent group
 */
","\android\widget\ExpandableListPosition.java"
"android.widget.ExpandableListPosition.GROUP","true","false","false","true","true","int","2","","/**
 * This data type represents a group position
 */
","\android\widget\ExpandableListPosition.java"
"android.widget.ExpandableListPosition.groupPos","true","false","false","false","false","int","","","/**
 * The position of either the group being referred to, or the parent
 * group of the child being referred to
 */
","\android\widget\ExpandableListPosition.java"
"android.widget.ExpandableListPosition.MAX_POOL_SIZE","false","false","true","true","true","int","5","","","\android\widget\ExpandableListPosition.java"
"android.widget.ExpandableListPosition.type","true","false","false","false","false","int","","","/**
 * What type of position this ExpandableListPosition represents
 */
","\android\widget\ExpandableListPosition.java"
"android.widget.ExpandableListPosition.sPool","false","false","true","true","false","ArrayList<ExpandableListPosition>","new ArrayList<ExpandableListPosition>(MAX_POOL_SIZE)","","","\android\widget\ExpandableListPosition.java"
"android.widget.ExpandableListPosition.CHILD","true","false","false","true","true","int","1","","/**
 * This data type represents a child position
 */
","\android\widget\ExpandableListPosition.java"
"android.widget.ExpandableListPosition.flatListPos","false","false","false","false","false","int","","","/**
 * The position of the item in the flat list (optional, used internally when
 * the corresponding flat list position for the group or child is known)
 */
","\android\widget\ExpandableListPosition.java"
"android.app.ActivityManagerProxy.mRemote","false","false","true","false","false","IBinder","","","","\android\app\ActivityManagerNative.java"
"android.app.ActivityManagerNative.sSystemReady","false","false","false","true","false","boolean","false","","","\android\app\ActivityManagerNative.java"
"android.app.ActivityManagerNative.gDefault","false","false","true","true","false","IActivityManager","","","","\android\app\ActivityManagerNative.java"
"android.text.style.DynamicDrawableSpan.mDrawableRef","false","false","true","false","false","WeakReference<Drawable>","","","","\android\text\style\DynamicDrawableSpan.java"
"android.text.style.DynamicDrawableSpan.ALIGN_BOTTOM","true","false","false","true","true","int","0","","/**
 * A constant indicating that the bottom of this span should be aligned
 * with the bottom of the surrounding text, i.e., at the same level as the
 * lowest descender in the text.
 */
","\android\text\style\DynamicDrawableSpan.java"
"android.text.style.DynamicDrawableSpan.mVerticalAlignment","false","true","false","false","true","int","","","","\android\text\style\DynamicDrawableSpan.java"
"android.text.style.DynamicDrawableSpan.ALIGN_BASELINE","true","false","false","true","true","int","1","","/**
 * A constant indicating that the bottom of this span should be aligned
 * with the baseline of the surrounding text.
 */
","\android\text\style\DynamicDrawableSpan.java"
"android.text.style.DynamicDrawableSpan.TAG","false","false","true","true","true","String","""DynamicDrawableSpan""","","","\android\text\style\DynamicDrawableSpan.java"
"android.content.pm.PackageStats.packageName","true","false","false","false","false","String","","","","\android\content\pm\PackageStats.java"
"android.content.pm.PackageStats.cacheSize","true","false","false","false","false","long","","","","\android\content\pm\PackageStats.java"
"android.content.pm.PackageStats.dataSize","true","false","false","false","false","long","","","","\android\content\pm\PackageStats.java"
"android.content.pm.PackageStats.codeSize","true","false","false","false","false","long","","","","\android\content\pm\PackageStats.java"
"android.content.pm.PackageStats.CREATOR","true","false","false","true","true","Parcelable.Creator<PackageStats>","new Parcelable.Creator<PackageStats>() {

    public PackageStats createFromParcel(Parcel in) {
        return new PackageStats(in);
    }

    public PackageStats[] newArray(int size) {
        return new PackageStats[size];
    }
}","","","\android\content\pm\PackageStats.java"
"android.net.http.IdleCache.EMPTY_CHECK_MAX","false","false","true","true","true","int","5","","/* Allow five consecutive empty queue checks before shutdown */
","\android\net\http\IdleCache.java"
"android.net.http.Entry.mConnection","false","false","false","false","false","Connection","","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.mReused","false","false","true","false","false","int","0","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.CHECK_INTERVAL","false","false","true","true","true","int","2 * 1000","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.TIMEOUT","false","false","true","true","true","int","6 * 1000","","/* six second timeout for connections */
","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.mCount","false","false","true","false","false","int","0","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.mHost","false","false","false","false","false","HttpHost","","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.mCached","false","false","true","false","false","int","0","","/* stats */
","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.IDLE_CACHE_MAX","false","false","true","true","true","int","8","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.mEntries","false","false","true","false","false","Entry","new Entry[IDLE_CACHE_MAX]","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.mThread","false","false","true","false","false","IdleReaper","null","","","\android\net\http\IdleCache.java"
"android.net.http.Entry.mTimeout","false","false","false","false","false","long","","","","\android\net\http\IdleCache.java"
"android.net.http.Entry.mHost","false","false","false","false","false","HttpHost","","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.mConnection","false","false","false","false","false","Connection","","","","\android\net\http\IdleCache.java"
"android.net.http.IdleCache.mTimeout","false","false","false","false","false","long","","","","\android\net\http\IdleCache.java"
"android.content.pm.RegisteredServicesCache.mSerializerAndParser","false","false","true","false","true","XmlSerializerAndParser<V>","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mPersistentServicesFile","false","false","true","false","true","AtomicFile","","","/**
 * This file contains the list of known services. We would like to maintain this forever
 * so we store it as an XML file.
 */
","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.TAG","false","false","true","true","true","String","""PackageManager""","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mPersistentServices","false","false","true","false","false","HashMap<V,Integer>","","","// synchronized on mServicesLock
","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mInterfaceName","false","false","true","false","true","String","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mHandler","false","false","true","false","false","Handler","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mServices","false","false","true","false","false","Map<V,ServiceInfo<V>>","","","// synchronized on mServicesLock
","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.ServiceInfo.type","true","false","false","false","true","V","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mPersistentServicesFileDidNotExist","false","false","true","false","false","boolean","","","// synchronized on mServicesLock
","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.componentName","true","false","false","false","true","ComponentName","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mAttributesName","false","false","true","false","true","String","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mContext","true","false","false","false","true","Context","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.ServiceInfo.uid","true","false","false","false","true","int","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mServicesLock","false","false","true","false","true","Object","new Object()","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.type","true","false","false","false","true","V","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.ServiceInfo.componentName","true","false","false","false","true","ComponentName","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mMetaDataName","false","false","true","false","true","String","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mListener","false","false","true","false","false","RegisteredServicesCacheListener<V>","","","// the listener and handler are synchronized on ""this"" and must be updated together
","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.mReceiver","false","false","true","false","true","AtomicReference<BroadcastReceiver>","","","","\android\content\pm\RegisteredServicesCache.java"
"android.content.pm.RegisteredServicesCache.uid","true","false","false","false","true","int","","","","\android\content\pm\RegisteredServicesCache.java"
"com.android.internal.os.ZygoteInit.PRELOAD_GC_THRESHOLD","false","false","true","true","true","int","50000","","/**
 * when preloading, GC after allocating this many bytes
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.ROOT_UID","false","false","true","true","true","int","0","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.mMethod","false","false","true","false","true","Method","","","/**
 * method to call
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.mArgs","false","false","true","false","true","String","","","/**
 * argument array
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.MethodAndArgsCaller.mArgs","false","false","true","false","true","String","","","/**
 * argument array
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.PRELOAD_RESOURCES","false","false","true","true","true","boolean","true","","/**
 * Controls whether we should preload resources during zygote init.
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.THROW_ON_MISSING_PRELOAD","false","false","true","true","true","boolean","""1"".equals(SystemProperties.get(""persist.service.adb.enable""))","","/**
 * throw on missing preload, only if this looks like a developer
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.MethodAndArgsCaller.mMethod","false","false","true","false","true","Method","","","/**
 * method to call
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.REGISTER_MAP_METHODS","false","false","true","true","true","String","{}","","/**
 * List of methods we ""warm up"" in the register map cache.  These were
 * chosen because they appeared on the stack in GCs in multiple
 * applications.
 *
 * This is in a VM-ready format, to minimize string processing.  If a
 * class is not already loaded, or a method is not found, the entry
 * will be skipped.
 *
 * This doesn't really merit a separately-generated input file at this
 * time.  The list is fairly short, and the consequences of failure
 * are minor.
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.LOG_BOOT_PROGRESS_PRELOAD_START","false","false","true","true","true","int","3020","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.ZYGOTE_FORK_MODE","false","false","true","true","true","boolean","false","","/**
 * If true, zygote forks for each peer. If false, a select loop is used
 * inside a single process. The latter is preferred.
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.mResources","false","false","true","true","false","Resources","","","/**
 * Used to pre-load resources.  We hold a global reference on it so it
 * never gets destroyed.
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.TAG","false","false","true","true","true","String","""Zygote""","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.GC_LOOP_COUNT","false","false","false","true","true","int","10","","/**
 * The number of times that the main Zygote loop
 * should run before calling gc() again.
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.UNPRIVILEGED_UID","false","false","true","true","true","int","9999","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.sServerSocket","false","false","true","true","false","LocalServerSocket","","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.LOG_BOOT_PROGRESS_PRELOAD_END","false","false","true","true","true","int","3030","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.UNPRIVILEGED_GID","false","false","true","true","true","int","9999","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.ROOT_GID","false","false","true","true","true","int","0","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.USAGE_STRING","true","false","false","true","true","String",""" <\""true\""|\""false\"" for startSystemServer>""","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.ANDROID_SOCKET_ENV","false","false","true","true","true","String","""ANDROID_SOCKET_zygote""","","","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.os.ZygoteInit.PRELOADED_CLASSES","false","false","true","true","true","String","""preloaded-classes""","","/**
 * The name of a resource file that contains classes to preload.
 */
","\com\android\internal\os\ZygoteInit.java"
"com.android.internal.database.SortCursor.mRowNumCache","false","false","true","false","false","int","new int[ROWCACHESIZE]","","","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.mCurRowNumCache","false","false","true","false","false","int","","","","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.mCursors","false","false","true","false","false","Cursor","","","","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.mCursor","false","false","true","false","false","Cursor","","","// updated in onMove
","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.mCursorCache","false","false","true","false","false","int","new int[ROWCACHESIZE]","","","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.ROWCACHESIZE","false","false","true","false","true","int","64","","","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.mObserver","false","false","true","false","false","DataSetObserver","new DataSetObserver() {

    @Override
    public void onChanged() {
        // Reset our position so the optimizations in move-related code
        // don't screw us over
        mPos = -1;
    }

    @Override
    public void onInvalidated() {
        mPos = -1;
    }
}","","","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.mLastCacheHit","false","false","true","false","false","int","-1","","","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.TAG","false","false","true","true","true","String","""SortCursor""","","","\com\android\internal\database\SortCursor.java"
"com.android.internal.database.SortCursor.mSortColumns","false","false","true","false","false","int","","","","\com\android\internal\database\SortCursor.java"
"android.text.format.DateUtils.YEAR_FORMAT","true","false","false","true","true","String","""%Y""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.TIME_PADDING","false","false","true","true","true","char","'0'","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.MINUTE_IN_MILLIS","true","false","false","true","true","long","SECOND_IN_MILLIS * 60","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_CAP_NOON_MIDNIGHT","true","false","false","true","true","int","(FORMAT_CAP_NOON | FORMAT_CAP_MIDNIGHT)","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.LENGTH_SHORT","true","false","false","true","true","int","30","","/**
 * Request a shorter abbreviated version of the name.
 * For use with the 'abbrev' parameter of {@link #getDayOfWeekString} and {@link #getMonthString}.
 * @more
 * <p>e.g. ""Su"" or ""Jan""
 * <p>In most languages, the results returned for LENGTH_SHORT will be the same as
 * the results returned for {@link #LENGTH_MEDIUM}.
 */
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_SHOW_TIME","true","false","false","true","true","int","0x00001","","// dates and times in the formatDateRange method.
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_CAP_NOON","true","false","false","true","true","int","0x00400","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sMonthsLong","false","false","true","true","true","int","new int[] { com.android.internal.R.string.month_long_january, com.android.internal.R.string.month_long_february, com.android.internal.R.string.month_long_march, com.android.internal.R.string.month_long_april, com.android.internal.R.string.month_long_may, com.android.internal.R.string.month_long_june, com.android.internal.R.string.month_long_july, com.android.internal.R.string.month_long_august, com.android.internal.R.string.month_long_september, com.android.internal.R.string.month_long_october, com.android.internal.R.string.month_long_november, com.android.internal.R.string.month_long_december }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FAST_FORMAT_MMSS","false","false","true","true","true","String","""%1$02d:%2$02d""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sThenTime","false","false","true","true","false","Time","","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sDaysMedium","false","false","true","true","true","int","new int[] { com.android.internal.R.string.day_of_week_medium_sunday, com.android.internal.R.string.day_of_week_medium_monday, com.android.internal.R.string.day_of_week_medium_tuesday, com.android.internal.R.string.day_of_week_medium_wednesday, com.android.internal.R.string.day_of_week_medium_thursday, com.android.internal.R.string.day_of_week_medium_friday, com.android.internal.R.string.day_of_week_medium_saturday }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_CAP_AMPM","true","false","false","true","true","int","0x00100","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sAmPm","false","false","true","true","true","int","new int[] { com.android.internal.R.string.am, com.android.internal.R.string.pm }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.YEAR_FORMAT_TWO_DIGITS","true","false","false","true","true","String","""%g""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_NO_NOON","true","false","false","true","true","int","0x00200","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.WEEK_IN_MILLIS","true","false","false","true","true","long","DAY_IN_MILLIS * 7","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.MONTH_FORMAT","true","false","false","true","true","String","""%B""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sDaysShort","false","false","true","true","true","int","new int[] { com.android.internal.R.string.day_of_week_short_sunday, com.android.internal.R.string.day_of_week_short_monday, com.android.internal.R.string.day_of_week_short_tuesday, com.android.internal.R.string.day_of_week_short_wednesday, com.android.internal.R.string.day_of_week_short_thursday, com.android.internal.R.string.day_of_week_short_friday, com.android.internal.R.string.day_of_week_short_saturday }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.MONTH_DAY_FORMAT","true","false","false","true","true","String","""%-d""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FAST_FORMAT_HMMSS","false","false","true","true","true","String","""%1$d:%2$02d:%3$02d""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.ABBREV_WEEKDAY_FORMAT","true","false","false","true","true","String","""%a""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.LENGTH_MEDIUM","true","false","false","true","true","int","20","","/**
 * Request an abbreviated version of the name. For use with the 'abbrev'
 * parameter of {@link #getDayOfWeekString} and {@link #getMonthString}.
 *
 * @more <p>
 * e.g. ""Sun"" or ""Jan""
 */
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.HOUR_IN_MILLIS","true","false","false","true","true","long","MINUTE_IN_MILLIS * 60","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_NO_NOON_MIDNIGHT","true","false","false","true","true","int","(FORMAT_NO_NOON | FORMAT_NO_MIDNIGHT)","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.YEAR_IN_MILLIS","true","false","false","true","true","long","WEEK_IN_MILLIS * 52","","/**
 * This constant is actually the length of 364 days, not of a year!
 */
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_NO_YEAR","true","false","false","true","true","int","0x00008","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_NUMERIC_DATE","true","false","false","true","true","int","0x20000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sStatusTimeFormat","false","false","true","true","false","java.text.DateFormat","","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_CAP_MIDNIGHT","true","false","false","true","true","int","0x01000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_UTC","true","false","false","true","true","int","0x02000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.TIME_SEPARATOR","false","false","true","true","true","char","':'","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_SHOW_YEAR","true","false","false","true","true","int","0x00004","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.LENGTH_SHORTEST","true","false","false","true","true","int","50","","/**
 * Request an even shorter abbreviated version of the name.
 * For use with the 'abbrev' parameter of {@link #getDayOfWeekString} and {@link #getMonthString}.
 * @more
 * <p>e.g. ""S"", ""T"", ""T"" or ""J""
 * <p>In some languages, the results returned for LENGTH_SHORTEST will be the same as
 * the results returned for {@link #LENGTH_SHORT}.
 */
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sElapsedFormatHMMSS","false","false","true","true","false","String","","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.LENGTH_LONG","true","false","false","true","true","int","10","","/**
 * Request the full spelled-out name. For use with the 'abbrev' parameter of
 * {@link #getDayOfWeekString} and {@link #getMonthString}.
 *
 * @more <p>
 * e.g. ""Sunday"" or ""January""
 */
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_NO_MIDNIGHT","true","false","false","true","true","int","0x00800","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.ABBREV_MONTH_FORMAT","true","false","false","true","true","String","""%b""","","/**
 * This is not actually a useful month name in all locales.
 */
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_SHOW_WEEKDAY","true","false","false","true","true","int","0x00002","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sDaysShortest","false","false","true","true","true","int","new int[] { com.android.internal.R.string.day_of_week_shortest_sunday, com.android.internal.R.string.day_of_week_shortest_monday, com.android.internal.R.string.day_of_week_shortest_tuesday, com.android.internal.R.string.day_of_week_shortest_wednesday, com.android.internal.R.string.day_of_week_shortest_thursday, com.android.internal.R.string.day_of_week_shortest_friday, com.android.internal.R.string.day_of_week_shortest_saturday }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_ABBREV_ALL","true","false","false","true","true","int","0x80000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.DAY_IN_MILLIS","true","false","false","true","true","long","HOUR_IN_MILLIS * 24","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sNowTime","false","false","true","true","false","Time","","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_NO_MONTH_DAY","true","false","false","true","true","int","0x00020","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sMonthsMedium","false","false","true","true","true","int","new int[] { com.android.internal.R.string.month_medium_january, com.android.internal.R.string.month_medium_february, com.android.internal.R.string.month_medium_march, com.android.internal.R.string.month_medium_april, com.android.internal.R.string.month_medium_may, com.android.internal.R.string.month_medium_june, com.android.internal.R.string.month_medium_july, com.android.internal.R.string.month_medium_august, com.android.internal.R.string.month_medium_september, com.android.internal.R.string.month_medium_october, com.android.internal.R.string.month_medium_november, com.android.internal.R.string.month_medium_december }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_24HOUR","true","false","false","true","true","int","0x00080","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sameYearTable","true","false","false","true","true","int","{ com.android.internal.R.string.same_year_md1_md2, com.android.internal.R.string.same_year_wday1_md1_wday2_md2, com.android.internal.R.string.same_year_mdy1_mdy2, com.android.internal.R.string.same_year_wday1_mdy1_wday2_mdy2, com.android.internal.R.string.same_year_md1_time1_md2_time2, com.android.internal.R.string.same_year_wday1_md1_time1_wday2_md2_time2, com.android.internal.R.string.same_year_mdy1_time1_mdy2_time2, com.android.internal.R.string.same_year_wday1_mdy1_time1_wday2_mdy2_time2, // Numeric date strings
com.android.internal.R.string.numeric_md1_md2, com.android.internal.R.string.numeric_wday1_md1_wday2_md2, com.android.internal.R.string.numeric_mdy1_mdy2, com.android.internal.R.string.numeric_wday1_mdy1_wday2_mdy2, com.android.internal.R.string.numeric_md1_time1_md2_time2, com.android.internal.R.string.numeric_wday1_md1_time1_wday2_md2_time2, com.android.internal.R.string.numeric_mdy1_time1_mdy2_time2, com.android.internal.R.string.numeric_wday1_mdy1_time1_wday2_mdy2_time2 }","","// showWeekDay are both true, then the index would be 3.
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.NUMERIC_MONTH_FORMAT","true","false","false","true","true","String","""%m""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sLock","false","false","true","true","true","Object","new Object()","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_ABBREV_MONTH","true","false","false","true","true","int","0x10000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sMonthsShortest","false","false","true","true","true","int","new int[] { com.android.internal.R.string.month_shortest_january, com.android.internal.R.string.month_shortest_february, com.android.internal.R.string.month_shortest_march, com.android.internal.R.string.month_shortest_april, com.android.internal.R.string.month_shortest_may, com.android.internal.R.string.month_shortest_june, com.android.internal.R.string.month_shortest_july, com.android.internal.R.string.month_shortest_august, com.android.internal.R.string.month_shortest_september, com.android.internal.R.string.month_shortest_october, com.android.internal.R.string.month_shortest_november, com.android.internal.R.string.month_shortest_december }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sLastConfig","false","false","true","true","false","Configuration","","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.SECOND_IN_MILLIS","true","false","false","true","true","long","1000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sMonthsStandaloneLong","false","false","true","true","true","int","new int[] { com.android.internal.R.string.month_long_standalone_january, com.android.internal.R.string.month_long_standalone_february, com.android.internal.R.string.month_long_standalone_march, com.android.internal.R.string.month_long_standalone_april, com.android.internal.R.string.month_long_standalone_may, com.android.internal.R.string.month_long_standalone_june, com.android.internal.R.string.month_long_standalone_july, com.android.internal.R.string.month_long_standalone_august, com.android.internal.R.string.month_long_standalone_september, com.android.internal.R.string.month_long_standalone_october, com.android.internal.R.string.month_long_standalone_november, com.android.internal.R.string.month_long_standalone_december }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_ABBREV_WEEKDAY","true","false","false","true","true","int","0x08000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.HOUR_MINUTE_24","true","false","false","true","true","String","""%H:%M""","","/**
 * This is not actually the preferred 24-hour date format in all locales.
 */
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_12HOUR","true","false","false","true","true","int","0x00040","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sElapsedFormatMMSS","false","false","true","true","false","String","","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sDaysLong","false","false","true","true","true","int","new int[] { com.android.internal.R.string.day_of_week_long_sunday, com.android.internal.R.string.day_of_week_long_monday, com.android.internal.R.string.day_of_week_long_tuesday, com.android.internal.R.string.day_of_week_long_wednesday, com.android.internal.R.string.day_of_week_long_thursday, com.android.internal.R.string.day_of_week_long_friday, com.android.internal.R.string.day_of_week_long_saturday }","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.sameMonthTable","true","false","false","true","true","int","{ com.android.internal.R.string.same_month_md1_md2, com.android.internal.R.string.same_month_wday1_md1_wday2_md2, com.android.internal.R.string.same_month_mdy1_mdy2, com.android.internal.R.string.same_month_wday1_mdy1_wday2_mdy2, com.android.internal.R.string.same_month_md1_time1_md2_time2, com.android.internal.R.string.same_month_wday1_md1_time1_wday2_md2_time2, com.android.internal.R.string.same_month_mdy1_time1_mdy2_time2, com.android.internal.R.string.same_month_wday1_mdy1_time1_wday2_mdy2_time2, com.android.internal.R.string.numeric_md1_md2, com.android.internal.R.string.numeric_wday1_md1_wday2_md2, com.android.internal.R.string.numeric_mdy1_mdy2, com.android.internal.R.string.numeric_wday1_mdy1_wday2_mdy2, com.android.internal.R.string.numeric_md1_time1_md2_time2, com.android.internal.R.string.numeric_wday1_md1_time1_wday2_md2_time2, com.android.internal.R.string.numeric_mdy1_time1_mdy2_time2, com.android.internal.R.string.numeric_wday1_mdy1_time1_wday2_mdy2_time2 }","","// showWeekDay are both true, then the index would be 3.
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_ABBREV_TIME","true","false","false","true","true","int","0x04000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_ABBREV_RELATIVE","true","false","false","true","true","int","0x40000","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.WEEKDAY_FORMAT","true","false","false","true","true","String","""%A""","","","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.LENGTH_SHORTER","true","false","false","true","true","int","40","","/**
 * Request an even shorter abbreviated version of the name.
 * Do not use this.  Currently this will always return the same result
 * as {@link #LENGTH_SHORT}.
 */
","\android\text\format\DateUtils.java"
"android.text.format.DateUtils.FORMAT_SHOW_DATE","true","false","false","true","true","int","0x00010","","","\android\text\format\DateUtils.java"
"android.os.Binder.TAG","false","false","true","true","true","String","""Binder""","","","\android\os\Binder.java"
"android.os.Binder.mDescriptor","false","false","true","false","false","String","","","","\android\os\Binder.java"
"android.os.BinderProxy.mObject","false","false","true","false","false","int","","","","\android\os\Binder.java"
"android.os.Binder.mObject","false","false","true","false","false","int","","","","\android\os\Binder.java"
"android.os.Binder.mOwner","false","false","true","false","false","IInterface","","","","\android\os\Binder.java"
"android.os.Binder.FIND_POTENTIAL_LEAKS","false","false","true","true","true","boolean","false","","/*
     * Set this flag to true to detect anonymous, local or member classes
     * that extend this Binder class and that are not static. These kind
     * of classes can potentially create leaks.
     */
","\android\os\Binder.java"
"android.os.BinderProxy.mSelf","false","false","true","false","true","WeakReference","","","","\android\os\Binder.java"
"android.util.CharsetUtils.VENDOR_DOCOMO","false","false","true","true","true","String","""docomo""","","/**
 * name of the vendor ""Docomo"". <b>Note:</b> This isn't a public
 * constant, in order to keep this class from becoming a de facto
 * reference list of vendor names.
 */
","\android\util\CharsetUtils.java"
"android.database.sqlite.SQLiteDebug.sNumActiveCursorsFinalized","false","false","true","true","false","int","0","","","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.numPagers","true","false","false","false","false","int","","@Deprecated","/**
 * The number of pagers opened in the current process
 * @deprecated not used any longer
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.PagerStats.pageCacheOverflo","true","false","false","false","false","int","","","/**
 * the number of bytes of page cache allocation which could not be sattisfied by the
 * SQLITE_CONFIG_PAGECACHE buffer and where forced to overflow to sqlite3_malloc().
 * The returned value includes allocations that overflowed because they where too large
 * (they were larger than the ""sz"" parameter to SQLITE_CONFIG_PAGECACHE) and allocations
 * that overflowed because no space was left in the page cache.
 * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.DEBUG_ACTIVE_CURSOR_FINALIZATION","true","false","false","true","true","boolean","Log.isLoggable(""SQLiteCursorClosing"", Log.VERBOSE)","","/**
 * Controls the stack trace reporting of active cursors being
 * finalized.
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.dbStats","true","false","false","false","false","ArrayList<DbStats>","","","/**
 * a list of {@link DbStats} - one for each main database opened by the applications
 * running on the android device
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.largestMemAlloc","true","false","false","false","false","int","","","/**
 * records the largest memory allocation request handed to sqlite3.
 * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.dbName","true","false","false","false","false","String","","","/**
 * name of the database
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.DbStats.lookaside","true","false","false","false","false","int","","","/**
 * documented here http://www.sqlite.org/c3ref/c_dbstatus_lookaside_used.html
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.DEBUG_SQL_STATEMENTS","true","false","false","true","true","boolean","Log.isLoggable(""SQLiteStatements"", Log.VERBOSE)","","/**
 * Controls the printing of SQL statements as they are executed.
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.PagerStats.totalBytes","true","false","false","false","false","long","","@Deprecated","/**
 * The total number of bytes in all pagers in the current process
 * @deprecated not used any longer
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.PagerStats.dbStats","true","false","false","false","false","ArrayList<DbStats>","","","/**
 * a list of {@link DbStats} - one for each main database opened by the applications
 * running on the android device
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.pageCacheOverflo","true","false","false","false","false","int","","","/**
 * the number of bytes of page cache allocation which could not be sattisfied by the
 * SQLITE_CONFIG_PAGECACHE buffer and where forced to overflow to sqlite3_malloc().
 * The returned value includes allocations that overflowed because they where too large
 * (they were larger than the ""sz"" parameter to SQLITE_CONFIG_PAGECACHE) and allocations
 * that overflowed because no space was left in the page cache.
 * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.DEBUG_SQL_TIME","true","false","false","true","true","boolean","Log.isLoggable(""SQLiteTime"", Log.VERBOSE)","","/**
 * Controls the printing of wall-clock time taken to execute SQL statements
 * as they are executed.
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.DEBUG_LOCK_TIME_TRACKING","true","false","false","true","true","boolean","Log.isLoggable(""SQLiteLockTime"", Log.VERBOSE)","","/**
 * Controls the tracking of time spent holding the database lock.
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.DbStats.dbSize","true","false","false","false","false","long","","","/**
 * the database size
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.databaseBytes","true","false","false","false","false","long","","@Deprecated","/**
 * The number of bytes in all database files opened in the current process
 * @deprecated not used any longer
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.DEBUG_SQL_CACHE","true","false","false","true","true","boolean","Log.isLoggable(""SQLiteCompiledSql"", Log.VERBOSE)","","/**
 * Controls the printing of compiled-sql-statement cache stats.
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.PagerStats.largestMemAlloc","true","false","false","false","false","int","","","/**
 * records the largest memory allocation request handed to sqlite3.
 * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.PagerStats.databaseBytes","true","false","false","false","false","long","","@Deprecated","/**
 * The number of bytes in all database files opened in the current process
 * @deprecated not used any longer
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.DbStats.dbName","true","false","false","false","false","String","","","/**
 * name of the database
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.memoryUsed","true","false","false","false","false","int","","","/**
 * the current amount of memory checked out by sqlite using sqlite3_malloc().
 * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.lookaside","true","false","false","false","false","int","","","/**
 * documented here http://www.sqlite.org/c3ref/c_dbstatus_lookaside_used.html
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.PagerStats.memoryUsed","true","false","false","false","false","int","","","/**
 * the current amount of memory checked out by sqlite using sqlite3_malloc().
 * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.DbStats.pageSize","true","false","false","false","false","long","","","/**
 * the page size for the database
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.referencedBytes","true","false","false","false","false","long","","@Deprecated","/**
 * The number of bytes in referenced pages in all pagers in the current process
 * @deprecated not used any longer
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.PagerStats.referencedBytes","true","false","false","false","false","long","","@Deprecated","/**
 * The number of bytes in referenced pages in all pagers in the current process
 * @deprecated not used any longer
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.DEBUG_LOCK_TIME_TRACKING_STACK_TRACE","true","false","false","true","true","boolean","Log.isLoggable(""SQLiteLockStackTrace"", Log.VERBOSE)","","/**
 * Controls the printing of stack traces when tracking the time spent holding the database lock.
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.pageSize","true","false","false","false","false","long","","","/**
 * the page size for the database
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.dbSize","true","false","false","false","false","long","","","/**
 * the database size
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.SQLiteDebug.totalBytes","true","false","false","false","false","long","","@Deprecated","/**
 * The total number of bytes in all pagers in the current process
 * @deprecated not used any longer
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.database.sqlite.PagerStats.numPagers","true","false","false","false","false","int","","@Deprecated","/**
 * The number of pagers opened in the current process
 * @deprecated not used any longer
 */
","\android\database\sqlite\SQLiteDebug.java"
"android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE","true","false","false","true","true","int","0x0001","","/**
 * Flag for use with {@link #writeToParcel}: the object being written
 * is a return value, that is the result of a function such as
 * ""<code>Parcelable someFunction()</code>"",
 * ""<code>void someFunction(out Parcelable)</code>"", or
 * ""<code>void someFunction(inout Parcelable)</code>"".  Some implementations
 * may want to release resources at this point.
 */
","\android\os\Parcelable.java"
"android.os.Parcelable.CONTENTS_FILE_DESCRIPTOR","true","false","false","true","true","int","0x0001","","/**
 * Bit masks for use with {@link #describeContents}: each bit represents a
 * kind of object considered to have potential special significance when
 * marshalled.
 */
","\android\os\Parcelable.java"
"com.android.internal.util.BitwiseOutputStream.mBuf","false","false","true","false","false","byte","","","// The byte array being written to, which will be grown as needed.
","\com\android\internal\util\BitwiseOutputStream.java"
"com.android.internal.util.BitwiseOutputStream.mPos","false","false","true","false","false","int","","","// The current position offset, in bits, from the msb in byte 0.
","\com\android\internal\util\BitwiseOutputStream.java"
"com.android.internal.util.BitwiseOutputStream.mEnd","false","false","true","false","false","int","","","// The last bit offset, given the current buf length.
","\com\android\internal\util\BitwiseOutputStream.java"
"android.view.Gravity.AXIS_PULL_AFTER","true","false","false","true","true","int","0x0004","","/**
 * Raw bit controlling how the right/bottom edge is placed.
 */
","\android\view\Gravity.java"
"android.view.Gravity.CENTER_HORIZONTAL","true","false","false","true","true","int","AXIS_SPECIFIED << AXIS_X_SHIFT","","/**
 * Place object in the horizontal center of its container, not changing its
 * size.
 */
","\android\view\Gravity.java"
"android.view.Gravity.VERTICAL_GRAVITY_MASK","true","false","false","true","true","int","(AXIS_SPECIFIED | AXIS_PULL_BEFORE | AXIS_PULL_AFTER) << AXIS_Y_SHIFT","","/**
 * Binary mask to get the vertical gravity of a gravity.
 */
","\android\view\Gravity.java"
"android.view.Gravity.HORIZONTAL_GRAVITY_MASK","true","false","false","true","true","int","(AXIS_SPECIFIED | AXIS_PULL_BEFORE | AXIS_PULL_AFTER) << AXIS_X_SHIFT","","/**
 * Binary mask to get the horizontal gravity of a gravity.
 */
","\android\view\Gravity.java"
"android.view.Gravity.AXIS_Y_SHIFT","true","false","false","true","true","int","4","","/**
 * Bits defining the vertical axis.
 */
","\android\view\Gravity.java"
"android.view.Gravity.TOP","true","false","false","true","true","int","(AXIS_PULL_BEFORE | AXIS_SPECIFIED) << AXIS_Y_SHIFT","","/**
 * Push object to the top of its container, not changing its size.
 */
","\android\view\Gravity.java"
"android.view.Gravity.AXIS_X_SHIFT","true","false","false","true","true","int","0","","/**
 * Bits defining the horizontal axis.
 */
","\android\view\Gravity.java"
"android.view.Gravity.RIGHT","true","false","false","true","true","int","(AXIS_PULL_AFTER | AXIS_SPECIFIED) << AXIS_X_SHIFT","","/**
 * Push object to the right of its container, not changing its size.
 */
","\android\view\Gravity.java"
"android.view.Gravity.NO_GRAVITY","true","false","false","true","true","int","0x0000","","/**
 * Constant indicating that no gravity has been set *
 */
","\android\view\Gravity.java"
"android.view.Gravity.DISPLAY_CLIP_VERTICAL","true","false","false","true","true","int","0x10000000","","/**
 * Special constant to enable clipping to an overall display along the
 * vertical dimension.  This is not applied by default by
 * {@link #apply(int, int, int, Rect, int, int, Rect)}; you must do so
 * yourself by calling {@link #applyDisplay}.
 */
","\android\view\Gravity.java"
"android.view.Gravity.LEFT","true","false","false","true","true","int","(AXIS_PULL_BEFORE | AXIS_SPECIFIED) << AXIS_X_SHIFT","","/**
 * Push object to the left of its container, not changing its size.
 */
","\android\view\Gravity.java"
"android.view.Gravity.FILL_VERTICAL","true","false","false","true","true","int","TOP | BOTTOM","","/**
 * Grow the vertical size of the object if needed so it completely fills
 * its container.
 */
","\android\view\Gravity.java"
"android.view.Gravity.AXIS_PULL_BEFORE","true","false","false","true","true","int","0x0002","","/**
 * Raw bit controlling how the left/top edge is placed.
 */
","\android\view\Gravity.java"
"android.view.Gravity.CENTER","true","false","false","true","true","int","CENTER_VERTICAL | CENTER_HORIZONTAL","","/**
 * Place the object in the center of its container in both the vertical
 * and horizontal axis, not changing its size.
 */
","\android\view\Gravity.java"
"android.view.Gravity.DISPLAY_CLIP_HORIZONTAL","true","false","false","true","true","int","0x01000000","","/**
 * Special constant to enable clipping to an overall display along the
 * horizontal dimension.  This is not applied by default by
 * {@link #apply(int, int, int, Rect, int, int, Rect)}; you must do so
 * yourself by calling {@link #applyDisplay}.
 */
","\android\view\Gravity.java"
"android.view.Gravity.AXIS_SPECIFIED","true","false","false","true","true","int","0x0001","","/**
 * Raw bit indicating the gravity for an axis has been specified.
 */
","\android\view\Gravity.java"
"android.view.Gravity.CENTER_VERTICAL","true","false","false","true","true","int","AXIS_SPECIFIED << AXIS_Y_SHIFT","","/**
 * Place object in the vertical center of its container, not changing its
 * size.
 */
","\android\view\Gravity.java"
"android.view.Gravity.FILL_HORIZONTAL","true","false","false","true","true","int","LEFT | RIGHT","","/**
 * Grow the horizontal size of the object if needed so it completely fills
 * its container.
 */
","\android\view\Gravity.java"
"android.view.Gravity.FILL","true","false","false","true","true","int","FILL_VERTICAL | FILL_HORIZONTAL","","/**
 * Grow the horizontal and vertical size of the object if needed so it
 * completely fills its container.
 */
","\android\view\Gravity.java"
"android.view.Gravity.BOTTOM","true","false","false","true","true","int","(AXIS_PULL_AFTER | AXIS_SPECIFIED) << AXIS_Y_SHIFT","","/**
 * Push object to the bottom of its container, not changing its size.
 */
","\android\view\Gravity.java"
"android.view.Gravity.CLIP_HORIZONTAL","true","false","false","true","true","int","AXIS_CLIP << AXIS_X_SHIFT","","/**
 * Flag to clip the edges of the object to its container along the
 * horizontal axis.
 */
","\android\view\Gravity.java"
"android.view.Gravity.CLIP_VERTICAL","true","false","false","true","true","int","AXIS_CLIP << AXIS_Y_SHIFT","","/**
 * Flag to clip the edges of the object to its container along the
 * vertical axis.
 */
","\android\view\Gravity.java"
"android.view.Gravity.AXIS_CLIP","true","false","false","true","true","int","0x0008","","/**
 * Raw bit controlling whether the right/bottom edge is clipped to its
 * container, based on the gravity direction being applied.
 */
","\android\view\Gravity.java"
"android.os.ParcelUuid.CREATOR","true","false","false","true","true","Parcelable.Creator<ParcelUuid>","new Parcelable.Creator<ParcelUuid>() {

    public ParcelUuid createFromParcel(Parcel source) {
        long mostSigBits = source.readLong();
        long leastSigBits = source.readLong();
        UUID uuid = new UUID(mostSigBits, leastSigBits);
        return new ParcelUuid(uuid);
    }

    public ParcelUuid[] newArray(int size) {
        return new ParcelUuid[size];
    }
}","","","\android\os\ParcelUuid.java"
"android.os.ParcelUuid.mUuid","false","false","true","false","true","UUID","","","","\android\os\ParcelUuid.java"
"android.webkit.ByteArrayBuilder.mLength","true","false","false","false","false","int","","","","\android\webkit\ByteArrayBuilder.java"
"android.webkit.ByteArrayBuilder.sQueue","false","false","true","true","true","ReferenceQueue<Chunk>","new ReferenceQueue<Chunk>()","","// Reference queue for processing gc'd entries.
","\android\webkit\ByteArrayBuilder.java"
"android.webkit.ByteArrayBuilder.mChunks","false","false","true","false","false","LinkedList<Chunk>","","","","\android\webkit\ByteArrayBuilder.java"
"android.webkit.Chunk.mLength","true","false","false","false","false","int","","","","\android\webkit\ByteArrayBuilder.java"
"android.webkit.Chunk.mArray","true","false","false","false","false","byte","","","","\android\webkit\ByteArrayBuilder.java"
"android.webkit.ByteArrayBuilder.DEFAULT_CAPACITY","false","false","true","true","true","int","8192","","","\android\webkit\ByteArrayBuilder.java"
"android.webkit.ByteArrayBuilder.sPool","false","false","true","true","true","LinkedList<SoftReference<Chunk>>","new LinkedList<SoftReference<Chunk>>()","","// Global pool of chunks to be used by other ByteArrayBuilders.
","\android\webkit\ByteArrayBuilder.java"
"android.webkit.ByteArrayBuilder.mArray","true","false","false","false","false","byte","","","","\android\webkit\ByteArrayBuilder.java"
"android.pim.vcard.VCardEntry.mPropertyValueList","false","false","true","false","false","List<String>","new ArrayList<String>()","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.ImData.protocol","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.type","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mVCardType","false","false","true","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.postalCode","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.protocol","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mFamilyName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.country","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.label","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.LOG_TAG","false","false","true","true","true","String","""VCardEntry""","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mAccount","false","false","true","false","true","Account","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPropertyName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.ADDR_MAX_DATA_SIZE","true","false","false","true","true","int","7","","// PO Box, Extended Addr, Street, Locality, Region, Postal Code, Country Name
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.photoBytes","true","false","false","false","true","byte","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.region","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.pobox","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhoneData.isPrimary","true","false","false","false","false","boolean","","","// the original VCard.
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPostalList","false","false","true","false","false","List<PostalData>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.sImMap","false","false","true","true","true","Map<String,Integer>","new HashMap<String, Integer>()","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.DEFAULT_ORGANIZATION_TYPE","false","false","true","true","true","int","Organization.TYPE_WORK","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPhoneticFamilyName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.Property.mPropertyName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.OrganizationData.titleName","true","false","false","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mSuffix","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.EmailData.label","true","false","false","false","true","String","","","// Used only when TYPE is TYPE_CUSTOM.
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.dataArray","false","false","true","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPropertyBytes","false","false","true","false","false","byte","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mNoteList","false","false","true","false","false","List<String>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPhoneticGivenName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.street","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.Property.mPropertyValueList","false","false","true","false","false","List<String>","new ArrayList<String>()","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.formatName","true","false","false","false","true","String","","","// used when type is not defined in ContactsContract.
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.OrganizationData.isPrimary","true","false","false","false","false","boolean","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.ACCOUNT_TYPE_GOOGLE","false","false","true","true","true","String","""com.google""","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhotoData.FORMAT_FLASH","true","false","false","true","true","String","""SWF""","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mFullName","false","false","true","false","false","String","","","// Used only when no family nor given name is found.
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.ImData.isPrimary","true","false","false","false","true","boolean","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.street","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.titleName","true","false","false","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.country","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mEmailList","false","false","true","false","false","List<EmailData>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhoneData.data","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mAndroidCustomPropertyList","false","false","true","false","false","List<List<String>>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.type","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mMiddleName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.OrganizationData.companyName","true","false","false","false","false","String","","","// two parts in vCard: ""ORG"" + ""TITLE"".
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.departmentName","true","false","false","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhoneData.label","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhotoData.isPrimary","true","false","false","false","true","boolean","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.localty","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.companyName","true","false","false","false","false","String","","","// two parts in vCard: ""ORG"" + ""TITLE"".
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.data","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhoneData.type","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.customProtocol","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.GOOGLE_MY_CONTACTS_GROUP","false","false","true","true","true","String","""System Group: My Contacts""","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.OrganizationData.type","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.ImData.customProtocol","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPhoneticFullName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mOrganizationList","false","false","true","false","false","List<OrganizationData>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.dataArray","false","false","true","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mParameterMap","false","false","true","false","false","Map<String,Collection<String>>","new HashMap<String, Collection<String>>()","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPhoneList","false","false","true","false","false","List<PhoneData>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.EmailData.data","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mDisplayName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.EmailData.isPrimary","true","false","false","false","false","boolean","","","// the original VCard.
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mNickNameList","false","false","true","false","false","List<String>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.EmailData.type","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.label","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.ImData.data","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.OrganizationData.departmentName","true","false","false","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mBirthday","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.region","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhotoData.type","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.pobox","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mImList","false","false","true","false","false","List<ImData>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.ADDR_MAX_DATA_SIZE","true","false","false","true","true","int","7","","// PO Box, Extended Addr, Street, Locality, Region, Postal Code, Country Name
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhotoData.photoBytes","true","false","false","false","true","byte","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.ImData.type","true","false","false","false","true","int","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.isPrimary","true","false","false","false","false","boolean","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.localty","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.postalCode","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.isPrimary","true","false","false","false","true","boolean","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PhotoData.formatName","true","false","false","false","true","String","","","// used when type is not defined in ContactsContract.
","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPrefix","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.Property.mPropertyBytes","false","false","true","false","false","byte","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.FORMAT_FLASH","true","false","false","true","true","String","""SWF""","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mWebsiteList","false","false","true","false","false","List<String>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPhoneticMiddleName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.Property.mParameterMap","false","false","true","false","false","Map<String,Collection<String>>","new HashMap<String, Collection<String>>()","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mPhotoList","false","false","true","false","false","List<PhotoData>","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.PostalData.extendedAddress","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.sEmptyList","false","false","true","true","true","List<String>","Collections.unmodifiableList(new ArrayList<String>(0))","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.extendedAddress","true","false","false","false","true","String","","","","\android\pim\vcard\VCardEntry.java"
"android.pim.vcard.VCardEntry.mGivenName","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntry.java"
"android.text.style.TabStopSpan.mTab","false","false","true","false","false","int","","","","\android\text\style\TabStopSpan.java"
"android.text.style.Standard.mTab","false","false","true","false","false","int","","","","\android\text\style\TabStopSpan.java"
"android.app.backup.FileBackupHelper.mContext","false","false","false","false","false","Context","","","","\android\app\backup\FileBackupHelper.java"
"android.app.backup.FileBackupHelper.mFiles","false","false","false","false","false","String","","","","\android\app\backup\FileBackupHelper.java"
"android.app.backup.FileBackupHelper.mFilesDir","false","false","false","false","false","File","","","","\android\app\backup\FileBackupHelper.java"
"android.app.backup.FileBackupHelper.DEBUG","false","false","true","true","true","boolean","false","","","\android\app\backup\FileBackupHelper.java"
"android.app.backup.FileBackupHelper.TAG","false","false","true","true","true","String","""FileBackupHelper""","","","\android\app\backup\FileBackupHelper.java"
"android.app.backup.BackupServiceBinder.TAG","false","false","true","true","true","String","""BackupServiceBinder""","","","\android\app\backup\BackupAgent.java"
"android.app.backup.BackupAgent.DEBUG","false","false","true","true","true","boolean","false","","","\android\app\backup\BackupAgent.java"
"android.app.backup.BackupAgent.TAG","false","false","true","true","true","String","""BackupServiceBinder""","","","\android\app\backup\BackupAgent.java"
"android.app.backup.BackupAgent.mBinder","false","false","true","false","true","IBinder","new BackupServiceBinder().asBinder()","","","\android\app\backup\BackupAgent.java"
"android.content.ContextWrapper.mBase","false","false","false","false","false","Context","","","","\android\content\ContextWrapper.java"
"android.content.pm.Signature.mSignature","false","false","true","false","true","byte","","","","\android\content\pm\Signature.java"
"android.content.pm.Signature.CREATOR","true","false","false","true","true","Parcelable.Creator<Signature>","new Parcelable.Creator<Signature>() {

    public Signature createFromParcel(Parcel source) {
        return new Signature(source);
    }

    public Signature[] newArray(int size) {
        return new Signature[size];
    }
}","","","\android\content\pm\Signature.java"
"android.content.pm.Signature.mHaveHashCode","false","false","true","false","false","boolean","","","","\android\content\pm\Signature.java"
"android.content.pm.Signature.mString","false","false","true","false","false","String","","","","\android\content\pm\Signature.java"
"android.content.pm.Signature.mHashCode","false","false","true","false","false","int","","","","\android\content\pm\Signature.java"
"android.app.LauncherActivity.extras","true","false","false","false","false","Bundle","","","","\android\app\LauncherActivity.java"
"android.app.ListItem.className","true","false","false","false","false","String","","","","\android\app\LauncherActivity.java"
"android.app.ActivityAdapter.mInflater","false","true","false","false","true","LayoutInflater","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mInflater","false","true","false","false","true","LayoutInflater","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mOriginalValues","false","false","true","false","false","ArrayList<ListItem>","","","","\android\app\LauncherActivity.java"
"android.app.IconResizer.mOldBounds","false","false","true","false","true","Rect","new Rect()","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mIntent","false","false","false","false","false","Intent","","","","\android\app\LauncherActivity.java"
"android.app.ListItem.icon","true","false","false","false","false","Drawable","","","","\android\app\LauncherActivity.java"
"android.app.ActivityAdapter.mActivitiesList","false","true","false","false","false","List<ListItem>","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mIconHeight","false","false","true","false","false","int","-1","","","\android\app\LauncherActivity.java"
"android.app.ListItem.packageName","true","false","false","false","false","String","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mIconWidth","false","false","true","false","false","int","-1","","// Code is borrowed from com.android.launcher.Utilities.
","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mFilter","false","false","true","false","false","Filter","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mActivitiesList","false","true","false","false","false","List<ListItem>","","","","\android\app\LauncherActivity.java"
"android.app.ActivityAdapter.mIconResizer","false","true","false","false","true","IconResizer","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mOldBounds","false","false","true","false","true","Rect","new Rect()","","","\android\app\LauncherActivity.java"
"android.app.ActivityAdapter.lock","false","false","true","false","true","Object","new Object()","","","\android\app\LauncherActivity.java"
"android.app.ListItem.resolveInfo","true","false","false","false","false","ResolveInfo","","","","\android\app\LauncherActivity.java"
"android.app.ListItem.label","true","false","false","false","false","CharSequence","","","","\android\app\LauncherActivity.java"
"android.app.ActivityAdapter.mFilter","false","false","true","false","false","Filter","","","","\android\app\LauncherActivity.java"
"android.app.IconResizer.mIconHeight","false","false","true","false","false","int","-1","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.lock","false","false","true","false","true","Object","new Object()","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mIconResizer","false","true","false","false","true","IconResizer","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mCanvas","false","false","true","false","false","Canvas","new Canvas()","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.className","true","false","false","false","false","String","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.icon","true","false","false","false","false","Drawable","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.mPackageManager","false","false","false","false","false","PackageManager","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.label","true","false","false","false","false","CharSequence","","","","\android\app\LauncherActivity.java"
"android.app.IconResizer.mCanvas","false","false","true","false","false","Canvas","new Canvas()","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.packageName","true","false","false","false","false","String","","","","\android\app\LauncherActivity.java"
"android.app.ListItem.extras","true","false","false","false","false","Bundle","","","","\android\app\LauncherActivity.java"
"android.app.IconResizer.mIconWidth","false","false","true","false","false","int","-1","","// Code is borrowed from com.android.launcher.Utilities.
","\android\app\LauncherActivity.java"
"android.app.ActivityAdapter.mOriginalValues","false","false","true","false","false","ArrayList<ListItem>","","","","\android\app\LauncherActivity.java"
"android.app.LauncherActivity.resolveInfo","true","false","false","false","false","ResolveInfo","","","","\android\app\LauncherActivity.java"
"com.android.internal.app.ShutdownThread.sIsStarted","false","false","true","true","false","boolean","false","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.mContext","false","false","true","false","false","Context","","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.mHandler","false","false","true","false","false","Handler","","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.mActionDone","false","false","true","false","false","boolean","","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.mWakeLock","false","false","true","false","false","PowerManager.WakeLock","","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.mActionDoneSync","false","false","true","false","true","Object","new Object()","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.mRebootReason","false","false","true","true","false","String","","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.PHONE_STATE_POLL_SLEEP_MSEC","false","false","true","true","true","int","500","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.mPowerManager","false","false","true","false","false","PowerManager","","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.MAX_NUM_PHONE_STATE_READS","false","false","true","true","true","int","16","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.MAX_BROADCAST_TIME","false","false","true","true","true","int","10 * 1000","","// maximum time we wait for the shutdown broadcast before going on.
","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.mReboot","false","false","true","true","false","boolean","","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.sIsStartedGuard","false","false","true","true","false","Object","new Object()","","// state tracking
","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.MAX_SHUTDOWN_WAIT_TIME","false","false","true","true","true","int","20 * 1000","","","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.TAG","false","false","true","true","true","String","""ShutdownThread""","","// constants
","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.sInstance","false","false","true","true","true","ShutdownThread","new ShutdownThread()","","// static instance of this thread
","\com\android\internal\app\ShutdownThread.java"
"com.android.internal.app.ShutdownThread.SHUTDOWN_VIBRATE_MS","false","false","true","true","true","int","500","","// length of vibration before shutting down
","\com\android\internal\app\ShutdownThread.java"
"android.util.TimingLogger.mTag","false","false","true","false","false","String","","","/**
 * The Log tag to use for checking Log.isLoggable and for
 * logging the timings.
 */
","\android\util\TimingLogger.java"
"android.util.TimingLogger.mLabel","false","false","true","false","false","String","","","/**
 * A label to be included in every log.
 */
","\android\util\TimingLogger.java"
"android.util.TimingLogger.mDisabled","false","false","true","false","false","boolean","","","/**
 * Used to track whether Log.isLoggable was enabled at reset time.
 */
","\android\util\TimingLogger.java"
"android.util.TimingLogger.mSplits","false","false","false","false","false","ArrayList<Long>","","","/**
 * Stores the time of each split.
 */
","\android\util\TimingLogger.java"
"android.util.TimingLogger.mSplitLabels","false","false","false","false","false","ArrayList<String>","","","/**
 * Stores the labels for each split.
 */
","\android\util\TimingLogger.java"
"android.app.PendingIntent.mResultCode","false","false","true","false","false","int","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.mPendingIntent","false","false","true","false","true","PendingIntent","","","","\android\app\PendingIntent.java"
"android.app.FinishedDispatcher.mResultData","false","false","true","false","false","String","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.FLAG_ONE_SHOT","true","false","false","true","true","int","1 << 30","","/**
 * Flag for use with {@link #getActivity}, {@link #getBroadcast}, and
 * {@link #getService}: this
 * PendingIntent can only be used once.  If set, after
 * {@link #send()} is called on it, it will be automatically
 * canceled for you and any future attempt to send through it will fail.
 */
","\android\app\PendingIntent.java"
"android.app.FinishedDispatcher.mWho","false","false","true","false","true","OnFinished","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.FLAG_UPDATE_CURRENT","true","false","false","true","true","int","1 << 27","","/**
 * Flag for use with {@link #getActivity}, {@link #getBroadcast}, and
 * {@link #getService}: if the described PendingIntent already exists,
 * then keep it but its replace its extra data with what is in this new
 * Intent.  This can be used if you are creating intents where only the
 * extras change, and don't care that any entities that received your
 * previous PendingIntent will be able to launch it with your new
 * extras even if they are not explicitly given to it.
 */
","\android\app\PendingIntent.java"
"android.app.PendingIntent.mResultExtras","false","false","true","false","false","Bundle","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.CREATOR","true","false","false","true","true","Parcelable.Creator<PendingIntent>","new Parcelable.Creator<PendingIntent>() {

    public PendingIntent createFromParcel(Parcel in) {
        IBinder target = in.readStrongBinder();
        return target != null ? new PendingIntent(target) : null;
    }

    public PendingIntent[] newArray(int size) {
        return new PendingIntent[size];
    }
}","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.mTarget","false","false","true","false","true","IIntentSender","","","","\android\app\PendingIntent.java"
"android.app.FinishedDispatcher.mPendingIntent","false","false","true","false","true","PendingIntent","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.mResultData","false","false","true","false","false","String","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.mHandler","false","false","true","false","true","Handler","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.FLAG_NO_CREATE","true","false","false","true","true","int","1 << 29","","/**
 * Flag for use with {@link #getActivity}, {@link #getBroadcast}, and
 * {@link #getService}: if the described PendingIntent does not already
 * exist, then simply return null instead of creating it.
 */
","\android\app\PendingIntent.java"
"android.app.PendingIntent.mIntent","false","false","true","false","false","Intent","","","","\android\app\PendingIntent.java"
"android.app.FinishedDispatcher.mResultExtras","false","false","true","false","false","Bundle","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.FLAG_CANCEL_CURRENT","true","false","false","true","true","int","1 << 28","","/**
 * Flag for use with {@link #getActivity}, {@link #getBroadcast}, and
 * {@link #getService}: if the described PendingIntent already exists,
 * the current one is canceled before generating a new one.  You can use
 * this to retrieve a new PendingIntent when you are only changing the
 * extra data in the Intent; by canceling the previous pending intent,
 * this ensures that only entities given the new data will be able to
 * launch it.  If this assurance is not an issue, consider
 * {@link #FLAG_UPDATE_CURRENT}.
 */
","\android\app\PendingIntent.java"
"android.app.FinishedDispatcher.mIntent","false","false","true","false","false","Intent","","","","\android\app\PendingIntent.java"
"android.app.FinishedDispatcher.mHandler","false","false","true","false","true","Handler","","","","\android\app\PendingIntent.java"
"android.app.PendingIntent.mWho","false","false","true","false","true","OnFinished","","","","\android\app\PendingIntent.java"
"android.app.FinishedDispatcher.mResultCode","false","false","true","false","false","int","","","","\android\app\PendingIntent.java"
"android.test.AndroidTestCase.mTestContext","false","false","true","false","false","Context","","","","\android\test\AndroidTestCase.java"
"android.test.AndroidTestCase.mContext","false","true","false","false","false","Context","","","","\android\test\AndroidTestCase.java"
"android.bluetooth.BluetoothAudioGateway.DEFAULT_HF_AG_CHANNEL","true","false","false","true","true","int","10","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mCallback","false","false","true","false","false","Handler","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mSocketFd","true","false","false","false","false","int","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.IncomingConnectionInfo.mRemoteDevice","true","false","false","false","false","BluetoothDevice","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mConnectingHandsfreeSocketFd","false","false","true","false","false","int","","","/* -1 when not connected */
","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.MSG_INCOMING_HEADSET_CONNECTION","true","false","false","true","true","int","100","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.IncomingConnectionInfo.mRfcommChan","true","false","false","false","false","int","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mConnectingHeadsetSocketFd","false","false","true","false","false","int","","","/* -1 when not connected */
","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mHeadsetAgRfcommChannel","false","false","true","false","false","int","-1","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mConnectingHandsfreeAddress","false","false","true","false","false","String","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mConnectThead","false","false","true","false","false","Thread","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.SELECT_WAIT_TIMEOUT","false","false","true","true","true","int","1000","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mAdapter","true","false","false","false","false","BluetoothAdapter","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mRfcommChan","true","false","false","false","false","int","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.IncomingConnectionInfo.mSocketFd","true","false","false","false","false","int","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.DEFAULT_HS_AG_CHANNEL","true","false","false","true","true","int","11","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.IncomingConnectionInfo.mAdapter","true","false","false","false","false","BluetoothAdapter","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mInterrupted","false","false","true","false","false","boolean","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.DBG","false","false","true","true","true","boolean","false","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.TAG","false","false","true","true","true","String","""BT Audio Gateway""","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mHandsfreeAgRfcommChannel","false","false","true","false","false","int","-1","","/* in */
","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mTimeoutRemainingMs","false","false","true","false","false","int","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.MSG_INCOMING_HANDSFREE_CONNECTION","true","false","false","true","true","int","101","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mConnectingHeadsetRfcommChannel","false","false","true","false","false","int","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mNativeData","false","false","true","false","false","int","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mConnectingHeadsetAddress","false","false","true","false","false","String","","","/* out - written by native code */
","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mRemoteDevice","true","false","false","false","false","BluetoothDevice","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.bluetooth.BluetoothAudioGateway.mConnectingHandsfreeRfcommChannel","false","false","true","false","false","int","","","","\android\bluetooth\BluetoothAudioGateway.java"
"android.provider.Calendar._SYNC_DIRTY","true","false","false","true","true","String","""_sync_dirty""","","/**
 * Used to indicate that local, unsynced, changes are present.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.METHOD","true","false","false","true","true","String","""method""","","/**
 * The alarm method, as set on the server.  DEFAULT, ALERT, EMAIL, and
 * SMS are possible values; the device will only process DEFAULT and
 * ALERT reminders (the other types are simply stored so we can send the
 * same reminder info back to the server when we make changes).
 */
","\android\provider\Calendar.java"
"android.provider.EventDays.SELECTION","true","false","false","true","true","String","""selected=1""","","","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.TYPE_OPTIONAL","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.EVENT_TIMEZONE","true","false","false","true","true","String","""eventTimezone""","","/**
 * The timezone for the event.
 * <P>Type: TEXT
 */
","\android\provider\Calendar.java"
"android.provider.Instances.START_MINUTE","true","false","false","true","true","String","""startMinute""","","/**
 * The start minute of the instance measured from midnight in the
 * local timezone.
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.END","true","false","false","true","true","String","""end""","","/**
 * The end time of the event, in UTC
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.LOCAL_TIMEZONE","true","false","false","true","true","String","""localTimezone""","","/**
 * The local timezone that was used for precomputing the fields
 * in the Instances table.
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.SYNC_STATE","true","false","false","true","true","String","""sync_state""","","/**
 * Sync state data.
 * <p>Type: String (blob)</p>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.EDITOR_ACCESS","true","false","false","true","true","int","600","","","\android\provider\Calendar.java"
"android.provider.Calendar.CALENDAR_ID","true","false","false","true","true","String","""calendar_id""","","/**
 * The calendar the event belongs to
 * <P>Type: INTEGER (foreign key to the Calendars table)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.COMMENTS_URI","true","false","false","true","true","String","""commentsUri""","","/**
 * The comments feed uri.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.mProvider","false","false","true","false","true","ContentProviderClient","","","","\android\provider\Calendar.java"
"android.provider.Calendar.DEBUG","false","false","true","true","true","boolean","true","","","\android\provider\Calendar.java"
"android.provider.CalendarMetaDataColumns.LOCAL_TIMEZONE","true","false","false","true","true","String","""localTimezone""","","/**
 * The local timezone that was used for precomputing the fields
 * in the Instances table.
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.SCHEDULED","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendar.OWNER_ACCOUNT","true","false","false","true","true","String","""ownerAccount""","","/**
 * The owner account for this calendar, based on the calendar (foreign
 * key into the calendars table).
 * <P>Type: String</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.SYNC_STATE","true","false","false","true","true","String","""sync_state""","","/**
 * Sync state data.
 * <p>Type: String (blob)</p>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarMetaDataColumns.MAX_INSTANCE","true","false","false","true","true","String","""maxInstance""","","/**
 * The maximum time used in expanding the Instances table,
 * in UTC milliseconds.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar._SYNC_VERSION","true","false","false","true","true","String","""_sync_version""","","/**
 * The version of the row, as assigned by the server.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_STATUS_NONE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.RECEIVED_TIME","true","false","false","true","true","String","""receivedTime""","","/**
 * The time that the alarm broadcast was received by the Calendar app,
 * in UTC. (Useful for debugging missed reminders.)
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.TRANSPARENCY_OPAQUE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendar.STATUS","true","false","false","true","true","String","""eventStatus""","","/**
 * The event status
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.RELATIONSHIP_NONE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.ExtendedPropertiesColumns.EVENT_ID","true","false","false","true","true","String","""event_id""","","/**
 * The event the extended property belongs to
 * <P>Type: INTEGER (foreign key to the Events table)</P>
 */
","\android\provider\Calendar.java"
"android.provider.SyncState.CONTENT_DIRECTORY","true","false","false","true","true","String","SyncStateContract.Constants.CONTENT_DIRECTORY","","","\android\provider\Calendar.java"
"android.provider.Calendar.RDATE","true","false","false","true","true","String","""rdate""","","/**
 * The recurrence dates for the event.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar._SYNC_ACCOUNT","true","false","false","true","true","String","""_sync_account""","","/**
 * The account that was used to sync the entry to the device.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.VISIBILITY_CONFIDENTIAL","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.CREATION_TIME","true","false","false","true","true","String","""creationTime""","","/**
 * The creation time of this database entry, in UTC.
 * (Useful for debugging missed reminders.)
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.DTEND","true","false","false","true","true","String","""dtend""","","/**
 * The time the event ends
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.SORT_ORDER_ALARMTIME_ASC","false","false","true","true","true","String","ALARM_TIME + "" ASC""","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_ATTENDEE_TYPE","false","false","true","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_NAME","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEES_COLUMNS","false","false","true","true","true","String","new String[] { AttendeesColumns.ATTENDEE_NAME, AttendeesColumns.ATTENDEE_EMAIL, AttendeesColumns.ATTENDEE_RELATIONSHIP, AttendeesColumns.ATTENDEE_TYPE, AttendeesColumns.ATTENDEE_STATUS }","","","\android\provider\Calendar.java"
"android.provider.Calendars.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the calendar
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.END_MINUTE","true","false","false","true","true","String","""endMinute""","","/**
 * The end minute of the instance measured from midnight in the
 * local timezone.
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Instances.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/instances/when"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Calendar.java"
"android.provider.Instances.SORT_CALENDAR_VIEW","true","false","false","true","true","String","""begin ASC, end DESC, title ASC""","","/**
 * The sort order is: events with an earlier start time occur
 * first and if the start times are the same, then events with
 * a later end time occur first. The later end time is ordered
 * first so that long-running events in the calendar views appear
 * first.  If the start and end times of two events are
 * the same then we sort alphabetically on the title.  This isn't
 * required for correctness, it just adds a nice touch.
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_ATTENDEE_STATUS","false","false","true","true","true","int","4","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns._SYNC_VERSION","true","false","false","true","true","String","""_sync_version""","","/**
 * The version of the row, as assigned by the server.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_STATUS_TENTATIVE","true","false","false","true","true","int","4","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns._SYNC_DATA","true","false","false","true","true","String","""_sync_local_id""","","/**
 * For use by sync adapter at its discretion; not modified by CalendarProvider
 * Note that this column was formerly named _SYNC_LOCAL_ID.  We are using it to avoid a
 * schema change.
 * TODO Replace this with something more general in the future.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.STATUS_TENTATIVE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendar.WHERE_RESCHEDULE_MISSED_ALARMS","false","false","true","true","true","String","STATE + ""="" + SCHEDULED + "" AND "" + ALARM_TIME + ""<?"" + "" AND "" + ALARM_TIME + "">?"" + "" AND "" + END + "">=?""","","","\android\provider\Calendar.java"
"android.provider.Calendar.EVENT_BEGIN_TIME","true","false","false","true","true","String","""beginTime""","","/**
 * These are the symbolic names for the keys used in the extra data
 * passed in the intent for event reminders.
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.SYNC_ADAPTER_DATA","true","false","false","true","true","String","""syncAdapterData""","","/**
 * This column is available for use by sync adapters
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_NAME","true","false","false","true","true","String","""attendeeName""","","/**
 * The name of the attendee.
 * <P>Type: STRING</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.EVENT_LOCATION","true","false","false","true","true","String","""eventLocation""","","/**
 * Where the event takes place.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.COMMENTS_URI","true","false","false","true","true","String","""commentsUri""","","/**
 * The comments feed uri.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.mProvider","false","false","true","false","true","ContentProviderClient","","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.ROOT_ACCESS","true","false","false","true","true","int","800","","/**
 * Domain admin
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.EVENT_REMINDER_ACTION","true","false","false","true","true","String","""android.intent.action.EVENT_REMINDER""","","/**
 * Broadcast Action: An event reminder.
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlerts.TABLE_NAME","true","false","false","true","true","String","""CalendarAlerts""","","","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.RELATIONSHIP_SPEAKER","true","false","false","true","true","int","4","","","\android\provider\Calendar.java"
"android.provider.CalendarAlerts.CONTENT_URI_BY_INSTANCE","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/calendar_alerts/by_instance"")","","/**
 * This URI is for grouping the query results by event_id and begin
 * time.  This will return one result per instance of an event.  So
 * events with multiple alarms will appear just once, but multiple
 * instances of a repeating event will show up multiple times.
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.EVENT_END_TIME","true","false","false","true","true","String","""endTime""","","","\android\provider\Calendar.java"
"android.provider.Calendar.mResolver","false","false","true","false","true","ContentResolver","","","","\android\provider\Calendar.java"
"android.provider.Calendar.METHOD_ALERT","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.REMINDERS_PROJECTION","false","false","true","true","true","String","new String[] { Reminders.MINUTES, Reminders.METHOD }","","","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_ATTENDEE_TYPE","false","false","true","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.Calendar.WHERE_ALARM_EXISTS","false","false","true","true","true","String","EVENT_ID + ""=?"" + "" AND "" + BEGIN + ""=?"" + "" AND "" + ALARM_TIME + ""=?""","","","\android\provider\Calendar.java"
"android.provider.Calendar.EDITOR_ACCESS","true","false","false","true","true","int","600","","","\android\provider\Calendar.java"
"android.provider.Calendar.STATUS_CONFIRMED","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.WHERE_CALENDARS_SELECTED","false","false","true","true","true","String","Calendars.SELECTED + ""=1""","","","\android\provider\Calendar.java"
"android.provider.Calendar.EXTENDED_PROJECTION","false","false","true","true","true","String","new String[] { ExtendedProperties._ID, ExtendedProperties.NAME, ExtendedProperties.VALUE }","","","\android\provider\Calendar.java"
"android.provider.Calendar.FETCH_ENTRY_COLUMNS","false","false","true","true","true","String","new String[] { Events._SYNC_ACCOUNT, Events._SYNC_ID }","","","\android\provider\Calendar.java"
"android.provider.Calendar._SYNC_DATA","true","false","false","true","true","String","""_sync_local_id""","","/**
 * For use by sync adapter at its discretion; not modified by CalendarProvider
 * Note that this column was formerly named _SYNC_LOCAL_ID.  We are using it to avoid a
 * schema change.
 * TODO Replace this with something more general in the future.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Instances.END","true","false","false","true","true","String","""end""","","/**
 * The ending time of the instance, in UTC milliseconds
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.VISIBILITY_PRIVATE","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.GUESTS_CAN_SEE_GUESTS","true","false","false","true","true","String","""guestsCanSeeGuests""","","/**
 * Whether guests can see the list of attendees.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.STATE","true","false","false","true","true","String","""state""","","/**
 * The state of this alert.  It starts out as SCHEDULED, then when
 * the alarm goes off, it changes to FIRED, and then when the user
 * dismisses the alarm it changes to DISMISSED.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.Instances.CONTENT_BY_DAY_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/instances/whenbyday"")","","","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_NAME","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_ATTENDEE_EMAIL","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.RESPOND_ACCESS","true","false","false","true","true","int","300","","","\android\provider\Calendar.java"
"android.provider.Calendar.CAN_INVITE_OTHERS","true","false","false","true","true","String","""canInviteOthers""","","/**
 * Whether the user can invite others to the event.
 * The GUESTS_CAN_INVITE_OTHERS is a setting that applies to an arbitrary guest,
 * while CAN_INVITE_OTHERS indicates if the user can invite others (either through
 * GUESTS_CAN_INVITE_OTHERS or because the user has modify access to the event).
 * <P>Type: INTEGER (boolean, readonly)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.MIN_EVENTDAYS","true","false","false","true","true","String","""minEventDays""","","/**
 * The minimum Julian day in the EventDays table.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_STATUS_DECLINED","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar._SYNC_ACCOUNT_TYPE","true","false","false","true","true","String","""_sync_account_type""","","/**
 * The type of the account that was used to sync the entry to the device.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventDays.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/instances/groupbyday"")","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.STATUS","true","false","false","true","true","String","""eventStatus""","","/**
 * The event status
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.EVENT_ID","true","false","false","true","true","String","""event_id""","","/**
 * The id of the event.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_EMAIL","true","false","false","true","true","String","""attendeeEmail""","","/**
 * The email address of the attendee.
 * <P>Type: STRING</P>
 */
","\android\provider\Calendar.java"
"android.provider.Events.ATTENDEES_COLUMNS","false","false","true","true","true","String","new String[] { AttendeesColumns.ATTENDEE_NAME, AttendeesColumns.ATTENDEE_EMAIL, AttendeesColumns.ATTENDEE_RELATIONSHIP, AttendeesColumns.ATTENDEE_TYPE, AttendeesColumns.ATTENDEE_STATUS }","","","\android\provider\Calendar.java"
"android.provider.Calendar.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""begin ASC,title ASC""","","/**
 * The default sort order for this table
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.GUESTS_CAN_INVITE_OTHERS","true","false","false","true","true","String","""guestsCanInviteOthers""","","/**
 * Whether guests can invite other guests.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.END","true","false","false","true","true","String","""end""","","/**
 * The end time of the event, in UTC
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.VISIBILITY","true","false","false","true","true","String","""visibility""","","/**
 * Visibility for the event.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.EXTENDED_PROJECTION","false","false","true","true","true","String","new String[] { ExtendedProperties._ID, ExtendedProperties.NAME, ExtendedProperties.VALUE }","","","\android\provider\Calendar.java"
"android.provider.SyncState.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(Calendar.CONTENT_URI, CONTENT_DIRECTORY)","","/**
 * The content:// style URI for this table
 */
","\android\provider\Calendar.java"
"android.provider.Events.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""""","","/**
 * The default sort order for this table
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.DTSTART","true","false","false","true","true","String","""dtstart""","","/**
 * The time the event starts
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.ORIGINAL_INSTANCE_TIME","true","false","false","true","true","String","""originalInstanceTime""","","/**
 * The original instance time of the recurring event for which this
 * event is an exception.
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.HAS_EXTENDED_PROPERTIES","true","false","false","true","true","String","""hasExtendedProperties""","","/**
 * Whether the event has extended properties or not
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_TYPE","true","false","false","true","true","String","""attendeeType""","","/**
 * The type of attendee.
 * <P>Type: Integer (one of {@link #TYPE_REQUIRED}, {@link #TYPE_OPTIONAL})
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_STATUS_TENTATIVE","true","false","false","true","true","int","4","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the event
 * <P>Type: TEXT (duration in RFC2445 format)</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.TYPE_REQUIRED","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.COLOR","true","false","false","true","true","String","""color""","","/**
 * The color of the calendar
 * <P>Type: INTEGER (color value)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEES_PROJECTION","false","false","true","true","true","String","new String[] { Attendees.ATTENDEE_NAME, Attendees.ATTENDEE_EMAIL, Attendees.ATTENDEE_RELATIONSHIP, Attendees.ATTENDEE_TYPE, Attendees.ATTENDEE_STATUS }","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_ATTENDEE_STATUS","false","false","true","true","true","int","4","","","\android\provider\Calendar.java"
"android.provider.Calendar.TITLE","true","false","false","true","true","String","""title""","","/**
 * The title of the event
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Instances.END_DAY","true","false","false","true","true","String","""endDay""","","/**
 * The Julian end day of the instance, relative to the local timezone
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The description of the event
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.RDATE","true","false","false","true","true","String","""rdate""","","/**
 * The recurrence dates for the event.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_ATTENDEE_EMAIL","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.HAS_EXTENDED_PROPERTIES","true","false","false","true","true","String","""hasExtendedProperties""","","/**
 * Whether the event has extended properties or not
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.TRANSPARENCY","true","false","false","true","true","String","""transparency""","","/**
 * Transparency for the event -- does the event consume time on the calendar?
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns._SYNC_ACCOUNT","true","false","false","true","true","String","""_sync_account""","","/**
 * The account that was used to sync the entry to the device.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.RELATIONSHIP_SPEAKER","true","false","false","true","true","int","4","","","\android\provider\Calendar.java"
"android.provider.Calendar.TABLE_NAME","true","false","false","true","true","String","""CalendarAlerts""","","","\android\provider\Calendar.java"
"android.provider.Calendar.COLOR","true","false","false","true","true","String","""color""","","/**
 * The color of the calendar
 * <P>Type: INTEGER (color value)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_ATTENDEE_RELATIONSHIP","false","false","true","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.EventsEntity.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/event_entities"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.DELETED","true","false","false","true","true","String","""deleted""","","/**
 * Whether the row has been deleted.  A deleted row should be ignored.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns._SYNC_MARK","true","false","false","true","true","String","""_sync_mark""","","/**
 * Used only in persistent providers, and only during merging.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns._SYNC_TIME","true","false","false","true","true","String","""_sync_time""","","/**
 * The last time, from the sync source's point of view, that this row has been synchronized.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_STATUS_ACCEPTED","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.DISMISSED","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.WHERE_FINDNEXTALARMTIME","false","false","true","true","true","String","ALARM_TIME + "">=?""","","","\android\provider\Calendar.java"
"android.provider.Calendar.ALL_DAY","true","false","false","true","true","String","""allDay""","","/**
 * Whether the event lasts all day or not
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.HAS_ALARM","true","false","false","true","true","String","""hasAlarm""","","/**
 * Whether the event has an alarm or not
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Instances.EVENT_ID","true","false","false","true","true","String","""event_id""","","/**
 * The event for this instance
 * <P>Type: INTEGER (long, foreign key to the Events table)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.GUESTS_CAN_SEE_GUESTS","true","false","false","true","true","String","""guestsCanSeeGuests""","","/**
 * Whether guests can see the list of attendees.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_EMAIL","true","false","false","true","true","String","""attendeeEmail""","","/**
 * The email address of the attendee.
 * <P>Type: STRING</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.STATUS_CONFIRMED","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Instances.BEGIN","true","false","false","true","true","String","""begin""","","/**
 * The beginning time of the instance, in UTC milliseconds
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.FIRED","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_ATTENDEE_NAME","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.WHERE_EVENT_ID","false","false","true","true","true","String","""event_id=?""","","","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_STATUS_DECLINED","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.FREEBUSY_ACCESS","true","false","false","true","true","int","100","","/**
 * Can only see free/busy information about the calendar
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.RRULE","true","false","false","true","true","String","""rrule""","","/**
 * The recurrence rule for the event.
 * than one.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Events.DELETED_CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/deleted_events"")","","","\android\provider\Calendar.java"
"android.provider.Calendar.EXDATE","true","false","false","true","true","String","""exdate""","","/**
 * The recurrence exception dates for the event.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.mResolver","false","false","true","false","true","ContentResolver","","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.OWNER_ACCOUNT","true","false","false","true","true","String","""ownerAccount""","","/**
 * The owner account for this calendar, based on the calendar (foreign
 * key into the calendars table).
 * <P>Type: String</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.RELATIONSHIP_NONE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendar.TYPE_NONE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendar.CONTENT_URI_BY_INSTANCE","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/calendar_alerts/by_instance"")","","/**
 * This URI is for grouping the query results by event_id and begin
 * time.  This will return one result per instance of an event.  So
 * events with multiple alarms will appear just once, but multiple
 * instances of a repeating event will show up multiple times.
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.MIN_INSTANCE","true","false","false","true","true","String","""minInstance""","","/**
 * The minimum time used in expanding the Instances table,
 * in UTC milliseconds.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.TYPE_NONE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.EventDaysColumns.STARTDAY","true","false","false","true","true","String","""startDay""","","/**
 * The Julian starting day number.
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlerts.WHERE_FINDNEXTALARMTIME","false","false","true","true","true","String","ALARM_TIME + "">=?""","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_NAME","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.mProvider","false","false","true","false","true","ContentProviderClient","","","","\android\provider\Calendar.java"
"android.provider.Calendar.URL","true","false","false","true","true","String","""url""","","/**
 * The URL to the calendar
 * <P>Type: TEXT (URL)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ORIGINAL_ALL_DAY","true","false","false","true","true","String","""originalAllDay""","","/**
 * The allDay status (true or false) of the original recurring event
 * for which this event is an exception.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar._SYNC_TIME","true","false","false","true","true","String","""_sync_time""","","/**
 * The last time, from the sync source's point of view, that this row has been synchronized.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_STATUS_INVITED","true","false","false","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_RELATIONSHIP","true","false","false","true","true","String","""attendeeRelationship""","","/**
 * The relationship of the attendee to the user.
 * <P>Type: INTEGER (one of {@link #RELATIONSHIP_ATTENDEE}, ...}.
 */
","\android\provider\Calendar.java"
"android.provider.Attendees.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/attendees"")","","","\android\provider\Calendar.java"
"android.provider.Calendar._SYNC_MARK","true","false","false","true","true","String","""_sync_mark""","","/**
 * Used only in persistent providers, and only during merging.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.DURATION","true","false","false","true","true","String","""duration""","","/**
 * The duration of the event
 * <P>Type: TEXT (duration in RFC2445 format)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendars.HIDDEN","true","false","false","true","true","String","""hidden""","","/**
 * Should the calendar be hidden in the calendar selection panel?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.EXDATE","true","false","false","true","true","String","""exdate""","","/**
 * The recurrence exception dates for the event.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.EVENT_TIMEZONE","true","false","false","true","true","String","""eventTimezone""","","/**
 * The timezone for the event.
 * <P>Type: TEXT
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.OVERRIDE_ACCESS","true","false","false","true","true","int","400","","","\android\provider\Calendar.java"
"android.provider.Calendar.LAST_DATE","true","false","false","true","true","String","""lastDate""","","/**
 * The last date this event repeats on, or NULL if it never ends
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.SYNC_EVENTS","true","false","false","true","true","String","""sync_events""","","/**
 * If this calendar is in the list of calendars that are selected for
 * syncing then ""sync_events"" is 1, otherwise 0.
 * <p>Type: INTEGER (boolean)</p>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.STARTDAY","true","false","false","true","true","String","""startDay""","","/**
 * The Julian starting day number.
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventDays.PROJECTION","true","false","false","true","true","String","{ STARTDAY, ENDDAY }","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_VALUE","false","false","true","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.HAS_ATTENDEE_DATA","true","false","false","true","true","String","""hasAttendeeData""","","/**
 * Whether the event has attendee information.  True if the event
 * has full attendee data, false if the event has information about
 * self only.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.NOTIFY_TIME","true","false","false","true","true","String","""notifyTime""","","/**
 * The time that the notification was created by the Calendar app,
 * in UTC. (Useful for debugging missed reminders.)
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlerts.SORT_ORDER_ALARMTIME_ASC","false","false","true","true","true","String","ALARM_TIME + "" ASC""","","","\android\provider\Calendar.java"
"android.provider.Instances.WHERE_CALENDARS_SELECTED","false","false","true","true","true","String","Calendars.SELECTED + ""=1""","","","\android\provider\Calendar.java"
"android.provider.ExtendedProperties.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/extendedproperties"")","","","\android\provider\Calendar.java"
"android.provider.Calendar.ORIGINAL_EVENT","true","false","false","true","true","String","""originalEvent""","","/**
 * The _sync_id of the original recurring event for which this event is
 * an exception.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendars.WHERE_DELETE_FOR_ACCOUNT","false","false","true","true","true","String","Calendars._SYNC_ACCOUNT + ""=?"" + "" AND "" + Calendars._SYNC_ACCOUNT_TYPE + ""=?""","","","\android\provider\Calendar.java"
"android.provider.Instances.START_DAY","true","false","false","true","true","String","""startDay""","","/**
 * The Julian start day of the instance, relative to the local timezone
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_ATTENDEE_EMAIL","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns._SYNC_DIRTY","true","false","false","true","true","String","""_sync_dirty""","","/**
 * Used to indicate that local, unsynced, changes are present.
 * <P>Type: INTEGER (long)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.ORGANIZER","true","false","false","true","true","String","""organizer""","","/**
 * Email of the organizer (owner) of the event.
 * <P>Type: STRING</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.WHERE_EVENT_ID","false","false","true","true","true","String","""event_id=?""","","","\android\provider\Calendar.java"
"android.provider.Calendar.VISIBILITY_PUBLIC","true","false","false","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.Calendars.LOCATION","true","false","false","true","true","String","""location""","","/**
 * The location the of the events in the calendar
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ORGANIZER_CAN_RESPOND","true","false","false","true","true","String","""organizerCanRespond""","","/**
 * Can the organizer respond to the event?  If no, the status of the
 * organizer should not be shown by the UI.  Defaults to 1
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.ACCOUNT_TYPE","true","false","false","true","true","String","""account_type""","","/**
 * The type of account to which this row belongs, which when paired with
 * {@link #ACCOUNT_NAME} identifies a specific account.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.HTML_URI","true","false","false","true","true","String","""htmlUri""","","/**
 * The URI for an HTML version of this event.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_NAME","true","false","false","true","true","String","""attendeeName""","","/**
 * The name of the attendee.
 * <P>Type: STRING</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.BEGIN","true","false","false","true","true","String","""begin""","","/**
 * The start time of the event, in UTC
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.TYPE_OPTIONAL","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.SORT_CALENDAR_VIEW","true","false","false","true","true","String","""begin ASC, end DESC, title ASC""","","/**
 * The sort order is: events with an earlier start time occur
 * first and if the start times are the same, then events with
 * a later end time occur first. The later end time is ordered
 * first so that long-running events in the calendar views appear
 * first.  If the start and end times of two events are
 * the same then we sort alphabetically on the title.  This isn't
 * required for correctness, it just adds a nice touch.
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ORIGINAL_INSTANCE_TIME","true","false","false","true","true","String","""originalInstanceTime""","","/**
 * The original instance time of the recurring event for which this
 * event is an exception.
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.RELATIONSHIP_ATTENDEE","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendars.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/calendars"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Calendar.java"
"android.provider.RemindersColumns.METHOD_ALERT","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.RELATIONSHIP_ORGANIZER","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.ALL_DAY","true","false","false","true","true","String","""allDay""","","/**
 * Whether the event lasts all day or not
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.VISIBILITY","true","false","false","true","true","String","""visibility""","","/**
 * Visibility for the event.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ALARM_TIME","true","false","false","true","true","String","""alarmTime""","","/**
 * The alarm time of the event, in UTC
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.CAN_INVITE_OTHERS","true","false","false","true","true","String","""canInviteOthers""","","/**
 * Whether the user can invite others to the event.
 * The GUESTS_CAN_INVITE_OTHERS is a setting that applies to an arbitrary guest,
 * while CAN_INVITE_OTHERS indicates if the user can invite others (either through
 * GUESTS_CAN_INVITE_OTHERS or because the user has modify access to the event).
 * <P>Type: INTEGER (boolean, readonly)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.GUESTS_CAN_INVITE_OTHERS","true","false","false","true","true","String","""guestsCanInviteOthers""","","/**
 * Whether guests can invite other guests.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.OWNER_ACCESS","true","false","false","true","true","int","700","","/**
 * Full access to the calendar
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_STATUS","true","false","false","true","true","String","""attendeeStatus""","","/**
 * The attendance status of the attendee.
 * <P>Type: Integer (one of {@link #ATTENDEE_STATUS_ACCEPTED}, ...}.
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_STATUS_ACCEPTED","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.EXRULE","true","false","false","true","true","String","""exrule""","","/**
 * The recurrence exception rule for the event.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.CALENDAR_ID","true","false","false","true","true","String","""calendar_id""","","/**
 * The calendar the event belongs to
 * <P>Type: INTEGER (foreign key to the Calendars table)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.STATUS_TENTATIVE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.CONTRIBUTOR_ACCESS","true","false","false","true","true","int","500","","/**
 * Full access to modify the calendar, but not the access control settings
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.HAS_ATTENDEE_DATA","true","false","false","true","true","String","""hasAttendeeData""","","/**
 * Whether the event has attendee information.  True if the event
 * has full attendee data, false if the event has information about
 * self only.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.ALARM_TIME","true","false","false","true","true","String","""alarmTime""","","/**
 * The alarm time of the event, in UTC
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.SELECTION","true","false","false","true","true","String","""selected=1""","","","\android\provider\Calendar.java"
"android.provider.Calendar.ACCESS_LEVEL","true","false","false","true","true","String","""access_level""","","/**
 * The level of access that the user has for the calendar
 * <P>Type: INTEGER (one of the values below)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.RESPOND_ACCESS","true","false","false","true","true","int","300","","","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_MINUTES","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_METHOD","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""begin ASC,title ASC""","","/**
 * The default sort order for this table
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.VALUE","true","false","false","true","true","String","""value""","","/**
 * The value of the extended property.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.EXRULE","true","false","false","true","true","String","""exrule""","","/**
 * The recurrence exception rule for the event.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.WHERE_DELETE_FOR_ACCOUNT","false","false","true","true","true","String","Calendars._SYNC_ACCOUNT + ""=?"" + "" AND "" + Calendars._SYNC_ACCOUNT_TYPE + ""=?""","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.READ_ACCESS","true","false","false","true","true","int","200","","/**
 * Can read all event details
 */
","\android\provider\Calendar.java"
"android.provider.RemindersColumns.METHOD","true","false","false","true","true","String","""method""","","/**
 * The alarm method, as set on the server.  DEFAULT, ALERT, EMAIL, and
 * SMS are possible values; the device will only process DEFAULT and
 * ALERT reminders (the other types are simply stored so we can send the
 * same reminder info back to the server when we make changes).
 */
","\android\provider\Calendar.java"
"android.provider.Calendars.OWNER_ACCOUNT","true","false","false","true","true","String","""ownerAccount""","","/**
 * The owner account for this calendar, based on the calendar feed.
 * This will be different from the _SYNC_ACCOUNT for delegated calendars.
 * <P>Type: String</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.FIRED","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.RELATIONSHIP_PERFORMER","true","false","false","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.CalendarAlerts.DEBUG","false","false","true","true","true","boolean","true","","","\android\provider\Calendar.java"
"android.provider.Calendar.MAX_INSTANCE","true","false","false","true","true","String","""maxInstance""","","/**
 * The maximum time used in expanding the Instances table,
 * in UTC milliseconds.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.ACCOUNT_NAME","true","false","false","true","true","String","""account_name""","","/**
 * The name of the account instance to which this row belongs, which when paired with
 * {@link #ACCOUNT_TYPE} identifies a specific account.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.VISIBILITY_CONFIDENTIAL","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.SELF_ATTENDEE_STATUS","true","false","false","true","true","String","""selfAttendeeStatus""","","/**
 * This is a copy of the attendee status for the owner of this event.
 * This field is copied here so that we can efficiently filter out
 * events that are declined without having to look in the Attendees
 * table.
 *
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.TIMEZONE","true","false","false","true","true","String","""timezone""","","/**
 * The timezone the calendar's events occurs in
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.RRULE","true","false","false","true","true","String","""rrule""","","/**
 * The recurrence rule for the event.
 * than one.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.TITLE","true","false","false","true","true","String","""title""","","/**
 * The title of the event
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.STATUS_CANCELED","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.MINUTES_DEFAULT","true","false","false","true","true","int","-1","","","\android\provider\Calendar.java"
"android.provider.Calendar.DISPLAY_NAME","true","false","false","true","true","String","""displayName""","","/**
 * The display name of the calendar
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.METHOD_DEFAULT","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendar.MINUTES","true","false","false","true","true","String","""minutes""","","/**
 * The number of minutes that this alarm precedes the start time
 * <P>Type: INTEGER </P>
 */
","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_STATUS_NONE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendars.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""displayName""","","/**
 * The default sort order for this table
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.HTML_URI","true","false","false","true","true","String","""htmlUri""","","/**
 * The URI for an HTML version of this event.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.EVENT_ID","true","false","false","true","true","String","""event_id""","","/**
 * The event the extended property belongs to
 * <P>Type: INTEGER (foreign key to the Events table)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.ATTENDEES_PROJECTION","false","false","true","true","true","String","new String[] { Attendees.ATTENDEE_NAME, Attendees.ATTENDEE_EMAIL, Attendees.ATTENDEE_RELATIONSHIP, Attendees.ATTENDEE_TYPE, Attendees.ATTENDEE_STATUS }","","","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_STATUS","true","false","false","true","true","String","""attendeeStatus""","","/**
 * The attendance status of the attendee.
 * <P>Type: Integer (one of {@link #ATTENDEE_STATUS_ACCEPTED}, ...}.
 */
","\android\provider\Calendar.java"
"android.provider.ExtendedPropertiesColumns.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the extended property.  This is a uri of the form
 * {scheme}#{local-name} convention.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.PROJECTION","true","false","false","true","true","String","{ STARTDAY, ENDDAY }","","","\android\provider\Calendar.java"
"android.provider.Calendar.CONTENT_DIRECTORY","true","false","false","true","true","String","SyncStateContract.Constants.CONTENT_DIRECTORY","","","\android\provider\Calendar.java"
"android.provider.Calendar.SYNC_EVENTS","true","false","false","true","true","String","""sync_events""","","/**
 * If this calendar is in the list of calendars that are selected for
 * syncing then ""sync_events"" is 1, otherwise 0.
 * <p>Type: INTEGER (boolean)</p>
 */
","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_ID","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.STATUS_CANCELED","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.NAME","true","false","false","true","true","String","""name""","","/**
 * The name of the extended property.  This is a uri of the form
 * {scheme}#{local-name} convention.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Instances.DEFAULT_SORT_ORDER","true","false","false","true","true","String","""begin ASC""","","/**
 * The default sort order for this table.
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_TYPE","true","false","false","true","true","String","""attendeeType""","","/**
 * The type of attendee.
 * <P>Type: Integer (one of {@link #TYPE_REQUIRED}, {@link #TYPE_OPTIONAL})
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.DISMISSED","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.VISIBILITY_DEFAULT","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.ORIGINAL_EVENT","true","false","false","true","true","String","""originalEvent""","","/**
 * The _sync_id of the original recurring event for which this event is
 * an exception.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.GUESTS_CAN_MODIFY","true","false","false","true","true","String","""guestsCanModify""","","/**
 * Whether guests can modify the event.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlerts.WHERE_ALARM_EXISTS","false","false","true","true","true","String","EVENT_ID + ""=?"" + "" AND "" + BEGIN + ""=?"" + "" AND "" + ALARM_TIME + ""=?""","","","\android\provider\Calendar.java"
"android.provider.Calendar.ATTENDEE_STATUS_INVITED","true","false","false","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_METHOD","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.TRANSPARENCY_TRANSPARENT","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_VALUE","false","false","true","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Events.FETCH_ENTRY_COLUMNS","false","false","true","true","true","String","new String[] { Events._SYNC_ACCOUNT, Events._SYNC_ID }","","","\android\provider\Calendar.java"
"android.provider.Calendar.START_MINUTE","true","false","false","true","true","String","""startMinute""","","/**
 * The start minute of the instance measured from midnight in the
 * local timezone.
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.SELECTED","true","false","false","true","true","String","""selected""","","/**
 * Is the calendar selected to be displayed?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_ATTENDEE_STATUS","false","false","true","true","true","int","4","","","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_METHOD","false","false","true","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.MAX_EVENTDAYS","true","false","false","true","true","String","""maxEventDays""","","/**
 * The maximum Julian day in the EventDays table.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(Calendar.CONTENT_URI, CONTENT_DIRECTORY)","","/**
 * The content:// style URI for this table
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.RELATIONSHIP_ORGANIZER","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.METHOD_EMAIL","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.EventsEntity.REMINDERS_PROJECTION","false","false","true","true","true","String","new String[] { Reminders.MINUTES, Reminders.METHOD }","","","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.MINUTES","true","false","false","true","true","String","""minutes""","","/**
 * The number of minutes that this alarm precedes the start time
 * <P>Type: INTEGER </P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ENDDAY","true","false","false","true","true","String","""endDay""","","","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_ATTENDEE_RELATIONSHIP","false","false","true","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.TIMEZONE","true","false","false","true","true","String","""timezone""","","/**
 * The timezone the calendar's events occurs in
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.RemindersColumns.MINUTES","true","false","false","true","true","String","""minutes""","","/**
 * The minutes prior to the event that the alarm should ring.  -1
 * specifies that we should use the default value for the system.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.EVENT_ID","true","false","false","true","true","String","""event_id""","","/**
 * The event that the alert belongs to
 * <P>Type: INTEGER (foreign key to the Events table)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.DTEND","true","false","false","true","true","String","""dtend""","","/**
 * The time the event ends
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_ID","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendars.ORGANIZER_CAN_RESPOND","true","false","false","true","true","String","""organizerCanRespond""","","/**
 * Can the organizer respond to the event?  If no, the status of the
 * organizer should not be shown by the UI.  Defaults to 1
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventDaysColumns.ENDDAY","true","false","false","true","true","String","""endDay""","","","\android\provider\Calendar.java"
"android.provider.Calendar.GUESTS_CAN_MODIFY","true","false","false","true","true","String","""guestsCanModify""","","/**
 * Whether guests can modify the event.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_ID","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendar.ROOT_ACCESS","true","false","false","true","true","int","800","","/**
 * Domain admin
 */
","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.REMINDERS_PROJECTION","false","false","true","true","true","String","new String[] { Reminders.MINUTES, Reminders.METHOD }","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.HAS_ALARM","true","false","false","true","true","String","""hasAlarm""","","/**
 * Whether the event has an alarm or not
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.TRANSPARENCY","true","false","false","true","true","String","""transparency""","","/**
 * Transparency for the event -- does the event consume time on the calendar?
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_ATTENDEE_TYPE","false","false","true","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.SELECTED","true","false","false","true","true","String","""selected""","","/**
 * Is the calendar selected to be displayed?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.DESCRIPTION","true","false","false","true","true","String","""description""","","/**
 * The description of the event
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.END_DAY","true","false","false","true","true","String","""endDay""","","/**
 * The Julian end day of the instance, relative to the local timezone
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.CALLER_IS_SYNCADAPTER","true","false","false","true","true","String","""caller_is_syncadapter""","","/**
 * An optional insert, update or delete URI parameter that allows the caller
 * to specify that it is a sync adapter. The default value is false. If true
 * the dirty flag is not automatically set and the ""syncToNetwork"" parameter
 * is set to false when calling
 * {@link ContentResolver#notifyChange(android.net.Uri, android.database.ContentObserver, boolean)}.
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlerts.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/calendar_alerts"")","","","\android\provider\Calendar.java"
"android.provider.EventsEntity.EXTENDED_PROJECTION","false","false","true","true","true","String","new String[] { ExtendedProperties._ID, ExtendedProperties.NAME, ExtendedProperties.VALUE }","","","\android\provider\Calendar.java"
"android.provider.Instances.END_MINUTE","true","false","false","true","true","String","""endMinute""","","/**
 * The end minute of the instance measured from midnight in the
 * local timezone.
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Reminders.TABLE_NAME","true","false","false","true","true","String","""Reminders""","","","\android\provider\Calendar.java"
"android.provider.Calendar.CONTENT_BY_DAY_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/instances/whenbyday"")","","","\android\provider\Calendar.java"
"android.provider.Calendar.STATE","true","false","false","true","true","String","""state""","","/**
 * The state of this alert.  It starts out as SCHEDULED, then when
 * the alarm goes off, it changes to FIRED, and then when the user
 * dismisses the alarm it changes to DISMISSED.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.WHERE_EVENT_ID","false","false","true","true","true","String","""event_id=?""","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.OWNER_ACCESS","true","false","false","true","true","int","700","","/**
 * Full access to the calendar
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.DTSTART","true","false","false","true","true","String","""dtstart""","","/**
 * The time the event starts
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendars.DISPLAY_NAME","true","false","false","true","true","String","""displayName""","","/**
 * The display name of the calendar
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlertsColumns.NOTIFY_TIME","true","false","false","true","true","String","""notifyTime""","","/**
 * The time that the notification was created by the Calendar app,
 * in UTC. (Useful for debugging missed reminders.)
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.RemindersColumns.EVENT_ID","true","false","false","true","true","String","""event_id""","","/**
 * The event the reminder belongs to
 * <P>Type: INTEGER (foreign key to the Events table)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.ORIGINAL_ALL_DAY","true","false","false","true","true","String","""originalAllDay""","","/**
 * The allDay status (true or false) of the original recurring event
 * for which this event is an exception.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ACCOUNT_TYPE","true","false","false","true","true","String","""account_type""","","/**
 * The type of account to which this row belongs, which when paired with
 * {@link #ACCOUNT_NAME} identifies a specific account.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.NO_ACCESS","true","false","false","true","true","int","0","","/**
 * Cannot access the calendar
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.TAG","true","false","false","true","true","String","""Calendar""","","","\android\provider\Calendar.java"
"android.provider.Calendar.SELF_ATTENDEE_STATUS","true","false","false","true","true","String","""selfAttendeeStatus""","","/**
 * This is a copy of the attendee status for the owner of this event.
 * This field is copied here so that we can efficiently filter out
 * events that are declined without having to look in the Attendees
 * table.
 *
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsColumns.VISIBILITY_PRIVATE","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.EVENT_LOCATION","true","false","false","true","true","String","""eventLocation""","","/**
 * Where the event takes place.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.HIDDEN","true","false","false","true","true","String","""hidden""","","/**
 * Should the calendar be hidden in the calendar selection panel?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.TRANSPARENCY_OPAQUE","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.RemindersColumns.METHOD_EMAIL","true","false","false","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.RECEIVED_TIME","true","false","false","true","true","String","""receivedTime""","","/**
 * The time that the alarm broadcast was received by the Calendar app,
 * in UTC. (Useful for debugging missed reminders.)
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.RemindersColumns.METHOD_SMS","true","false","false","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.ACCESS_LEVEL","true","false","false","true","true","String","""access_level""","","/**
 * The level of access that the user has for the calendar
 * <P>Type: INTEGER (one of the values below)</P>
 */
","\android\provider\Calendar.java"
"android.provider.RemindersColumns.METHOD_DEFAULT","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.ExtendedPropertiesColumns.VALUE","true","false","false","true","true","String","""value""","","/**
 * The value of the extended property.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_MINUTES","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.LAST_DATE","true","false","false","true","true","String","""lastDate""","","/**
 * The last date this event repeats on, or NULL if it never ends
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.TRANSPARENCY_TRANSPARENT","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.SCHEDULED","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Calendar.METHOD_SMS","true","false","false","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.RemindersColumns.MINUTES_DEFAULT","true","false","false","true","true","int","-1","","","\android\provider\Calendar.java"
"android.provider.Calendar.TYPE_REQUIRED","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.AttendeesColumns.ATTENDEE_RELATIONSHIP","true","false","false","true","true","String","""attendeeRelationship""","","/**
 * The relationship of the attendee to the user.
 * <P>Type: INTEGER (one of {@link #RELATIONSHIP_ATTENDEE}, ...}.
 */
","\android\provider\Calendar.java"
"android.provider.Calendars.URL","true","false","false","true","true","String","""url""","","/**
 * The URL to the calendar
 * <P>Type: TEXT (URL)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns._SYNC_ID","true","false","false","true","true","String","""_sync_id""","","/**
 * The unique ID for a row assigned by the sync source. NULL if the row has never been synced.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarMetaDataColumns.MIN_INSTANCE","true","false","false","true","true","String","""minInstance""","","/**
 * The minimum time used in expanding the Instances table,
 * in UTC milliseconds.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.COLUMN_MINUTES","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.DELETED","true","false","false","true","true","String","""deleted""","","/**
 * Whether the row has been deleted.  A deleted row should be ignored.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ACCOUNT_NAME","true","false","false","true","true","String","""account_name""","","/**
 * The name of the account instance to which this row belongs, which when paired with
 * {@link #ACCOUNT_TYPE} identifies a specific account.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns.OVERRIDE_ACCESS","true","false","false","true","true","int","400","","","\android\provider\Calendar.java"
"android.provider.Calendar.AUTHORITY","true","false","false","true","true","String","""com.android.calendar""","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.VISIBILITY_PUBLIC","true","false","false","true","true","int","3","","","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_VALUE","false","false","true","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.CalendarMetaDataColumns.MAX_EVENTDAYS","true","false","false","true","true","String","""maxEventDays""","","/**
 * The maximum Julian day in the EventDays table.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_ATTENDEE_RELATIONSHIP","false","false","true","true","true","int","2","","","\android\provider\Calendar.java"
"android.provider.Calendar.CONTRIBUTOR_ACCESS","true","false","false","true","true","int","500","","/**
 * Full access to modify the calendar, but not the access control settings
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.RELATIONSHIP_ATTENDEE","true","false","false","true","true","int","1","","","\android\provider\Calendar.java"
"android.provider.Calendar.CREATION_TIME","true","false","false","true","true","String","""creationTime""","","/**
 * The creation time of this database entry, in UTC.
 * (Useful for debugging missed reminders.)
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarAlerts.WHERE_RESCHEDULE_MISSED_ALARMS","false","false","true","true","true","String","STATE + ""="" + SCHEDULED + "" AND "" + ALARM_TIME + ""<?"" + "" AND "" + ALARM_TIME + "">?"" + "" AND "" + END + "">=?""","","","\android\provider\Calendar.java"
"android.provider.Calendar.LOCATION","true","false","false","true","true","String","""location""","","/**
 * The location the of the events in the calendar
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.NO_ACCESS","true","false","false","true","true","int","0","","/**
 * Cannot access the calendar
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.START_DAY","true","false","false","true","true","String","""startDay""","","/**
 * The Julian start day of the instance, relative to the local timezone
 * <P>Type: INTEGER (int)</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.BEGIN","true","false","false","true","true","String","""begin""","","/**
 * The start time of the event, in UTC
 * <P>Type: INTEGER (long; millis since epoch)</P>
 */
","\android\provider\Calendar.java"
"android.provider.EventsEntity.COLUMN_ATTENDEE_NAME","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.EventsColumns.VISIBILITY_DEFAULT","true","false","false","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Events.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/events"")","","/**
 * The content:// style URL for this table
 */
","\android\provider\Calendar.java"
"android.provider.EntityIteratorImpl.ATTENDEES_PROJECTION","false","false","true","true","true","String","new String[] { Attendees.ATTENDEE_NAME, Attendees.ATTENDEE_EMAIL, Attendees.ATTENDEE_RELATIONSHIP, Attendees.ATTENDEE_TYPE, Attendees.ATTENDEE_STATUS }","","","\android\provider\Calendar.java"
"android.provider.Calendar._SYNC_ID","true","false","false","true","true","String","""_sync_id""","","/**
 * The unique ID for a row assigned by the sync source. NULL if the row has never been synced.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.COLUMN_ATTENDEE_NAME","false","false","true","true","true","int","0","","","\android\provider\Calendar.java"
"android.provider.Reminders.CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/reminders"")","","","\android\provider\Calendar.java"
"android.provider.Calendar.SYNC_ADAPTER_DATA","true","false","false","true","true","String","""syncAdapterData""","","/**
 * This column is available for use by sync adapters
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.CalendarMetaDataColumns.MIN_EVENTDAYS","true","false","false","true","true","String","""minEventDays""","","/**
 * The minimum Julian day in the EventDays table.
 * <P>Type: INTEGER</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.ORGANIZER","true","false","false","true","true","String","""organizer""","","/**
 * Email of the organizer (owner) of the event.
 * <P>Type: STRING</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.DELETED_CONTENT_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY + ""/deleted_events"")","","","\android\provider\Calendar.java"
"android.provider.EventsEntity.mResolver","false","false","true","false","true","ContentResolver","","","","\android\provider\Calendar.java"
"android.provider.Calendar.READ_ACCESS","true","false","false","true","true","int","200","","/**
 * Can read all event details
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.FREEBUSY_ACCESS","true","false","false","true","true","int","100","","/**
 * Can only see free/busy information about the calendar
 */
","\android\provider\Calendar.java"
"android.provider.CalendarsColumns._SYNC_ACCOUNT_TYPE","true","false","false","true","true","String","""_sync_account_type""","","/**
 * The type of the account that was used to sync the entry to the device.
 * <P>Type: TEXT</P>
 */
","\android\provider\Calendar.java"
"android.provider.Calendar.RELATIONSHIP_PERFORMER","true","false","false","true","true","int","3","","","\android\provider\Calendar.java"
"android.view.inputmethod.InputMethodManager.mCurId","false","false","false","false","false","String","","","/**
 * ID of the method we are bound to.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.RESULT_UNCHANGED_SHOWN","true","false","false","true","true","int","0","","/**
 * Flag for the {@link ResultReceiver} result code from
 * {@link #showSoftInput(View, int, ResultReceiver)} and
 * {@link #hideSoftInputFromWindow(IBinder, int, ResultReceiver)}: the
 * state of the soft input window was unchanged and remains shown.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mInstance","false","false","false","true","false","InputMethodManager","","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCurMethod","false","false","false","false","false","IInputMethodSession","","","/**
 * The actual instance of the method to make calls on it.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.TAG","false","false","false","true","true","String","""InputMethodManager""","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.MSG_DUMP","false","false","false","true","true","int","1","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mService","false","false","false","false","true","IInputMethodManager","","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mClient","false","false","false","false","true","IInputMethodClient.Stub","new IInputMethodClient.Stub() {

    @Override
    protected void dump(FileDescriptor fd, PrintWriter fout, String[] args) {
        // No need to check for dump permission, since we only give this
        // interface to the system.
        CountDownLatch latch = new CountDownLatch(1);
        HandlerCaller.SomeArgs sargs = new HandlerCaller.SomeArgs();
        sargs.arg1 = fd;
        sargs.arg2 = fout;
        sargs.arg3 = args;
        sargs.arg4 = latch;
        mH.sendMessage(mH.obtainMessage(MSG_DUMP, sargs));
        try {
            if (!latch.await(5, TimeUnit.SECONDS)) {
                fout.println(""Timeout waiting for dump"");
            }
        } catch (InterruptedException e) {
            fout.println(""Interrupted waiting for dump"");
        }
    }

    public void setUsingInputMethod(boolean state) {
    }

    public void onBindMethod(InputBindResult res) {
        mH.sendMessage(mH.obtainMessage(MSG_BIND, res));
    }

    public void onUnbindMethod(int sequence) {
        mH.sendMessage(mH.obtainMessage(MSG_UNBIND, sequence, 0));
    }

    public void setActive(boolean active) {
        mH.sendMessage(mH.obtainMessage(MSG_SET_ACTIVE, active ? 1 : 0, 0));
    }
}","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mHasBeenInactive","false","false","false","false","false","boolean","true","","/**
 * Set whenever this client becomes inactive, to know we need to reset
 * state with the IME then next time we receive focus.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.RESULT_SHOWN","true","false","false","true","true","int","2","","/**
 * Flag for the {@link ResultReceiver} result code from
 * {@link #showSoftInput(View, int, ResultReceiver)} and
 * {@link #hideSoftInputFromWindow(IBinder, int, ResultReceiver)}: the
 * state of the soft input window changed from hidden to shown.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mFullscreenMode","false","false","false","false","false","boolean","","","/**
 * As reported by IME through InputConnection.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mServedConnecting","false","false","false","false","false","boolean","","","/**
 * This is set when we are in the process of connecting, to determine
 * when we have actually finished.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCurRootView","false","false","false","false","false","View","","","/**
 * This is the root view of the overall window that currently has input
 * method focus.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.HIDE_IMPLICIT_ONLY","true","false","false","true","true","int","0x0001","","/**
 * Flag for {@link #hideSoftInputFromWindow} to indicate that the soft
 * input window should only be hidden if it was not explicitly shown
 * by the user.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mIInputContext","false","false","false","false","true","IInputContext","","","// Our generic input connection if the current target does not have its own.
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.MSG_SET_ACTIVE","false","false","false","true","true","int","4","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.SHOW_IMPLICIT","true","false","false","true","true","int","0x0001","","/**
 * Flag for {@link #showSoftInput} to indicate that this is an implicit
 * request to show the input window, not as the result of a direct request
 * by the user.  The window may not be shown in this case.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.SHOW_FORCED","true","false","false","true","true","int","0x0002","","/**
 * Flag for {@link #showSoftInput} to indicate that the user has forced
 * the input method open (such as by long-pressing menu) so it should
 * not be closed until they explicitly do so.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mH","false","false","false","false","true","H","","","// global lock.
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mActive","false","false","false","false","false","boolean","false","","/**
 * True if this input method client is active, initially false.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mServedInputConnection","false","false","false","false","false","InputConnection","","","/**
 * The InputConnection that was last retrieved from the served view.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mNextServedView","false","false","false","false","false","View","","","/**
 * This is then next view that will be served by the input method, when
 * we get around to updating things.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mInstanceSync","false","false","false","true","true","Object","new Object()","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.RESULT_HIDDEN","true","false","false","true","true","int","3","","/**
 * Flag for the {@link ResultReceiver} result code from
 * {@link #showSoftInput(View, int, ResultReceiver)} and
 * {@link #hideSoftInputFromWindow(IBinder, int, ResultReceiver)}: the
 * state of the soft input window changed from shown to hidden.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.HIDE_NOT_ALWAYS","true","false","false","true","true","int","0x0002","","/**
 * Flag for {@link #hideSoftInputFromWindow} to indicate that the soft
 * input window should normally be hidden, unless it was originally
 * shown with {@link #SHOW_FORCED}.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mMainLooper","false","false","false","false","true","Looper","","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCompletions","false","false","false","false","false","CompletionInfo","","","/**
 * The completions that were last provided by the served view.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCurrentTextBoxAttribute","false","false","false","false","false","EditorInfo","","","/**
 * This is non-null when we have connected the served view; it holds
 * the attributes that were last retrieved from the served view and given
 * to the input connection.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCursorCandStart","false","false","false","false","false","int","","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mBindSequence","false","false","false","false","false","int","-1","","/**
 * Sequence number of this binding, as returned by the server.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCursorCandEnd","false","false","false","false","false","int","","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCursorRect","false","false","false","false","false","Rect","new Rect()","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mTmpCursorRect","false","false","false","false","false","Rect","new Rect()","","// Cursor position on the screen.
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mDummyInputConnection","false","false","false","false","true","InputConnection","new BaseInputConnection(this, false)","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.MSG_BIND","false","false","false","true","true","int","2","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.RESULT_UNCHANGED_HIDDEN","true","false","false","true","true","int","1","","/**
 * Flag for the {@link ResultReceiver} result code from
 * {@link #showSoftInput(View, int, ResultReceiver)} and
 * {@link #hideSoftInputFromWindow(IBinder, int, ResultReceiver)}: the
 * state of the soft input window was unchanged and remains hidden.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.DEBUG","false","false","false","true","true","boolean","false","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mServedView","false","false","false","false","false","View","","","/**
 * This is the view that should currently be served by an input method,
 * regardless of the state of setting that up.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCursorSelStart","false","false","false","false","false","int","","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mCursorSelEnd","false","false","false","false","false","int","","","","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.mNextServedNeedsStart","false","false","false","false","false","boolean","","","/**
 * True if we should restart input in the next served view, even if the
 * view hasn't actually changed from the current serve view.
 */
","\android\view\inputmethod\InputMethodManager.java"
"android.view.inputmethod.InputMethodManager.MSG_UNBIND","false","false","false","true","true","int","3","","","\android\view\inputmethod\InputMethodManager.java"
"android.security.Md5MessageDigest.mNativeMd5Context","false","false","true","false","false","int","","","// ptr to native context
","\android\security\Md5MessageDigest.java"
"android.text.style.ScaleXSpan.mProportion","false","false","true","false","true","float","","","","\android\text\style\ScaleXSpan.java"
"com.google.android.mms.MmsException.serialVersionUID","false","false","true","true","true","long","-7323249827281485390L","","","\com\google\android\mms\MmsException.java"
"com.android.internal.util.Token.target","true","false","false","false","false","String","","","/**
 * Translated string of source. For Han, target is corresponding Pinyin.
 * Otherwise target is original string in source.
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.LATIN","true","false","false","true","true","int","1","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.mHasChinaCollator","false","false","true","false","true","boolean","","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.COLLATOR","false","false","true","true","true","Collator","Collator.getInstance(Locale.CHINA)","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.Token.UNKNOWN","true","false","false","true","true","int","3","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.PINYINS","false","false","true","true","true","byte","{ { 65, 00, 00, 00, 00, 00 }, { 65, 73, 00, 00, 00, 00 }, { 65, 78, 00, 00, 00, 00 }, { 65, 78, 71, 00, 00, 00 }, { 65, 79, 00, 00, 00, 00 }, { 66, 65, 00, 00, 00, 00 }, { 66, 65, 73, 00, 00, 00 }, { 66, 65, 78, 00, 00, 00 }, { 66, 65, 78, 71, 00, 00 }, { 66, 65, 79, 00, 00, 00 }, { 66, 69, 73, 00, 00, 00 }, { 66, 69, 78, 00, 00, 00 }, { 66, 69, 78, 71, 00, 00 }, { 66, 73, 00, 00, 00, 00 }, { 66, 73, 65, 78, 00, 00 }, { 66, 73, 65, 79, 00, 00 }, { 66, 73, 69, 00, 00, 00 }, { 66, 73, 78, 00, 00, 00 }, { 66, 73, 78, 71, 00, 00 }, { 66, 79, 00, 00, 00, 00 }, { 66, 85, 00, 00, 00, 00 }, { 67, 65, 00, 00, 00, 00 }, { 67, 65, 73, 00, 00, 00 }, { 67, 65, 78, 00, 00, 00 }, { 67, 65, 78, 71, 00, 00 }, { 67, 65, 79, 00, 00, 00 }, { 67, 69, 00, 00, 00, 00 }, { 67, 69, 78, 00, 00, 00 }, { 67, 69, 78, 71, 00, 00 }, { 67, 72, 65, 00, 00, 00 }, { 67, 72, 65, 73, 00, 00 }, { 67, 72, 65, 78, 00, 00 }, { 67, 72, 65, 78, 71, 00 }, { 67, 72, 65, 79, 00, 00 }, { 67, 72, 69, 00, 00, 00 }, { 67, 72, 69, 78, 00, 00 }, { 67, 72, 69, 78, 71, 00 }, { 67, 72, 73, 00, 00, 00 }, { 67, 72, 79, 78, 71, 00 }, { 67, 72, 79, 85, 00, 00 }, { 67, 72, 85, 00, 00, 00 }, { 67, 72, 85, 65, 73, 00 }, { 67, 72, 85, 65, 78, 00 }, { 67, 72, 85, 65, 78, 71 }, { 67, 72, 85, 73, 00, 00 }, { 67, 72, 85, 78, 00, 00 }, { 67, 72, 85, 79, 00, 00 }, { 67, 73, 00, 00, 00, 00 }, { 67, 79, 78, 71, 00, 00 }, { 67, 79, 85, 00, 00, 00 }, { 67, 85, 00, 00, 00, 00 }, { 67, 85, 65, 78, 00, 00 }, { 67, 85, 73, 00, 00, 00 }, { 67, 85, 78, 00, 00, 00 }, { 67, 85, 79, 00, 00, 00 }, { 68, 65, 00, 00, 00, 00 }, { 68, 65, 73, 00, 00, 00 }, { 68, 65, 78, 00, 00, 00 }, { 68, 65, 78, 71, 00, 00 }, { 68, 65, 79, 00, 00, 00 }, { 68, 69, 00, 00, 00, 00 }, { 68, 69, 78, 00, 00, 00 }, { 68, 69, 78, 71, 00, 00 }, { 68, 73, 00, 00, 00, 00 }, { 68, 73, 65, 00, 00, 00 }, { 68, 73, 65, 78, 00, 00 }, { 68, 73, 65, 79, 00, 00 }, { 68, 73, 69, 00, 00, 00 }, { 68, 73, 78, 71, 00, 00 }, { 68, 73, 85, 00, 00, 00 }, { 68, 79, 78, 71, 00, 00 }, { 68, 79, 85, 00, 00, 00 }, { 68, 85, 00, 00, 00, 00 }, { 68, 85, 65, 78, 00, 00 }, { 68, 85, 73, 00, 00, 00 }, { 68, 85, 78, 00, 00, 00 }, { 68, 85, 79, 00, 00, 00 }, { 69, 00, 00, 00, 00, 00 }, { 69, 78, 00, 00, 00, 00 }, { 69, 78, 71, 00, 00, 00 }, { 69, 82, 00, 00, 00, 00 }, { 70, 65, 00, 00, 00, 00 }, { 70, 65, 78, 00, 00, 00 }, { 70, 65, 78, 71, 00, 00 }, { 70, 69, 73, 00, 00, 00 }, { 70, 69, 78, 00, 00, 00 }, { 70, 69, 78, 71, 00, 00 }, { 70, 73, 65, 79, 00, 00 }, { 70, 79, 00, 00, 00, 00 }, { 70, 85, 00, 00, 00, 00 }, { 70, 79, 85, 00, 00, 00 }, { 70, 85, 00, 00, 00, 00 }, { 71, 85, 73, 00, 00, 00 }, { 71, 65, 00, 00, 00, 00 }, { 71, 65, 73, 00, 00, 00 }, { 71, 65, 78, 00, 00, 00 }, { 71, 65, 78, 71, 00, 00 }, { 71, 65, 79, 00, 00, 00 }, { 71, 69, 00, 00, 00, 00 }, { 71, 69, 73, 00, 00, 00 }, { 71, 69, 78, 00, 00, 00 }, { 71, 69, 78, 71, 00, 00 }, { 74, 73, 69, 00, 00, 00 }, { 71, 69, 00, 00, 00, 00 }, { 71, 79, 78, 71, 00, 00 }, { 71, 79, 85, 00, 00, 00 }, { 71, 85, 00, 00, 00, 00 }, { 71, 85, 65, 00, 00, 00 }, { 71, 85, 65, 73, 00, 00 }, { 71, 85, 65, 78, 00, 00 }, { 71, 85, 65, 78, 71, 00 }, { 71, 85, 73, 00, 00, 00 }, { 71, 85, 78, 00, 00, 00 }, { 71, 85, 65, 78, 00, 00 }, { 71, 85, 79, 00, 00, 00 }, { 72, 65, 00, 00, 00, 00 }, { 72, 65, 73, 00, 00, 00 }, { 72, 65, 78, 00, 00, 00 }, { 72, 65, 78, 71, 00, 00 }, { 72, 65, 79, 00, 00, 00 }, { 72, 69, 00, 00, 00, 00 }, { 72, 69, 73, 00, 00, 00 }, { 72, 69, 78, 00, 00, 00 }, { 72, 69, 78, 71, 00, 00 }, { 72, 79, 78, 71, 00, 00 }, { 72, 79, 85, 00, 00, 00 }, { 72, 85, 00, 00, 00, 00 }, { 72, 85, 65, 00, 00, 00 }, { 72, 85, 65, 73, 00, 00 }, { 72, 85, 65, 78, 00, 00 }, { 72, 85, 65, 78, 71, 00 }, { 72, 85, 73, 00, 00, 00 }, { 72, 85, 78, 00, 00, 00 }, { 72, 85, 79, 00, 00, 00 }, { 74, 73, 00, 00, 00, 00 }, { 74, 73, 65, 00, 00, 00 }, { 74, 73, 65, 78, 00, 00 }, { 74, 73, 65, 78, 71, 00 }, { 74, 73, 65, 79, 00, 00 }, { 74, 73, 69, 00, 00, 00 }, { 74, 73, 78, 00, 00, 00 }, { 74, 73, 78, 71, 00, 00 }, { 74, 73, 79, 78, 71, 00 }, { 74, 73, 85, 00, 00, 00 }, { 74, 85, 00, 00, 00, 00 }, { 74, 85, 65, 78, 00, 00 }, { 74, 85, 69, 00, 00, 00 }, { 74, 85, 78, 00, 00, 00 }, { 75, 65, 00, 00, 00, 00 }, { 75, 65, 73, 00, 00, 00 }, { 75, 65, 78, 00, 00, 00 }, { 75, 65, 78, 71, 00, 00 }, { 75, 65, 79, 00, 00, 00 }, { 75, 69, 00, 00, 00, 00 }, { 75, 69, 78, 00, 00, 00 }, { 75, 69, 78, 71, 00, 00 }, { 75, 79, 78, 71, 00, 00 }, { 75, 79, 85, 00, 00, 00 }, { 75, 85, 00, 00, 00, 00 }, { 75, 85, 65, 00, 00, 00 }, { 75, 85, 65, 73, 00, 00 }, { 75, 85, 65, 78, 00, 00 }, { 75, 85, 65, 78, 71, 00 }, { 75, 85, 73, 00, 00, 00 }, { 75, 85, 78, 00, 00, 00 }, { 75, 85, 79, 00, 00, 00 }, { 76, 65, 00, 00, 00, 00 }, { 76, 65, 73, 00, 00, 00 }, { 76, 65, 78, 00, 00, 00 }, { 76, 65, 78, 71, 00, 00 }, { 76, 65, 79, 00, 00, 00 }, { 76, 69, 00, 00, 00, 00 }, { 76, 69, 73, 00, 00, 00 }, { 76, 73, 00, 00, 00, 00 }, { 76, 73, 78, 71, 00, 00 }, { 76, 69, 78, 71, 00, 00 }, { 76, 73, 00, 00, 00, 00 }, { 76, 73, 65, 00, 00, 00 }, { 76, 73, 65, 78, 00, 00 }, { 76, 73, 65, 78, 71, 00 }, { 76, 73, 65, 79, 00, 00 }, { 76, 73, 69, 00, 00, 00 }, { 76, 73, 78, 00, 00, 00 }, { 76, 73, 78, 71, 00, 00 }, { 76, 73, 85, 00, 00, 00 }, { 76, 79, 78, 71, 00, 00 }, { 76, 79, 85, 00, 00, 00 }, { 76, 85, 00, 00, 00, 00 }, { 76, 85, 65, 78, 00, 00 }, { 76, 85, 78, 00, 00, 00 }, { 76, 85, 79, 00, 00, 00 }, { 77, 65, 00, 00, 00, 00 }, { 77, 65, 73, 00, 00, 00 }, { 77, 65, 78, 00, 00, 00 }, { 77, 65, 78, 71, 00, 00 }, { 77, 65, 79, 00, 00, 00 }, { 77, 69, 73, 00, 00, 00 }, { 77, 69, 78, 00, 00, 00 }, { 77, 69, 78, 71, 00, 00 }, { 77, 73, 00, 00, 00, 00 }, { 77, 73, 65, 78, 00, 00 }, { 77, 73, 65, 79, 00, 00 }, { 77, 73, 69, 00, 00, 00 }, { 77, 73, 78, 00, 00, 00 }, { 77, 73, 78, 71, 00, 00 }, { 77, 73, 85, 00, 00, 00 }, { 77, 79, 00, 00, 00, 00 }, { 77, 79, 85, 00, 00, 00 }, { 77, 85, 00, 00, 00, 00 }, { 78, 65, 00, 00, 00, 00 }, { 78, 65, 73, 00, 00, 00 }, { 78, 65, 78, 00, 00, 00 }, { 78, 65, 78, 71, 00, 00 }, { 78, 65, 79, 00, 00, 00 }, { 78, 69, 00, 00, 00, 00 }, { 78, 69, 73, 00, 00, 00 }, { 78, 69, 78, 00, 00, 00 }, { 78, 69, 78, 71, 00, 00 }, { 78, 73, 00, 00, 00, 00 }, { 78, 73, 65, 78, 00, 00 }, { 78, 73, 65, 78, 71, 00 }, { 78, 73, 65, 79, 00, 00 }, { 78, 73, 69, 00, 00, 00 }, { 78, 73, 78, 00, 00, 00 }, { 78, 73, 78, 71, 00, 00 }, { 78, 73, 85, 00, 00, 00 }, { 78, 79, 78, 71, 00, 00 }, { 78, 79, 85, 00, 00, 00 }, { 78, 85, 00, 00, 00, 00 }, { 78, 85, 65, 78, 00, 00 }, { 78, 85, 78, 00, 00, 00 }, { 78, 85, 79, 00, 00, 00 }, { 79, 00, 00, 00, 00, 00 }, { 79, 85, 00, 00, 00, 00 }, { 80, 65, 00, 00, 00, 00 }, { 80, 65, 73, 00, 00, 00 }, { 80, 65, 78, 00, 00, 00 }, { 80, 65, 78, 71, 00, 00 }, { 80, 65, 79, 00, 00, 00 }, { 80, 69, 73, 00, 00, 00 }, { 80, 69, 78, 00, 00, 00 }, { 80, 69, 78, 71, 00, 00 }, { 80, 73, 00, 00, 00, 00 }, { 80, 73, 65, 78, 00, 00 }, { 80, 73, 65, 79, 00, 00 }, { 80, 73, 69, 00, 00, 00 }, { 80, 73, 78, 00, 00, 00 }, { 80, 73, 78, 71, 00, 00 }, { 80, 79, 00, 00, 00, 00 }, { 80, 79, 85, 00, 00, 00 }, { 80, 85, 00, 00, 00, 00 }, { 81, 73, 00, 00, 00, 00 }, { 81, 73, 65, 00, 00, 00 }, { 81, 73, 65, 78, 00, 00 }, { 81, 73, 65, 78, 71, 00 }, { 81, 73, 65, 79, 00, 00 }, { 81, 73, 69, 00, 00, 00 }, { 81, 73, 78, 00, 00, 00 }, { 81, 73, 78, 71, 00, 00 }, { 81, 73, 79, 78, 71, 00 }, { 81, 73, 85, 00, 00, 00 }, { 81, 85, 00, 00, 00, 00 }, { 81, 85, 65, 78, 00, 00 }, { 81, 85, 69, 00, 00, 00 }, { 81, 85, 78, 00, 00, 00 }, { 82, 65, 78, 00, 00, 00 }, { 82, 65, 78, 71, 00, 00 }, { 82, 65, 79, 00, 00, 00 }, { 82, 69, 00, 00, 00, 00 }, { 82, 69, 78, 00, 00, 00 }, { 82, 69, 78, 71, 00, 00 }, { 82, 73, 00, 00, 00, 00 }, { 82, 79, 78, 71, 00, 00 }, { 82, 79, 85, 00, 00, 00 }, { 82, 85, 00, 00, 00, 00 }, { 82, 85, 65, 78, 00, 00 }, { 82, 85, 73, 00, 00, 00 }, { 82, 85, 78, 00, 00, 00 }, { 82, 85, 79, 00, 00, 00 }, { 83, 65, 00, 00, 00, 00 }, { 83, 65, 73, 00, 00, 00 }, { 83, 65, 78, 00, 00, 00 }, { 83, 65, 78, 71, 00, 00 }, { 83, 65, 79, 00, 00, 00 }, { 83, 69, 00, 00, 00, 00 }, { 83, 69, 78, 00, 00, 00 }, { 83, 69, 78, 71, 00, 00 }, { 83, 72, 65, 00, 00, 00 }, { 83, 72, 65, 73, 00, 00 }, { 83, 72, 65, 78, 00, 00 }, { 83, 72, 65, 78, 71, 00 }, { 83, 72, 65, 79, 00, 00 }, { 83, 72, 69, 00, 00, 00 }, { 83, 72, 69, 78, 00, 00 }, { 83, 72, 69, 78, 71, 00 }, { 83, 72, 73, 00, 00, 00 }, { 83, 72, 79, 85, 00, 00 }, { 83, 72, 85, 00, 00, 00 }, { 83, 72, 85, 65, 00, 00 }, { 83, 72, 85, 65, 73, 00 }, { 83, 72, 85, 65, 78, 00 }, { 83, 72, 85, 65, 78, 71 }, { 83, 72, 85, 73, 00, 00 }, { 83, 72, 85, 78, 00, 00 }, { 83, 72, 85, 79, 00, 00 }, { 83, 73, 00, 00, 00, 00 }, { 83, 79, 78, 71, 00, 00 }, { 83, 79, 85, 00, 00, 00 }, { 83, 85, 00, 00, 00, 00 }, { 83, 85, 65, 78, 00, 00 }, { 83, 85, 73, 00, 00, 00 }, { 83, 85, 78, 00, 00, 00 }, { 83, 85, 79, 00, 00, 00 }, { 84, 65, 00, 00, 00, 00 }, { 84, 65, 73, 00, 00, 00 }, { 84, 65, 78, 00, 00, 00 }, { 84, 65, 78, 71, 00, 00 }, { 84, 65, 79, 00, 00, 00 }, { 84, 69, 00, 00, 00, 00 }, { 84, 69, 78, 71, 00, 00 }, { 84, 73, 00, 00, 00, 00 }, { 84, 73, 65, 78, 00, 00 }, { 84, 73, 65, 79, 00, 00 }, { 84, 73, 69, 00, 00, 00 }, { 84, 73, 78, 71, 00, 00 }, { 84, 79, 78, 71, 00, 00 }, { 84, 79, 85, 00, 00, 00 }, { 84, 85, 00, 00, 00, 00 }, { 84, 85, 65, 78, 00, 00 }, { 84, 85, 73, 00, 00, 00 }, { 84, 85, 78, 00, 00, 00 }, { 84, 85, 79, 00, 00, 00 }, { 87, 65, 00, 00, 00, 00 }, { 87, 65, 73, 00, 00, 00 }, { 87, 65, 78, 00, 00, 00 }, { 87, 65, 78, 71, 00, 00 }, { 87, 69, 73, 00, 00, 00 }, { 87, 69, 78, 00, 00, 00 }, { 87, 69, 78, 71, 00, 00 }, { 87, 79, 00, 00, 00, 00 }, { 87, 85, 00, 00, 00, 00 }, { 88, 73, 00, 00, 00, 00 }, { 88, 73, 65, 00, 00, 00 }, { 88, 73, 65, 78, 00, 00 }, { 88, 73, 65, 78, 71, 00 }, { 88, 73, 65, 79, 00, 00 }, { 88, 73, 69, 00, 00, 00 }, { 88, 73, 78, 00, 00, 00 }, { 88, 73, 78, 71, 00, 00 }, { 88, 73, 79, 78, 71, 00 }, { 88, 73, 85, 00, 00, 00 }, { 88, 85, 00, 00, 00, 00 }, { 88, 85, 65, 78, 00, 00 }, { 88, 85, 69, 00, 00, 00 }, { 88, 85, 78, 00, 00, 00 }, { 89, 65, 00, 00, 00, 00 }, { 89, 65, 78, 00, 00, 00 }, { 89, 65, 78, 71, 00, 00 }, { 89, 65, 79, 00, 00, 00 }, { 89, 69, 00, 00, 00, 00 }, { 89, 73, 00, 00, 00, 00 }, { 89, 73, 78, 00, 00, 00 }, { 89, 73, 78, 71, 00, 00 }, { 89, 79, 00, 00, 00, 00 }, { 89, 79, 78, 71, 00, 00 }, { 89, 79, 85, 00, 00, 00 }, { 89, 85, 00, 00, 00, 00 }, { 89, 85, 65, 78, 00, 00 }, { 89, 85, 69, 00, 00, 00 }, { 89, 85, 78, 00, 00, 00 }, { 90, 65, 00, 00, 00, 00 }, { 90, 65, 73, 00, 00, 00 }, { 90, 65, 78, 00, 00, 00 }, { 90, 65, 78, 71, 00, 00 }, { 90, 65, 79, 00, 00, 00 }, { 90, 69, 00, 00, 00, 00 }, { 90, 69, 73, 00, 00, 00 }, { 90, 69, 78, 00, 00, 00 }, { 90, 69, 78, 71, 00, 00 }, { 90, 72, 65, 00, 00, 00 }, { 90, 72, 65, 73, 00, 00 }, { 90, 72, 65, 78, 00, 00 }, { 90, 72, 65, 78, 71, 00 }, { 90, 72, 65, 79, 00, 00 }, { 90, 72, 69, 00, 00, 00 }, { 90, 72, 69, 78, 00, 00 }, { 90, 72, 69, 78, 71, 00 }, { 90, 72, 73, 00, 00, 00 }, { 90, 72, 79, 78, 71, 00 }, { 90, 72, 79, 85, 00, 00 }, { 90, 72, 85, 00, 00, 00 }, { 90, 72, 85, 65, 00, 00 }, { 90, 72, 85, 65, 73, 00 }, { 90, 72, 85, 65, 78, 00 }, { 90, 72, 85, 65, 78, 71 }, { 90, 72, 85, 73, 00, 00 }, { 90, 72, 85, 78, 00, 00 }, { 90, 72, 85, 79, 00, 00 }, { 90, 73, 00, 00, 00, 00 }, { 90, 79, 78, 71, 00, 00 }, { 90, 79, 85, 00, 00, 00 }, { 90, 85, 00, 00, 00, 00 }, { 90, 85, 65, 78, 00, 00 }, { 90, 85, 73, 00, 00, 00 }, { 90, 85, 78, 00, 00, 00 }, { 90, 85, 79, 00, 00, 00 } }","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.target","true","false","false","false","false","String","","","/**
 * Translated string of source. For Han, target is corresponding Pinyin.
 * Otherwise target is original string in source.
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.TAG","false","false","true","true","true","String","""HanziToPinyin""","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.sInstance","false","false","true","true","false","HanziToPinyin","","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.type","true","false","false","false","false","int","","","/**
 * Type of this token, ASCII, PINYIN or UNKNOWN.
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.PINYIN","true","false","false","true","true","int","2","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.Token.LATIN","true","false","false","true","true","int","1","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.UNKNOWN","true","false","false","true","true","int","3","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.Token.PINYIN","true","false","false","true","true","int","2","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.Token.SEPARATOR","true","false","false","true","true","String",""" ""","","/**
 * Separator between target string for each source char
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.FIRST_UNIHAN","false","false","true","true","true","char","'\u3400'","","/**
 * The first Chinese character in Unicode block
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.Token.type","true","false","false","false","false","int","","","/**
 * Type of this token, ASCII, PINYIN or UNKNOWN.
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.source","true","false","false","false","false","String","","","/**
 * Original string before translation.
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.Token.source","true","false","false","false","false","String","","","/**
 * Original string before translation.
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.SEPARATOR","true","false","false","true","true","String",""" ""","","/**
 * Separator between target string for each source char
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.LAST_PINYIN_UNIHAN","false","false","true","true","true","String","""\u5497""","","","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.FIRST_PINYIN_UNIHAN","false","false","true","true","true","String","""\u5416""","","/**
 * First and last Chinese character with known Pinyin according to zh collation
 */
","\com\android\internal\util\HanziToPinyin.java"
"com.android.internal.util.HanziToPinyin.UNIHANS","false","false","true","true","true","char","{ '\u5416', '\u54ce', '\u5b89', '\u80ae', '\u51f9', '\u516b', '\u63b0', '\u6273', '\u90a6', '\u52f9', '\u9642', '\u5954', '\u4f3b', '\u7680', '\u782d', '\u706c', '\u618b', '\u6c43', '\u51ab', '\u7676', '\u5cec', '\u5693', '\u5072', '\u53c2', '\u4ed3', '\u64a1', '\u518a', '\u5d7e', '\u564c', '\u6260', '\u62c6', '\u8fbf', '\u4f25', '\u6284', '\u8f66', '\u62bb', '\u9637', '\u5403', '\u5145', '\u62bd', '\u51fa', '\u640b', '\u5ddb', '\u5205', '\u5439', '\u65fe', '\u8e14', '\u5472', '\u4ece', '\u51d1', '\u7c97', '\u6c46', '\u5d14', '\u90a8', '\u6413', '\u5491', '\u5446', '\u4e39', '\u5f53', '\u5200', '\u6074', '\u6265', '\u706f', '\u4efe', '\u55f2', '\u6541', '\u5201', '\u7239', '\u4e01', '\u4e1f', '\u4e1c', '\u543a', '\u5262', '\u8011', '\u5796', '\u5428', '\u591a', '\u59b8', '\u5940', '\u97a5', '\u800c', '\u53d1', '\u5e06', '\u531a', '\u98de', '\u5206', '\u4e30', '\u8985', '\u4ecf', '\u57ba', '\u7d11', '\u592b', '\u7324', '\u65ee', '\u4f85', '\u5e72', '\u5188', '\u768b', '\u6208', '\u7ed9', '\u6839', '\u63ef', '\u55bc', '\u55f0', '\u5de5', '\u52fe', '\u4f30', '\u9e39', '\u4e56', '\u5173', '\u5149', '\u5f52', '\u4e28', '\u8b34', '\u5459', '\u598e', '\u548d', '\u4f44', '\u592f', '\u8320', '\u8bc3', '\u9ed2', '\u62eb', '\u4ea8', '\u53ff', '\u9f41', '\u4e4e', '\u82b1', '\u6000', '\u6b22', '\u5ddf', '\u7070', '\u660f', '\u5419', '\u4e0c', '\u52a0', '\u620b', '\u6c5f', '\u827d', '\u9636', '\u5dfe', '\u5755', '\u5182', '\u4e29', '\u51e5', '\u59e2', '\u5658', '\u519b', '\u5494', '\u5f00', '\u938e', '\u5ffc', '\u5c3b', '\u533c', '\u808e', '\u52a5', '\u7a7a', '\u62a0', '\u625d', '\u5938', '\u84af', '\u5bbd', '\u5321', '\u4e8f', '\u5764', '\u6269', '\u62c9', '\u4f86', '\u5170', '\u5577', '\u635e', '\u4ec2', '\u96f7', '\u8137', '\u68f1', '\u695e', '\u550e', '\u4fe9', '\u5afe', '\u826f', '\u8e7d', '\u57d3', '\u53b8', '\u62ce', '\u6e9c', '\u9f99', '\u5a04', '\u565c', '\u5b6a', '\u62a1', '\u9831', '\u5988', '\u57cb', '\u989f', '\u7264', '\u732b', '\u5445', '\u95e8', '\u6c13', '\u54aa', '\u5b80', '\u55b5', '\u4e5c', '\u6c11', '\u540d', '\u8c2c', '\u6478', '\u725f', '\u6bcd', '\u62cf', '\u8149', '\u56e1', '\u56d4', '\u5b6c', '\u8bb7', '\u5a1e', '\u5ae9', '\u80fd', '\u92b0', '\u62c8', '\u5a18', '\u9e1f', '\u634f', '\u56dc', '\u5b81', '\u599e', '\u519c', '\u7fba', '\u5974', '\u597b', '\u9ec1', '\u90cd', '\u5662', '\u8bb4', '\u5991', '\u62cd', '\u7705', '\u6c78', '\u629b', '\u5478', '\u55b7', '\u5309', '\u4e76', '\u7247', '\u527d', '\u6c15', '\u59d8', '\u4e52', '\u948b', '\u5256', '\u4ec6', '\u4e03', '\u6390', '\u5343', '\u545b', '\u6084', '\u5207', '\u4eb2', '\u9751', '\u5b86', '\u74d7', '\u533a', '\u5cd1', '\u7094', '\u590b', '\u5465', '\u7a63', '\u835b', '\u60f9', '\u4eba', '\u6254', '\u65e5', '\u620e', '\u53b9', '\u909a', '\u5827', '\u6875', '\u95f0', '\u633c', '\u4ee8', '\u6be2', '\u4e09', '\u6852', '\u63bb', '\u8272', '\u68ee', '\u50e7', '\u6740', '\u7b5b', '\u5c71', '\u4f24', '\u5f30', '\u5962', '\u7533', '\u5347', '\u5c38', '\u53ce', '\u4e66', '\u5237', '\u8870', '\u95e9', '\u53cc', '\u8c01', '\u542e', '\u8bf4', '\u53b6', '\u5fea', '\u51c1', '\u82cf', '\u72fb', '\u590a', '\u5b59', '\u5506', '\u4ed6', '\u5b61', '\u574d', '\u6c64', '\u5932', '\u5fd1', '\u81af', '\u5254', '\u5929', '\u65eb', '\u6017', '\u5385', '\u70b5', '\u5077', '\u51f8', '\u6e4d', '\u63a8', '\u541e', '\u8bac', '\u52b8', '\u6b6a', '\u5f2f', '\u5c23', '\u5371', '\u6637', '\u7fc1', '\u631d', '\u4e4c', '\u5915', '\u5477', '\u4ed9', '\u4e61', '\u7071', '\u4e9b', '\u5fc3', '\u5174', '\u51f6', '\u4f11', '\u620c', '\u5405', '\u75b6', '\u7025', '\u4e2b', '\u54bd', '\u592e', '\u5e7a', '\u503b', '\u4e00', '\u4e5a', '\u5e94', '\u5537', '\u4f63', '\u4f18', '\u7ea1', '\u56e6', '\u66f0', '\u8480', '\u5e00', '\u707d', '\u5142', '\u7242', '\u50ae', '\u556b', '\u9c61', '\u600e', '\u66fd', '\u5412', '\u635a', '\u6cbe', '\u5f20', '\u4f4b', '\u8707', '\u8d1e', '\u9eee', '\u4e4b', '\u4e2d', '\u5dde', '\u6731', '\u6293', '\u62fd', '\u4e13', '\u5986', '\u96b9', '\u5b92', '\u5353', '\u4ed4', '\u5b97', '\u90b9', '\u79df', '\u5297', '\u55fa', '\u5c0a', '\u6628' }","","","\com\android\internal\util\HanziToPinyin.java"
"android.widget.DropDownAdapter.mListAdapter","false","false","true","false","false","ListAdapter","","","","\android\widget\Spinner.java"
"android.widget.Spinner.mListAdapter","false","false","true","false","false","ListAdapter","","","","\android\widget\Spinner.java"
"android.widget.Spinner.mPrompt","false","false","true","false","false","CharSequence","","","","\android\widget\Spinner.java"
"android.widget.Spinner.mAdapter","false","false","true","false","false","SpinnerAdapter","","","","\android\widget\Spinner.java"
"android.widget.DropDownAdapter.mAdapter","false","false","true","false","false","SpinnerAdapter","","","","\android\widget\Spinner.java"
"android.widget.Spinner.mPopup","false","false","true","false","false","AlertDialog","","","","\android\widget\Spinner.java"
"android.os.RegistrantList.registrants","false","false","false","false","false","ArrayList","new ArrayList()","","// of Registrant
","\android\os\RegistrantList.java"
"android.os.MessageQueue.mIdleHandlers","false","false","true","false","true","ArrayList","new ArrayList()","","","\android\os\MessageQueue.java"
"android.os.MessageQueue.mQuitAllowed","false","false","false","false","false","boolean","true","","","\android\os\MessageQueue.java"
"android.os.MessageQueue.mMessages","false","false","false","false","false","Message","","","","\android\os\MessageQueue.java"
"android.os.MessageQueue.mQuiting","false","false","true","false","false","boolean","false","","","\android\os\MessageQueue.java"
"android.view.inputmethod.InputMethod.SHOW_EXPLICIT","true","false","false","true","true","int","0x00001","","/**
 * Flag for {@link #showSoftInput}: this show has been explicitly
 * requested by the user.  If not set, the system has decided it may be
 * a good idea to show the input method based on a navigation operation
 * in the UI.
 */
","\android\view\inputmethod\InputMethod.java"
"android.view.inputmethod.InputMethod.SERVICE_INTERFACE","true","false","false","true","true","String","""android.view.InputMethod""","@SdkConstant(SdkConstantType.SERVICE_ACTION)","/**
 * This is the interface name that a service implementing an input
 * method should say that it supports -- that is, this is the action it
 * uses for its intent filter.
 * To be supported, the service must also require the
 * {@link android.Manifest.permission#BIND_INPUT_METHOD} permission so
 * that other applications can not abuse it.
 */
","\android\view\inputmethod\InputMethod.java"
"android.view.inputmethod.InputMethod.SERVICE_META_DATA","true","false","false","true","true","String","""android.view.im""","","/**
 * Name under which an InputMethod service component publishes information
 * about itself.  This meta-data must reference an XML resource containing
 * an
 * <code>&lt;{@link android.R.styleable#InputMethod input-method}&gt;</code>
 * tag.
 */
","\android\view\inputmethod\InputMethod.java"
"android.view.inputmethod.InputMethod.SHOW_FORCED","true","false","false","true","true","int","0x00002","","/**
 * Flag for {@link #showSoftInput}: this show has been forced to
 * happen by the user.  If set, the input method should remain visible
 * until deliberated dismissed by the user in its UI.
 */
","\android\view\inputmethod\InputMethod.java"
"android.bluetooth.AtCommandResult.ERROR_STRING","false","false","true","true","true","String","""ERROR""","","","\android\bluetooth\AtCommandResult.java"
"android.bluetooth.AtCommandResult.mResponse","false","false","true","false","false","StringBuilder","","","// Response with CRLF line breaks
","\android\bluetooth\AtCommandResult.java"
"android.bluetooth.AtCommandResult.OK_STRING","false","false","true","true","true","String","""OK""","","","\android\bluetooth\AtCommandResult.java"
"android.bluetooth.AtCommandResult.ERROR","true","false","false","true","true","int","1","","","\android\bluetooth\AtCommandResult.java"
"android.bluetooth.AtCommandResult.OK","true","false","false","true","true","int","0","","// Result code enumerations
","\android\bluetooth\AtCommandResult.java"
"android.bluetooth.AtCommandResult.mResultCode","false","false","true","false","false","int","","","// Result code
","\android\bluetooth\AtCommandResult.java"
"android.bluetooth.AtCommandResult.UNSOLICITED","true","false","false","true","true","int","2","","","\android\bluetooth\AtCommandResult.java"
"android.widget.Node.view","false","false","false","false","false","View","","","/**
 * The view representing this node in the layout.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mTopToBottomLeftToRightSet","false","false","true","false","false","SortedSet<View>","null","","","\android\widget\RelativeLayout.java"
"android.widget.Node.dependencies","false","false","false","false","true","SparseArray<Node>","new SparseArray<Node>()","","/**
 * The list of dependencies for this node.
 */
","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.dependencies","false","false","false","false","true","SparseArray<Node>","new SparseArray<Node>()","","/**
 * The list of dependencies for this node.
 */
","\android\widget\RelativeLayout.java"
"android.widget.LayoutParams.mLeft","false","false","true","false","false","int","","","","\android\widget\RelativeLayout.java"
"android.widget.Node.mNext","false","false","true","false","false","Node","","","","\android\widget\RelativeLayout.java"
"android.widget.Node.POOL_LIMIT","false","false","true","true","true","int","100","","// activities, that's why we give it a rather high limit
","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.mRoots","false","false","true","false","false","LinkedList<Node>","new LinkedList<Node>()","","/**
 * Temporary data structure used to build the list of roots
 * for this graph.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_RIGHT","true","false","false","true","true","int","7","","/**
 * Rule that aligns a child's right edge with another child's right edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.VERB_COUNT","false","false","true","true","true","int","16","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mSortedHorizontalChildren","false","false","true","false","false","View","new View[0]","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.RIGHT_OF","true","false","false","true","true","int","1","","/**
 * Rule that aligns a child's left edge with another child's right edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.sPool","false","false","true","true","true","Pool<Node>","Pools.synchronizedPool(Pools.finitePool(new PoolableManager<Node>() {

    public Node newInstance() {
        return new Node();
    }

    public void onAcquired(Node element) {
    }

    public void onReleased(Node element) {
    }
}, POOL_LIMIT))","","","\android\widget\RelativeLayout.java"
"android.widget.LayoutParams.alignWithParent","true","false","false","false","false","boolean","","@ViewDebug.ExportedProperty","/**
 * When true, uses the parent as the anchor if the anchor doesn't exist or if
 * the anchor's visibility is GONE.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.TRUE","true","false","false","true","true","int","-1","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mHasBaselineAlignedChild","false","false","true","false","false","boolean","","","","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.mKeyNodes","false","false","true","false","false","SparseArray<Node>","new SparseArray<Node>()","","/**
 * List of nodes in the graph. Each node is identified by its
 * view id (see View#getId()).
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.dependents","false","false","false","false","true","HashSet<Node>","new HashSet<Node>()","","/**
 * The list of dependents for this node; a dependent is a node
 * that needs this node to be processed first.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mSelfBounds","false","false","true","false","true","Rect","new Rect()","","","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.mNext","false","false","true","false","false","Node","","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mNodes","false","false","true","false","false","ArrayList<Node>","new ArrayList<Node>()","","/**
 * List of all views in the graph.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mGravity","false","false","true","false","false","int","Gravity.LEFT | Gravity.TOP","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.CENTER_HORIZONTAL","true","false","false","true","true","int","14","","/**
 * Rule that centers the child horizontally with respect to the
 * bounds of its RelativeLayout parent.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ABOVE","true","false","false","true","true","int","2","","/**
 * Rule that aligns a child's bottom edge with another child's top edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_PARENT_LEFT","true","false","false","true","true","int","9","","/**
 * Rule that aligns the child's left edge with its RelativeLayout
 * parent's left edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.LOG_TAG","false","false","true","true","true","String","""RelativeLayout""","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.DEBUG_GRAPH","false","false","true","true","true","boolean","false","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.POOL_LIMIT","false","false","true","true","true","int","100","","// activities, that's why we give it a rather high limit
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mBaselineView","false","false","true","false","false","View","null","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mDirtyHierarchy","false","false","true","false","false","boolean","","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.dependencies","false","false","false","false","true","SparseArray<Node>","new SparseArray<Node>()","","/**
 * The list of dependencies for this node.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_LEFT","true","false","false","true","true","int","5","","/**
 * Rule that aligns a child's left edge with another child's left edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.view","false","false","false","false","false","View","","","/**
 * The view representing this node in the layout.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mLeft","false","false","true","false","false","int","","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.BELOW","true","false","false","true","true","int","3","","/**
 * Rule that aligns a child's top edge with another child's bottom edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_TOP","true","false","false","true","true","int","6","","/**
 * Rule that aligns a child's top edge with another child's top edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mGraph","false","false","true","false","true","DependencyGraph","new DependencyGraph()","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.view","false","false","false","false","false","View","","","/**
 * The view representing this node in the layout.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.alignWithParent","true","false","false","false","false","boolean","","@ViewDebug.ExportedProperty","/**
 * When true, uses the parent as the anchor if the anchor doesn't exist or if
 * the anchor's visibility is GONE.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mRules","false","false","true","false","false","int","new int[VERB_COUNT]","@ViewDebug.ExportedProperty(resolveId = true, indexMapping = { @ViewDebug.IntToString(from = ABOVE, to = ""above""), @ViewDebug.IntToString(from = ALIGN_BASELINE, to = ""alignBaseline""), @ViewDebug.IntToString(from = ALIGN_BOTTOM, to = ""alignBottom""), @ViewDebug.IntToString(from = ALIGN_LEFT, to = ""alignLeft""), @ViewDebug.IntToString(from = ALIGN_PARENT_BOTTOM, to = ""alignParentBottom""), @ViewDebug.IntToString(from = ALIGN_PARENT_LEFT, to = ""alignParentLeft""), @ViewDebug.IntToString(from = ALIGN_PARENT_RIGHT, to = ""alignParentRight""), @ViewDebug.IntToString(from = ALIGN_PARENT_TOP, to = ""alignParentTop""), @ViewDebug.IntToString(from = ALIGN_RIGHT, to = ""alignRight""), @ViewDebug.IntToString(from = ALIGN_TOP, to = ""alignTop""), @ViewDebug.IntToString(from = BELOW, to = ""below""), @ViewDebug.IntToString(from = CENTER_HORIZONTAL, to = ""centerHorizontal""), @ViewDebug.IntToString(from = CENTER_IN_PARENT, to = ""center""), @ViewDebug.IntToString(from = CENTER_VERTICAL, to = ""centerVertical""), @ViewDebug.IntToString(from = LEFT_OF, to = ""leftOf""), @ViewDebug.IntToString(from = RIGHT_OF, to = ""rightOf"") }, mapping = { @ViewDebug.IntToString(from = TRUE, to = ""true""), @ViewDebug.IntToString(from = 0, to = ""false/NO_ID"") })","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mKeyNodes","false","false","true","false","false","SparseArray<Node>","new SparseArray<Node>()","","/**
 * List of nodes in the graph. Each node is identified by its
 * view id (see View#getId()).
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.CENTER_VERTICAL","true","false","false","true","true","int","15","","/**
 * Rule that centers the child vertically with respect to the
 * bounds of its RelativeLayout parent.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_BOTTOM","true","false","false","true","true","int","8","","/**
 * Rule that aligns a child's bottom edge with another child's bottom edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.sPool","false","false","true","true","true","Pool<Node>","Pools.synchronizedPool(Pools.finitePool(new PoolableManager<Node>() {

    public Node newInstance() {
        return new Node();
    }

    public void onAcquired(Node element) {
    }

    public void onReleased(Node element) {
    }
}, POOL_LIMIT))","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mSortedVerticalChildren","false","false","true","false","false","View","new View[0]","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mContentBounds","false","false","true","false","true","Rect","new Rect()","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_BASELINE","true","false","false","true","true","int","4","","/**
 * Rule that aligns a child's baseline with another child's baseline.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mNext","false","false","true","false","false","Node","","","","\android\widget\RelativeLayout.java"
"android.widget.Node.dependents","false","false","false","false","true","HashSet<Node>","new HashSet<Node>()","","/**
 * The list of dependents for this node; a dependent is a node
 * that needs this node to be processed first.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.CENTER_IN_PARENT","true","false","false","true","true","int","13","","/**
 * Rule that centers the child with respect to the bounds of its
 * RelativeLayout parent.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mIgnoreGravity","false","false","true","false","false","int","","","","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.POOL_LIMIT","false","false","true","true","true","int","100","","// activities, that's why we give it a rather high limit
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_PARENT_TOP","true","false","false","true","true","int","10","","/**
 * Rule that aligns the child's top edge with its RelativeLayout
 * parent's top edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_PARENT_BOTTOM","true","false","false","true","true","int","12","","/**
 * Rule that aligns the child's bottom edge with its RelativeLayout
 * parent's bottom edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.mRoots","false","false","true","false","false","LinkedList<Node>","new LinkedList<Node>()","","/**
 * Temporary data structure used to build the list of roots
 * for this graph.
 */
","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.ALIGN_PARENT_RIGHT","true","false","false","true","true","int","11","","/**
 * Rule that aligns the child's right edge with its RelativeLayout
 * parent's right edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.mNodes","false","false","true","false","false","ArrayList<Node>","new ArrayList<Node>()","","/**
 * List of all views in the graph.
 */
","\android\widget\RelativeLayout.java"
"android.widget.Node.sPool","false","false","true","true","true","Pool<Node>","Pools.synchronizedPool(Pools.finitePool(new PoolableManager<Node>() {

    public Node newInstance() {
        return new Node();
    }

    public void onAcquired(Node element) {
    }

    public void onReleased(Node element) {
    }
}, POOL_LIMIT))","","","\android\widget\RelativeLayout.java"
"android.widget.RelativeLayout.LEFT_OF","true","false","false","true","true","int","0","","/**
 * Rule that aligns a child's right edge with another child's left edge.
 */
","\android\widget\RelativeLayout.java"
"android.widget.LayoutParams.mRules","false","false","true","false","false","int","new int[VERB_COUNT]","@ViewDebug.ExportedProperty(resolveId = true, indexMapping = { @ViewDebug.IntToString(from = ABOVE, to = ""above""), @ViewDebug.IntToString(from = ALIGN_BASELINE, to = ""alignBaseline""), @ViewDebug.IntToString(from = ALIGN_BOTTOM, to = ""alignBottom""), @ViewDebug.IntToString(from = ALIGN_LEFT, to = ""alignLeft""), @ViewDebug.IntToString(from = ALIGN_PARENT_BOTTOM, to = ""alignParentBottom""), @ViewDebug.IntToString(from = ALIGN_PARENT_LEFT, to = ""alignParentLeft""), @ViewDebug.IntToString(from = ALIGN_PARENT_RIGHT, to = ""alignParentRight""), @ViewDebug.IntToString(from = ALIGN_PARENT_TOP, to = ""alignParentTop""), @ViewDebug.IntToString(from = ALIGN_RIGHT, to = ""alignRight""), @ViewDebug.IntToString(from = ALIGN_TOP, to = ""alignTop""), @ViewDebug.IntToString(from = BELOW, to = ""below""), @ViewDebug.IntToString(from = CENTER_HORIZONTAL, to = ""centerHorizontal""), @ViewDebug.IntToString(from = CENTER_IN_PARENT, to = ""center""), @ViewDebug.IntToString(from = CENTER_VERTICAL, to = ""centerVertical""), @ViewDebug.IntToString(from = LEFT_OF, to = ""leftOf""), @ViewDebug.IntToString(from = RIGHT_OF, to = ""rightOf"") }, mapping = { @ViewDebug.IntToString(from = TRUE, to = ""true""), @ViewDebug.IntToString(from = 0, to = ""false/NO_ID"") })","","\android\widget\RelativeLayout.java"
"android.widget.DependencyGraph.dependents","false","false","false","false","true","HashSet<Node>","new HashSet<Node>()","","/**
 * The list of dependents for this node; a dependent is a node
 * that needs this node to be processed first.
 */
","\android\widget\RelativeLayout.java"
"android.os.Messenger.mTarget","false","false","true","false","true","IMessenger","","","","\android\os\Messenger.java"
"android.os.Messenger.CREATOR","true","false","false","true","true","Parcelable.Creator<Messenger>","new Parcelable.Creator<Messenger>() {

    public Messenger createFromParcel(Parcel in) {
        IBinder target = in.readStrongBinder();
        return target != null ? new Messenger(target) : null;
    }

    public Messenger[] newArray(int size) {
        return new Messenger[size];
    }
}","","","\android\os\Messenger.java"
"android.webkit.HTML5VideoViewProxy.mStatusCode","false","false","true","false","false","int","","","// The response status code.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mRequestHandle","false","false","true","false","false","RequestHandle","","","// The request handle. We only touch this on the WebCore thread.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.VideoPlayer.mProxy","false","false","true","false","false","HTML5VideoViewProxy","","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.ERROR","false","false","true","true","true","int","103","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mCurrentProxy","false","false","true","true","false","HTML5VideoViewProxy","","","// The proxy that is currently playing (if any).
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.PAUSE","false","false","true","true","true","int","102","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.PREPARED","false","false","true","true","true","int","200","","// Message Ids to be handled on the WebCore thread
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.TIMEUPDATE","false","false","true","true","true","int","300","","// Timer thread -> UI thread
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.VideoPlayer.mProgressView","false","false","true","true","false","View","","","// The progress view.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.VideoPlayer.mTimer","false","false","true","true","false","Timer","","","// See http://www.whatwg.org/specs/web-apps/current-work/#event-media-timeupdate
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.POSTER_FETCHED","false","false","true","true","true","int","202","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.PLAY","false","false","true","true","true","int","100","","// Message Ids for WebCore thread -> UI thread communication.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.ENDED","false","false","true","true","true","int","201","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mSeekPosition","false","false","true","false","false","int","","","// The seek position.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mNativePointer","false","false","false","false","false","int","","","// The C++ MediaPlayerPrivateAndroid object.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mPoster","false","false","true","false","false","Bitmap","","","// This ref prevents the bitmap from being GC'ed.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.LOGTAG","false","false","true","true","true","String","""HTML5VideoViewProxy""","","// Logging tag.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.TimeupdateTask.mProxy","false","false","true","false","false","HTML5VideoViewProxy","","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mHandler","false","false","true","false","false","Handler","","","// The handler to handle messages on the WebCore thread.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mProxy","false","false","true","false","true","HTML5VideoViewProxy","","","// The proxy we're doing this for.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mHandler","false","false","true","false","false","Handler","","","// The handler to handle messages on the WebCore thread.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.LOAD_DEFAULT_POSTER","false","false","true","true","true","int","104","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mProgressView","false","false","true","true","false","View","","","// The progress view.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.VideoPlayer.mLayout","false","false","true","true","false","FrameLayout","","","// The container for the progress view and video view
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mPosterDownloader","false","false","true","false","false","PosterDownloader","","","// The poster downloader.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.TIMEUPDATE_PERIOD","false","false","true","true","true","int","250","","// ms
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mRequestHandle","false","false","true","false","false","RequestHandle","","","// The request handle. We only touch this on the WebCore thread.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.VideoPlayer.mCallback","false","false","true","true","true","WebChromeClient.CustomViewCallback","new WebChromeClient.CustomViewCallback() {

    public void onCustomViewHidden() {
        // At this point the videoview is pretty much destroyed.
        // It listens to SurfaceHolder.Callback.SurfaceDestroyed event
        // which happens when the video view is detached from its parent
        // view. This happens in the WebChromeClient before this method
        // is invoked.
        mTimer.cancel();
        mTimer = null;
        if (mVideoView.isPlaying()) {
            mVideoView.stopPlayback();
        }
        mCurrentProxy.dispatchOnEnded();
        mCurrentProxy = null;
        mLayout.removeView(mVideoView);
        mVideoView = null;
        if (mProgressView != null) {
            mLayout.removeView(mProgressView);
            mProgressView = null;
        }
        mLayout = null;
    }
}","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mWebCoreHandler","false","false","true","false","false","Handler","","","// The handler for WebCore thread messages;
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mWebView","false","false","true","false","false","WebView","","","// The WebView instance that created this view.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mCallback","false","false","true","true","true","WebChromeClient.CustomViewCallback","new WebChromeClient.CustomViewCallback() {

    public void onCustomViewHidden() {
        // At this point the videoview is pretty much destroyed.
        // It listens to SurfaceHolder.Callback.SurfaceDestroyed event
        // which happens when the video view is detached from its parent
        // view. This happens in the WebChromeClient before this method
        // is invoked.
        mTimer.cancel();
        mTimer = null;
        if (mVideoView.isPlaying()) {
            mVideoView.stopPlayback();
        }
        mCurrentProxy.dispatchOnEnded();
        mCurrentProxy = null;
        mLayout.removeView(mVideoView);
        mVideoView = null;
        if (mProgressView != null) {
            mLayout.removeView(mProgressView);
            mProgressView = null;
        }
        mLayout = null;
    }
}","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.COOKIE","false","false","true","true","true","String","""Cookie""","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.VideoPlayer.TIMEUPDATE_PERIOD","false","false","true","true","true","int","250","","// ms
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mPosterBytes","false","false","true","false","false","ByteArrayOutputStream","","","// The poster bytes. We only touch this on the network thread.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.VideoPlayer.mCurrentProxy","false","false","true","true","false","HTML5VideoViewProxy","","","// The proxy that is currently playing (if any).
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mRequestQueue","false","false","true","true","false","RequestQueue","","","// The request queue. This is static as we have one queue for all posters.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mVideoView","false","false","true","true","false","VideoView","","","// http://b/issue?id=1973663 is fixed.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mUrl","false","false","true","false","false","String","","","// The poster URL
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mQueueRefCount","false","false","true","true","false","int","0","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mStatusCode","false","false","true","false","false","int","","","// The response status code.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mTimer","false","false","true","true","false","Timer","","","// See http://www.whatwg.org/specs/web-apps/current-work/#event-media-timeupdate
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mHeaders","false","false","true","false","false","Headers","","","// The response headers.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.SEEK","false","false","true","true","true","int","101","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mPosterBytes","false","false","true","false","false","ByteArrayOutputStream","","","// The poster bytes. We only touch this on the network thread.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mRequestQueue","false","false","true","true","false","RequestQueue","","","// The request queue. This is static as we have one queue for all posters.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mProxy","false","false","true","false","true","HTML5VideoViewProxy","","","// The proxy we're doing this for.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mUrl","false","false","true","false","false","String","","","// The poster URL
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mQueueRefCount","false","false","true","true","false","int","0","","","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.PosterDownloader.mHeaders","false","false","true","false","false","Headers","","","// The response headers.
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.HTML5VideoViewProxy.mLayout","false","false","true","true","false","FrameLayout","","","// The container for the progress view and video view
","\android\webkit\HTML5VideoViewProxy.java"
"android.webkit.VideoPlayer.mVideoView","false","false","true","true","false","VideoView","","","// http://b/issue?id=1973663 is fixed.
","\android\webkit\HTML5VideoViewProxy.java"
"android.gesture.GestureLibrary.mStore","false","true","false","false","true","GestureStore","","","","\android\gesture\GestureLibrary.java"
"com.android.internal.app.AlertActivity.mAlert","false","true","false","false","false","AlertController","","","/**
 * The model for the alert.
 *
 * @see #mAlertParams
 */
","\com\android\internal\app\AlertActivity.java"
"com.android.internal.app.AlertActivity.mAlertParams","false","true","false","false","false","AlertController.AlertParams","","","/**
 * The parameters for the alert.
 */
","\com\android\internal\app\AlertActivity.java"
"android.app.FullBackupAgent.DEBUG","false","false","true","true","true","boolean","true","","","\android\app\FullBackupAgent.java"
"android.app.FullBackupAgent.TAG","false","false","true","true","true","String","""FullBackupAgent""","","// !!! TODO: turn off debugging
","\android\app\FullBackupAgent.java"
"android.os.Parcel.EX_ILLEGAL_STATE","false","false","true","true","true","int","-5","","","\android\os\Parcel.java"
"android.os.Parcel.DEBUG_RECYCLE","false","false","true","true","true","boolean","false","","","\android\os\Parcel.java"
"android.os.Parcel.EX_ILLEGAL_ARGUMENT","false","false","true","true","true","int","-3","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_MAP","false","false","true","true","true","int","2","","","\android\os\Parcel.java"
"android.os.Parcel.mCreators","false","false","true","true","true","HashMap<ClassLoader,HashMap<String,Parcelable.Creator>>","new HashMap<ClassLoader, HashMap<String, Parcelable.Creator>>()","","// Method objects.
","\android\os\Parcel.java"
"android.os.Parcel.sHolderPool","false","false","true","true","true","Parcel","new Parcel[POOL_SIZE]","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_STRING","false","false","true","true","true","int","0","","","\android\os\Parcel.java"
"android.os.Parcel.mOwnObject","false","false","true","false","false","int","","@SuppressWarnings({ ""UnusedDeclaration"" })","","\android\os\Parcel.java"
"android.os.Parcel.VAL_SPARSEARRAY","false","false","true","true","true","int","12","","","\android\os\Parcel.java"
"android.os.Parcel.POOL_SIZE","false","false","true","true","true","int","6","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_LONG","false","false","true","true","true","int","6","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_CHARSEQUENCE","false","false","true","true","true","int","10","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_IBINDER","false","false","true","true","true","int","15","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_SHORT","false","false","true","true","true","int","5","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_STRINGARRAY","false","false","true","true","true","int","14","","","\android\os\Parcel.java"
"android.os.Parcel.EX_SECURITY","false","false","true","true","true","int","-1","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_BOOLEAN","false","false","true","true","true","int","9","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_PARCELABLE","false","false","true","true","true","int","4","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_LIST","false","false","true","true","true","int","11","","","\android\os\Parcel.java"
"android.os.Parcel.EX_NULL_POINTER","false","false","true","true","true","int","-4","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_NULL","false","false","true","true","true","int","-1","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_FLOAT","false","false","true","true","true","int","7","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_BYTEARRAY","false","false","true","true","true","int","13","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_DOUBLE","false","false","true","true","true","int","8","","","\android\os\Parcel.java"
"android.os.Parcel.sOwnedPool","false","false","true","true","true","Parcel","new Parcel[POOL_SIZE]","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_CHARSEQUENCEARRAY","false","false","true","true","true","int","24","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_INTEGER","false","false","true","true","true","int","1","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_BYTE","false","false","true","true","true","int","20","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_PARCELABLEARRAY","false","false","true","true","true","int","16","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_INTARRAY","false","false","true","true","true","int","18","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_SPARSEBOOLEANARRAY","false","false","true","true","true","int","22","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_BOOLEANARRAY","false","false","true","true","true","int","23","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_SERIALIZABLE","false","false","true","true","true","int","21","","","\android\os\Parcel.java"
"android.os.Parcel.STRING_CREATOR","true","false","false","true","true","Parcelable.Creator<String>","new Parcelable.Creator<String>() {

    public String createFromParcel(Parcel source) {
        return source.readString();
    }

    public String[] newArray(int size) {
        return new String[size];
    }
}","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_BUNDLE","false","false","true","true","true","int","3","","","\android\os\Parcel.java"
"android.os.Parcel.mStack","false","false","true","false","false","RuntimeException","","","","\android\os\Parcel.java"
"android.os.Parcel.EX_BAD_PARCELABLE","false","false","true","true","true","int","-2","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_LONGARRAY","false","false","true","true","true","int","19","","","\android\os\Parcel.java"
"android.os.Parcel.VAL_OBJECTARRAY","false","false","true","true","true","int","17","","","\android\os\Parcel.java"
"android.os.Parcel.mObject","false","false","true","false","false","int","","@SuppressWarnings({ ""UnusedDeclaration"" })","","\android\os\Parcel.java"
"android.widget.AbsListView.mCacheColorHint","false","false","true","false","false","int","","","/**
 * Indicates that this list is always drawn on top of a solid, single-color, opaque
 * background
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mSelectionRightPadding","false","false","false","false","false","int","0","","/**
 * The selection's right padding
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\AbsListView.java"
"android.widget.LayoutParams.viewType","false","false","false","false","false","int","","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = ITEM_VIEW_TYPE_IGNORE, to = ""ITEM_VIEW_TYPE_IGNORE""), @ViewDebug.IntToString(from = ITEM_VIEW_TYPE_HEADER_OR_FOOTER, to = ""ITEM_VIEW_TYPE_HEADER_OR_FOOTER"") })","/**
 * View type for this view, as returned by
 * {@link android.widget.Adapter#getItemViewType(int) }
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mDrawSelectorOnTop","false","false","false","false","false","boolean","false","","/**
 * Indicates whether the list selector should be drawn on top of the children or behind
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_TAP","false","false","false","true","true","int","1","","/**
 * Indicates the touch has been recognized as a tap and we are now waiting to see if the touch
 * is a longpress
 */
","\android\widget\AbsListView.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mSelector","false","false","false","false","false","Drawable","","","/**
 * The drawable used to draw the selector
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mSmoothScrollbarEnabled","false","false","true","false","false","boolean","true","","/**
 * Indicates whether to use pixels-based or position-based scrollbar
 * properties.
 */
","\android\widget\AbsListView.java"
"android.widget.FlingRunnable.mScroller","false","false","true","false","true","Scroller","","","/**
 * Tracks the decay of a fling scroll
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMotionCorrection","false","false","false","false","false","int","","","/**
 * How far the finger moved before we started scrolling
 */
","\android\widget\AbsListView.java"
"android.widget.OnScrollListener.SCROLL_STATE_TOUCH_SCROLL","true","false","false","true","false","int","1","","/**
 * The user is scrolling using touch, and their finger is still on the screen
 */
","\android\widget\AbsListView.java"
"android.widget.RecycleBin.mFirstActivePosition","false","false","true","false","false","int","","","/**
 * The position of the first view stored in mActiveViews.
 */
","\android\widget\AbsListView.java"
"android.widget.PositionScroller.MOVE_UP_POS","false","false","true","true","true","int","2","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mTouchFrame","false","false","true","false","false","Rect","","","/**
 * Rectangle used for hit testing children
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.TRANSCRIPT_MODE_NORMAL","true","false","false","true","true","int","1","","/**
 * The list will automatically scroll to the bottom when a data set change
 * notification is received and only if the last item is already visible
 * on screen.
 *
 * @see #setTranscriptMode(int)
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mPopupHidden","false","false","true","false","false","boolean","","","// dispatchDisplayHint()
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mFiltered","false","false","true","false","false","boolean","","","/**
 * Indicates that this view is currently displaying a filtered view of the data
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mSelectionBottomPadding","false","false","false","false","false","int","0","","/**
 * The selection's bottom padding
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_DOWN","false","false","false","true","true","int","0","","/**
 * Indicates we just received the touch event and we are waiting to see if the it is a tap or a
 * scroll gesture.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mDataSetObserver","false","false","false","false","false","AdapterDataSetObserver","","","/**
 * Should be used by subclasses to listen to changes in the dataset
 */
","\android\widget\AbsListView.java"
"android.widget.SavedState.selectedId","false","false","false","false","false","long","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMaximumVelocity","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.selectedId","false","false","false","false","false","long","","","","\android\widget\AbsListView.java"
"android.widget.PositionScroller.SCROLL_DURATION","false","false","true","true","true","int","400","","","\android\widget\AbsListView.java"
"android.widget.RecycleBin.mRecyclerListener","false","false","true","false","false","RecyclerListener","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mTouchSlop","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.SavedState.position","false","false","false","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mTranscriptMode","false","false","true","false","false","int","","","/**
 * This view is in transcript mode -- it shows the bottom of the list when the data
 * changes
 */
","\android\widget\AbsListView.java"
"android.widget.RecycleBin.mCurrentScrap","false","false","true","false","false","ArrayList<View>","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mVelocityTracker","false","false","true","false","false","VelocityTracker","","","/**
 * Determines speed during touch scrolling
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mIsChildViewEnabled","false","false","true","false","false","boolean","","","/**
 * The select child's view (from the adapter's getView) is enabled.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.recycledHeaderFooter","false","false","false","false","false","boolean","","@ViewDebug.ExportedProperty","/**
 * When this boolean is set, the view has been added to the AbsListView
 * at least once. It is used to know whether headers/footers have already
 * been added to the list view and whether they should be treated as
 * recycled views or not.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mWidthMeasureSpec","false","false","false","false","false","int","0","","/**
 * Subclasses must retain their measure spec from onMeasure() into this member
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mSelectionLeftPadding","false","false","false","false","false","int","0","","/**
 * The selection's left padding
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.LAYOUT_FORCE_BOTTOM","false","false","false","true","true","int","3","","/**
 * Show the last item
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.viewType","false","false","false","false","false","int","","@ViewDebug.ExportedProperty(mapping = { @ViewDebug.IntToString(from = ITEM_VIEW_TYPE_IGNORE, to = ""ITEM_VIEW_TYPE_IGNORE""), @ViewDebug.IntToString(from = ITEM_VIEW_TYPE_HEADER_OR_FOOTER, to = ""ITEM_VIEW_TYPE_HEADER_OR_FOOTER"") })","/**
 * View type for this view, as returned by
 * {@link android.widget.Adapter#getItemViewType(int) }
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mChild","false","false","false","false","false","View","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.PROFILE_SCROLLING","false","false","true","true","true","boolean","false","","","\android\widget\AbsListView.java"
"android.widget.PositionScroller.MOVE_DOWN_BOUND","false","false","true","true","true","int","3","","","\android\widget\AbsListView.java"
"android.widget.LayoutParams.recycledHeaderFooter","false","false","false","false","false","boolean","","@ViewDebug.ExportedProperty","/**
 * When this boolean is set, the view has been added to the AbsListView
 * at least once. It is used to know whether headers/footers have already
 * been added to the list view and whether they should be treated as
 * recycled views or not.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMotionPosition","false","false","false","false","false","int","","","/**
 * The position of the view that received the down motion event
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mActivePointerId","false","false","true","false","false","int","INVALID_POINTER","","/**
 * ID of the active pointer. This is used to retain consistency during
 * drags/flings if multiple pointers are used.
 */
","\android\widget\AbsListView.java"
"android.widget.PerformClick.mChild","false","false","false","false","false","View","","","","\android\widget\AbsListView.java"
"android.widget.PositionScroller.mExtraScroll","false","false","true","false","true","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mPositionScroller","false","false","true","false","false","PositionScroller","","","/**
 * Handles scrolling between positions within the list.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mScroller","false","false","true","false","true","Scroller","","","/**
 * Tracks the decay of a fling scroll
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mResurrectToPosition","false","false","false","false","false","int","INVALID_POSITION","","/**
 * The position to resurrect the selected position to.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.LAYOUT_SPECIFIC","false","false","false","true","true","int","4","","/**
 * Make a mSelectedItem appear in a specific location and build the rest of
 * the views from there. The top is specified by mSpecificTop.
 */
","\android\widget\AbsListView.java"
"android.widget.PositionScroller.mMode","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mScrollDuration","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_UNKNOWN","false","false","true","true","true","int","-1","","/**
 * Used to request a layout when we changed touch mode
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.SCROLL_STATE_TOUCH_SCROLL","true","false","false","true","false","int","1","","/**
 * The user is scrolling using touch, and their finger is still on the screen
 */
","\android\widget\AbsListView.java"
"android.widget.PositionScroller.mTargetPos","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.MOVE_DOWN_POS","false","false","true","true","true","int","1","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.firstId","false","false","false","false","false","long","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMode","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mScrollingCacheEnabled","false","false","false","false","false","boolean","","","/**
 * When set to true, the list automatically discards the children's
 * bitmap cache after scrolling.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.TRANSCRIPT_MODE_ALWAYS_SCROLL","true","false","false","true","true","int","2","","/**
 * The list will automatically scroll to the bottom, no matter what items
 * are currently visible.
 *
 * @see #setTranscriptMode(int)
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.SCROLL_STATE_FLING","true","false","false","true","false","int","2","","/**
 * The user had previously been scrolling using touch and had performed a fling. The
 * animation is now coasting to a stop
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.MOVE_DOWN_BOUND","false","false","true","true","true","int","3","","","\android\widget\AbsListView.java"
"android.widget.WindowRunnnable.mOriginalAttachCount","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mFastScroller","false","false","true","false","false","FastScroller","","","/**
 * Helper object that renders and controls the fast scroll thumb.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mLastTouchMode","false","false","true","false","false","int","TOUCH_MODE_UNKNOWN","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.SCROLL_STATE_IDLE","true","false","false","true","false","int","0","","/**
 * The view is not scrolling. Note navigating the list using the trackball counts as
 * being in the idle state since these transitions are not animated.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.TRANSCRIPT_MODE_DISABLED","true","false","false","true","true","int","0","","/**
 * Disables the transcript mode.
 *
 * @see #setTranscriptMode(int)
 */
","\android\widget\AbsListView.java"
"android.widget.SavedState.filter","false","false","false","false","false","String","","","","\android\widget\AbsListView.java"
"android.widget.FlingRunnable.mLastFlingY","false","false","true","false","false","int","","","/**
 * Y value reported by mScroller on the previous fling
 */
","\android\widget\AbsListView.java"
"android.widget.OnScrollListener.SCROLL_STATE_FLING","true","false","false","true","false","int","2","","/**
 * The user had previously been scrolling using touch and had performed a fling. The
 * animation is now coasting to a stop
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mPendingCheckForKeyLongPress","false","false","true","false","false","CheckForKeyLongPress","","","/**
 * The last CheckForKeyLongPress runnable we posted, if any
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mAdapter","false","false","false","false","false","ListAdapter","","","/**
 * The adapter containing the data to be displayed by this view
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mDefInputConnection","false","false","true","false","false","InputConnection","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.LAYOUT_NORMAL","false","false","false","true","true","int","0","","/**
 * Regular layout - usually an unsolicited layout from the view system
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mListPadding","false","false","false","false","false","Rect","new Rect()","","/**
 * This view's padding
 */
","\android\widget\AbsListView.java"
"android.widget.RecycleBin.mScrapViews","false","false","true","false","false","ArrayList<View>","","","/**
 * Unsorted views that can be used by the adapter as a convert view.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.MOVE_UP_POS","false","false","true","true","true","int","2","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mSelectorRect","false","false","false","false","false","Rect","new Rect()","","/**
 * Defines the selector's location and dimension at drawing time
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMotionViewOriginalTop","false","false","false","false","false","int","","","/**
 * The offset to the top of the mMotionPosition view when the down motion event was received
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mSelectionTopPadding","false","false","false","false","false","int","0","","/**
 * The selection's top padding
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mLastSeenPos","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mOnScrollListener","false","false","true","false","false","OnScrollListener","","","/**
 * Optional callback to notify client when scroll position has changed
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mFastScrollEnabled","false","false","false","false","false","boolean","","","/**
 * Whether or not to enable the fast scroll feature on this list
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mScrollProfilingStarted","false","false","true","false","false","boolean","false","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mFlingProfilingStarted","false","false","true","false","false","boolean","false","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mLastY","false","false","false","false","false","int","","","/**
 * Y value from on the previous motion event (if any)
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mLastFlingY","false","false","true","false","false","int","","","/**
 * Y value reported by mScroller on the previous fling
 */
","\android\widget\AbsListView.java"
"android.widget.PerformClick.mClickMotionPosition","false","false","false","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mViewTypeCount","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.SavedState.height","false","false","false","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.LAYOUT_SET_SELECTION","false","false","false","true","true","int","2","","/**
 * Force the selected item to be on somewhere on the screen
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mExtraScroll","false","false","true","false","true","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.SCROLL_DURATION","false","false","true","true","true","int","400","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mPopup","false","false","false","false","false","PopupWindow","","","/**
 * Keeps track of our accessory window
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mFlingRunnable","false","false","true","false","false","FlingRunnable","","","/**
 * Handles one frame of a fling
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mStackFromBottom","false","false","false","false","false","boolean","","","/**
 * Indicates whether the list is stacked from the bottom edge or
 * the top edge.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mTextFilterEnabled","false","false","true","false","false","boolean","","","/**
 * Indicates that this view supports filtering
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mOriginalAttachCount","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.PROFILE_FLINGING","false","false","true","true","true","boolean","false","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mClickMotionPosition","false","false","false","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mActiveViews","false","false","true","false","false","View","new View[0]","","/**
 * Views that were on screen at the start of layout. This array is populated at the start of
 * layout, and at the end of layout all view in mActiveViews are moved to mScrapViews.
 * Views in mActiveViews represent a contiguous range of Views, with position of the first
 * view store in mFirstActivePosition.
 */
","\android\widget\AbsListView.java"
"android.widget.SavedState.viewTop","false","false","false","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mRecycler","false","false","false","false","true","RecycleBin","new RecycleBin()","","/**
 * The data set used to store unused views that should be reused during the next layout
 * to avoid creating new ones
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_OFF","false","false","true","true","true","int","1","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mCachingStarted","false","false","false","false","false","boolean","","","/**
 * When the view is scrolling, this flag is set to true to indicate subclasses that
 * the drawing cache was enabled on the children
 */
","\android\widget\AbsListView.java"
"android.widget.PositionScroller.MOVE_DOWN_POS","false","false","true","true","true","int","1","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mContextMenuInfo","false","false","true","false","false","ContextMenuInfo","null","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_FLING","false","false","false","true","true","int","4","","/**
 * Indicates the view is in the process of being flung
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mTextFilter","false","false","false","false","false","EditText","","","/**
 * Used with type filter window
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.LAYOUT_SYNC","false","false","false","true","true","int","5","","/**
 * Layout to sync as a result of a data change. Restore mSyncPosition to have its top
 * at mSpecificTop
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.height","false","false","false","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mFirstActivePosition","false","false","true","false","false","int","","","/**
 * The position of the first view stored in mActiveViews.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mScrapViews","false","false","true","false","false","ArrayList<View>","","","/**
 * Unsorted views that can be used by the adapter as a convert view.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mIsScrap","false","false","false","false","true","boolean","new boolean[1]","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_DONE_WAITING","false","false","false","true","true","int","2","","/**
 * Indicates we have waited for everything we can wait for, but the user's finger is still down
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mPendingCheckForLongPress","false","false","true","false","false","CheckForLongPress","","","/**
 * The last CheckForLongPress runnable we posted, if any
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mLayoutMode","false","false","false","false","false","int","LAYOUT_NORMAL","","/**
 * Controls how the next layout will happen
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMinimumVelocity","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_SCROLL","false","false","false","true","true","int","3","","/**
 * Indicates the touch gesture is a scroll
 */
","\android\widget\AbsListView.java"
"android.widget.PositionScroller.mScrollDuration","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.LayoutParams.forceAdd","false","false","false","false","false","boolean","","@ViewDebug.ExportedProperty","/**
 * When an AbsListView is measured with an AT_MOST measure spec, it needs
 * to obtain children views to measure itself. When doing so, the children
 * are not attached to the window, but put in the recycler which assumes
 * they've been attached before. Setting this flag will force the reused
 * view to be attached to the window rather than just attached to the
 * parent.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mCurrentScrap","false","false","true","false","false","ArrayList<View>","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mTouchMode","false","false","false","false","false","int","TOUCH_MODE_REST","","/**
 * One of TOUCH_MODE_REST, TOUCH_MODE_DOWN, TOUCH_MODE_TAP, TOUCH_MODE_SCROLL, or
 * TOUCH_MODE_DONE_WAITING
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mGlobalLayoutListenerAddedFilter","false","false","true","false","false","boolean","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.LAYOUT_FORCE_TOP","false","false","false","true","true","int","1","","/**
 * Show the first item
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mRecyclerListener","false","false","true","false","false","RecyclerListener","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mLastScrollState","false","false","true","false","false","int","OnScrollListener.SCROLL_STATE_IDLE","","/**
 * The last scroll state reported to clients through {@link OnScrollListener}.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mBoundPos","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMotionX","false","false","false","false","false","int","","","/**
 * The X value associated with the the down motion event
 */
","\android\widget\AbsListView.java"
"android.widget.SavedState.firstId","false","false","false","false","false","long","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMotionY","false","false","false","false","false","int","","","/**
 * The Y value associated with the the down motion event
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mScrollUp","false","false","false","false","false","View","","","/**
 * The top scroll indicator
 */
","\android\widget\AbsListView.java"
"android.widget.PositionScroller.mLastSeenPos","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mPublicInputConnection","false","false","true","false","false","InputConnectionWrapper","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mSelectedTop","false","false","false","false","false","int","0","","/**
 * The offset in pixels form the top of the AdapterView to the top
 * of the currently selected view. Used to save and restore state.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mScrollDown","false","false","false","false","false","View","","","/**
 * The down scroll indicator
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.mClearScrollingCache","false","false","true","false","false","Runnable","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.LAYOUT_MOVE_SELECTION","false","false","false","true","true","int","6","","/**
 * Layout as a result of using the navigation keys
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.forceAdd","false","false","false","false","false","boolean","","@ViewDebug.ExportedProperty","/**
 * When an AbsListView is measured with an AT_MOST measure spec, it needs
 * to obtain children views to measure itself. When doing so, the children
 * are not attached to the window, but put in the recycler which assumes
 * they've been attached before. Setting this flag will force the reused
 * view to be attached to the window rather than just attached to the
 * parent.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.INVALID_POINTER","false","false","true","true","true","int","-1","","/**
 * Sentinel value for no current active pointer.
 * Used by {@link #mActivePointerId}.
 */
","\android\widget\AbsListView.java"
"android.widget.RecycleBin.mViewTypeCount","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mMotionViewNewTop","false","false","false","false","false","int","","","/**
 * The desired offset to the top of the mMotionPosition view after a scroll
 */
","\android\widget\AbsListView.java"
"android.widget.PositionScroller.mBoundPos","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mDensityScale","false","false","true","false","false","float","","","","\android\widget\AbsListView.java"
"android.widget.OnScrollListener.SCROLL_STATE_IDLE","true","false","false","true","false","int","0","","/**
 * The view is not scrolling. Note navigating the list using the trackball counts as
 * being in the idle state since these transitions are not animated.
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.viewTop","false","false","false","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_ON","false","false","true","true","true","int","0","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mPendingCheckForTap","false","false","true","false","false","Runnable","","","/**
 * The last CheckForTap runnable we posted, if any
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.position","false","false","false","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mPerformClick","false","false","true","false","false","AbsListView.PerformClick","","","/**
 * Acts upon click
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.TOUCH_MODE_REST","false","false","false","true","true","int","-1","","/**
 * Indicates that we are not in the middle of a touch gesture
 */
","\android\widget\AbsListView.java"
"android.widget.AbsListView.filter","false","false","false","false","false","String","","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.mTargetPos","false","false","true","false","false","int","","","","\android\widget\AbsListView.java"
"android.widget.PositionScroller.MOVE_UP_BOUND","false","false","true","true","true","int","4","","","\android\widget\AbsListView.java"
"android.widget.AbsListView.MOVE_UP_BOUND","false","false","true","true","true","int","4","","","\android\widget\AbsListView.java"
"android.widget.RecycleBin.mActiveViews","false","false","true","false","false","View","new View[0]","","/**
 * Views that were on screen at the start of layout. This array is populated at the start of
 * layout, and at the end of layout all view in mActiveViews are moved to mScrapViews.
 * Views in mActiveViews represent a contiguous range of Views, with position of the first
 * view store in mFirstActivePosition.
 */
","\android\widget\AbsListView.java"
"android.app.ActivityResult.mResultCode","false","false","true","false","true","int","","","","\android\app\Instrumentation.java"
"android.app.ActivityWaiter.activity","true","false","false","false","false","Activity","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.returnValue","false","false","false","false","false","boolean","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mResultData","false","false","true","false","true","Intent","","","","\android\app\Instrumentation.java"
"android.app.ActivityMonitor.mResult","false","false","true","false","true","ActivityResult","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mComplete","false","false","true","false","false","boolean","","","","\android\app\Instrumentation.java"
"android.app.ContextMenuRunnable.returnValue","false","false","false","false","false","boolean","","","","\android\app\Instrumentation.java"
"android.app.ActivityWaiter.intent","true","false","false","false","true","Intent","","","","\android\app\Instrumentation.java"
"android.app.Idler.mIdle","false","false","true","false","false","boolean","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mComponent","false","false","true","false","false","ComponentName","","","","\android\app\Instrumentation.java"
"android.app.MenuRunnable.flags","false","false","true","false","true","int","","","","\android\app\Instrumentation.java"
"android.app.ActivityMonitor.mBlock","false","false","true","false","true","boolean","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mActivityMonitors","false","false","true","false","false","List<ActivityMonitor>","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.flags","false","false","true","false","true","int","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mAutomaticPerformanceSnapshots","false","false","true","false","false","boolean","false","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mSync","false","false","true","false","true","Object","new Object()","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mWaitingActivities","false","false","true","false","false","List<ActivityWaiter>","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mPerformanceCollector","false","false","true","false","false","PerformanceCollector","","","","\android\app\Instrumentation.java"
"android.app.ContextMenuRunnable.identifier","false","false","true","false","true","int","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.REPORT_KEY_STREAMRESULT","true","false","false","true","true","String","""stream""","","/**
 * If included in the status or final bundle sent to an IInstrumentationWatcher, this key
 * identifies a string which can simply be printed to the output stream.  Using these streams
 * provides a ""pretty printer"" version of the status & final packets.  Any bundles including
 * this key should also include the complete set of raw key/value pairs, so that the
 * instrumentation can also be launched, and results collected, by an automated system.
 */
","\android\app\Instrumentation.java"
"android.app.Instrumentation.mLastActivity","false","false","false","false","false","Activity","null","","/*package*/
","\android\app\Instrumentation.java"
"android.app.Instrumentation.mClass","false","false","true","false","true","String","","","","\android\app\Instrumentation.java"
"android.app.MenuRunnable.returnValue","false","false","false","false","false","boolean","","","","\android\app\Instrumentation.java"
"android.app.ActivityMonitor.mWhich","false","false","true","false","true","IntentFilter","","","","\android\app\Instrumentation.java"
"android.app.ActivityMonitor.mHits","false","false","false","false","false","int","0","","/*package*/
","\android\app\Instrumentation.java"
"android.app.Instrumentation.mThread","false","false","true","false","false","ActivityThread","null","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mBlock","false","false","true","false","true","boolean","","","","\android\app\Instrumentation.java"
"android.app.ActivityGoing.mWaiter","false","false","true","false","true","ActivityWaiter","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mHits","false","false","false","false","false","int","0","","/*package*/
","\android\app\Instrumentation.java"
"android.app.MenuRunnable.identifier","false","false","true","false","true","int","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.activity","true","false","false","false","false","Activity","","","","\android\app\Instrumentation.java"
"android.app.SyncRunnable.mTarget","false","false","true","false","true","Runnable","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.identifier","false","false","true","false","true","int","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mIdle","false","false","true","false","false","boolean","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mWaiter","false","false","true","false","true","ActivityWaiter","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mResultCode","false","false","true","false","true","int","","","","\android\app\Instrumentation.java"
"android.app.ActivityResult.mResultData","false","false","true","false","true","Intent","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mMessageQueue","false","false","true","false","false","MessageQueue","null","","","\android\app\Instrumentation.java"
"android.app.ActivityMonitor.mLastActivity","false","false","false","false","false","Activity","null","","/*package*/
","\android\app\Instrumentation.java"
"android.app.Instrumentation.mPerfMetrics","false","false","true","false","false","Bundle","new Bundle()","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mResult","false","false","true","false","true","ActivityResult","","","","\android\app\Instrumentation.java"
"android.app.Idler.mCallback","false","false","true","false","true","Runnable","","","","\android\app\Instrumentation.java"
"android.app.MenuRunnable.activity","false","false","true","false","true","Activity","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mInstrContext","false","false","true","false","false","Context","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mCallback","false","false","true","false","true","Runnable","","","","\android\app\Instrumentation.java"
"android.app.ActivityMonitor.mClass","false","false","true","false","true","String","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mWhich","false","false","true","false","true","IntentFilter","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mAppContext","false","false","true","false","false","Context","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mTarget","false","false","true","false","true","Runnable","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.REPORT_KEY_IDENTIFIER","true","false","false","true","true","String","""id""","","/**
 * If included in the status or final bundle sent to an IInstrumentationWatcher, this key
 * identifies the class that is writing the report.  This can be used to provide more structured
 * logging or reporting capabilities in the IInstrumentationWatcher.
 */
","\android\app\Instrumentation.java"
"android.app.Instrumentation.mWatcher","false","false","true","false","false","IInstrumentationWatcher","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.TAG","false","false","true","true","true","String","""Instrumentation""","","","\android\app\Instrumentation.java"
"android.app.ContextMenuRunnable.flags","false","false","true","false","true","int","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.intent","true","false","false","false","true","Intent","","","","\android\app\Instrumentation.java"
"android.app.Instrumentation.mRunner","false","false","true","false","false","Thread","","","","\android\app\Instrumentation.java"
"android.app.ContextMenuRunnable.activity","false","false","true","false","true","Activity","","","","\android\app\Instrumentation.java"
"android.app.SyncRunnable.mComplete","false","false","true","false","false","boolean","","","","\android\app\Instrumentation.java"
"com.google.android.mms.pdu.MultimediaMessagePdu.mMessageBody","false","false","true","false","false","PduBody","","","/**
 * The body.
 */
","\com\google\android\mms\pdu\MultimediaMessagePdu.java"
"android.webkit.PluginFullScreenHolder.mContentView","false","false","true","false","false","View","","","","\android\webkit\PluginFullScreenHolder.java"
"android.webkit.PluginFullScreenHolder.mNpp","false","false","true","false","true","int","","","","\android\webkit\PluginFullScreenHolder.java"
"android.webkit.PluginFullScreenHolder.mWebView","false","false","true","false","true","WebView","","","","\android\webkit\PluginFullScreenHolder.java"
"android.view.Window.mWindowStyle","false","false","true","false","false","TypedArray","","","","\android\view\Window.java"
"android.view.Window.PROGRESS_INDETERMINATE_OFF","true","false","false","true","true","int","-4","","/**
 * Flag for setting the progress bar's indeterminate mode off
 */
","\android\view\Window.java"
"android.view.Window.FEATURE_RIGHT_ICON","true","false","false","true","true","int","4","","/**
 * Flag for having an icon on the right side of the title bar
 */
","\android\view\Window.java"
"android.view.Window.FEATURE_INDETERMINATE_PROGRESS","true","false","false","true","true","int","5","","/**
 * Flag for indeterminate progress
 */
","\android\view\Window.java"
"android.view.Window.FEATURE_CONTEXT_MENU","true","false","false","true","true","int","6","","/**
 * Flag for the context menu.  This is enabled by default.
 */
","\android\view\Window.java"
"android.view.LocalWindowManager.mWindowManager","false","false","true","false","true","WindowManager","","","","\android\view\Window.java"
"android.view.Window.mContainer","false","false","true","false","false","Window","","","","\android\view\Window.java"
"android.view.Window.mContext","false","false","true","false","true","Context","","","","\android\view\Window.java"
"android.view.Window.FEATURE_NO_TITLE","true","false","false","true","true","int","1","","/**
 * Flag for the ""no title"" feature, turning off the title at the top
 * of the screen.
 */
","\android\view\Window.java"
"android.view.Window.ID_ANDROID_CONTENT","true","false","false","true","true","int","com.android.internal.R.id.content","","/**
 * The ID that the main layout in the XML layout file should have.
 */
","\android\view\Window.java"
"android.view.Window.DEFAULT_FEATURES","false","true","false","true","true","int","(1 << FEATURE_OPTIONS_PANEL) | (1 << FEATURE_CONTEXT_MENU)","@SuppressWarnings({ ""PointlessBitwiseExpression"" })","/**
 * The default features enabled
 */
","\android\view\Window.java"
"android.view.Window.mAppName","false","false","true","false","false","String","","","","\android\view\Window.java"
"android.view.Window.FEATURE_CUSTOM_TITLE","true","false","false","true","true","int","7","","/**
 * Flag for custom title. You cannot combine this feature with other title features.
 */
","\android\view\Window.java"
"android.view.Window.mIsActive","false","false","true","false","false","boolean","false","","","\android\view\Window.java"
"android.view.Window.FEATURE_OPTIONS_PANEL","true","false","false","true","true","int","0","","/**
 * Flag for the ""options panel"" feature.  This is enabled by default.
 */
","\android\view\Window.java"
"android.view.Window.PROGRESS_VISIBILITY_ON","true","false","false","true","true","int","-1","","/**
 * Flag for setting the progress bar's visibility to VISIBLE
 */
","\android\view\Window.java"
"android.view.Window.PROGRESS_VISIBILITY_OFF","true","false","false","true","true","int","-2","","/**
 * Flag for setting the progress bar's visibility to GONE
 */
","\android\view\Window.java"
"android.view.Window.mDefaultDisplay","false","false","true","false","true","Display","","","","\android\view\Window.java"
"android.view.Window.mFeatures","false","false","true","false","false","int","DEFAULT_FEATURES","","","\android\view\Window.java"
"android.view.Window.mWindowManager","false","false","true","false","true","WindowManager","","","","\android\view\Window.java"
"android.view.Window.PROGRESS_START","true","false","false","true","true","int","0","","/**
 * Starting value for the (primary) progress
 */
","\android\view\Window.java"
"android.view.Window.PROGRESS_INDETERMINATE_ON","true","false","false","true","true","int","-3","","/**
 * Flag for setting the progress bar's indeterminate mode on
 */
","\android\view\Window.java"
"android.view.Window.PROGRESS_SECONDARY_END","true","false","false","true","true","int","30000","","/**
 * Highest possible value for the secondary progress
 */
","\android\view\Window.java"
"android.view.Window.mHasSoftInputMode","false","false","true","false","false","boolean","false","","","\android\view\Window.java"
"android.view.Window.mDefaultWindowFormat","false","false","true","false","false","int","PixelFormat.OPAQUE","","","\android\view\Window.java"
"android.view.Window.PROGRESS_SECONDARY_START","true","false","false","true","true","int","20000","","/**
 * Lowest possible value for the secondary progress
 */
","\android\view\Window.java"
"android.view.Window.mCallback","false","false","true","false","false","Callback","","","","\android\view\Window.java"
"android.view.Window.FEATURE_OPENGL","true","false","false","true","true","int","8","","/**
 * Flag for asking for an OpenGL enabled window.
 * All 2D graphics will be handled by OpenGL ES.
 * @hide
 */
","\android\view\Window.java"
"android.view.LocalWindowManager.mDefaultDisplay","false","false","true","false","true","Display","","","","\android\view\Window.java"
"android.view.Window.mForcedWindowFlags","false","false","true","false","false","int","0","","","\android\view\Window.java"
"android.view.Window.mHaveWindowFormat","false","false","true","false","false","boolean","false","","","\android\view\Window.java"
"android.view.Window.FEATURE_LEFT_ICON","true","false","false","true","true","int","3","","/**
 * Flag for having an icon on the left side of the title bar
 */
","\android\view\Window.java"
"android.view.Window.mLocalFeatures","false","false","true","false","false","int","DEFAULT_FEATURES","","","\android\view\Window.java"
"android.view.Window.FEATURE_PROGRESS","true","false","false","true","true","int","2","","/**
 * Flag for the progress indicator feature
 */
","\android\view\Window.java"
"android.view.Window.mHasChildren","false","false","true","false","false","boolean","false","","","\android\view\Window.java"
"android.view.Window.PROGRESS_END","true","false","false","true","true","int","10000","","/**
 * Ending value for the (primary) progress
 */
","\android\view\Window.java"
"android.view.Window.mActiveChild","false","false","true","false","false","Window","","","","\android\view\Window.java"
"android.view.Window.mAppToken","false","false","true","false","false","IBinder","","","","\android\view\Window.java"
"android.view.Window.mWindowAttributes","false","false","true","false","true","WindowManager.LayoutParams","new WindowManager.LayoutParams()","","// The current window attributes.
","\android\view\Window.java"
"android.widget.FlingRunnable.mScroller","false","false","true","false","false","Scroller","","","/**
 * Tracks the decay of a fling scroll
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mLeftMost","false","false","true","false","false","int","","","/**
 * Left most edge of a child seen so far during layout.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mFlingRunnable","false","false","true","false","false","FlingRunnable","new FlingRunnable()","","/**
 * Executes the delta scrolls from a fling or scroll movement.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mLastFlingX","false","false","true","false","false","int","","","/**
 * X value reported by mScroller on the previous fling
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mDownTouchView","false","false","true","false","false","View","","","/**
 * The view of the item that received the user's down touch.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mShouldStopFling","false","false","true","false","false","boolean","","","/**
 * When fling runnable runs, it resets this to false. Any method along the
 * path until the end of its run() can set this to true to abort any
 * remaining fling. For example, if we've reached either the leftmost or
 * rightmost item, we will set this to true.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mSuppressSelectionChanged","false","false","true","false","false","boolean","","","/**
 * If true, do not callback to item selected listener.
 */
","\android\widget\Gallery.java"
"android.widget.FlingRunnable.mLastFlingX","false","false","true","false","false","int","","","/**
 * X value reported by mScroller on the previous fling
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mSpacing","false","false","true","false","false","int","0","","/**
 * Horizontal spacing between items.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mRightMost","false","false","true","false","false","int","","","/**
 * Right most edge of a child seen so far during layout.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.SCROLL_TO_FLING_UNCERTAINTY_TIMEOUT","false","false","true","true","true","int","250","","/**
 * Duration in milliseconds from the start of a scroll during which we're
 * unsure whether the user is scrolling or flinging.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mScroller","false","false","true","false","false","Scroller","","","/**
 * Tracks the decay of a fling scroll
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mContextMenuInfo","false","false","true","false","false","AdapterContextMenuInfo","","","","\android\widget\Gallery.java"
"android.widget.Gallery.mReceivedInvokeKeyDown","false","false","true","false","false","boolean","","","/**
 * If true, we have received the ""invoke"" (center or enter buttons) key
 * down. This is checked before we action on the ""invoke"" key up, and is
 * subsequently cleared.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mSelectedChild","false","false","true","false","false","View","","","/**
 * The currently selected item's child.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mUnselectedAlpha","false","false","true","false","false","float","","","/**
 * The alpha of items that are not selected.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mAnimationDuration","false","false","true","false","false","int","400","","/**
 * How long the transition animation should run when a child view changes
 * position, measured in milliseconds.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mShouldCallbackOnUnselectedItemClick","false","false","true","false","false","boolean","true","","/**
 * Whether to callback when an item that is not selected is clicked.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mIsFirstScroll","false","false","true","false","false","boolean","","","/**
 * If true, this onScroll is the first for this user's drag (remember, a
 * drag sends many onScrolls).
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mGestureDetector","false","false","true","false","false","GestureDetector","","","/**
 * Helper for detecting touch gestures.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mGravity","false","false","true","false","false","int","","","","\android\widget\Gallery.java"
"android.widget.Gallery.mDownTouchPosition","false","false","true","false","false","int","","","/**
 * The position of the item that received the user's down touch.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mDisableSuppressSelectionChangedRunnable","false","false","true","false","false","Runnable","new Runnable() {

    public void run() {
        mSuppressSelectionChanged = false;
        selectionChanged();
    }
}","","/**
 * Sets mSuppressSelectionChanged = false. This is used to set it to false
 * in the future. It will also trigger a selection changed.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.mShouldCallbackDuringFling","false","false","true","false","false","boolean","true","","/**
 * Whether to continuously callback on the item selected listener during a
 * fling.
 */
","\android\widget\Gallery.java"
"android.widget.Gallery.TAG","false","false","true","true","true","String","""Gallery""","","","\android\widget\Gallery.java"
"android.widget.Gallery.localLOGV","false","false","true","true","true","boolean","false","","","\android\widget\Gallery.java"
"com.android.internal.view.IInputConnectionWrapper.DO_GET_EXTRACTED_TEXT","false","false","true","true","true","int","40","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_END_BATCH_EDIT","false","false","true","true","true","int","95","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.SomeArgs.arg1","false","false","false","false","false","Object","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.SomeArgs.arg2","false","false","false","false","false","Object","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_PERFORM_PRIVATE_COMMAND","false","false","true","true","true","int","120","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_GET_TEXT_AFTER_CURSOR","false","false","true","true","true","int","10","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.mInputConnection","false","false","true","false","false","WeakReference<InputConnection>","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.SomeArgs.callback","false","false","false","false","false","IInputContextCallback","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_SEND_KEY_EVENT","false","false","true","true","true","int","70","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.seq","false","false","false","false","false","int","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_COMMIT_TEXT","false","false","true","true","true","int","50","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_COMMIT_COMPLETION","false","false","true","true","true","int","55","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_DELETE_SURROUNDING_TEXT","false","false","true","true","true","int","80","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.arg2","false","false","false","false","false","Object","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.arg1","false","false","false","false","false","Object","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_PERFORM_CONTEXT_MENU_ACTION","false","false","true","true","true","int","59","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.TAG","false","false","false","true","true","String","""IInputConnectionWrapper""","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_SET_SELECTION","false","false","true","true","true","int","57","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_REPORT_FULLSCREEN_MODE","false","false","true","true","true","int","100","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_CLEAR_META_KEY_STATES","false","false","true","true","true","int","130","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.mH","false","false","true","false","false","Handler","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_SET_COMPOSING_TEXT","false","false","true","true","true","int","60","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_FINISH_COMPOSING_TEXT","false","false","true","true","true","int","65","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_BEGIN_BATCH_EDIT","false","false","true","true","true","int","90","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_PERFORM_EDITOR_ACTION","false","false","true","true","true","int","58","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.SomeArgs.seq","false","false","false","false","false","int","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_GET_CURSOR_CAPS_MODE","false","false","true","true","true","int","30","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.mMainLooper","false","false","true","false","false","Looper","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.callback","false","false","false","false","false","IInputContextCallback","","","","\com\android\internal\view\IInputConnectionWrapper.java"
"com.android.internal.view.IInputConnectionWrapper.DO_GET_TEXT_BEFORE_CURSOR","false","false","true","true","true","int","20","","","\com\android\internal\view\IInputConnectionWrapper.java"
"android.view.WindowManagerPolicy.TRANSIT_ENTER","true","false","false","false","true","int","1 | TRANSIT_ENTER_MASK","","/**
 * Window has been added to the screen.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_ACTIVITY_CLOSE","true","false","false","false","true","int","7 | TRANSIT_EXIT_MASK","","/**
 * The window in the top-most activity is being closed to reveal the
 * previous activity in the same task.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_WALLPAPER_INTRA_CLOSE","true","false","false","false","true","int","15 | TRANSIT_EXIT_MASK","","/**
 * The window in the top-most activity is being closed to reveal the
 * previous activity, and both are on top of he wallpaper.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_HIDE","true","false","false","false","true","int","4 | TRANSIT_EXIT_MASK","","/**
 * Window has been made invisible.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_EXIT_MASK","true","false","false","false","true","int","0x2000","","/**
 * Bit mask that is set for all exit transitions.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_EXIT","true","false","false","false","true","int","2 | TRANSIT_EXIT_MASK","","/**
 * Window has been removed from the screen.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.ACTION_GO_TO_SLEEP","true","false","false","true","true","int","0x00000004","","/**
 * This key event should put the device to sleep (and engage keyguard if necessary)
 * To be returned from {@link #interceptKeyTq}.  Do not return this and
 * {@link #ACTION_POKE_USER_ACTIVITY} or {@link #ACTION_PASS_TO_USER}.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_WALLPAPER_INTRA_OPEN","true","false","false","false","true","int","14 | TRANSIT_ENTER_MASK","","/**
 * A window in a new activity is being opened on top of an existing one,
 * and both are on top of the wallpaper.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_LAUNCHER","true","false","false","true","true","int","0x00000080","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FINISH_LAYOUT_REDO_LAYOUT","false","false","false","true","true","int","0x0001","","/**
 * Layout state may have changed (so another layout will be performed)
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_UNSET","true","false","false","false","true","int","-1","","/**
 * Not set up for a transition.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.OFF_BECAUSE_OF_TIMEOUT","true","false","false","false","true","int","3","","/**
 * Screen turned off because of timeout
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.OFF_BECAUSE_OF_PROX_SENSOR","true","false","false","false","true","int","4","","/**
 * Screen turned off because of proximity sensor
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_TASK_OPEN","true","false","false","false","true","int","8 | TRANSIT_ENTER_MASK","","/**
 * A window in a new task is being opened on top of an existing one
 * in another activity's task.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_ALT_GR","true","false","false","true","true","int","0x00000020","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_TASK_TO_FRONT","true","false","false","false","true","int","10 | TRANSIT_ENTER_MASK","","/**
 * A window in an existing task is being displayed on top of an existing one
 * in another activity's task.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_TASK_CLOSE","true","false","false","false","true","int","9 | TRANSIT_EXIT_MASK","","/**
 * A window in the top-most activity is being closed to reveal the
 * previous activity in a different task.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.ACTION_PASS_TO_USER","true","false","false","true","true","int","0x00000001","","/**
 * Pass this event to the user / app.  To be returned from {@link #interceptKeyTq}.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_PREVIEW_DONE","true","false","false","false","true","int","5","","/**
 * The ""application starting"" preview window is no longer needed, and will
 * animate away to show the real window.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_WAKE_DROPPED","true","false","false","true","true","int","0x00000002","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FINISH_LAYOUT_REDO_CONFIG","false","false","false","true","true","int","0x0002","","/**
 * Configuration state may have changed
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_TASK_TO_BACK","true","false","false","false","true","int","11 | TRANSIT_EXIT_MASK","","/**
 * A window in an existing task is being put below all other tasks.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_NONE","true","false","false","false","true","int","0","","/**
 * No animation for transition.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_SHIFT","true","false","false","true","true","int","0x00000004","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_CAPS_LOCK","true","false","false","true","true","int","0x00000008","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FINISH_LAYOUT_REDO_ANIM","false","false","false","true","true","int","0x0008","","/**
 * Need to recompute animations
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_ACTIVITY_OPEN","true","false","false","false","true","int","6 | TRANSIT_ENTER_MASK","","/**
 * A window in a new activity is being opened on top of an existing one
 * in the same task.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.USE_LAST_ROTATION","true","false","false","false","true","int","-1000","","/**
 * Magic constant to {@link IWindowManager#setRotation} to not actually
 * modify the rotation.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_SHOW","true","false","false","false","true","int","3 | TRANSIT_ENTER_MASK","","/**
 * Window has been made visible.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER","false","false","false","true","true","int","0x0004","","/**
 * Wallpaper may need to move
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_WOKE_HERE","true","false","false","true","true","int","0x10000000","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_ENTER_MASK","true","false","false","false","true","int","0x1000","","/**
 * Bit mask that is set for all enter transition.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_WALLPAPER_OPEN","true","false","false","false","true","int","13 | TRANSIT_ENTER_MASK","","/**
 * A window in a new activity that does have a wallpaper is being
 * opened on one that didn't, effectively opening the wallpaper.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.WATCH_POINTER","true","false","false","true","true","boolean","false","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.ACTION_POKE_USER_ACTIVITY","true","false","false","true","true","int","0x00000002","","/**
 * This key event should extend the user activity timeout and turn the lights on.
 * To be returned from {@link #interceptKeyTq}. Do not return this and
 * {@link #ACTION_GO_TO_SLEEP} or {@link #ACTION_PASS_TO_USER}.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_BRIGHT_HERE","true","false","false","true","true","int","0x20000000","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.OFF_BECAUSE_OF_USER","true","false","false","false","true","int","2","","/**
 * Screen turned off because of power button
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_MENU","true","false","false","true","true","int","0x00000040","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.OFF_BECAUSE_OF_ADMIN","true","false","false","false","true","int","1","","/**
 * Screen turned off because of a device admin
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.TRANSIT_WALLPAPER_CLOSE","true","false","false","false","true","int","12 | TRANSIT_EXIT_MASK","","/**
 * A window in a new activity that doesn't have a wallpaper is being
 * opened on top of one that does, effectively closing the wallpaper.
 */
","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_ALT","true","false","false","true","true","int","0x00000010","","","\android\view\WindowManagerPolicy.java"
"android.view.WindowManagerPolicy.FLAG_WAKE","true","false","false","true","true","int","0x00000001","","","\android\view\WindowManagerPolicy.java"
"android.database.sqlite.SQLiteClosable.mReferenceCount","false","false","true","false","false","int","1","","","\android\database\sqlite\SQLiteClosable.java"
"android.database.sqlite.SQLiteClosable.mLock","false","false","true","false","false","Object","new Object()","","","\android\database\sqlite\SQLiteClosable.java"
"android.content.Context.BIND_NOT_FOREGROUND","true","false","false","true","true","int","0x0004","","/**
 * Flag for {@link #bindService}: don't allow this binding to raise
 * the target service's process to the foreground scheduling priority.
 * It will still be raised to the at least the same memory priority
 * as the client (so that its process will not be killable in any
 * situation where the client is not killable), but for CPU scheduling
 * purposes it may be left in the background.  This only has an impact
 * in the situation where the binding client is a foreground process
 * and the target service is in a background process.
 */
","\android\content\Context.java"
"android.content.Context.MODE_WORLD_READABLE","true","false","false","true","true","int","0x0001","","/**
 * File creation mode: allow all other applications to have read access
 * to the created file.
 * @see #MODE_PRIVATE
 * @see #MODE_WORLD_WRITEABLE
 */
","\android\content\Context.java"
"android.content.Context.MODE_APPEND","true","false","false","true","true","int","0x8000","","/**
 * File creation mode: for use with {@link #openFileOutput}, if the file
 * already exists then write data to the end of the existing file
 * instead of erasing it.
 * @see #openFileOutput
 */
","\android\content\Context.java"
"android.content.Context.ACCOUNT_SERVICE","true","false","false","true","true","String","""account""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.accounts.AccountManager} for receiving intents at a
 * time of your choosing.
 *
 * @see #getSystemService
 * @see android.accounts.AccountManager
 */
","\android\content\Context.java"
"android.content.Context.NOTIFICATION_SERVICE","true","false","false","true","true","String","""notification""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.app.NotificationManager} for informing the user of
 * background events.
 *
 * @see #getSystemService
 * @see android.app.NotificationManager
 */
","\android\content\Context.java"
"android.content.Context.AUDIO_SERVICE","true","false","false","true","true","String","""audio""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.media.AudioManager} for handling management of volume,
 * ringer modes and audio routing.
 *
 * @see #getSystemService
 * @see android.media.AudioManager
 */
","\android\content\Context.java"
"android.content.Context.WALLPAPER_SERVICE","true","false","false","true","true","String","""wallpaper""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * com.android.server.WallpaperService for accessing wallpapers.
 *
 * @see #getSystemService
 */
","\android\content\Context.java"
"android.content.Context.CONTEXT_RESTRICTED","true","false","false","true","true","int","0x00000004","","/**
 * Flag for use with {@link #createPackageContext}: a restricted context may
 * disable specific features. For instance, a View associated with a restricted
 * context would ignore particular XML attributes.
 */
","\android\content\Context.java"
"android.content.Context.BACKUP_SERVICE","true","false","false","true","true","String","""backup""","","/**
 * Use with {@link #getSystemService} to retrieve an
 * {@link android.app.backup.IBackupManager IBackupManager} for communicating
 * with the backup mechanism.
 * @hide
 *
 * @see #getSystemService
 */
","\android\content\Context.java"
"android.content.Context.DEVICE_POLICY_SERVICE","true","false","false","true","true","String","""device_policy""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.app.admin.DevicePolicyManager} for working with global
 * device policy management.
 *
 * @see #getSystemService
 */
","\android\content\Context.java"
"android.content.Context.BIND_AUTO_CREATE","true","false","false","true","true","int","0x0001","","/**
 * Flag for {@link #bindService}: automatically create the service as long
 * as the binding exists.  Note that while this will create the service,
 * its {@link android.app.Service#onStart} method will still only be called due to an
 * explicit call to {@link #startService}.  Even without that, though,
 * this still provides you with access to the service object while the
 * service is created.
 *
 * <p>Specifying this flag also tells the system to treat the service
 * as being as important as your own process -- that is, when deciding
 * which process should be killed to free memory, the service will only
 * be considered a candidate as long as the processes of any such bindings
 * is also a candidate to be killed.  This is to avoid situations where
 * the service is being continually created and killed due to low memory.
 */
","\android\content\Context.java"
"android.content.Context.DROPBOX_SERVICE","true","false","false","true","true","String","""dropbox""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.os.DropBoxManager} instance for recording
 * diagnostic logs.
 * @see #getSystemService
 */
","\android\content\Context.java"
"android.content.Context.SEARCH_SERVICE","true","false","false","true","true","String","""search""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.app.SearchManager} for handling searches.
 *
 * @see #getSystemService
 * @see android.app.SearchManager
 */
","\android\content\Context.java"
"android.content.Context.VIBRATOR_SERVICE","true","false","false","true","true","String","""vibrator""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.os.Vibrator} for interacting with the vibration hardware.
 *
 * @see #getSystemService
 * @see android.os.Vibrator
 */
","\android\content\Context.java"
"android.content.Context.APPWIDGET_SERVICE","true","false","false","true","true","String","""appwidget""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.appwidget.AppWidgetManager} for accessing AppWidgets.
 *
 * @hide
 * @see #getSystemService
 */
","\android\content\Context.java"
"android.content.Context.STORAGE_SERVICE","true","false","false","true","true","String","""storage""","","/**
 * @hide
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.os.storage.StorageManager} for accesssing system storage
 * functions.
 *
 * @see #getSystemService
 * @see android.os.storage.StorageManager
 */
","\android\content\Context.java"
"android.content.Context.ACCESSIBILITY_SERVICE","true","false","false","true","true","String","""accessibility""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.view.accessibility.AccessibilityManager} for giving the user
 * feedback for UI events through the registered event listeners.
 *
 * @see #getSystemService
 * @see android.view.accessibility.AccessibilityManager
 */
","\android\content\Context.java"
"android.content.Context.CONTEXT_IGNORE_SECURITY","true","false","false","true","true","int","0x00000002","","/**
 * Flag for use with {@link #createPackageContext}: ignore any security
 * restrictions on the Context being requested, allowing it to always
 * be loaded.  For use with {@link #CONTEXT_INCLUDE_CODE} to allow code
 * to be loaded into a process even when it isn't safe to do so.  Use
 * with extreme care!
 */
","\android\content\Context.java"
"android.content.Context.CONTEXT_INCLUDE_CODE","true","false","false","true","true","int","0x00000001","","/**
 * Flag for use with {@link #createPackageContext}: include the application
 * code with the context.  This means loading code into the caller's
 * process, so that {@link #getClassLoader()} can be used to instantiate
 * the application's classes.  Setting this flags imposes security
 * restrictions on what application context you can access; if the
 * requested application can not be safely loaded into your process,
 * java.lang.SecurityException will be thrown.  If this flag is not set,
 * there will be no restrictions on the packages that can be loaded,
 * but {@link #getClassLoader} will always return the default system
 * class loader.
 */
","\android\content\Context.java"
"android.content.Context.NETWORKMANAGEMENT_SERVICE","true","false","false","true","true","String","""network_management""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.net.NetworkManagementService} for handling management of
 * system network services
 *
 * @hide
 * @see #getSystemService
 * @see android.net.NetworkManagementService
 */
","\android\content\Context.java"
"android.content.Context.KEYGUARD_SERVICE","true","false","false","true","true","String","""keyguard""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.app.NotificationManager} for controlling keyguard.
 *
 * @see #getSystemService
 * @see android.app.KeyguardManager
 */
","\android\content\Context.java"
"android.content.Context.POWER_SERVICE","true","false","false","true","true","String","""power""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.os.PowerManager} for controlling power management,
 * including ""wake locks,"" which let you keep the device on while
 * you're running long tasks.
 */
","\android\content\Context.java"
"android.content.Context.SENSOR_SERVICE","true","false","false","true","true","String","""sensor""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.hardware.SensorManager} for accessing sensors.
 *
 * @see #getSystemService
 * @see android.hardware.SensorManager
 */
","\android\content\Context.java"
"android.content.Context.ACTIVITY_SERVICE","true","false","false","true","true","String","""activity""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.app.ActivityManager} for interacting with the global
 * system state.
 *
 * @see #getSystemService
 * @see android.app.ActivityManager
 */
","\android\content\Context.java"
"android.content.Context.WIFI_SERVICE","true","false","false","true","true","String","""wifi""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.net.wifi.WifiManager} for handling management of
 * Wi-Fi access.
 *
 * @see #getSystemService
 * @see android.net.wifi.WifiManager
 */
","\android\content\Context.java"
"android.content.Context.MODE_WORLD_WRITEABLE","true","false","false","true","true","int","0x0002","","/**
 * File creation mode: allow all other applications to have write access
 * to the created file.
 * @see #MODE_PRIVATE
 * @see #MODE_WORLD_READABLE
 */
","\android\content\Context.java"
"android.content.Context.CLIPBOARD_SERVICE","true","false","false","true","true","String","""clipboard""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.text.ClipboardManager} for accessing and modifying
 * the contents of the global clipboard.
 *
 * @see #getSystemService
 * @see android.text.ClipboardManager
 */
","\android\content\Context.java"
"android.content.Context.UI_MODE_SERVICE","true","false","false","true","true","String","""uimode""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.app.UiModeManager} for controlling UI modes.
 *
 * @see #getSystemService
 */
","\android\content\Context.java"
"android.content.Context.WINDOW_SERVICE","true","false","false","true","true","String","""window""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.view.WindowManager} for accessing the system's window
 * manager.
 *
 * @see #getSystemService
 * @see android.view.WindowManager
 */
","\android\content\Context.java"
"android.content.Context.ALARM_SERVICE","true","false","false","true","true","String","""alarm""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.app.AlarmManager} for receiving intents at a
 * time of your choosing.
 *
 * @see #getSystemService
 * @see android.app.AlarmManager
 */
","\android\content\Context.java"
"android.content.Context.CONNECTIVITY_SERVICE","true","false","false","true","true","String","""connectivity""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.net.ConnectivityManager} for handling management of
 * network connections.
 *
 * @see #getSystemService
 * @see android.net.ConnectivityManager
 */
","\android\content\Context.java"
"android.content.Context.MODE_PRIVATE","true","false","false","true","true","int","0x0000","","/**
 * File creation mode: the default mode, where the created file can only
 * be accessed by the calling application (or all applications sharing the
 * same user ID).
 * @see #MODE_WORLD_READABLE
 * @see #MODE_WORLD_WRITEABLE
 */
","\android\content\Context.java"
"android.content.Context.TELEPHONY_SERVICE","true","false","false","true","true","String","""phone""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.telephony.TelephonyManager} for handling management the
 * telephony features of the device.
 *
 * @see #getSystemService
 * @see android.telephony.TelephonyManager
 */
","\android\content\Context.java"
"android.content.Context.LOCATION_SERVICE","true","false","false","true","true","String","""location""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.location.LocationManager} for controlling location
 * updates.
 *
 * @see #getSystemService
 * @see android.location.LocationManager
 */
","\android\content\Context.java"
"android.content.Context.LAYOUT_INFLATER_SERVICE","true","false","false","true","true","String","""layout_inflater""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.view.LayoutInflater} for inflating layout resources in this
 * context.
 *
 * @see #getSystemService
 * @see android.view.LayoutInflater
 */
","\android\content\Context.java"
"android.content.Context.INPUT_METHOD_SERVICE","true","false","false","true","true","String","""input_method""","","/**
 * Use with {@link #getSystemService} to retrieve a
 * {@link android.view.inputmethod.InputMethodManager} for accessing input
 * methods.
 *
 * @see #getSystemService
 */
","\android\content\Context.java"
"android.content.Context.THROTTLE_SERVICE","true","false","false","true","true","String","""throttle""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.net.ThrottleManager} for handling management of
 * throttling.
 *
 * @hide
 * @see #getSystemService
 * @see android.net.ThrottleManager
 */
","\android\content\Context.java"
"android.content.Context.STATUS_BAR_SERVICE","true","false","false","true","true","String","""statusbar""","","/**
 * Use with {@link #getSystemService} to retrieve a {@link
 * android.app.StatusBarManager} for interacting with the status bar.
 *
 * @see #getSystemService
 * @see android.app.StatusBarManager
 * @hide
 */
","\android\content\Context.java"
"android.content.Context.BIND_DEBUG_UNBIND","true","false","false","true","true","int","0x0002","","/**
 * Flag for {@link #bindService}: include debugging help for mismatched
 * calls to unbind.  When this flag is set, the callstack of the following
 * {@link #unbindService} call is retained, to be printed if a later
 * incorrect unbind call is made.  Note that doing this requires retaining
 * information about the binding that was made for the lifetime of the app,
 * resulting in a leak -- this should only be used for debugging.
 */
","\android\content\Context.java"
"android.provider.Columns.DATA","true","false","false","true","true","String","""data""","","/**
 * The sync data associated with this account.
 * <P>Type: NONE</P>
 */
","\android\provider\SyncStateContract.java"
"android.provider.SyncStateContract.SELECT_BY_ACCOUNT","false","false","true","true","true","String","Columns.ACCOUNT_NAME + ""=? AND "" + Columns.ACCOUNT_TYPE + ""=?""","","","\android\provider\SyncStateContract.java"
"android.provider.Columns.ACCOUNT_NAME","true","false","false","true","true","String","""account_name""","","/**
 * A reference to the name of the account to which this data belongs
 * <P>Type: STRING</P>
 */
","\android\provider\SyncStateContract.java"
"android.provider.Helpers.SELECT_BY_ACCOUNT","false","false","true","true","true","String","Columns.ACCOUNT_NAME + ""=? AND "" + Columns.ACCOUNT_TYPE + ""=?""","","","\android\provider\SyncStateContract.java"
"android.provider.SyncStateContract.DATA_PROJECTION","false","false","true","true","true","String","new String[] { Columns.DATA, Columns._ID }","","","\android\provider\SyncStateContract.java"
"android.provider.SyncStateContract.CONTENT_DIRECTORY","true","false","false","true","true","String","""syncstate""","","","\android\provider\SyncStateContract.java"
"android.provider.Helpers.DATA_PROJECTION","false","false","true","true","true","String","new String[] { Columns.DATA, Columns._ID }","","","\android\provider\SyncStateContract.java"
"android.provider.SyncStateContract.ACCOUNT_TYPE","true","false","false","true","true","String","""account_type""","","/**
 * A reference to the type of the account to which this data belongs
 * <P>Type: STRING</P>
 */
","\android\provider\SyncStateContract.java"
"android.provider.Columns.ACCOUNT_TYPE","true","false","false","true","true","String","""account_type""","","/**
 * A reference to the type of the account to which this data belongs
 * <P>Type: STRING</P>
 */
","\android\provider\SyncStateContract.java"
"android.provider.SyncStateContract.ACCOUNT_NAME","true","false","false","true","true","String","""account_name""","","/**
 * A reference to the name of the account to which this data belongs
 * <P>Type: STRING</P>
 */
","\android\provider\SyncStateContract.java"
"android.provider.SyncStateContract.DATA","true","false","false","true","true","String","""data""","","/**
 * The sync data associated with this account.
 * <P>Type: NONE</P>
 */
","\android\provider\SyncStateContract.java"
"android.provider.Constants.CONTENT_DIRECTORY","true","false","false","true","true","String","""syncstate""","","","\android\provider\SyncStateContract.java"
"android.widget.AdapterView.mOldSelectedPosition","false","false","false","false","false","int","INVALID_POSITION","","/**
 * The last selected position we used when notifying
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.position","true","false","false","false","false","int","","","/**
 * The position in the adapter for which the context menu is being
 * displayed.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.targetView","true","false","false","false","false","View","","","/**
 * The child view for which the context menu is being displayed. This
 * will be one of the children of this AdapterView.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mBlockLayoutRequests","false","false","false","false","false","boolean","false","","/**
 * When set to true, calls to requestLayout() will not propagate up the parent hierarchy.
 * This is used to layout the children during a layout pass.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.SYNC_MAX_DURATION_MILLIS","false","false","false","true","true","int","100","","/**
 * Maximum amount of time to spend in {@link #findSyncPosition()}
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mOnItemLongClickListener","false","false","false","false","false","OnItemLongClickListener","","","/**
 * The listener that receives notifications when an item is long clicked.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterContextMenuInfo.targetView","true","false","false","false","false","View","","","/**
 * The child view for which the context menu is being displayed. This
 * will be one of the children of this AdapterView.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mSelectionNotifier","false","false","true","false","false","SelectionNotifier","","","","\android\widget\AdapterView.java"
"android.widget.AdapterView.mItemCount","false","false","false","false","false","int","","@ViewDebug.ExportedProperty","/**
 * The number of items in the current adapter.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mInLayout","false","false","false","false","false","boolean","false","","/**
 * Indicates that this view is currently being laid out.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.INVALID_POSITION","true","false","false","true","true","int","-1","","/**
 * Represents an invalid position. All valid positions are in the range 0 to 1 less than the
 * number of items in the current adapter.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mLayoutHeight","false","false","true","false","false","int","","","/**
 * Our height after the last layout
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.SYNC_FIRST_POSITION","false","false","false","true","true","int","1","","/**
 * Sync based on the first child displayed
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.SYNC_SELECTED_POSITION","false","false","false","true","true","int","0","","/**
 * Sync based on the selected child
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mSyncMode","false","false","false","false","false","int","","","/**
 * Indicates whether to sync based on the selection or position. Possible
 * values are {@link #SYNC_SELECTED_POSITION} or
 * {@link #SYNC_FIRST_POSITION}.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mNeedSync","false","false","false","false","false","boolean","false","","/**
 * True if we need to sync to mSyncRowId
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mSyncRowId","false","false","false","false","false","long","INVALID_ROW_ID","","/**
 * Row id to look for when data has changed
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mNextSelectedRowId","false","false","false","false","false","long","INVALID_ROW_ID","","/**
 * The item id of the item to select during the next layout.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterContextMenuInfo.position","true","false","false","false","false","int","","","/**
 * The position in the adapter for which the context menu is being
 * displayed.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.INVALID_ROW_ID","true","false","false","true","true","long","Long.MIN_VALUE","","/**
 * Represents an empty or invalid row id
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterDataSetObserver.mInstanceState","false","false","true","false","false","Parcelable","null","","","\android\widget\AdapterView.java"
"android.widget.AdapterView.mSelectedRowId","false","false","false","false","false","long","INVALID_ROW_ID","","/**
 * The item id of the currently selected item.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mOnItemClickListener","false","false","false","false","false","OnItemClickListener","","","/**
 * The listener that receives notifications when an item is clicked.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.id","true","false","false","false","false","long","","","/**
 * The row id of the item for which the context menu is being displayed.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mOnItemSelectedListener","false","false","false","false","false","OnItemSelectedListener","","","/**
 * The listener that receives notifications when an item is selected.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mNextSelectedPosition","false","false","false","false","false","int","INVALID_POSITION","@ViewDebug.ExportedProperty","/**
 * The position within the adapter's data set of the item to select
 * during the next layout.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterContextMenuInfo.id","true","false","false","false","false","long","","","/**
 * The row id of the item for which the context menu is being displayed.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mDesiredFocusableInTouchModeState","false","false","true","false","false","boolean","","","","\android\widget\AdapterView.java"
"android.widget.AdapterView.mInstanceState","false","false","true","false","false","Parcelable","null","","","\android\widget\AdapterView.java"
"android.widget.AdapterView.mSelectedPosition","false","false","false","false","false","int","INVALID_POSITION","@ViewDebug.ExportedProperty","/**
 * The position within the adapter's data set of the currently selected item.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mDesiredFocusableState","false","false","true","false","false","boolean","","","/**
 * Indicates what focusable state is requested when calling setFocusable().
 * In addition to this, this view has other criteria for actually
 * determining the focusable state (such as whether its empty or the text
 * filter is shown).
 *
 * @see #setFocusable(boolean)
 * @see #checkFocus()
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.ITEM_VIEW_TYPE_IGNORE","true","false","false","true","true","int","-1","","/**
 * The item view type returned by {@link Adapter#getItemViewType(int)} when
 * the adapter does not want the item's view recycled.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mSyncHeight","false","false","false","false","false","long","","","/**
 * Height of the view when mSyncPosition and mSyncRowId where set
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER","true","false","false","true","true","int","-2","","/**
 * The item view type returned by {@link Adapter#getItemViewType(int)} when
 * the item is a header or footer.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mEmptyView","false","false","true","false","false","View","","","/**
 * View to show if there are no items to show.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mSpecificTop","false","false","false","false","false","int","","","/**
 * The offset in pixels from the top of the AdapterView to the top
 * of the view to select during the next layout.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mFirstPosition","false","false","false","false","false","int","0","@ViewDebug.ExportedProperty","/**
 * The position of the first child displayed
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mSyncPosition","false","false","false","false","false","int","","","/**
 * Position from which to start looking for mSyncRowId
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mOldItemCount","false","false","false","false","false","int","","","/**
 * The number of items in the adapter before a data changed event occured.
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mOldSelectedRowId","false","false","false","false","false","long","INVALID_ROW_ID","","/**
 * The id of the last selected position we used when notifying
 */
","\android\widget\AdapterView.java"
"android.widget.AdapterView.mDataChanged","false","false","false","false","false","boolean","","","/**
 * True if the data has changed since the last layout
 */
","\android\widget\AdapterView.java"
"android.text.SpannableStringInternal.END","false","false","true","true","true","int","1","","","\android\text\SpannableStringInternal.java"
"android.text.SpannableStringInternal.mSpanCount","false","false","true","false","false","int","","","","\android\text\SpannableStringInternal.java"
"android.text.SpannableStringInternal.FLAGS","false","false","true","true","true","int","2","","","\android\text\SpannableStringInternal.java"
"android.text.SpannableStringInternal.COLUMNS","false","false","true","true","true","int","3","","","\android\text\SpannableStringInternal.java"
"android.text.SpannableStringInternal.mSpans","false","false","true","false","false","Object","","","","\android\text\SpannableStringInternal.java"
"android.text.SpannableStringInternal.mText","false","false","true","false","false","String","","","","\android\text\SpannableStringInternal.java"
"android.text.SpannableStringInternal.EMPTY","false","false","false","true","true","Object","new Object[0]","","/* package */
","\android\text\SpannableStringInternal.java"
"android.text.SpannableStringInternal.mSpanData","false","false","true","false","false","int","","","","\android\text\SpannableStringInternal.java"
"android.text.SpannableStringInternal.START","false","false","true","true","true","int","0","","","\android\text\SpannableStringInternal.java"
"android.webkit.UrlInterceptRegistry.mHandlerList","false","false","true","true","false","LinkedList","","","","\android\webkit\UrlInterceptRegistry.java"
"android.webkit.UrlInterceptRegistry.LOGTAG","false","false","true","true","true","String","""intercept""","","","\android\webkit\UrlInterceptRegistry.java"
"android.webkit.UrlInterceptRegistry.mDisabled","false","false","true","true","false","boolean","false","","","\android\webkit\UrlInterceptRegistry.java"
"android.os.AsyncTask.CORE_POOL_SIZE","false","false","true","true","true","int","5","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.mParams","false","false","false","false","false","Params","","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.MESSAGE_POST_CANCEL","false","false","true","true","true","int","0x3","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.MAXIMUM_POOL_SIZE","false","false","true","true","true","int","128","","","\android\os\AsyncTask.java"
"android.os.AsyncTaskResult.mTask","false","false","false","false","true","AsyncTask","","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.LOG_TAG","false","false","true","true","true","String","""AsyncTask""","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.mData","false","false","false","false","true","Data","","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.sThreadFactory","false","false","true","true","true","ThreadFactory","new ThreadFactory() {

    private final AtomicInteger mCount = new AtomicInteger(1);

    public Thread newThread(Runnable r) {
        return new Thread(r, ""AsyncTask #"" + mCount.getAndIncrement());
    }
}","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.sHandler","false","false","true","true","true","InternalHandler","new InternalHandler()","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.sWorkQueue","false","false","true","true","true","BlockingQueue<Runnable>","new LinkedBlockingQueue<Runnable>(10)","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.mWorker","false","false","true","false","true","WorkerRunnable<Params,Result>","","","","\android\os\AsyncTask.java"
"android.os.WorkerRunnable.mParams","false","false","false","false","false","Params","","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.MESSAGE_POST_PROGRESS","false","false","true","true","true","int","0x2","","","\android\os\AsyncTask.java"
"android.os.AsyncTaskResult.mData","false","false","false","false","true","Data","","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.sExecutor","false","false","true","true","true","ThreadPoolExecutor","new ThreadPoolExecutor(CORE_POOL_SIZE, MAXIMUM_POOL_SIZE, KEEP_ALIVE, TimeUnit.SECONDS, sWorkQueue, sThreadFactory)","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.mTask","false","false","false","false","true","AsyncTask","","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.KEEP_ALIVE","false","false","true","true","true","int","10","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.MESSAGE_POST_RESULT","false","false","true","true","true","int","0x1","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.mFuture","false","false","true","false","true","FutureTask<Result>","","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.mCount","false","false","true","false","true","AtomicInteger","new AtomicInteger(1)","","","\android\os\AsyncTask.java"
"android.os.AsyncTask.mStatus","false","false","true","false","false","Status","Status.PENDING","","","\android\os\AsyncTask.java"
"android.net.http.Connection.mContext","false","false","false","false","false","Context","","","","\android\net\http\Connection.java"
"android.net.http.Connection.DONE","false","false","true","true","true","int","3","","","\android\net\http\Connection.java"
"android.net.http.Connection.SOCKET_TIMEOUT","false","false","false","true","true","int","60000","","/**
 * Allow a TCP connection 60 idle seconds before erroring out
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.mHttpContext","false","false","true","false","false","HttpContext","","","/**
 * context required by ConnectionReuseStrategy.
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.SEND","false","false","true","true","true","int","0","","","\android\net\http\Connection.java"
"android.net.http.Connection.HTTP_CONNECTION","false","false","true","true","true","String","""http.connection""","","/**
 * Doesn't seem to exist anymore in the new HTTP client, so copied here.
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.mCertificate","false","true","false","false","false","SslCertificate","null","","/**
 * The server SSL certificate associated with this connection
 * (null if the connection is not secure)
 * It would be nice to store the whole certificate chain, but
 * we want to keep things as light-weight as possible
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.MIN_PIPE","false","false","true","true","true","int","2","","","\android\net\http\Connection.java"
"android.net.http.Connection.DRAIN","false","false","true","true","true","int","2","","","\android\net\http\Connection.java"
"android.net.http.Connection.mCanPersist","false","false","true","false","false","boolean","","","/**
 * true if the connection can be reused for sending more requests
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.STATE_NORMAL","false","false","true","true","false","int","0","","/**
 * set when cancelled
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.mHost","false","false","false","false","false","HttpHost","","","/**
 * The host this connection is connected to.  If using proxy,
 * this is set to the proxy address
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.mBuf","false","false","true","false","false","byte","","","/**
 * Buffer for feeding response blocks to webkit.  One block per
 * connection reduces memory churn.
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.states","false","false","true","true","true","String","{ ""SEND"", ""READ"", ""DRAIN"", ""DONE"" }","","","\android\net\http\Connection.java"
"android.net.http.Connection.STATE_CANCEL_REQUESTED","false","false","true","true","false","int","1","","","\android\net\http\Connection.java"
"android.net.http.Connection.RETRY_REQUEST_LIMIT","false","false","true","true","true","int","2","","/**
 * The number of times to try to re-connect (if connect fails).
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.mRequestFeeder","false","false","false","false","false","RequestFeeder","","","","\android\net\http\Connection.java"
"android.net.http.Connection.mActive","false","false","true","false","false","int","STATE_NORMAL","","","\android\net\http\Connection.java"
"android.net.http.Connection.READ","false","false","true","true","true","int","1","","","\android\net\http\Connection.java"
"android.net.http.Connection.mHttpClientConnection","false","true","false","false","false","AndroidHttpClientConnection","null","","/**
 * The low level connection
 */
","\android\net\http\Connection.java"
"android.net.http.Connection.MAX_PIPE","false","false","true","true","true","int","3","","","\android\net\http\Connection.java"
"android.server.BondState.mPendingOutgoingBonding","false","false","true","false","false","String","","","// There can be only 1 pending outgoing connection at a time,
","\android\server\BluetoothService.java"
"android.server.BondState.AUTO_PAIRING_BLACKLIST","false","false","true","true","true","String","""/etc/bluetooth/auto_pairing.conf""","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mDeviceProperties","false","false","true","false","true","HashMap<String,Map<String,String>>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.SHARED_PREFERENCE_DOCK_ADDRESS","false","false","true","true","true","String","""dock_bluetooth_address""","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mEventLoop","false","false","true","false","false","BluetoothEventLoop","","","","\android\server\BluetoothService.java"
"android.server.BondState.mAutoPairingAddressBlacklist","false","false","true","false","false","ArrayList<String>","","","","\android\server\BluetoothService.java"
"android.server.Reaper.handle","false","false","false","false","false","int","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.DOCK_ADDRESS_PATH","false","false","true","true","true","String","""/sys/class/switch/dock/bt_addr""","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.BLUETOOTH_PERM","false","false","true","true","true","String","android.Manifest.permission.BLUETOOTH","","","\android\server\BluetoothService.java"
"android.server.EnableThread.mSaveSetting","false","false","true","false","true","boolean","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.MESSAGE_UUID_INTENT","false","false","true","true","true","int","3","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.MESSAGE_REGISTER_SDP_RECORDS","false","false","true","true","true","int","1","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mPinAttempt","false","false","true","false","true","HashMap<String,Integer>","new HashMap<String, Integer>()","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mIsDiscovering","false","false","true","false","false","boolean","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mPendingOutgoingBonding","false","false","true","false","false","String","","","// There can be only 1 pending outgoing connection at a time,
","\android\server\BluetoothService.java"
"android.server.BondState.mAutoPairingExactNameBlacklist","false","false","true","false","false","ArrayList<String>","","","","\android\server\BluetoothService.java"
"android.server.BondState.mAutoPairingPartialNameBlacklist","false","false","true","false","false","ArrayList<String>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mAutoPairingExactNameBlacklist","false","false","true","false","false","ArrayList<String>","","","","\android\server\BluetoothService.java"
"android.server.BondState.mAutoPairingDynamicAddressBlacklist","false","false","true","false","false","ArrayList<String>","","","// Addresses added to blacklist dynamically based on usage.
","\android\server\BluetoothService.java"
"android.server.BluetoothService.DOCK_PIN_PATH","false","false","true","true","true","String","""/sys/class/switch/dock/bt_pin""","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mAutoPairingDynamicAddressBlacklist","false","false","true","false","false","ArrayList<String>","","","// Addresses added to blacklist dynamically based on usage.
","\android\server\BluetoothService.java"
"android.server.BluetoothService.RFCOMM_UUIDS","false","false","true","true","true","ParcelUuid","{ BluetoothUuid.Handsfree, BluetoothUuid.HSP, BluetoothUuid.ObexObjectPush }","","/**
 * Always retrieve RFCOMM channel for these SDP UUIDs
 */
","\android\server\BluetoothService.java"
"android.server.BluetoothService.mBluetoothState","false","false","true","false","false","int","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mHandler","false","false","true","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        switch(msg.what) {
            case MESSAGE_REGISTER_SDP_RECORDS:
                if (!isEnabledInternal()) {
                    return;
                }
                // records, use a DBUS call instead.
                switch(msg.arg1) {
                    case 1:
                        Log.d(TAG, ""Registering hfag record"");
                        SystemService.start(""hfag"");
                        mHandler.sendMessageDelayed(mHandler.obtainMessage(MESSAGE_REGISTER_SDP_RECORDS, 2, -1), 500);
                        break;
                    case 2:
                        Log.d(TAG, ""Registering hsag record"");
                        SystemService.start(""hsag"");
                        mHandler.sendMessageDelayed(mHandler.obtainMessage(MESSAGE_REGISTER_SDP_RECORDS, 3, -1), 500);
                        break;
                    case 3:
                        Log.d(TAG, ""Registering opush record"");
                        SystemService.start(""opush"");
                        mHandler.sendMessageDelayed(mHandler.obtainMessage(MESSAGE_REGISTER_SDP_RECORDS, 4, -1), 500);
                        break;
                    case 4:
                        Log.d(TAG, ""Registering pbap record"");
                        SystemService.start(""pbap"");
                        break;
                }
                break;
            case MESSAGE_FINISH_DISABLE:
                finishDisable(msg.arg1 != 0);
                break;
            case MESSAGE_UUID_INTENT:
                String address = (String) msg.obj;
                if (address != null) {
                    sendUuidIntent(address);
                    makeServiceChannelCallbacks(address);
                }
                break;
            case MESSAGE_DISCOVERABLE_TIMEOUT:
                int mode = msg.arg1;
                if (isEnabledInternal()) {
                    // TODO: Switch back to the previous scan mode
                    // This is ok for now, because we only use
                    // CONNECTABLE and CONNECTABLE_DISCOVERABLE
                    setScanMode(BluetoothAdapter.SCAN_MODE_CONNECTABLE, -1);
                }
                break;
        }
    }
}","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.uuid","true","false","false","false","false","ParcelUuid","","","","\android\server\BluetoothService.java"
"android.server.Reaper.pid","false","false","false","false","false","int","","","","\android\server\BluetoothService.java"
"android.server.RemoteService.address","true","false","false","false","false","String","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.pid","false","false","false","false","false","int","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mAutoPairingPartialNameBlacklist","false","false","true","false","false","ArrayList<String>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mDockAddress","false","false","true","true","false","String","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mUuidCallbackTracker","false","false","true","false","true","HashMap<RemoteService,IBluetoothCallback>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mState","false","false","true","false","true","HashMap<String,Integer>","new HashMap<String, Integer>()","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mEnableThread","false","false","true","false","false","EnableThread","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.AUTO_PAIRING_BLACKLIST","false","false","true","true","true","String","""/etc/bluetooth/auto_pairing.conf""","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.UUID_INTENT_DELAY","false","false","true","true","true","int","6000","","// This timeout should be greater than the page timeout
","\android\server\BluetoothService.java"
"android.server.BluetoothService.mRestart","false","false","true","false","false","boolean","false","","// need to call enable() after disable()
","\android\server\BluetoothService.java"
"android.server.BluetoothService.mContext","false","false","true","false","true","Context","","","","\android\server\BluetoothService.java"
"android.server.RemoteService.uuid","true","false","false","false","false","ParcelUuid","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mBondState","false","false","true","false","true","BondState","new BondState()","","// local cache of bondings
","\android\server\BluetoothService.java"
"android.server.BluetoothService.mDeviceServiceChannelCache","false","false","true","false","true","HashMap<String,Map<ParcelUuid,Integer>>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mServiceRecordToPid","false","false","true","false","true","HashMap<Integer,Integer>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mIsAirplaneToggleable","false","false","true","false","false","boolean","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mBatteryStats","false","false","true","false","true","IBatteryStats","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mAutoPairingAddressBlacklist","false","false","true","false","false","ArrayList<String>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.MESSAGE_DISCOVERABLE_TIMEOUT","false","false","true","true","true","int","4","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.DYNAMIC_AUTO_PAIRING_BLACKLIST","false","false","true","true","true","String","""/data/misc/bluetooth/dynamic_auto_pairing.conf""","","","\android\server\BluetoothService.java"
"android.server.BondState.DYNAMIC_AUTO_PAIRING_BLACKLIST","false","false","true","true","true","String","""/data/misc/bluetooth/dynamic_auto_pairing.conf""","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mNativeData","false","false","true","false","false","int","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.BLUETOOTH_ADMIN_PERM","false","false","true","true","true","String","android.Manifest.permission.BLUETOOTH_ADMIN","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mUuidIntentTracker","false","false","true","false","true","ArrayList<String>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.address","true","false","false","false","false","String","","","","\android\server\BluetoothService.java"
"android.server.BondState.mPinAttempt","false","false","true","false","true","HashMap<String,Integer>","new HashMap<String, Integer>()","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.MESSAGE_FINISH_DISABLE","false","false","true","true","true","int","2","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mSaveSetting","false","false","true","false","true","boolean","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mDockPin","false","false","true","false","false","String","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.DBG","false","false","true","true","true","boolean","true","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.SHARED_PREFERENCES_NAME","false","false","true","true","true","String","""bluetooth_service_settings""","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mAdapter","false","false","true","false","false","BluetoothAdapter","","","// constant after init()
","\android\server\BluetoothService.java"
"android.server.BondState.mState","false","false","true","false","true","HashMap<String,Integer>","new HashMap<String, Integer>()","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.TAG","false","false","true","true","true","String","""BluetoothService""","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.handle","false","false","false","false","false","int","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mIsAirplaneSensitive","false","false","true","false","false","boolean","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mAdapterProperties","false","false","true","false","true","Map<String,String>","","","","\android\server\BluetoothService.java"
"android.server.BluetoothService.mReceiver","false","false","true","false","true","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent == null)
            return;
        String action = intent.getAction();
        if (action.equals(Intent.ACTION_AIRPLANE_MODE_CHANGED)) {
            ContentResolver resolver = context.getContentResolver();
            // Query the airplane mode from Settings.System just to make sure that
            // some random app is not sending this intent and disabling bluetooth
            boolean enabled = !isAirplaneModeOn();
            // If bluetooth is currently expected to be on, then enable or disable bluetooth
            if (Settings.Secure.getInt(resolver, Settings.Secure.BLUETOOTH_ON, 0) > 0) {
                if (enabled) {
                    enable(false);
                } else {
                    disable(false);
                }
            }
        } else if (Intent.ACTION_DOCK_EVENT.equals(action)) {
            int state = intent.getIntExtra(Intent.EXTRA_DOCK_STATE, Intent.EXTRA_DOCK_STATE_UNDOCKED);
            if (DBG)
                Log.v(TAG, ""Received ACTION_DOCK_EVENT with State:"" + state);
            if (state == Intent.EXTRA_DOCK_STATE_UNDOCKED) {
                mDockAddress = null;
                mDockPin = null;
            } else {
                SharedPreferences.Editor editor = mContext.getSharedPreferences(SHARED_PREFERENCES_NAME, mContext.MODE_PRIVATE).edit();
                editor.putBoolean(SHARED_PREFERENCE_DOCK_ADDRESS + mDockAddress, true);
                editor.commit();
            }
        }
    }
}","","","\android\server\BluetoothService.java"
"android.app.admin.DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC","true","false","false","true","true","int","0x40000","","/**
 * Constant for {@link #setPasswordQuality}: the user must have entered a
 * password containing at least alphabetic (or other symbol) characters.
 * Note that quality constants are ordered so that higher values are more
 * restrictive.
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.RESET_PASSWORD_REQUIRE_ENTRY","true","false","false","true","true","int","0x0001","","/**
 * Flag for {@link #resetPassword}: don't allow other admins to change
 * the password again until the user has entered it.
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.localLOGV","false","false","true","true","false","boolean","DEBUG || android.util.Config.LOGV","","","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.PASSWORD_QUALITY_SOMETHING","true","false","false","true","true","int","0x10000","","/**
 * Constant for {@link #setPasswordQuality}: the policy requires some kind
 * of password, but doesn't care what it is.  Note that quality constants
 * are ordered so that higher values are more restrictive.
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.EXTRA_DEVICE_ADMIN","true","false","false","true","true","String","""android.app.extra.DEVICE_ADMIN""","","/**
 * The ComponentName of the administrator component.
 *
 * @see #ACTION_ADD_DEVICE_ADMIN
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.mHandler","false","false","true","false","true","Handler","","","","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.ACTION_SET_NEW_PASSWORD","true","false","false","true","true","String","""android.app.action.SET_NEW_PASSWORD""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity action: have the user enter a new password.  This activity
 * should be launched after using {@link #setPasswordQuality(ComponentName, int)}
 * or {@link #setPasswordMinimumLength(ComponentName, int)} to have the
 * user enter a new password that meets the current requirements.  You can
 * use {@link #isActivePasswordSufficient()} to determine whether you need
 * to have the user select a new password in order to meet the current
 * constraints.  Upon being resumed from this activity,
 * you can check the new password characteristics to see if they are
 * sufficient.
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.mService","false","false","true","false","true","IDevicePolicyManager","","","","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.PASSWORD_QUALITY_NUMERIC","true","false","false","true","true","int","0x20000","","/**
 * Constant for {@link #setPasswordQuality}: the user must have entered a
 * password containing at least numeric characters.  Note that quality
 * constants are ordered so that higher values are more restrictive.
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED","true","false","false","true","true","String","""android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED""","","/**
 * Activity action: send when any policy admin changes a policy.
 * This is generally used to find out when a new policy is in effect.
 *
 * @hide
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.mContext","false","false","true","false","true","Context","","","","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED","true","false","false","true","true","int","0","","/**
 * Constant for {@link #setPasswordQuality}: the policy has no requirements
 * for the password.  Note that quality constants are ordered so that higher
 * values are more restrictive.
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.TAG","false","false","true","true","false","String","""DevicePolicyManager""","","","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.EXTRA_ADD_EXPLANATION","true","false","false","true","true","String","""android.app.extra.ADD_EXPLANATION""","","/**
 * An optional CharSequence providing additional explanation for why the
 * admin is being added.
 *
 * @see #ACTION_ADD_DEVICE_ADMIN
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.DEBUG","false","false","true","true","false","boolean","false","","","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN","true","false","false","true","true","String","""android.app.action.ADD_DEVICE_ADMIN""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity action: ask the user to add a new device administrator to the system.
 * The desired policy is the ComponentName of the policy in the
 * {@link #EXTRA_DEVICE_ADMIN} extra field.  This will invoke a UI to
 * bring the user through adding the device administrator to the system (or
 * allowing them to reject it).
 *
 * <p>You can optionally include the {@link #EXTRA_ADD_EXPLANATION}
 * field to provide the user with additional explanation (in addition
 * to your component's description) about what is being added.
 */
","\android\app\admin\DevicePolicyManager.java"
"android.app.admin.DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC","true","false","false","true","true","int","0x50000","","/**
 * Constant for {@link #setPasswordQuality}: the user must have entered a
 * password containing at least <em>both></em> numeric <em>and</em>
 * alphabetic (or other symbol) characters.  Note that quality constants are
 * ordered so that higher values are more restrictive.
 */
","\android\app\admin\DevicePolicyManager.java"
"android.webkit.JsPromptResult.mStringResult","false","false","true","false","false","String","","","// String result of the prompt
","\android\webkit\JsPromptResult.java"
"com.google.android.mms.util.SqliteWrapper.SQLITE_EXCEPTION_DETAIL_MESSAGE","false","false","true","true","true","String","""unable to open database file""","","","\com\google\android\mms\util\SqliteWrapper.java"
"com.google.android.mms.util.SqliteWrapper.TAG","false","false","true","true","true","String","""SqliteWrapper""","","","\com\google\android\mms\util\SqliteWrapper.java"
"android.database.CursorWrapper.mCursor","false","false","true","false","false","Cursor","","","","\android\database\CursorWrapper.java"
"android.pim.vcard.VCardParser.mParseType","false","true","false","false","true","int","","","","\android\pim\vcard\VCardParser.java"
"android.pim.vcard.VCardParser.mCanceled","false","true","false","false","false","boolean","","","","\android\pim\vcard\VCardParser.java"
"android.provider.ContactsContract.CONTENT_MULTI_VCARD_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""as_multi_vcard"")","","/**
 * Base {@link Uri} for referencing multiple {@link Contacts} entry,
 * created by appending {@link #LOOKUP_KEY} using
 * {@link Uri#withAppendedPath(Uri, String)}. The lookup keys have to be
 * encoded and joined with the colon ("":"") seperator. The resulting string
 * has to be encoded again. Provides
 * {@link OpenableColumns} columns when queried, or returns the
 * referenced contact formatted as a vCard when opened through
 * {@link ContentResolver#openAssetFileDescriptor(Uri, String)}.
 *
 * This is private API because we do not have a well-defined way to
 * specify several entities yet. The format of this Uri might change in the future
 * or the Uri might be completely removed.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PINYIN","true","false","false","true","true","int","3","","/**
 * Pinyin is a phonetic method of entering Chinese characters. Typically not explicitly
 * shown in UIs, but used for searches and sorting.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsColumns.HAS_PHONE_NUMBER","true","false","false","true","true","String","""has_phone_number""","","/**
 * An indicator of whether this contact has at least one phone number. ""1"" if there is
 * at least one phone number, ""0"" otherwise.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.SearchSnippetColumns.SNIPPET_MIMETYPE","true","false","false","true","true","String","""snippet_mimetype""","","/**
 * The type of data that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ProviderStatus.STATUS_NORMAL","true","false","false","true","true","int","0","","/**
 * Default status of the provider.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS_TIMESTAMP","true","false","false","true","true","String","""status_ts""","","/**
 * The absolute time in milliseconds when the latest status was inserted/updated.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.DisplayNameSources.NICKNAME","true","false","false","true","true","int","35","","","\android\provider\ContactsContract.java"
"android.provider.GroupMembership.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/group_membership""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.TYPE_MOBILE","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_RELATIVE","true","false","false","true","true","int","12","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.NEIGHBORHOOD","true","false","false","true","true","String","DATA6","","/**
 * This is used to disambiguate a street address when a city
 * contains more than one street with the same name, or to specify a
 * small place whose mail is routed through a larger postal town. In
 * China it could be a county or a minor city.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TERTIARY_EMAIL_TYPE","true","false","false","true","true","String","""tertiary_email_type""","","/**
 * The extra field for an optional third contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_MANAGER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.SettingsColumns.ACCOUNT_TYPE","true","false","false","true","true","String","""account_type""","","/**
 * The type of account to which this row belongs, which when paired with
 * {@link #ACCOUNT_NAME} identifies a specific account.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.PHONE_TYPE","true","false","false","true","true","String","""phone_type""","","/**
 * The extra field for the contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.NAME_VERIFIED","true","false","false","true","true","String","""name_verified""","","/**
 * The ""name_verified"" flag: ""1"" means that the name fields on this raw
 * contact can be trusted and therefore should be used for the entire
 * aggregated contact.
 * <p>
 * If an aggregated contact contains more than one raw contact with a
 * verified name, one of those verified names is chosen at random.
 * If an aggregated contact contains no verified names, the
 * name is chosen randomly from the constituent raw contacts.
 * </p>
 * <p>
 * Updating this flag from ""0"" to ""1"" automatically resets it to ""0"" on
 * all other raw contacts in the same aggregated contact.
 * </p>
 * <p>
 * Sync adapters should only specify a value for this column when
 * inserting a raw contact and leave it out when doing an update.
 * </p>
 * <p>
 * The default value is ""0""
 * </p>
 * <p>Type: INTEGER</p>
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_FRIEND","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.Data.FOR_EXPORT_ONLY","true","false","false","true","true","String","""for_export_only""","","/**
 * <p>
 * If {@link #FOR_EXPORT_ONLY} is explicitly set to ""1"", returned Cursor toward
 * Data.CONTENT_URI contains only exportable data.
 * </p>
 * <p>
 * This flag is useful (currently) only for vCard exporter in Contacts app, which
 * needs to exclude ""un-exportable"" data from available data to export, while
 * Contacts app itself has priviledge to access all data including ""un-exportable""
 * ones and providers return all of them regardless of the callers' intention.
 * </p>
 * <p>
 * Type: INTEGER
 * </p>
 *
 * @hide Maybe available only in Eclair and not really ready for public use.
 * TODO: remove, or implement this feature completely. As of now (Eclair),
 * we only use this flag in queryEntities(), not query().
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CITY","true","false","false","true","true","String","DATA7","","/**
 * Can be city, village, town, borough, etc. This is the postal town
 * and not necessarily the place of residence or place of business.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.STATUS","true","false","false","true","true","String","""status""","","/**
 * Contact latest status update.
 * <p>Type: TEXT</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusUpdates.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/status-update""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * status update details.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactNameColumns.SORT_KEY_PRIMARY","true","false","false","true","true","String","""sort_key""","","/**
 * Sort key that takes into account locale-based traditions for sorting
 * names in address books.  The default
 * sort key is {@link #DISPLAY_NAME_PRIMARY}.  For Chinese names
 * the sort key is the name's Pinyin spelling, and for Japanese names
 * it is the Hiragana version of the phonetic name.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.JOB_TITLE","true","false","false","true","true","String","""job_title""","","/**
 * The extra field for the contact job title.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_FRIEND","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.Intents.LIST_STREQUENT_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_STREQUENT""","","/**
 * The action for the ""strequent"" contacts list tab. It first lists the starred
 * contacts in alphabetical order and then the frequent contacts in descending
 * order of the number of times they have been contacted.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.FULL_NAME_STYLE","true","false","false","true","true","String","DATA10","","/**
 * The style used for combining given/middle/family name into a full name.
 * See {@link ContactsContract.FullNameStyle}.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContactsColumns.CONTACT_ID","true","false","false","true","true","String","""contact_id""","","/**
 * A reference to the {@link ContactsContract.Contacts#_ID} that this
 * data belongs to.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_OTHER_FAX","true","false","false","true","true","int","13","","","\android\provider\ContactsContract.java"
"android.provider.Preferences.DISPLAY_ORDER","true","false","false","true","true","String","""android.contacts.DISPLAY_ORDER""","","/**
 * A key in the {@link android.provider.Settings android.provider.Settings} provider
 * that stores the preferred display order for contacts (given name first vs. family
 * name first).
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DISPLAY_ORDER_PRIMARY","true","false","false","true","true","int","1","","/**
 * The value for the DISPLAY_ORDER key corresponding to showing the given name first.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.NUMBER","true","false","false","true","true","String","DATA","","/**
 * The phone number as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_FTP","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""aggregation_exceptions"")","","/**
 * The content:// style URI for this table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.OFFLINE","false","false","false","false","false","int","0","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_OTHER_NAME","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_TELEX","true","false","false","true","true","int","15","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DISPLAY_ORDER","true","false","false","true","true","String","""android.contacts.DISPLAY_ORDER""","","/**
 * A key in the {@link android.provider.Settings android.provider.Settings} provider
 * that stores the preferred display order for contacts (given name first vs. family
 * name first).
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.NOTES","true","false","false","true","true","String","""notes""","","/**
 * The extra field for the contact notes.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.UI.TITLE_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.TITLE_EXTRA""","","/**
 * A key for to be used as an intent extra to set the activity
 * title to a custom String value.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_WORK_PAGER","true","false","false","true","true","int","18","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EXTRA_ADDRESS_BOOK_INDEX_COUNTS","true","false","false","true","true","String","""address_book_index_counts""","","/**
 * The array of group counts for the corresponding group.  Contains the same number
 * of elements as the EXTRA_ADDRESS_BOOK_INDEX_TITLES array.
 * <p>TYPE: int[]</p>
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.TYPE_OTHER","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.KOREAN","true","false","false","true","true","int","5","","/**
 * Hangul is the Korean phonetic alphabet.
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.TYPE_HOME","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Intents.NOTES","true","false","false","true","true","String","""notes""","","/**
 * The extra field for the contact notes.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TITLE_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.TITLE_EXTRA""","","/**
 * A key for to be used as an intent extra to set the activity
 * title to a custom String value.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsColumns.PHOTO_ID","true","false","false","true","true","String","""photo_id""","","/**
 * Reference to the row in the data table holding the photo.
 * <P>Type: INTEGER REFERENCES data(_id)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.UI.LIST_DEFAULT","true","false","false","true","true","String","""com.android.contacts.action.LIST_DEFAULT""","","/**
 * The action for the default contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SORT_ORDER_ALTERNATIVE","true","false","false","true","true","int","2","","/**
 * The value for the SORT_ORDER key corresponding to sorting by family name first.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_COMPANY_MAIN","true","false","false","true","true","int","10","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS_ICON","true","false","false","true","true","String","""status_icon""","","/**
 * The resource ID of the icon for the source of the status update.
 * This resource should be scoped by the {@link #STATUS_RES_PACKAGE}.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EXTRA_FORCE_CREATE","true","false","false","true","true","String","""com.android.contacts.action.FORCE_CREATE""","","/**
 * Used with {@link #SHOW_OR_CREATE_CONTACT} to force creating a new
 * contact if no matching contact found. Otherwise, default behavior is
 * to prompt user with dialog before creating.
 * <p>
 * Type: BOOLEAN
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STARRED","true","false","false","true","true","String","""starred""","","/**
 * Is the contact starred?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.PRESENCE_CUSTOM_STATUS","true","false","false","true","true","String","STATUS","@Deprecated","/**
 * @deprecated use {@link #STATUS}
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DISPLAY_NAME","true","false","false","true","true","String","DATA4","","/**
 * The display name for the email address
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTACT_PRESENCE","true","false","false","true","true","String","""contact_presence""","","/**
 * Contact presence status. See {@link StatusUpdates} for individual status
 * definitions.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHONETIC_MIDDLE_NAME","true","false","false","true","true","String","DATA8","","/**
 * The phonetic version of the additional name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_JABBER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.Event.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/contact_event""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS_LABEL","true","false","false","true","true","String","""status_label""","","/**
 * The resource ID of the label describing the source of the status update, e.g. ""Google
 * Talk"".  This resource should be scoped by the {@link #STATUS_RES_PACKAGE}.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_HOME","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_MANAGER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.Data.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/data""","","/**
 * The MIME type of the results from {@link #CONTENT_URI}.
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.OFFLINE","false","false","false","false","false","int","0","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.FAMILY_NAME","true","false","false","true","true","String","DATA3","","/**
 * The family name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContactsColumns.DELETED","true","false","false","true","true","String","""deleted""","","/**
 * The ""deleted"" flag: ""0"" by default, ""1"" if the row has been marked
 * for deletion. When {@link android.content.ContentResolver#delete} is
 * called on a raw contact, it is marked for deletion and removed from its
 * aggregate contact. The sync adaptor deletes the raw contact on the server and
 * then calls ContactResolver.delete once more, this time passing the
 * {@link ContactsContract#CALLER_IS_SYNCADAPTER} query parameter to finalize
 * the data removal.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""filter"")","","/**
 * <p>
 * The content:// style URL for email lookup using a filter. The filter returns
 * records of MIME type {@link #CONTENT_ITEM_TYPE}. The filter is applied
 * to display names as well as email addresses. The filter argument should be passed
 * as an additional path segment after this URI.
 * </p>
 * <p>The query in the following example will return ""Robert Parr (bob@incredibles.com)""
 * as well as ""Bob Parr (incredible@android.com)"".
 * <pre>
 * Uri uri = Uri.withAppendedPath(Email.CONTENT_LOOKUP_URI, Uri.encode(""bob""));
 * Cursor c = getContentResolver().query(uri,
 * new String[]{Email.DISPLAY_NAME, Email.DATA},
 * null, null, null);
 * </pre>
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_FRIEND","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.Nickname.TYPE_INITIALS","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.Organization.DEPARTMENT","true","false","false","true","true","String","DATA5","","/**
 * The department at this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.FAMILY_NAME","true","false","false","true","true","String","DATA3","","/**
 * The family name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SNIPPET_DATA1","true","false","false","true","true","String","""snippet_data1""","","/**
 * The {@link Data#DATA1} field of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_MANAGER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SNIPPET_DATA2","true","false","false","true","true","String","""snippet_data2""","","/**
 * The {@link Data#DATA2} field of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_SHORT_NAME","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.NAME","true","false","false","true","true","String","DATA","","/**
 * The name of the relative as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SNIPPET_DATA3","true","false","false","true","true","String","""snippet_data3""","","/**
 * The {@link Data#DATA3} field of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SNIPPET_DATA4","true","false","false","true","true","String","""snippet_data4""","","/**
 * The {@link Data#DATA4} field of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EXTRA_TARGET_RECT","true","false","false","true","true","String","""target_rect""","@Deprecated","/**
 * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to specify a
 * dialog location using screen coordinates. When not specified, the
 * dialog will be centered.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactNameColumns.SORT_KEY_ALTERNATIVE","true","false","false","true","true","String","""sort_key_alt""","","/**
 * Sort key based on the alternative representation of the full name,
 * {@link #DISPLAY_NAME_ALTERNATIVE}.  Thus for Western names,
 * it is the one using the ""family name first"" format.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DISPLAY_NAME_PRIMARY","true","false","false","true","true","String","""display_name""","","/**
 * <p>
 * The standard text shown as the contact's display name, based on the best
 * available information for the contact (for example, it might be the email address
 * if the name is not available).
 * The information actually used to compute the name is stored in
 * {@link #DISPLAY_NAME_SOURCE}.
 * </p>
 * <p>
 * A contacts provider is free to choose whatever representation makes most
 * sense for its target market.
 * For example in the default Android Open Source Project implementation,
 * if the display name is
 * based on the structured name and the structured name follows
 * the Western full-name style, then this field contains the ""given name first""
 * version of the full name.
 * <p>
 *
 * @see ContactsContract.ContactNameColumns#DISPLAY_NAME_ALTERNATIVE
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.OFFICE_LOCATION","true","false","false","true","true","String","DATA9","","/**
 * The office location of this organization.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LAST_TIME_CONTACTED","true","false","false","true","true","String","""last_time_contacted""","","/**
 * The last time a contact was contacted.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_HOMEPAGE","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.FAMILY_NAME","true","false","false","true","true","String","DATA3","","/**
 * The family name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.START_DATE","true","false","false","true","true","String","DATA","","/**
 * The event start date as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_JABBER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.IDLE","false","false","false","false","false","int","3","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.EMAIL_TYPE","true","false","false","true","true","String","""email_type""","","/**
 * The extra field for the contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.IM_HANDLE","true","false","false","true","true","String","""im_handle""","","/**
 * The extra field for an IM handle.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_COMPANY_MAIN","true","false","false","true","true","int","10","","","\android\provider\ContactsContract.java"
"android.provider.DataColumns.RES_PACKAGE","true","false","false","true","true","String","""res_package""","","/**
 * The package name to use when creating {@link Resources} objects for
 * this data row. This value is only designed for use when building user
 * interfaces, and should not be used to infer the owner.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""filter"")","","/**
 * <p>
 * The content:// style URL for email lookup using a filter. The filter returns
 * records of MIME type {@link #CONTENT_ITEM_TYPE}. The filter is applied
 * to display names as well as email addresses. The filter argument should be passed
 * as an additional path segment after this URI.
 * </p>
 * <p>The query in the following example will return ""Robert Parr (bob@incredibles.com)""
 * as well as ""Bob Parr (incredible@android.com)"".
 * <pre>
 * Uri uri = Uri.withAppendedPath(Email.CONTENT_LOOKUP_URI, Uri.encode(""bob""));
 * Cursor c = getContentResolver().query(uri,
 * new String[]{Email.DISPLAY_NAME, Email.DATA},
 * null, null, null);
 * </pre>
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/organization""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.UI.LIST_GROUP_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_GROUP""","","/**
 * The action for the contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneLookupColumns.TYPE","true","false","false","true","true","String","""type""","","/**
 * The type of phone number, for example Home or Work.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IN_VISIBLE_GROUP","true","false","false","true","true","String","""in_visible_group""","","/**
 * Lookup value that reflects the {@link Groups#GROUP_VISIBLE} state of
 * any {@link CommonDataKinds.GroupMembership} for this contact.
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.INVISIBLE","false","false","false","false","false","int","1","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.SYMBOL","true","false","false","true","true","String","DATA7","","/**
 * The symbol of this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.SUFFIX","true","false","false","true","true","String","DATA6","","/**
 * The contact's honorific suffix, e.g. ""Jr""
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.PHONETIC_NAME","true","false","false","true","true","String","DATA8","","/**
 * The phonetic name of this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.PHONE","true","false","false","true","true","String","""phone""","","/**
 * The extra field for the contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.DO_NOT_DISTURB","false","false","false","false","false","int","4","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.TYPE_KEEP_SEPARATE","true","false","false","true","true","int","2","","/**
 * Makes sure that the specified raw contacts are NOT included in the same
 * aggregate contact.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_NETMEETING","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.Intents.IM_ISPRIMARY","true","false","false","true","true","String","""im_isprimary""","","/**
 * The extra field for the IM isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.TERTIARY_EMAIL_TYPE","true","false","false","true","true","String","""tertiary_email_type""","","/**
 * The extra field for an optional third contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/name""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DISPLAY_NAME_SOURCE","true","false","false","true","true","String","""display_name_source""","","/**
 * The kind of data that is used as the display name for the contact, such as
 * structured name or email address.  See DisplayNameSources.
 *
 * TODO: convert DisplayNameSources to a link after it is un-hidden
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.NAME","true","false","false","true","true","String","""name""","","/**
 * The extra field for the contact name.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.ADDRESS","true","false","false","true","true","String","DATA1","","/**
 * The email address.
 * <P>Type: TEXT</P>
 * @hide TODO: Unhide in a separate CL
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_KEEP_TOGETHER","true","false","false","true","true","int","1","","/**
 * Makes sure that the specified raw contacts are included in the same
 * aggregate contact.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/setting""","","/**
 * The MIME-type of {@link #CONTENT_URI} providing a single setting.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SYNC2","true","false","false","true","true","String","""data_sync2""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SYNC3","true","false","false","true","true","String","""data_sync3""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SYNC4","true","false","false","true","true","String","""data_sync4""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ACCOUNT_NAME","true","false","false","true","true","String","""account_name""","","/**
 * The name of the account instance to which this row belongs.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.DATA_ID","true","false","false","true","true","String","""data_id""","","/**
 * The ID of the data column. The value will be null if this raw contact has no
 * data rows.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SYNC1","true","false","false","true","true","String","""data_sync1""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.PHONETIC_GIVEN_NAME","true","false","false","true","true","String","DATA7","","/**
 * The phonetic version of the given name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DELETED","true","false","false","true","true","String","""deleted""","","/**
 * The ""deleted"" flag: ""0"" by default, ""1"" if the row has been marked
 * for deletion. When {@link android.content.ContentResolver#delete} is
 * called on a group, it is marked for deletion. The sync adaptor
 * deletes the group on the server and then calls ContactResolver.delete
 * once more, this time setting the the
 * {@link ContactsContract#CALLER_IS_SYNCADAPTER} query parameter to
 * finalize the data removal.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.MODE_MEDIUM","true","false","false","true","true","int","2","@Deprecated","/**
 * Value for {@link #EXTRA_MODE} to show a medium-sized dialog.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.AggregationSuggestions.CONTENT_DIRECTORY","true","false","false","true","true","String","""suggestions""","","/**
 * The directory twig for this sub-table. The URI can be followed by an optional
 * type-to-filter, similar to
 * {@link android.provider.ContactsContract.Contacts#CONTENT_FILTER_URI}.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(Data.CONTENT_URI, ""postals"")","","/**
 * The content:// style URI for all data records of the
 * {@link StructuredPostal#CONTENT_ITEM_TYPE} MIME type.
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.IS_PRIMARY","true","false","false","true","true","String","""is_primary""","","/**
 * Whether this is the primary entry of its kind for the raw contact it belongs to.
 * <P>Type: INTEGER (if set, non-0 means true)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContactsEntity.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/raw_contact_entity""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of raw contact entities.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_WORK_PAGER","true","false","false","true","true","int","18","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.RAW_CONTACT_ID","true","false","false","true","true","String","""raw_contact_id""","","/**
 * A reference to the {@link RawContacts#_ID}
 * that this data belongs to.
 */
","\android\provider\ContactsContract.java"
"android.provider.ProviderStatus.STATUS_UPGRADE_OUT_OF_MEMORY","true","false","false","true","true","int","2","","/**
 * The status used if the provider was in the process of upgrading but ran
 * out of storage. The DATA1 column will contain the estimated amount of
 * storage required (in bytes). Update status to STATUS_NORMAL to force
 * the provider to retry the upgrade.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactCounts.EXTRA_ADDRESS_BOOK_INDEX_COUNTS","true","false","false","true","true","String","""address_book_index_counts""","","/**
 * The array of group counts for the corresponding group.  Contains the same number
 * of elements as the EXTRA_ADDRESS_BOOK_INDEX_TITLES array.
 * <p>TYPE: int[]</p>
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LIST_DEFAULT","true","false","false","true","true","String","""com.android.contacts.action.LIST_DEFAULT""","","/**
 * The action for the default contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.ProviderStatus.STATUS","true","false","false","true","true","String","""status""","","/**
 * An integer representing the current status of the provider.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_STREQUENT_FILTER_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_STREQUENT_URI, ""filter"")","","/**
 * The content:// style URI used for ""type-to-filter"" functionality on the
 * {@link #CONTENT_STREQUENT_URI} URI. The filter string will be used to match
 * various parts of the contact name. The filter argument should be passed
 * as an additional path segment after this URI.
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.CITY","true","false","false","true","true","String","DATA7","","/**
 * Can be city, village, town, borough, etc. This is the postal town
 * and not necessarily the place of residence or place of business.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA9","true","false","false","true","true","String","""data9""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA7","true","false","false","true","true","String","""data7""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA8","true","false","false","true","true","String","""data8""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA5","true","false","false","true","true","String","""data5""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA6","true","false","false","true","true","String","""data6""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SECONDARY_PHONE","true","false","false","true","true","String","""secondary_phone""","","/**
 * The extra field for an optional second contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.SYNC1","true","false","false","true","true","String","""data_sync1""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.SYNC3","true","false","false","true","true","String","""data_sync3""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.SYNC2","true","false","false","true","true","String","""data_sync2""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AVAILABLE","false","false","false","false","false","int","5","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.ProviderStatus.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""provider_status"")","","/**
 * The content:// style URI for this table.  Requests to this URI can be
 * performed on the UI thread because they are always unblocking.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.SYNC4","true","false","false","true","true","String","""data_sync4""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_RADIO","true","false","false","true","true","int","14","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA3","true","false","false","true","true","String","""data3""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.NUMBER","true","false","false","true","true","String","DATA","","/**
 * The phone number as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA4","true","false","false","true","true","String","""data4""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TERTIARY_PHONE","true","false","false","true","true","String","""tertiary_phone""","","/**
 * The extra field for an optional third contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA1","true","false","false","true","true","String","""data1""","","/**
 * Additional data associated with the status.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContactsEntity.FOR_EXPORT_ONLY","true","false","false","true","true","String","""for_export_only""","","/**
 * If {@link #FOR_EXPORT_ONLY} is explicitly set to ""1"", returned Cursor toward
 * Data.CONTENT_URI contains only exportable data.
 *
 * This flag is useful (currently) only for vCard exporter in Contacts app, which
 * needs to exclude ""un-exportable"" data from available data to export, while
 * Contacts app itself has priviledge to access all data including ""un-expotable""
 * ones and providers return all of them regardless of the callers' intention.
 * <P>Type: INTEGER</p>
 *
 * @hide Maybe available only in Eclair and not really ready for public use.
 * TODO: remove, or implement this feature completely. As of now (Eclair),
 * we only use this flag in queryEntities(), not query().
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA2","true","false","false","true","true","String","""data2""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AWAY","false","false","false","false","false","int","2","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.RAW_CONTACT_ID1","true","false","false","true","true","String","""raw_contact_id1""","","/**
 * A reference to the {@link RawContacts#_ID} of the raw contact that the rule applies to.
 */
","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.RAW_CONTACT_ID2","true","false","false","true","true","String","""raw_contact_id2""","","/**
 * A reference to the other {@link RawContacts#_ID} of the raw contact that the rule
 * applies to.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.UNDEFINED","true","false","false","true","true","int","0","","","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.TYPE_AUTOMATIC","true","false","false","true","true","int","0","","/**
 * Allows the provider to automatically decide whether the specified raw contacts should
 * be included in the same aggregate contact or not.
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""filter"")","","/**
 * The content:// style URI used for ""type-to-filter"" functionality on the
 * {@link #CONTENT_URI} URI. The filter string will be used to match
 * various parts of the contact name. The filter argument should be passed
 * as an additional path segment after this URI.
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/email_v2""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of email addresses.
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContactsColumns.AGGREGATION_MODE","true","false","false","true","true","String","""aggregation_mode""","","/**
 * The aggregation mode for this contact.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_MAIN","true","false","false","true","true","int","12","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/website""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/postal-address_v2""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * postal addresses.
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_GROUP_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""group"")","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.COMPANY","true","false","false","true","true","String","""company""","","/**
 * The extra field for the contact company.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.GIVEN_NAME","true","false","false","true","true","String","DATA2","","/**
 * The given name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Preferences.DISPLAY_ORDER_ALTERNATIVE","true","false","false","true","true","int","2","","/**
 * The value for the DISPLAY_ORDER key corresponding to showing the family name first.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.PHOTO","true","false","false","true","true","String","DATA15","","/**
 * Thumbnail photo of the raw contact. This is the raw bytes of an image
 * that could be inflated using {@link android.graphics.BitmapFactory}.
 * <p>
 * Type: BLOB
 * @hide TODO: Unhide in a separate CL
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED","true","false","false","true","true","String","""android.provider.Contacts.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED""","","/**
 * This is the intent that is fired when a search suggestion for dialing a number
 * is clicked on.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.NEIGHBORHOOD","true","false","false","true","true","String","DATA6","","/**
 * This is used to disambiguate a street address when a city
 * contains more than one street with the same name, or to specify a
 * small place whose mail is routed through a larger postal town. In
 * China it could be a county or a minor city.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.AGGREGATION_MODE_SUSPENDED","true","false","false","true","true","int","2","","/**
 * <p>
 * Aggregation mode: aggregation suspended temporarily, and is likely to be resumed later.
 * Changes to the raw contact will update the associated aggregate contact but will not
 * result in any change in how the contact is aggregated. Similar to
 * {@link #AGGREGATION_MODE_DISABLED}, but maintains a link to the corresponding
 * {@link Contacts} aggregate.
 * </p>
 * <p>
 * This can be used to postpone aggregation until after a series of updates, for better
 * performance and/or user experience.
 * </p>
 * <p>
 * Note that changing
 * {@link #AGGREGATION_MODE} from {@link #AGGREGATION_MODE_SUSPENDED} to
 * {@link #AGGREGATION_MODE_DEFAULT} does not trigger an aggregation pass, but any
 * subsequent
 * change to the raw contact's data will.
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.EntityIteratorImpl.DATA_KEYS","false","false","true","true","true","String","new String[] { Data.DATA1, Data.DATA2, Data.DATA3, Data.DATA4, Data.DATA5, Data.DATA6, Data.DATA7, Data.DATA8, Data.DATA9, Data.DATA10, Data.DATA11, Data.DATA12, Data.DATA13, Data.DATA14, Data.DATA15, Data.SYNC1, Data.SYNC2, Data.SYNC3, Data.SYNC4 }","","","\android\provider\ContactsContract.java"
"android.provider.Insert.SECONDARY_EMAIL_TYPE","true","false","false","true","true","String","""secondary_email_type""","","/**
 * The extra field for an optional second contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_SKYPE","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.Entity.CONTENT_DIRECTORY","true","false","false","true","true","String","""entity""","","/**
 * The directory twig for this sub-table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTACT_STATUS_LABEL","true","false","false","true","true","String","""contact_status_label""","","/**
 * The resource ID of the label describing the source of contact
 * status, e.g. ""Google Talk"". This resource is scoped by the
 * {@link #CONTACT_STATUS_RES_PACKAGE}.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AUTHORITY","true","false","false","true","true","String","""com.android.contacts""","","/**
 * The authority for the contacts provider
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_REFERRED_BY","true","false","false","true","true","int","11","","","\android\provider\ContactsContract.java"
"android.provider.Intents.TERTIARY_PHONE","true","false","false","true","true","String","""tertiary_phone""","","/**
 * The extra field for an optional third contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_VCARD_TYPE","true","false","false","true","true","String","""text/x-vcard""","","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * person.
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.COMPANY","true","false","false","true","true","String","DATA","","/**
 * The company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Event.TYPE_OTHER","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EMAIL_TYPE","true","false","false","true","true","String","""email_type""","","/**
 * The extra field for the contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.TERTIARY_PHONE","true","false","false","true","true","String","""tertiary_phone""","","/**
 * The extra field for an optional third contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_RADIO","true","false","false","true","true","int","14","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_MOBILE","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.Photo.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/photo""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/relation""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE","true","false","false","true","true","String","""type""","","/**
 * The type of exception: {@link #TYPE_KEEP_TOGETHER}, {@link #TYPE_KEEP_SEPARATE} or
 * {@link #TYPE_AUTOMATIC}.
 *
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.SyncColumns.ACCOUNT_TYPE","true","false","false","true","true","String","""account_type""","","/**
 * The type of account to which this row belongs, which when paired with
 * {@link #ACCOUNT_NAME} identifies a specific account.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.REGION","true","false","false","true","true","String","DATA8","","/**
 * A state, province, county (in Ireland), Land (in Germany),
 * departement (in France), etc.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LOOKUP_KEY","true","false","false","true","true","String","""lookup""","","/**
 * An opaque value that contains hints on how to find the contact if
 * its row id changed as a result of a sync or aggregation.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TITLE","true","false","false","true","true","String","""title""","","/**
 * The display title of this group.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactStatusColumns.CONTACT_STATUS_ICON","true","false","false","true","true","String","""contact_status_icon""","","/**
 * The resource ID of the icon for the source of contact status. This
 * resource is scoped by the {@link #CONTACT_STATUS_RES_PACKAGE}.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_SHORT_NAME","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_KEEP_SEPARATE","true","false","false","true","true","int","2","","/**
 * Makes sure that the specified raw contacts are NOT included in the same
 * aggregate contact.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SYMBOL","true","false","false","true","true","String","DATA7","","/**
 * The symbol of this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonColumns.LABEL","true","false","false","true","true","String","DataColumns.DATA3","","/**
 * The user defined label for the the contact method.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_INITIALS","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.Preferences.DISPLAY_ORDER_PRIMARY","true","false","false","true","true","int","1","","/**
 * The value for the DISPLAY_ORDER key corresponding to showing the given name first.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTACT_STATUS_TIMESTAMP","true","false","false","true","true","String","""contact_status_ts""","","/**
 * The absolute time in milliseconds when the latest status was
 * inserted/updated.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupMembership.GROUP_SOURCE_ID","true","false","false","true","true","String","""group_sourceid""","","/**
 * The sourceid of the group that this group membership refers to.  Exactly one of
 * this or {@link #GROUP_ROW_ID} must be set when inserting a row.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.MODE_SMALL","true","false","false","true","true","int","1","@Deprecated","/**
 * Value for {@link #EXTRA_MODE} to show a small-sized dialog.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PACKAGE_COMMON","true","false","false","true","true","String","""common""","","/**
 * The {@link Data#RES_PACKAGE} value for common data that should be
 * shown using a default style.
 *
 * @hide RES_PACKAGE is hidden
 */
","\android\provider\ContactsContract.java"
"android.provider.Nickname.TYPE_SHORT_NAME","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_OTHER_FAX","true","false","false","true","true","int","13","","","\android\provider\ContactsContract.java"
"android.provider.Note.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/note""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.IM_PROTOCOL","true","false","false","true","true","String","""im_protocol""","","/**
 * The extra field for the IM protocol
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.UNGROUPED_VISIBLE","true","false","false","true","true","String","""ungrouped_visible""","","/**
 * Flag indicating if contacts without any {@link CommonDataKinds.GroupMembership}
 * entries should be visible in any user interface.
 * <p>
 * Type: INTEGER (boolean)
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.PHONE_ISPRIMARY","true","false","false","true","true","String","""phone_isprimary""","","/**
 * The extra field for the phone isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactNameColumns.PHONETIC_NAME","true","false","false","true","true","String","""phonetic_name""","","/**
 * <p>
 * Pronunciation of the full name in the phonetic alphabet specified by
 * {@link #PHONETIC_NAME_STYLE}.
 * </p>
 * <p>
 * The value may be set manually by the user.
 * This capability is is of interest only in countries
 * with commonly used phonetic
 * alphabets, such as Japan and Korea.  See PhoneticNameStyle.
 * </p>
 *
 * TODO: convert PhoneticNameStyle to a link after it is un-hidden
 */
","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/aggregation_exception""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of data.
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_SKYPE","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.Email.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/email_v2""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactOptionsColumns.STARRED","true","false","false","true","true","String","""starred""","","/**
 * Is the contact starred?
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_FAX_HOME","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EMAIL_ISPRIMARY","true","false","false","true","true","String","""email_isprimary""","","/**
 * The extra field for the email isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_SISTER","true","false","false","true","true","int","13","","","\android\provider\ContactsContract.java"
"android.provider.StatusUpdates.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""status_updates"")","","/**
 * The content:// style URI for this table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DEPARTMENT","true","false","false","true","true","String","DATA5","","/**
 * The department at this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHONETIC_NAME_STYLE","true","false","false","true","true","String","DATA10","","/**
 * The alphabet used for capturing the phonetic name.
 * See {@link ContactsContract.PhoneticNameStyle}.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Groups.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/group""","","/**
 * The MIME type of a directory of groups.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_INITIALS","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.Insert.POSTAL","true","false","false","true","true","String","""postal""","","/**
 * The extra field for the contact postal address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_STREQUENT_FILTER_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_STREQUENT_URI, ""filter"")","","/**
 * The content:// style URI used for ""type-to-filter"" functionality on the
 * {@link #CONTENT_STREQUENT_URI} URI. The filter string will be used to match
 * various parts of the contact name. The filter argument should be passed
 * as an additional path segment after this URI.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SEARCH_SUGGESTION_CLICKED","true","false","false","true","true","String","""android.provider.Contacts.SEARCH_SUGGESTION_CLICKED""","","/**
 * This is the intent that is fired when a search suggestion is clicked on.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA","true","false","false","true","true","String","DataColumns.DATA1","","/**
 * The data for the contact method.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneticNameStyle.KOREAN","true","false","false","true","true","int","5","","/**
 * Hangul is the Korean phonetic alphabet.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.JOB_TITLE","true","false","false","true","true","String","""job_title""","","/**
 * The extra field for the contact job title.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.NUMBER","true","false","false","true","true","String","DATA","","/**
 * The phone number as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SOURCE_ID","true","false","false","true","true","String","""sourceid""","","/**
 * String that uniquely identifies this row to its source account.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonColumns.TYPE","true","false","false","true","true","String","DataColumns.DATA2","","/**
 * The type of data, for example Home or Work.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.DisplayNameSources.EMAIL","true","false","false","true","true","int","10","","","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_WORK_MOBILE","true","false","false","true","true","int","17","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL","true","false","false","true","true","String","DATA5","","/**
 * This column should be populated with one of the defined
 * constants, e.g. {@link #PROTOCOL_YAHOO}. If the value of this
 * column is {@link #PROTOCOL_CUSTOM}, the {@link #CUSTOM_PROTOCOL}
 * should contain the name of the custom protocol.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.FORMATTED_ADDRESS","true","false","false","true","true","String","DATA","","/**
 * The full, unstructured postal address. <i>This field must be
 * consistent with any structured data.</i>
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_OTHER_FAX","true","false","false","true","true","int","13","","","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL","true","false","false","true","true","String","DATA5","","/**
 * This column should be populated with one of the defined
 * constants, e.g. {@link #PROTOCOL_YAHOO}. If the value of this
 * column is {@link #PROTOCOL_CUSTOM}, the {@link #CUSTOM_PROTOCOL}
 * should contain the name of the custom protocol.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IDLE","false","false","false","false","false","int","3","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_LOOKUP_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""lookup"")","","/**
 * A content:// style URI for this table that should be used to create
 * shortcuts or otherwise create long-term links to contacts. This URI
 * should always be followed by a ""/"" and the contact's {@link #LOOKUP_KEY}.
 * It can optionally also have a ""/"" and last known contact ID appended after
 * that. This ""complete"" format is an important optimization and is highly recommended.
 * <p>
 * As long as the contact's row ID remains the same, this URI is
 * equivalent to {@link #CONTENT_URI}. If the contact's row ID changes
 * as a result of a sync or aggregation, this URI will look up the
 * contact using indirect information (sync IDs or constituent raw
 * contacts).
 * <p>
 * Lookup key should be appended unencoded - it is stored in the encoded
 * form, ready for use in a URI.
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_VCARD_TYPE","true","false","false","true","true","String","""text/x-vcard""","","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * person.
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_STREQUENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""strequent"")","","/**
 * The content:// style URI for this table joined with useful data from
 * {@link ContactsContract.Data}, filtered to include only starred contacts
 * and the most frequently contacted contacts.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_ICQ","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SORT_ORDER","true","false","false","true","true","String","""android.contacts.SORT_ORDER""","","/**
 * A key in the {@link android.provider.Settings android.provider.Settings} provider
 * that stores the preferred sorting order for contacts (by given name vs. by family name).
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED","true","false","false","true","true","String","""android.provider.Contacts.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED""","","/**
 * This is the intent that is fired when a search suggestion for creating a contact
 * is clicked on.
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.OFFICE_LOCATION","true","false","false","true","true","String","DATA9","","/**
 * The office location of this organization.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.SHOW_OR_CREATE_CONTACT","true","false","false","true","true","String","""com.android.contacts.action.SHOW_OR_CREATE_CONTACT""","","/**
 * Takes as input a data URI with a mailto: or tel: scheme. If a single
 * contact exists with the given data it will be shown. If no contact
 * exists, a dialog will ask the user if they want to create a new
 * contact with the provided details filled in. If multiple contacts
 * share the data the user will be prompted to pick which contact they
 * want to view.
 * <p>
 * For <code>mailto:</code> URIs, the scheme specific portion must be a
 * raw email address, such as one built using
 * {@link Uri#fromParts(String, String, String)}.
 * <p>
 * For <code>tel:</code> URIs, the scheme specific portion is compared
 * to existing numbers using the standard caller ID lookup algorithm.
 * The number must be properly encoded, for example using
 * {@link Uri#fromParts(String, String, String)}.
 * <p>
 * Any extras from the {@link Insert} class will be passed along to the
 * create activity if there are no contacts to show.
 * <p>
 * Passing true for the {@link #EXTRA_FORCE_CREATE} extra will skip
 * prompting the user when the contact doesn't exist.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.COMPANY","true","false","false","true","true","String","""company""","","/**
 * The extra field for the contact company.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.GROUP_VISIBLE","true","false","false","true","true","String","""group_visible""","","/**
 * Flag indicating if the contacts belonging to this group should be
 * visible in any user interface.
 * <p>
 * Type: INTEGER (boolean)
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ACTION_QUICK_CONTACT","true","false","false","true","true","String","""com.android.contacts.action.QUICK_CONTACT""","","/**
 * Action used to trigger person pivot dialog.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.NOTE","true","false","false","true","true","String","DATA1","","/**
 * The note text.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PHONETIC_NAME","true","false","false","true","true","String","DATA8","","/**
 * The phonetic name of this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.JOB_DESCRIPTION","true","false","false","true","true","String","DATA6","","/**
 * The job description at this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.AGGREGATION_MODE_DEFAULT","true","false","false","true","true","int","0","","/**
 * Aggregation mode: aggregate immediately after insert or update operation(s) are complete.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IM_ACCOUNT","true","false","false","true","true","String","""im_account""","","/**
 * The IM account for the local user that the presence data came from.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactStatusColumns.CONTACT_STATUS_TIMESTAMP","true","false","false","true","true","String","""contact_status_ts""","","/**
 * The absolute time in milliseconds when the latest status was
 * inserted/updated.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneticNameStyle.PINYIN","true","false","false","true","true","int","3","","/**
 * Pinyin is a phonetic method of entering Chinese characters. Typically not explicitly
 * shown in UIs, but used for searches and sorting.
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_AIM","true","false","false","true","true","int","0","","","\android\provider\ContactsContract.java"
"android.provider.Insert.ACTION","true","false","false","true","true","String","Intent.ACTION_INSERT","","/**
 * The action code to use when adding a contact
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.VERSION","true","false","false","true","true","String","""version""","","/**
 * Version number that is updated whenever this row or its related data
 * changes.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""contacts"")","","/**
 * The content:// style URI for this table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TERTIARY_EMAIL","true","false","false","true","true","String","""tertiary_email""","","/**
 * The extra field for an optional third contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.POSTCODE","true","false","false","true","true","String","DATA9","","/**
 * Postal code. Usually country-wide, but sometimes specific to the
 * city (e.g. ""2"" in ""Dublin 2, Ireland"" addresses).
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TITLE","true","false","false","true","true","String","DATA4","","/**
 * The position title at this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SNIPPET_MIMETYPE","true","false","false","true","true","String","""snippet_mimetype""","","/**
 * The type of data that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContactsEntity.DATA_ID","true","false","false","true","true","String","""data_id""","","/**
 * The ID of the data column. The value will be null if this raw contact has no data rows.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Settings.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/setting""","","/**
 * The MIME-type of {@link #CONTENT_URI} providing a single setting.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.MODE_MEDIUM","true","false","false","true","true","int","2","@Deprecated","/**
 * Value for {@link #EXTRA_MODE} to show a medium-sized dialog.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA_VERSION","true","false","false","true","true","String","""data_version""","","/**
 * The version of this data record. This is a read-only value. The data column is
 * guaranteed to not change without the version going up. This value is monotonically
 * increasing.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.FORMATTED_ADDRESS","true","false","false","true","true","String","DATA","","/**
 * The full, unstructured postal address. <i>This field must be
 * consistent with any structured data.</i>
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactOptionsColumns.CUSTOM_RINGTONE","true","false","false","true","true","String","""custom_ringtone""","","/**
 * URI for a custom ringtone associated with the contact. If null or missing,
 * the default ringtone is used.
 * <P>Type: TEXT (URI to the ringtone)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.LIST_DEFAULT","true","false","false","true","true","String","""com.android.contacts.action.LIST_DEFAULT""","","/**
 * The action for the default contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_FAX_HOME","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.Intents.EMAIL_ISPRIMARY","true","false","false","true","true","String","""email_isprimary""","","/**
 * The extra field for the email isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA_VERSION","true","false","false","true","true","String","""data_version""","","/**
 * The version of this data record. This is a read-only value. The data column is
 * guaranteed to not change without the version going up. This value is monotonically
 * increasing.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.POBOX","true","false","false","true","true","String","DATA5","","/**
 * Covers actual P.O. boxes, drawers, locked bags, etc. This is
 * usually but not always mutually exclusive with street.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonColumns.DATA","true","false","false","true","true","String","DataColumns.DATA1","","/**
 * The data for the contact method.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EXTRA_EXCLUDE_MIMES","true","false","false","true","true","String","""exclude_mimes""","@Deprecated","/**
 * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to indicate
 * a list of specific MIME-types to exclude and not display. Stored as a
 * {@link String} array.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.DISPLAY_NAME","true","false","false","true","true","String","DATA4","","/**
 * The display name for the email address
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_MMS","true","false","false","true","true","int","20","","","\android\provider\ContactsContract.java"
"android.provider.QuickContact.MODE_LARGE","true","false","false","true","true","int","3","","/**
 * Large QuickContact mode, includes actions and larger, card-like summary
 * of the {@link Contacts} entry being shown. This may include detailed
 * information, such as a photo.
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.DISPLAY_NAME","true","false","false","true","true","String","DATA1","","/**
 * The name that should be used to display the contact.
 * <i>Unstructured component of the name should be consistent with
 * its structured representation.</i>
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.DisplayNameSources.PHONE","true","false","false","true","true","int","20","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_ICQ","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.DEPARTMENT","true","false","false","true","true","String","DATA5","","/**
 * The department at this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_SPOUSE","true","false","false","true","true","int","14","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_CUSTOM","true","false","false","true","true","int","-1","","/*
             * The predefined IM protocol types.
             */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IS_SUPER_PRIMARY","true","false","false","true","true","String","""is_super_primary""","","/**
 * Whether this is the primary entry of its kind for the aggregate
 * contact it belongs to. Any data record that is ""super primary"" must
 * also be ""primary"".
 * <P>Type: INTEGER (if set, non-0 means true)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_SKYPE","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.Organization.TYPE_OTHER","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.Website.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/website""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_CAR","true","false","false","true","true","int","9","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""filter"")","","/**
 * <p>
 * The content:// style URL for email lookup using a filter. The filter returns
 * records of MIME type {@link #CONTENT_ITEM_TYPE}. The filter is applied
 * to display names as well as email addresses. The filter argument should be passed
 * as an additional path segment after this URI.
 * </p>
 * <p>The query in the following example will return ""Robert Parr (bob@incredibles.com)""
 * as well as ""Bob Parr (incredible@android.com)"".
 * <pre>
 * Uri uri = Uri.withAppendedPath(Email.CONTENT_LOOKUP_URI, Uri.encode(""bob""));
 * Cursor c = getContentResolver().query(uri,
 * new String[]{Email.DISPLAY_NAME, Email.DATA},
 * null, null, null);
 * </pre>
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EXTRA_ADDRESS_BOOK_INDEX_TITLES","true","false","false","true","true","String","""address_book_index_titles""","","/**
 * The array of address book index titles, which are returned in the
 * same order as the data in the cursor.
 * <p>TYPE: String[]</p>
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/postal-address_v2""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.TYPE_WORK","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.Im.TYPE_OTHER","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SECONDARY_PHONE_TYPE","true","false","false","true","true","String","""secondary_phone_type""","","/**
 * The extra field for an optional second contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.SearchSnippetColumns.SNIPPET_DATA4","true","false","false","true","true","String","""snippet_data4""","","/**
 * The {@link Data#DATA4} field of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_SISTER","true","false","false","true","true","int","13","","","\android\provider\ContactsContract.java"
"android.provider.Insert.IM_HANDLE","true","false","false","true","true","String","""im_handle""","","/**
 * The extra field for an IM handle.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Preferences.SORT_ORDER","true","false","false","true","true","String","""android.contacts.SORT_ORDER""","","/**
 * A key in the {@link android.provider.Settings android.provider.Settings} provider
 * that stores the preferred sorting order for contacts (by given name vs. by family name).
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.RAW_CONTACT_ID","true","false","false","true","true","String","""raw_contact_id""","","/**
 * A reference to the {@link RawContacts#_ID}
 * that this data belongs to.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.SECONDARY_EMAIL","true","false","false","true","true","String","""secondary_email""","","/**
 * The extra field for an optional second contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.UI.LIST_STREQUENT_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_STREQUENT""","","/**
 * The action for the ""strequent"" contacts list tab. It first lists the starred
 * contacts in alphabetical order and then the frequent contacts in descending
 * order of the number of times they have been contacted.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.FULL_MODE","true","false","false","true","true","String","""full_mode""","","/**
 * If present, forces a bypass of quick insert mode.
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneLookup.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""phone_lookup"")","","/**
 * The content:// style URI for this table. Append the phone number you want to lookup
 * to this URI and query it to perform a lookup. For example:
 * <pre>
 * Uri lookupUri = Uri.withAppendedPath(PhoneLookup.CONTENT_URI, Uri.encode(phoneNumber));
 * </pre>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.POBOX","true","false","false","true","true","String","DATA5","","/**
 * Covers actual P.O. boxes, drawers, locked bags, etc. This is
 * usually but not always mutually exclusive with street.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""provider_status"")","","/**
 * The content:// style URI for this table.  Requests to this URI can be
 * performed on the UI thread because they are always unblocking.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.EXTRA_EXCLUDE_MIMES","true","false","false","true","true","String","""exclude_mimes""","@Deprecated","/**
 * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to indicate
 * a list of specific MIME-types to exclude and not display. Stored as a
 * {@link String} array.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CJK","true","false","false","true","true","int","2","","/**
 * Used if the name is written in Hanzi/Kanji/Hanja and we could not determine
 * which specific language it belongs to: Chinese, Japanese or Korean.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.DISPLAY_NAME","true","false","false","true","true","String","DATA4","","/**
 * The display name for the email address
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHONETIC_GIVEN_NAME","true","false","false","true","true","String","DATA7","","/**
 * The phonetic version of the given name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.SearchSnippetColumns.SNIPPET_DATA1","true","false","false","true","true","String","""snippet_data1""","","/**
 * The {@link Data#DATA1} field of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.SearchSnippetColumns.SNIPPET_DATA3","true","false","false","true","true","String","""snippet_data3""","","/**
 * The {@link Data#DATA3} field of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.SearchSnippetColumns.SNIPPET_DATA2","true","false","false","true","true","String","""snippet_data2""","","/**
 * The {@link Data#DATA2} field of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.CITY","true","false","false","true","true","String","DATA7","","/**
 * Can be city, village, town, borough, etc. This is the postal town
 * and not necessarily the place of residence or place of business.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.SHOULD_SYNC","true","false","false","true","true","String","""should_sync""","","/**
 * Whether this group should be synced if the SYNC_EVERYTHING settings
 * is false for this group's account.
 * <p>
 * Type: INTEGER (boolean)
 */
","\android\provider\ContactsContract.java"
"android.provider.SettingsColumns.ACCOUNT_NAME","true","false","false","true","true","String","""account_name""","","/**
 * The name of the account instance to which this row belongs.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.POBOX","true","false","false","true","true","String","DATA5","","/**
 * Covers actual P.O. boxes, drawers, locked bags, etc. This is
 * usually but not always mutually exclusive with street.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.IS_SUPER_PRIMARY","true","false","false","true","true","String","""is_super_primary""","","/**
 * Whether this is the primary entry of its kind for the aggregate
 * contact it belongs to. Any data record that is ""super primary"" must
 * also be ""primary"".
 * <P>Type: INTEGER (if set, non-0 means true)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ANY_UNSYNCED","true","false","false","true","true","String","""any_unsynced""","","/**
 * Read-only flag indicating if this {@link #SHOULD_SYNC} or any
 * {@link Groups#SHOULD_SYNC} under this account have been marked as
 * unsynced.
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_WORK_PAGER","true","false","false","true","true","int","18","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.JOB_DESCRIPTION","true","false","false","true","true","String","DATA6","","/**
 * The job description at this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.RES_PACKAGE","true","false","false","true","true","String","""res_package""","","/**
 * The package name to use when creating {@link Resources} objects for
 * this group. This value is only designed for use when building user
 * interfaces, and should not be used to infer the owner.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/phone_v2""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.MODE_LARGE","true","false","false","true","true","int","3","@Deprecated","/**
 * Value for {@link #EXTRA_MODE} to show a large-sized dialog.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ProviderStatus.STATUS_CHANGING_LOCALE","true","false","false","true","true","int","3","","/**
 * The status used during a locale change.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS_UPGRADE_OUT_OF_MEMORY","true","false","false","true","true","int","2","","/**
 * The status used if the provider was in the process of upgrading but ran
 * out of storage. The DATA1 column will contain the estimated amount of
 * storage required (in bytes). Update status to STATUS_NORMAL to force
 * the provider to retry the upgrade.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_WORK_MOBILE","true","false","false","true","true","int","17","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SEND_TO_VOICEMAIL","true","false","false","true","true","String","""send_to_voicemail""","","/**
 * Whether the contact should always be sent to voicemail. If missing,
 * defaults to false.
 * <P>Type: INTEGER (0 for false, 1 for true)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CUSTOM_PROTOCOL","true","false","false","true","true","String","DATA6","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_ANNIVERSARY","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.MIMETYPE","true","false","false","true","true","String","""mimetype""","","/**
 * The MIME type of the item represented by this row.
 */
","\android\provider\ContactsContract.java"
"android.provider.Photo.CONTENT_DIRECTORY","true","false","false","true","true","String","""photo""","","/**
 * The directory twig for this sub-table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_OTHER_NAME","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_ASSISTANT","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SYSTEM_ID","true","false","false","true","true","String","""system_id""","","/**
 * The ID of this group if it is a System Group, i.e. a group that has a special meaning
 * to the sync adapter, null otherwise.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.COUNTRY","true","false","false","true","true","String","DATA10","","/**
 * The name or code of the country.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.FILTER_TEXT_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.FILTER_TEXT""","","/**
 * Used as an int extra field in {@link #FILTER_CONTACTS_ACTION}
 * intents to supply the text on which to filter.
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.GROUP_VISIBLE","true","false","false","true","true","String","""group_visible""","","/**
 * Flag indicating if the contacts belonging to this group should be
 * visible in any user interface.
 * <p>
 * Type: INTEGER (boolean)
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_TELEX","true","false","false","true","true","int","15","","","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_ASSISTANT","true","false","false","true","true","int","19","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_VCARD_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""as_vcard"")","","/**
 * Base {@link Uri} for referencing a single {@link Contacts} entry,
 * created by appending {@link #LOOKUP_KEY} using
 * {@link Uri#withAppendedPath(Uri, String)}. Provides
 * {@link OpenableColumns} columns when queried, or returns the
 * referenced contact formatted as a vCard when opened through
 * {@link ContentResolver#openAssetFileDescriptor(Uri, String)}.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA10","true","false","false","true","true","String","""data10""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.PRESENCE","true","false","false","true","true","String","""mode""","","/**
 * Contact's latest presence level.
 * <P>Type: INTEGER (one of the values below)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA11","true","false","false","true","true","String","""data11""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA12","true","false","false","true","true","String","""data12""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA13","true","false","false","true","true","String","""data13""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PHONETIC_NAME_STYLE","true","false","false","true","true","String","DATA10","","/**
 * The alphabet used for capturing the phonetic name.
 * See {@link ContactsContract.PhoneticNameStyle}.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_DEFAULT","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_MSN","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_REFERRED_BY","true","false","false","true","true","int","11","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.POSTAL_ISPRIMARY","true","false","false","true","true","String","""postal_isprimary""","","/**
 * The extra field for the postal isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA14","true","false","false","true","true","String","""data14""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA15","true","false","false","true","true","String","""data15""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific. By convention,
 * this field is used to store BLOBs (binary data).
 */
","\android\provider\ContactsContract.java"
"android.provider.Settings.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""settings"")","","/**
 * The content:// style URI for this table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TIMES_CONTACTED","true","false","false","true","true","String","""times_contacted""","","/**
 * The number of times a contact has been contacted
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_NETMEETING","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.Intents.SECONDARY_EMAIL_TYPE","true","false","false","true","true","String","""secondary_email_type""","","/**
 * The extra field for an optional second contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.MODE_LARGE","true","false","false","true","true","int","3","@Deprecated","/**
 * Value for {@link #EXTRA_MODE} to show a large-sized dialog.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.SECONDARY_PHONE_TYPE","true","false","false","true","true","String","""secondary_phone_type""","","/**
 * The extra field for an optional second contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_DIRECTORY","true","false","false","true","true","String","""entity""","","/**
 * The directory twig for this sub-table
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_RADIO","true","false","false","true","true","int","14","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS_UPGRADING","true","false","false","true","true","int","1","","/**
 * The status used when the provider is in the process of upgrading.  Contacts
 * are temporarily unaccessible.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PHONETIC_MIDDLE_NAME","true","false","false","true","true","String","DATA8","","/**
 * The phonetic version of the additional name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_YAHOO","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactNameColumns.DISPLAY_NAME_ALTERNATIVE","true","false","false","true","true","String","""display_name_alt""","","/**
 * <p>
 * An alternative representation of the display name, such as ""family name first""
 * instead of ""given name first"" for Western names.  If an alternative is not
 * available, the values should be the same as {@link #DISPLAY_NAME_PRIMARY}.
 * </p>
 * <p>
 * A contacts provider is free to provide alternatives as necessary for
 * its target market.
 * For example the default Android Open Source Project contacts provider
 * currently provides an
 * alternative in a single case:  if the display name is
 * based on the structured name and the structured name follows
 * the Western full name style, then the field contains the ""family name first""
 * version of the full name.
 * Other cases may be added later.
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.POSTAL_TYPE","true","false","false","true","true","String","""postal_type""","","/**
 * The extra field for the contact postal address type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.StructuredPostal}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Website.TYPE_PROFILE","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.Groups.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""groups"")","","/**
 * The content:// style URI for this table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DIRTY","true","false","false","true","true","String","""dirty""","","/**
 * Flag indicating that {@link #VERSION} has changed, and this row needs
 * to be synchronized by its owning account.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_SUMMARY_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""groups_summary"")","","/**
 * The content:// style URI for this table joined with details data from
 * {@link ContactsContract.Data}.
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/im""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DO_NOT_DISTURB","false","false","false","false","false","int","4","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_YAHOO","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_MOTHER","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.NOTES","true","false","false","true","true","String","""notes""","","/**
 * Notes about the group.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactOptionsColumns.LAST_TIME_CONTACTED","true","false","false","true","true","String","""last_time_contacted""","","/**
 * The last time a contact was contacted.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.DisplayNameSources.ORGANIZATION","true","false","false","true","true","int","30","","","\android\provider\ContactsContract.java"
"android.provider.Entity.DATA_ID","true","false","false","true","true","String","""data_id""","","/**
 * The ID of the data column. The value will be null if this raw contact has no
 * data rows.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(Data.CONTENT_URI, ""postals"")","","/**
 * The content:// style URI for all data records of the
 * {@link StructuredPostal#CONTENT_ITEM_TYPE} MIME type.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHONETIC_FAMILY_NAME","true","false","false","true","true","String","DATA9","","/**
 * The phonetic version of the family name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_CHILD","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_BIRTHDAY","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_CUSTOM","true","false","false","true","false","int","0","","/**
 * A custom type. The custom label should be supplied by user.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.UNGROUPED_COUNT","true","false","false","true","true","String","""summ_count""","","/**
 * Read-only count of {@link Contacts} from a specific source that have
 * no {@link CommonDataKinds.GroupMembership} entries.
 * <p>
 * Type: INTEGER
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.GROUP_SOURCE_ID","true","false","false","true","true","String","""group_sourceid""","","/**
 * The sourceid of the group that this group membership refers to.  Exactly one of
 * this or {@link #GROUP_ROW_ID} must be set when inserting a row.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_LOOKUP_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""lookup"")","","/**
 * <p>
 * The content:// style URL for looking up data rows by email address. The
 * lookup argument, an email address, should be passed as an additional path segment
 * after this URI.
 * </p>
 * <p>Example:
 * <pre>
 * Uri uri = Uri.withAppendedPath(Email.CONTENT_LOOKUP_URI, Uri.encode(email));
 * Cursor c = getContentResolver().query(uri,
 * new String[]{Email.CONTACT_ID, Email.DISPLAY_NAME, Email.DATA},
 * null, null, null);
 * </pre>
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_FATHER","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.POSTCODE","true","false","false","true","true","String","DATA9","","/**
 * Postal code. Usually country-wide, but sometimes specific to the
 * city (e.g. ""2"" in ""Dublin 2, Ireland"" addresses).
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.PresenceColumns.IM_ACCOUNT","true","false","false","true","true","String","""im_account""","","/**
 * The IM account for the local user that the presence data came from.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusUpdates.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/status-update""","","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * status update detail.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.LIST_CONTACTS_WITH_PHONES_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_CONTACTS_WITH_PHONES""","","/**
 * The action for the contacts with phone numbers list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.MIDDLE_NAME","true","false","false","true","true","String","DATA5","","/**
 * The contact's middle name
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_FAX_WORK","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PRESENCE_STATUS","true","false","false","true","true","String","PRESENCE","@Deprecated","/**
 * @deprecated use {@link #PRESENCE}
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.AWAY","false","false","false","false","false","int","2","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHONETIC_NAME","true","false","false","true","true","String","""phonetic_name""","","/**
 * The extra field for the contact phonetic name.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.SettingsColumns.SHOULD_SYNC","true","false","false","true","true","String","""should_sync""","","/**
 * Depending on the mode defined by the sync-adapter, this flag controls
 * the top-level sync behavior for this data source.
 * <p>
 * Type: INTEGER (boolean)
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_MSN","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_MMS","true","false","false","true","true","int","20","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LIST_GROUP_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_GROUP""","","/**
 * The action for the contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_GOOGLE_TALK","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_CUSTOM","true","false","false","true","true","int","-1","","/*
             * The predefined IM protocol types.
             */
","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.SYSTEM_ID","true","false","false","true","true","String","""system_id""","","/**
 * The ID of this group if it is a System Group, i.e. a group that has a special meaning
 * to the sync adapter, null otherwise.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.STATUS_LABEL","true","false","false","true","true","String","""status_label""","","/**
 * The resource ID of the label describing the source of the status update, e.g. ""Google
 * Talk"".  This resource should be scoped by the {@link #STATUS_RES_PACKAGE}.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.COUNTRY","true","false","false","true","true","String","DATA10","","/**
 * The name or code of the country.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.PRESENCE_STATUS","true","false","false","true","true","String","PRESENCE","@Deprecated","/**
 * @deprecated use {@link #PRESENCE}
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_CHILD","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_MAINDEN_NAME","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EMAIL","true","false","false","true","true","String","""email""","","/**
 * The extra field for the contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHONE_TYPE","true","false","false","true","true","String","""phone_type""","","/**
 * The extra field for the contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_MAIN","true","false","false","true","true","int","12","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PHONETIC_GIVEN_NAME","true","false","false","true","true","String","DATA7","","/**
 * The phonetic version of the given name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_DOMESTIC_PARTNER","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_DEFAULT","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LIST_CONTACTS_WITH_PHONES_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_CONTACTS_WITH_PHONES""","","/**
 * The action for the contacts with phone numbers list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_MOTHER","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_RELATIVE","true","false","false","true","true","int","12","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS_RES_PACKAGE","true","false","false","true","true","String","""status_res_package""","","/**
 * The package containing resources for this status: label and icon.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ATTACH_IMAGE","true","false","false","true","true","String","""com.android.contacts.action.ATTACH_IMAGE""","","/**
 * Starts an Activity that lets the user pick a contact to attach an image to.
 * After picking the contact it launches the image cropper in face detection mode.
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.CONTENT_DIRECTORY","true","false","false","true","true","String","""entity""","","/**
 * The directory twig for this sub-table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_AIM","true","false","false","true","true","int","0","","","\android\provider\ContactsContract.java"
"android.provider.SearchSnippetColumns.SNIPPET_DATA_ID","true","false","false","true","true","String","""snippet_data_id""","","/**
 * The ID of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.SyncColumns.SOURCE_ID","true","false","false","true","true","String","""sourceid""","","/**
 * String that uniquely identifies this row to its source account.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SUMMARY_COUNT","true","false","false","true","true","String","""summ_count""","","/**
 * The total number of {@link Contacts} that have
 * {@link CommonDataKinds.GroupMembership} in this group. Read-only value that is only
 * present when querying {@link Groups#CONTENT_SUMMARY_URI}.
 * <p>
 * Type: INTEGER
 */
","\android\provider\ContactsContract.java"
"android.provider.SyncState.CONTENT_DIRECTORY","true","false","false","true","true","String","SyncStateContract.Constants.CONTENT_DIRECTORY","","","\android\provider\ContactsContract.java"
"android.provider.Settings.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/setting""","","/**
 * The MIME-type of {@link #CONTENT_URI} providing a directory of
 * settings.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.TERTIARY_PHONE_TYPE","true","false","false","true","true","String","""tertiary_phone_type""","","/**
 * The extra field for an optional third contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_YAHOO","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.Intents.ACTION","true","false","false","true","true","String","Intent.ACTION_INSERT","","/**
 * The action code to use when adding a contact
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.STATUS_RES_PACKAGE","true","false","false","true","true","String","""status_res_package""","","/**
 * The package containing resources for this status: label and icon.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EXTRA_MODE","true","false","false","true","true","String","""mode""","@Deprecated","/**
 * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to specify a
 * desired dialog style, usually a variation on size. One of
 * {@link #MODE_SMALL}, {@link #MODE_MEDIUM}, or {@link #MODE_LARGE}.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA1","true","false","false","true","true","String","""data1""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA2","true","false","false","true","true","String","""data2""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/raw_contact""","","/**
 * The MIME type of the results from {@link #CONTENT_URI} when a specific
 * ID value is not provided, and multiple raw contacts may be returned.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.POSTAL_ISPRIMARY","true","false","false","true","true","String","""postal_isprimary""","","/**
 * The extra field for the postal isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CALLER_IS_SYNCADAPTER","true","false","false","true","true","String","""caller_is_syncadapter""","","/**
 * An optional URI parameter for insert, update, or delete queries
 * that allows the caller
 * to specify that it is a sync adapter. The default value is false. If true
 * {@link RawContacts#DIRTY} is not automatically set and the
 * ""syncToNetwork"" parameter is set to false when calling
 * {@link
 * ContentResolver#notifyChange(android.net.Uri, android.database.ContentObserver, boolean)}.
 * This prevents an unnecessary extra synchronization, see the discussion of
 * the delete operation in {@link RawContacts}.
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA9","true","false","false","true","true","String","""data9""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.Nickname.TYPE_OTHER_NAME","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA7","true","false","false","true","true","String","""data7""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA8","true","false","false","true","true","String","""data8""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA5","true","false","false","true","true","String","""data5""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA6","true","false","false","true","true","String","""data6""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA3","true","false","false","true","true","String","""data3""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA4","true","false","false","true","true","String","""data4""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.TYPE_WORK","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.QuickContact.MODE_MEDIUM","true","false","false","true","true","int","2","","/**
 * Medium QuickContact mode, includes actions and light summary describing
 * the {@link Contacts} entry being shown. This may include social
 * status and presence details.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.TERTIARY_PHONE_TYPE","true","false","false","true","true","String","""tertiary_phone_type""","","/**
 * The extra field for an optional third contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.IM_ISPRIMARY","true","false","false","true","true","String","""im_isprimary""","","/**
 * The extra field for the IM isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.SyncColumns.VERSION","true","false","false","true","true","String","""version""","","/**
 * Version number that is updated whenever this row or its related data
 * changes.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactStatusColumns.CONTACT_STATUS_RES_PACKAGE","true","false","false","true","true","String","""contact_status_res_package""","","/**
 * The package containing resources for this status: label and icon.
 * <p>Type: TEXT</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.EXTRA_MODE","true","false","false","true","true","String","""mode""","@Deprecated","/**
 * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to specify a
 * desired dialog style, usually a variation on size. One of
 * {@link #MODE_SMALL}, {@link #MODE_MEDIUM}, or {@link #MODE_LARGE}.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IS_RESTRICTED","true","false","false","true","true","String","""is_restricted""","","/**
 * Flag indicating that this {@link RawContacts} entry and its children have
 * been restricted to specific platform apps.
 * <P>Type: INTEGER (boolean)</P>
 *
 * @hide until finalized in future platform release
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AGGREGATION_MODE_DISABLED","true","false","false","true","true","int","3","","/**
 * <p>
 * Aggregation mode: never aggregate this raw contact.  The raw contact will not
 * have a corresponding {@link Contacts} aggregate and therefore will not be included in
 * {@link Contacts} query results.
 * </p>
 * <p>
 * For example, this mode can be used for a raw contact that is marked for deletion while
 * waiting for the deletion to occur on the server side.
 * </p>
 *
 * @see #AGGREGATION_MODE_SUSPENDED
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_FAX_WORK","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.QuickContact.ACTION_QUICK_CONTACT","true","false","false","true","true","String","""com.android.contacts.action.QUICK_CONTACT""","","/**
 * Action used to trigger person pivot dialog.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ProviderStatus.DATA1","true","false","false","true","true","String","""data1""","","/**
 * Additional data associated with the status.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.JOB_TITLE","true","false","false","true","true","String","""job_title""","","/**
 * The extra field for the contact job title.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.STATUS_TIMESTAMP","true","false","false","true","true","String","""status_ts""","","/**
 * The absolute time in milliseconds when the latest status was inserted/updated.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.START_DATE","true","false","false","true","true","String","DATA","","/**
 * The event start date as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_MAINDEN_NAME","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.TYPE_KEEP_TOGETHER","true","false","false","true","true","int","1","","/**
 * Makes sure that the specified raw contacts are included in the same
 * aggregate contact.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_FTP","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PHONETIC_FAMILY_NAME","true","false","false","true","true","String","DATA9","","/**
 * The phonetic version of the family name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.RES_PACKAGE","true","false","false","true","true","String","""res_package""","","/**
 * The package name to use when creating {@link Resources} objects for
 * this group. This value is only designed for use when building user
 * interfaces, and should not be used to infer the owner.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS","true","false","false","true","true","String","""status""","","/**
 * An integer representing the current status of the provider.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Preferences.SORT_ORDER_PRIMARY","true","false","false","true","true","int","1","","/**
 * The value for the SORT_ORDER key corresponding to sorting by given name first.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.TYPE_WORK","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Intents.EXTRA_CREATE_DESCRIPTION","true","false","false","true","true","String","""com.android.contacts.action.CREATE_DESCRIPTION""","","/**
 * Used with {@link #SHOW_OR_CREATE_CONTACT} to specify an exact
 * description to be shown when prompting user about creating a new
 * contact.
 * <p>
 * Type: STRING
 */
","\android\provider\ContactsContract.java"
"android.provider.ProviderStatus.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/provider_status""","","/**
 * The MIME-type of {@link #CONTENT_URI} providing a directory of
 * settings.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_REFERRED_BY","true","false","false","true","true","int","11","","","\android\provider\ContactsContract.java"
"android.provider.Intents.PHONE_TYPE","true","false","false","true","true","String","""phone_type""","","/**
 * The extra field for the contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneLookupColumns.NUMBER","true","false","false","true","true","String","""number""","","/**
 * The phone number as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.NAME","true","false","false","true","true","String","DATA","","/**
 * The name of the relative as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_MOTHER","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_AUTOMATIC","true","false","false","true","true","int","0","","/**
 * Allows the provider to automatically decide whether the specified raw contacts should
 * be included in the same aggregate contact or not.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PREFIX","true","false","false","true","true","String","DATA4","","/**
 * The contact's honorific prefix, e.g. ""Sir""
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.STREET","true","false","false","true","true","String","DATA4","","/**
 * Can be street, avenue, road, etc. This element also includes the
 * house number and room/apartment/flat/floor number.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.COUNTRY","true","false","false","true","true","String","DATA10","","/**
 * The name or code of the country.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.PHONETIC_MIDDLE_NAME","true","false","false","true","true","String","DATA8","","/**
 * The phonetic version of the additional name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DISPLAY_NAME_ALTERNATIVE","true","false","false","true","true","String","""display_name_alt""","","/**
 * <p>
 * An alternative representation of the display name, such as ""family name first""
 * instead of ""given name first"" for Western names.  If an alternative is not
 * available, the values should be the same as {@link #DISPLAY_NAME_PRIMARY}.
 * </p>
 * <p>
 * A contacts provider is free to provide alternatives as necessary for
 * its target market.
 * For example the default Android Open Source Project contacts provider
 * currently provides an
 * alternative in a single case:  if the display name is
 * based on the structured name and the structured name follows
 * the Western full name style, then the field contains the ""family name first""
 * version of the full name.
 * Other cases may be added later.
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ProviderStatus.STATUS_UPGRADING","true","false","false","true","true","int","1","","/**
 * The status used when the provider is in the process of upgrading.  Contacts
 * are temporarily unaccessible.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.JOB_DESCRIPTION","true","false","false","true","true","String","DATA6","","/**
 * The job description at this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.FullNameStyle.KOREAN","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SECONDARY_EMAIL_TYPE","true","false","false","true","true","String","""secondary_email_type""","","/**
 * The extra field for an optional second contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.EXTRA_TARGET_RECT","true","false","false","true","true","String","""target_rect""","@Deprecated","/**
 * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to specify a
 * dialog location using screen coordinates. When not specified, the
 * dialog will be centered.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AGGREGATION_MODE_DEFAULT","true","false","false","true","true","int","0","","/**
 * Aggregation mode: aggregate immediately after insert or update operation(s) are complete.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.GROUP_NAME_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.GROUP""","","/**
 * When in LIST_GROUP_ACTION mode, this is the group to display.
 */
","\android\provider\ContactsContract.java"
"android.provider.Data.CONTENT_DIRECTORY","true","false","false","true","true","String","""data""","","/**
 * The directory twig for this sub-table
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_STREQUENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""strequent"")","","/**
 * The content:// style URI for this table joined with useful data from
 * {@link ContactsContract.Data}, filtered to include only starred contacts
 * and the most frequently contacted contacts.
 */
","\android\provider\ContactsContract.java"
"android.provider.PresenceColumns.CUSTOM_PROTOCOL","true","false","false","true","true","String","""custom_protocol""","","/**
 * Name of the custom protocol.  Should be supplied along with the {@link #PROTOCOL} value
 * {@link ContactsContract.CommonDataKinds.Im#PROTOCOL_CUSTOM}.  Should be null or
 * omitted if {@link #PROTOCOL} value is not
 * {@link ContactsContract.CommonDataKinds.Im#PROTOCOL_CUSTOM}.
 *
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PACKAGE_COMMON","true","false","false","true","true","String","""common""","","/**
 * The {@link Data#RES_PACKAGE} value for common data that should be
 * shown using a default style.
 *
 * @hide RES_PACKAGE is hidden
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CUSTOM_RINGTONE","true","false","false","true","true","String","""custom_ringtone""","","/**
 * URI for a custom ringtone associated with the contact. If null or missing,
 * the default ringtone is used.
 * <P>Type: TEXT (URI to the ringtone)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.FILTER_TEXT_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.FILTER_TEXT""","","/**
 * Used as an int extra field in {@link #FILTER_CONTACTS_ACTION}
 * intents to supply the text on which to filter.
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/contact""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * people.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_GOOGLE_TALK","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SUFFIX","true","false","false","true","true","String","DATA6","","/**
 * The contact's honorific suffix, e.g. ""Jr""
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_FAX_WORK","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHONE_ISPRIMARY","true","false","false","true","true","String","""phone_isprimary""","","/**
 * The extra field for the phone isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.TITLE_RES","true","false","false","true","true","String","""title_res""","","/**
 * The display title of this group to load as a resource from
 * {@link #RES_PACKAGE}, which may be localized.
 * <P>Type: TEXT</P>
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.SUMMARY_WITH_PHONES","true","false","false","true","true","String","""summ_phones""","","/**
 * The total number of {@link Contacts} that have both
 * {@link CommonDataKinds.GroupMembership} in this group, and also have phone numbers.
 * Read-only value that is only present when querying
 * {@link Groups#CONTENT_SUMMARY_URI}.
 * <p>
 * Type: INTEGER
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.REQUESTING_PACKAGE_PARAM_KEY","true","false","false","true","true","String","""requesting_package""","","/**
 * A query parameter key used to specify the package that is requesting a query.
 * This is used for restricting data based on package name.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.FILTER_CONTACTS_ACTION","true","false","false","true","true","String","""com.android.contacts.action.FILTER_CONTACTS""","","/**
 * Activity Action: Display a filtered list of contacts
 * <p>
 * Input: Extra field {@link #FILTER_TEXT_EXTRA_KEY} is the text to use for
 * filtering
 * <p>
 * Output: Nothing.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED","true","false","false","true","true","String","""android.provider.Contacts.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED""","","/**
 * This is the intent that is fired when a search suggestion for dialing a number
 * is clicked on.
 */
","\android\provider\ContactsContract.java"
"android.provider.SyncState.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, CONTENT_DIRECTORY)","","/**
 * The content:// style URI for this table
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.LIST_STARRED_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_STARRED""","","/**
 * The action for the starred contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactOptionsColumns.SEND_TO_VOICEMAIL","true","false","false","true","true","String","""send_to_voicemail""","","/**
 * Whether the contact should always be sent to voicemail. If missing,
 * defaults to false.
 * <P>Type: INTEGER (0 for false, 1 for true)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_MSN","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_CUSTOM","true","false","false","true","true","int","-1","","/*
             * The predefined IM protocol types.
             */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_CAR","true","false","false","true","true","int","9","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_BIRTHDAY","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.RawContactsColumns.NAME_VERIFIED","true","false","false","true","true","String","""name_verified""","","/**
 * The ""name_verified"" flag: ""1"" means that the name fields on this raw
 * contact can be trusted and therefore should be used for the entire
 * aggregated contact.
 * <p>
 * If an aggregated contact contains more than one raw contact with a
 * verified name, one of those verified names is chosen at random.
 * If an aggregated contact contains no verified names, the
 * name is chosen randomly from the constituent raw contacts.
 * </p>
 * <p>
 * Updating this flag from ""0"" to ""1"" automatically resets it to ""0"" on
 * all other raw contacts in the same aggregated contact.
 * </p>
 * <p>
 * Sync adapters should only specify a value for this column when
 * inserting a raw contact and leave it out when doing an update.
 * </p>
 * <p>
 * The default value is ""0""
 * </p>
 * <p>Type: INTEGER</p>
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.GIVEN_NAME","true","false","false","true","true","String","DATA2","","/**
 * The given name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.MIMETYPE","true","false","false","true","true","String","""mimetype""","","/**
 * The MIME type of the item represented by this row.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.FULL_MODE","true","false","false","true","true","String","""full_mode""","","/**
 * If present, forces a bypass of quick insert mode.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactOptionsColumns.TIMES_CONTACTED","true","false","false","true","true","String","""times_contacted""","","/**
 * The number of times a contact has been contacted
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_HOME","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_PARENT","true","false","false","true","true","int","9","","","\android\provider\ContactsContract.java"
"android.provider.Website.TYPE_OTHER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTACT_ID","true","false","false","true","true","String","""contact_id""","","/**
 * A reference to the {@link ContactsContract.Contacts#_ID} that this
 * data belongs to.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/raw_contact""","","/**
 * The MIME type of the results when a raw contact ID is appended to {@link #CONTENT_URI},
 * yielding a subdirectory of a single person.
 */
","\android\provider\ContactsContract.java"
"android.provider.QuickContact.EXTRA_TARGET_RECT","true","false","false","true","true","String","""target_rect""","@Deprecated","/**
 * Extra used to specify pivot dialog location in screen coordinates.
 * @deprecated Use {@link Intent#setSourceBounds(Rect)} instead.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STRUCTURED_NAME","true","false","false","true","true","int","40","","","\android\provider\ContactsContract.java"
"android.provider.Intents.SECONDARY_PHONE","true","false","false","true","true","String","""secondary_phone""","","/**
 * The extra field for an optional second contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.TYPE_HOME","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Website.TYPE_HOME","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA14","true","false","false","true","true","String","""data14""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA15","true","false","false","true","true","String","""data15""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific. By convention,
 * this field is used to store BLOBs (binary data).
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_QQ","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA12","true","false","false","true","true","String","""data12""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA13","true","false","false","true","true","String","""data13""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA10","true","false","false","true","true","String","""data10""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.DataColumns.DATA11","true","false","false","true","true","String","""data11""","","/**
 * Generic data column, the meaning is {@link #MIMETYPE} specific
 */
","\android\provider\ContactsContract.java"
"android.provider.Website.URL","true","false","false","true","true","String","DATA","","/**
 * The website URL string.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.TITLE_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.TITLE_EXTRA""","","/**
 * A key for to be used as an intent extra to set the activity
 * title to a custom String value.
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(Data.CONTENT_URI, ""emails"")","","/**
 * The content:// style URI for all data records of the
 * {@link #CONTENT_ITEM_TYPE} MIME type, combined with the
 * associated raw contact and aggregate contact data.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHONE","true","false","false","true","true","String","""phone""","","/**
 * The extra field for the contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_HOME","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.NICKNAME","true","false","false","true","true","int","35","","","\android\provider\ContactsContract.java"
"android.provider.UI.FILTER_CONTACTS_ACTION","true","false","false","true","true","String","""com.android.contacts.action.FILTER_CONTACTS""","","/**
 * Activity Action: Display a filtered list of contacts
 * <p>
 * Input: Extra field {@link #FILTER_TEXT_EXTRA_KEY} is the text to use for
 * filtering
 * <p>
 * Output: Nothing.
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_TTY_TDD","true","false","false","true","true","int","16","","","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_ASSISTANT","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.PresenceColumns.PROTOCOL","true","false","false","true","true","String","""protocol""","","/**
 * See {@link CommonDataKinds.Im} for a list of defined protocol constants.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.EMAIL_TYPE","true","false","false","true","true","String","""email_type""","","/**
 * The extra field for the contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactNameColumns.PHONETIC_NAME_STYLE","true","false","false","true","true","String","""phonetic_name_style""","","/**
 * The phonetic alphabet used to represent the {@link #PHONETIC_NAME}.  See
 * PhoneticNameStyle.
 *
 * TODO: convert PhoneticNameStyle to a link after it is un-hidden
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTACT_STATUS","true","false","false","true","true","String","""contact_status""","","/**
 * Contact's latest status update.
 * <p>Type: TEXT</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactStatusColumns.CONTACT_STATUS","true","false","false","true","true","String","""contact_status""","","/**
 * Contact's latest status update.
 * <p>Type: TEXT</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_NETMEETING","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.RawContacts.AGGREGATION_MODE_DISABLED","true","false","false","true","true","int","3","","/**
 * <p>
 * Aggregation mode: never aggregate this raw contact.  The raw contact will not
 * have a corresponding {@link Contacts} aggregate and therefore will not be included in
 * {@link Contacts} query results.
 * </p>
 * <p>
 * For example, this mode can be used for a raw contact that is marked for deletion while
 * waiting for the deletion to occur on the server side.
 * </p>
 *
 * @see #AGGREGATION_MODE_SUSPENDED
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE","true","false","false","true","true","String","DataColumns.DATA2","","/**
 * The type of data, for example Home or Work.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED","true","false","false","true","true","String","""android.provider.Contacts.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED""","","/**
 * This is the intent that is fired when a search suggestion for creating a contact
 * is clicked on.
 */
","\android\provider\ContactsContract.java"
"android.provider.SettingsColumns.UNGROUPED_VISIBLE","true","false","false","true","true","String","""ungrouped_visible""","","/**
 * Flag indicating if contacts without any {@link CommonDataKinds.GroupMembership}
 * entries should be visible in any user interface.
 * <p>
 * Type: INTEGER (boolean)
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.EMAIL","true","false","false","true","true","String","""email""","","/**
 * The extra field for the contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LIST_ALL_CONTACTS_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_ALL_CONTACTS""","","/**
 * The action for the all contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.NAME_RAW_CONTACT_ID","true","false","false","true","true","String","""name_raw_contact_id""","","/**
 * Reference to the row in the RawContacts table holding the contact name.
 * <P>Type: INTEGER REFERENCES raw_contacts(_id)</P>
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Website.TYPE_FTP","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.ContactsColumns.IN_VISIBLE_GROUP","true","false","false","true","true","String","""in_visible_group""","","/**
 * Lookup value that reflects the {@link Groups#GROUP_VISIBLE} state of
 * any {@link CommonDataKinds.GroupMembership} for this contact.
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_CALLBACK","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.URL","true","false","false","true","true","String","DATA","","/**
 * The website URL string.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IM_PROTOCOL","true","false","false","true","true","String","""im_protocol""","","/**
 * The extra field for the IM protocol
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_DOMESTIC_PARTNER","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.SettingsColumns.UNGROUPED_WITH_PHONES","true","false","false","true","true","String","""summ_phones""","","/**
 * Read-only count of {@link Contacts} from a specific source that have
 * no {@link CommonDataKinds.GroupMembership} entries, and also have phone numbers.
 * <p>
 * Type: INTEGER
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IM_ISPRIMARY","true","false","false","true","true","String","""im_isprimary""","","/**
 * The extra field for the IM isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneticNameStyle.UNDEFINED","true","false","false","true","true","int","0","","","\android\provider\ContactsContract.java"
"android.provider.Groups.CONTENT_SUMMARY_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""groups_summary"")","","/**
 * The content:// style URI for this table joined with details data from
 * {@link ContactsContract.Data}.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IS_PRIMARY","true","false","false","true","true","String","""is_primary""","","/**
 * Whether this is the primary entry of its kind for the raw contact it belongs to.
 * <P>Type: INTEGER (if set, non-0 means true)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_CUSTOM","true","false","false","true","false","int","0","","/**
 * A custom type. The custom label should be supplied by user.
 */
","\android\provider\ContactsContract.java"
"android.provider.Nickname.TYPE_MAINDEN_NAME","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ACTION","true","false","false","true","true","String","Intent.ACTION_INSERT","","/**
 * The action code to use when adding a contact
 */
","\android\provider\ContactsContract.java"
"android.provider.FullNameStyle.CHINESE","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactCounts.ADDRESS_BOOK_INDEX_EXTRAS","true","false","false","true","true","String","""address_book_index_extras""","","/**
 * Add this query parameter to a URI to get back row counts grouped by
 * the address book index as cursor extras. For most languages it is the
 * first letter of the sort key. This parameter does not affect the main
 * content of the cursor.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.NOTE","true","false","false","true","true","String","DATA1","","/**
 * The note text.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_ASSISTANT","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Event.TYPE_BIRTHDAY","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TITLE_RES","true","false","false","true","true","String","""title_res""","","/**
 * The display title of this group to load as a resource from
 * {@link #RES_PACKAGE}, which may be localized.
 * <P>Type: TEXT</P>
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.STATUS_ICON","true","false","false","true","true","String","""status_icon""","","/**
 * The resource ID of the icon for the source of the status update.
 * This resource should be scoped by the {@link #STATUS_RES_PACKAGE}.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.SECONDARY_PHONE_TYPE","true","false","false","true","true","String","""secondary_phone_type""","","/**
 * The extra field for an optional second contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.PHONETIC_NAME","true","false","false","true","true","String","""phonetic_name""","","/**
 * The extra field for the contact phonetic name.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_MAIN","true","false","false","true","true","int","12","","","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_RELATIVE","true","false","false","true","true","int","12","","","\android\provider\ContactsContract.java"
"android.provider.Event.TYPE_ANNIVERSARY","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.FULL_MODE","true","false","false","true","true","String","""full_mode""","","/**
 * If present, forces a bypass of quick insert mode.
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.DELETED","true","false","false","true","true","String","""deleted""","","/**
 * The ""deleted"" flag: ""0"" by default, ""1"" if the row has been marked
 * for deletion. When {@link android.content.ContentResolver#delete} is
 * called on a group, it is marked for deletion. The sync adaptor
 * deletes the group on the server and then calls ContactResolver.delete
 * once more, this time setting the the
 * {@link ContactsContract#CALLER_IS_SYNCADAPTER} query parameter to
 * finalize the data removal.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_AIM","true","false","false","true","true","int","0","","","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_PAGER","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.Data.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""data"")","","/**
 * The content:// style URI for this table, which requests a directory
 * of data rows matching the selection criteria.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactStatusColumns.CONTACT_STATUS_LABEL","true","false","false","true","true","String","""contact_status_label""","","/**
 * The resource ID of the label describing the source of contact
 * status, e.g. ""Google Talk"". This resource is scoped by the
 * {@link #CONTACT_STATUS_RES_PACKAGE}.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/contact""","","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of a single
 * person.
 */
","\android\provider\ContactsContract.java"
"android.provider.SettingsColumns.ANY_UNSYNCED","true","false","false","true","true","String","""any_unsynced""","","/**
 * Read-only flag indicating if this {@link #SHOULD_SYNC} or any
 * {@link Groups#SHOULD_SYNC} under this account have been marked as
 * unsynced.
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.STREET","true","false","false","true","true","String","DATA4","","/**
 * Can be street, avenue, road, etc. This element also includes the
 * house number and room/apartment/flat/floor number.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.NAME","true","false","false","true","true","String","""name""","","/**
 * The extra field for the contact name.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.AGGREGATION_MODE_IMMEDIATE","true","false","false","true","true","int","1","","/**
 * Do not use.
 *
 * TODO: deprecate in favor of {@link #AGGREGATION_MODE_DEFAULT}
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.SUMMARY_COUNT","true","false","false","true","true","String","""summ_count""","","/**
 * The total number of {@link Contacts} that have
 * {@link CommonDataKinds.GroupMembership} in this group. Read-only value that is only
 * present when querying {@link Groups#CONTENT_SUMMARY_URI}.
 * <p>
 * Type: INTEGER
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_FATHER","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.SUFFIX","true","false","false","true","true","String","DATA6","","/**
 * The contact's honorific suffix, e.g. ""Jr""
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_DOMESTIC_PARTNER","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.GROUP_SOURCE_ID","true","false","false","true","true","String","""group_sourceid""","","/**
 * The sourceid of the group that this group membership refers to.  Exactly one of
 * this or {@link #GROUP_ROW_ID} must be set when inserting a row.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TERTIARY_PHONE_TYPE","true","false","false","true","true","String","""tertiary_phone_type""","","/**
 * The extra field for an optional third contact phone number type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Phone},
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SORT_KEY_ALTERNATIVE","true","false","false","true","true","String","""sort_key_alt""","","/**
 * Sort key based on the alternative representation of the full name,
 * {@link #DISPLAY_NAME_ALTERNATIVE}.  Thus for Western names,
 * it is the one using the ""family name first"" format.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_CAR","true","false","false","true","true","int","9","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_HOMEPAGE","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Intents.GROUP_NAME_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.GROUP""","","/**
 * When in LIST_GROUP_ACTION mode, this is the group to display.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ACCOUNT_TYPE","true","false","false","true","true","String","""account_type""","","/**
 * The type of account to which this row belongs, which when paired with
 * {@link #ACCOUNT_NAME} identifies a specific account.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_TELEX","true","false","false","true","true","int","15","","","\android\provider\ContactsContract.java"
"android.provider.Intents.POSTAL_ISPRIMARY","true","false","false","true","true","String","""postal_isprimary""","","/**
 * The extra field for the postal isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_MOBILE","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_MMS","true","false","false","true","true","int","20","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.MIDDLE_NAME","true","false","false","true","true","String","DATA5","","/**
 * The contact's middle name
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS_NORMAL","true","false","false","true","true","int","0","","/**
 * Default status of the provider.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.DATA","true","false","false","true","true","String","DataColumns.DATA1","","/**
 * The data for the contact method.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_FAX_HOME","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.Intents.FILTER_CONTACTS_ACTION","true","false","false","true","true","String","""com.android.contacts.action.FILTER_CONTACTS""","","/**
 * Activity Action: Display a filtered list of contacts
 * <p>
 * Input: Extra field {@link #FILTER_TEXT_EXTRA_KEY} is the text to use for
 * filtering
 * <p>
 * Output: Nothing.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHOTO","true","false","false","true","true","String","DATA15","","/**
 * Thumbnail photo of the raw contact. This is the raw bytes of an image
 * that could be inflated using {@link android.graphics.BitmapFactory}.
 * <p>
 * Type: BLOB
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL_JABBER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.UI.LIST_CONTACTS_WITH_PHONES_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_CONTACTS_WITH_PHONES""","","/**
 * The action for the contacts with phone numbers list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.LIST_ALL_CONTACTS_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_ALL_CONTACTS""","","/**
 * The action for the all contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_PROFILE","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactNameColumns.DISPLAY_NAME_SOURCE","true","false","false","true","true","String","""display_name_source""","","/**
 * The kind of data that is used as the display name for the contact, such as
 * structured name or email address.  See DisplayNameSources.
 *
 * TODO: convert DisplayNameSources to a link after it is un-hidden
 */
","\android\provider\ContactsContract.java"
"android.provider.Website.TYPE_HOMEPAGE","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_BLOG","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.Im.TYPE_HOME","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.FullNameStyle.JAPANESE","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.GroupsColumns.TITLE","true","false","false","true","true","String","""title""","","/**
 * The display title of this group.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.CONTENT_LOOKUP_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""lookup"")","","/**
 * <p>
 * The content:// style URL for looking up data rows by email address. The
 * lookup argument, an email address, should be passed as an additional path segment
 * after this URI.
 * </p>
 * <p>Example:
 * <pre>
 * Uri uri = Uri.withAppendedPath(Email.CONTENT_LOOKUP_URI, Uri.encode(email));
 * Cursor c = getContentResolver().query(uri,
 * new String[]{Email.CONTACT_ID, Email.DISPLAY_NAME, Email.DATA},
 * null, null, null);
 * </pre>
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneticNameStyle.JAPANESE","true","false","false","true","true","int","4","","/**
 * Hiragana and Katakana are two common styles of writing out the pronunciation
 * of a Japanese names.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_BROTHER","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SHOULD_SYNC","true","false","false","true","true","String","""should_sync""","","/**
 * Depending on the mode defined by the sync-adapter, this flag controls
 * the top-level sync behavior for this data source.
 * <p>
 * Type: INTEGER (boolean)
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.PHONE","true","false","false","true","true","String","""phone""","","/**
 * The extra field for the contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_PARTNER","true","false","false","true","true","int","10","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.INVISIBLE","false","false","false","false","false","int","1","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PROTOCOL","true","false","false","true","true","String","DATA5","","/**
 * This column should be populated with one of the defined
 * constants, e.g. {@link #PROTOCOL_YAHOO}. If the value of this
 * column is {@link #PROTOCOL_CUSTOM}, the {@link #CUSTOM_PROTOCOL}
 * should contain the name of the custom protocol.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.HAS_PHONE_NUMBER","true","false","false","true","true","String","""has_phone_number""","","/**
 * An indicator of whether this contact has at least one phone number. ""1"" if there is
 * at least one phone number, ""0"" otherwise.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_PARTNER","true","false","false","true","true","int","10","","","\android\provider\ContactsContract.java"
"android.provider.Phone.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/phone_v2""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * phones.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.FORMATTED_ADDRESS","true","false","false","true","true","String","DATA","","/**
 * The full, unstructured postal address. <i>This field must be
 * consistent with any structured data.</i>
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsColumns.LOOKUP_KEY","true","false","false","true","true","String","""lookup""","","/**
 * An opaque value that contains hints on how to find the contact if
 * its row id changed as a result of a sync or aggregation.
 */
","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/aggregation_exception""","","/**
 * The MIME type of a {@link #CONTENT_URI} subdirectory of an aggregation exception
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_SPOUSE","true","false","false","true","true","int","14","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.POSTCODE","true","false","false","true","true","String","DATA9","","/**
 * Postal code. Usually country-wide, but sometimes specific to the
 * city (e.g. ""2"" in ""Dublin 2, Ireland"" addresses).
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.Note.NOTE","true","false","false","true","true","String","DATA1","","/**
 * The note text.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_PAGER","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.Intents.POSTAL_TYPE","true","false","false","true","true","String","""postal_type""","","/**
 * The extra field for the contact postal address type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.StructuredPostal}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.CUSTOM_PROTOCOL","true","false","false","true","true","String","DATA6","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LIST_STARRED_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_STARRED""","","/**
 * The action for the starred contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.Photo.PHOTO","true","false","false","true","true","String","DATA15","","/**
 * Thumbnail photo of the raw contact. This is the raw bytes of an image
 * that could be inflated using {@link android.graphics.BitmapFactory}.
 * <p>
 * Type: BLOB
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.TYPE_WORK","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.Im.CUSTOM_PROTOCOL","true","false","false","true","true","String","DATA6","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SNIPPET_DATA_ID","true","false","false","true","true","String","""snippet_data_id""","","/**
 * The ID of the data row that was matched by the filter.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactStatusColumns.CONTACT_PRESENCE","true","false","false","true","true","String","""contact_presence""","","/**
 * Contact presence status. See {@link StatusUpdates} for individual status
 * definitions.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.PHONETIC_NAME_STYLE","true","false","false","true","true","String","DATA11","","/**
 * The alphabet used for capturing the phonetic name.
 * See ContactsContract.PhoneticNameStyle.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_PARENT","true","false","false","true","true","int","9","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_PARENT","true","false","false","true","true","int","9","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CHINESE","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.DisplayNameSources.UNDEFINED","true","false","false","true","true","int","0","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ADDRESS","true","false","false","true","true","String","DATA1","","/**
 * The email address.
 * <P>Type: TEXT</P>
 * @hide TODO: Unhide in a separate CL
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.SYMBOL","true","false","false","true","true","String","DATA7","","/**
 * The symbol of this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_SISTER","true","false","false","true","true","int","13","","","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.REGION","true","false","false","true","true","String","DATA8","","/**
 * A state, province, county (in Ireland), Land (in Germany),
 * departement (in France), etc.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_GROUP_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""group"")","","","\android\provider\ContactsContract.java"
"android.provider.Intents.PHONE_ISPRIMARY","true","false","false","true","true","String","""phone_isprimary""","","/**
 * The extra field for the phone isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_ANNIVERSARY","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.StatusColumns.AVAILABLE","false","false","false","false","false","int","5","","/**
 * An allowed value of {@link #PRESENCE}.
 */
","\android\provider\ContactsContract.java"
"android.provider.UI.GROUP_NAME_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.GROUP""","","/**
 * When in LIST_GROUP_ACTION mode, this is the group to display.
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_WORK","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AGGREGATION_MODE_SUSPENDED","true","false","false","true","true","int","2","","/**
 * <p>
 * Aggregation mode: aggregation suspended temporarily, and is likely to be resumed later.
 * Changes to the raw contact will update the associated aggregate contact but will not
 * result in any change in how the contact is aggregated. Similar to
 * {@link #AGGREGATION_MODE_DISABLED}, but maintains a link to the corresponding
 * {@link Contacts} aggregate.
 * </p>
 * <p>
 * This can be used to postpone aggregation until after a series of updates, for better
 * performance and/or user experience.
 * </p>
 * <p>
 * Note that changing
 * {@link #AGGREGATION_MODE} from {@link #AGGREGATION_MODE_SUSPENDED} to
 * {@link #AGGREGATION_MODE_DEFAULT} does not trigger an aggregation pass, but any
 * subsequent
 * change to the raw contact's data will.
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_PROFILE","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_WORK","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.StructuredName.PREFIX","true","false","false","true","true","String","DATA4","","/**
 * The contact's honorific prefix, e.g. ""Sir""
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.SettingsColumns.UNGROUPED_COUNT","true","false","false","true","true","String","""summ_count""","","/**
 * Read-only count of {@link Contacts} from a specific source that have
 * no {@link CommonDataKinds.GroupMembership} entries.
 * <p>
 * Type: INTEGER
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.URL","true","false","false","true","true","String","DATA","","/**
 * The website URL string.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.GIVEN_NAME","true","false","false","true","true","String","DATA2","","/**
 * The given name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LIST_STREQUENT_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_STREQUENT""","","/**
 * The action for the ""strequent"" contacts list tab. It first lists the starred
 * contacts in alphabetical order and then the frequent contacts in descending
 * order of the number of times they have been contacted.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactCounts.EXTRA_ADDRESS_BOOK_INDEX_TITLES","true","false","false","true","true","String","""address_book_index_titles""","","/**
 * The array of address book index titles, which are returned in the
 * same order as the data in the cursor.
 * <p>TYPE: String[]</p>
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Groups.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/group""","","/**
 * The MIME type of a single group.
 */
","\android\provider\ContactsContract.java"
"android.provider.AggregationExceptions.TYPE","true","false","false","true","true","String","""type""","","/**
 * The type of exception: {@link #TYPE_KEEP_TOGETHER}, {@link #TYPE_KEEP_SEPARATE} or
 * {@link #TYPE_AUTOMATIC}.
 *
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.IM_HANDLE","true","false","false","true","true","String","""im_handle""","","/**
 * The extra field for an IM handle.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(Data.CONTENT_URI, ""phones"")","","/**
 * The content:// style URI for all data records of the
 * {@link #CONTENT_ITEM_TYPE} MIME type, combined with the
 * associated raw contact and aggregate contact data.
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_OTHER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_OTHER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_ISDN","true","false","false","true","true","int","11","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.RAW_CONTACT_ID1","true","false","false","true","true","String","""raw_contact_id1""","","/**
 * A reference to the {@link RawContacts#_ID} of the raw contact that the rule applies to.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.POSTAL_TYPE","true","false","false","true","true","String","""postal_type""","","/**
 * The extra field for the contact postal address type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.StructuredPostal}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.RAW_CONTACT_ID2","true","false","false","true","true","String","""raw_contact_id2""","","/**
 * A reference to the other {@link RawContacts#_ID} of the raw contact that the rule
 * applies to.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.POSTAL","true","false","false","true","true","String","""postal""","","/**
 * The extra field for the contact postal address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.FullNameStyle.UNDEFINED","true","false","false","true","true","int","0","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AGGREGATION_MODE_IMMEDIATE","true","false","false","true","true","int","1","","/**
 * Do not use.
 *
 * TODO: deprecate in favor of {@link #AGGREGATION_MODE_DEFAULT}
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.MODE_SMALL","true","false","false","true","true","int","1","@Deprecated","/**
 * Value for {@link #EXTRA_MODE} to show a small-sized dialog.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_CALLBACK","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.Insert.SECONDARY_PHONE","true","false","false","true","true","String","""secondary_phone""","","/**
 * The extra field for an optional second contact phone number.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PRESENCE_CUSTOM_STATUS","true","false","false","true","true","String","STATUS","@Deprecated","/**
 * @deprecated use {@link #STATUS}
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_WORK_MOBILE","true","false","false","true","true","int","17","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_BROTHER","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.UI.FILTER_TEXT_EXTRA_KEY","true","false","false","true","true","String","""com.android.contacts.extra.FILTER_TEXT""","","/**
 * Used as an int extra field in {@link #FILTER_CONTACTS_ACTION}
 * intents to supply the text on which to filter.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.PHONETIC_NAME","true","false","false","true","true","String","""phonetic_name""","","/**
 * The extra field for the contact phonetic name.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_TTY_TDD","true","false","false","true","true","int","16","","","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_CHILD","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PHOTO","true","false","false","true","true","String","DATA15","","/**
 * Thumbnail photo of the raw contact. This is the raw bytes of an image
 * that could be inflated using {@link android.graphics.BitmapFactory}.
 * <p>
 * Type: BLOB
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SORT_ORDER_PRIMARY","true","false","false","true","true","int","1","","/**
 * The value for the SORT_ORDER key corresponding to sorting by given name first.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_PARTNER","true","false","false","true","true","int","10","","","\android\provider\ContactsContract.java"
"android.provider.Intents.SEARCH_SUGGESTION_CLICKED","true","false","false","true","true","String","""android.provider.Contacts.SEARCH_SUGGESTION_CLICKED""","","/**
 * This is the intent that is fired when a search suggestion is clicked on.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PRESENCE","true","false","false","true","true","String","""mode""","","/**
 * Contact's latest presence level.
 * <P>Type: INTEGER (one of the values below)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Preferences.SORT_ORDER_ALTERNATIVE","true","false","false","true","true","int","2","","/**
 * The value for the SORT_ORDER key corresponding to sorting by family name first.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.FULL_NAME_STYLE","true","false","false","true","true","String","DATA10","","/**
 * The style used for combining given/middle/family name into a full name.
 * See {@link ContactsContract.FullNameStyle}.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_TTY_TDD","true","false","false","true","true","int","16","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.REGION","true","false","false","true","true","String","DATA8","","/**
 * A state, province, county (in Ireland), Land (in Germany),
 * departement (in France), etc.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA_ID","true","false","false","true","true","String","""presence_data_id""","","/**
 * Reference to the {@link Data#_ID} entry that owns this presence.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_BROTHER","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTACT_STATUS_RES_PACKAGE","true","false","false","true","true","String","""contact_status_res_package""","","/**
 * The package containing resources for this status: label and icon.
 * <p>Type: TEXT</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.OFFICE_LOCATION","true","false","false","true","true","String","DATA9","","/**
 * The office location of this organization.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.FullNameStyle.CJK","true","false","false","true","true","int","2","","/**
 * Used if the name is written in Hanzi/Kanji/Hanja and we could not determine
 * which specific language it belongs to: Chinese, Japanese or Korean.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SUMMARY_WITH_PHONES","true","false","false","true","true","String","""summ_phones""","","/**
 * The total number of {@link Contacts} that have both
 * {@link CommonDataKinds.GroupMembership} in this group, and also have phone numbers.
 * Read-only value that is only present when querying
 * {@link Groups#CONTENT_SUMMARY_URI}.
 * <p>
 * Type: INTEGER
 */
","\android\provider\ContactsContract.java"
"android.provider.Nickname.TYPE_DEFAULT","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_COMPANY_MAIN","true","false","false","true","true","int","10","","","\android\provider\ContactsContract.java"
"android.provider.Insert.EMAIL_ISPRIMARY","true","false","false","true","true","String","""email_isprimary""","","/**
 * The extra field for the email isprimary flag.
 * <P>Type: boolean</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AGGREGATION_MODE","true","false","false","true","true","String","""aggregation_mode""","","/**
 * The aggregation mode for this contact.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.GroupMembership.GROUP_ROW_ID","true","false","false","true","true","String","DATA1","","/**
 * The row id of the group that this group membership refers to. Exactly one of
 * this or {@link #GROUP_SOURCE_ID} must be set when inserting a row.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LABEL","true","false","false","true","true","String","DataColumns.DATA3","","/**
 * The user defined label for the the contact method.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsColumns.NAME_RAW_CONTACT_ID","true","false","false","true","true","String","""name_raw_contact_id""","","/**
 * Reference to the row in the RawContacts table holding the contact name.
 * <P>Type: INTEGER REFERENCES raw_contacts(_id)</P>
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PROTOCOL_QQ","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/postal-address_v2""","","/**
 * The MIME type of {@link #CONTENT_URI} providing a directory of
 * postal addresses.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.NAME","true","false","false","true","true","String","""name""","","/**
 * The extra field for the contact name.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.DisplayNameSources.STRUCTURED_NAME","true","false","false","true","true","int","40","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_WORK","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.QuickContact.EXTRA_MODE","true","false","false","true","true","String","""mode""","","/**
 * Extra used to specify size of pivot dialog.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.PresenceColumns.DATA_ID","true","false","false","true","true","String","""presence_data_id""","","/**
 * Reference to the {@link Data#_ID} entry that owns this presence.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_GOOGLE_TALK","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.JAPANESE","true","false","false","true","true","int","4","","/**
 * Hiragana and Katakana are two common styles of writing out the pronunciation
 * of a Japanese names.
 */
","\android\provider\ContactsContract.java"
"android.provider.UI.LIST_FREQUENT_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_FREQUENT""","","/**
 * The action for the frequent contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.ATTACH_IMAGE","true","false","false","true","true","String","""com.android.contacts.action.ATTACH_IMAGE""","","/**
 * Starts an Activity that lets the user pick a contact to attach an image to.
 * After picking the contact it launches the image cropper in face detection mode.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.GROUP_ROW_ID","true","false","false","true","true","String","DATA1","","/**
 * The row id of the group that this group membership refers to. Exactly one of
 * this or {@link #GROUP_SOURCE_ID} must be set when inserting a row.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.BaseTypes.TYPE_CUSTOM","true","false","false","true","false","int","0","","/**
 * A custom type. The custom label should be supplied by user.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.WESTERN","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.QuickContact.EXTRA_EXCLUDE_MIMES","true","false","false","true","true","String","""exclude_mimes""","","/**
 * Extra used to indicate a list of specific MIME-types to exclude and
 * not display. Stored as a {@link String} array.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsColumns.DISPLAY_NAME","true","false","false","true","true","String","ContactNameColumns.DISPLAY_NAME_PRIMARY","","/**
 * The display name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_OTHER","true","false","false","true","true","int","7","","","\android\provider\ContactsContract.java"
"android.provider.QuickContact.MODE_SMALL","true","false","false","true","true","int","1","","/**
 * Small QuickContact mode, usually presented with minimal actions.
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.PHONETIC_NAME_STYLE","true","false","false","true","true","String","DATA10","","/**
 * The alphabet used for capturing the phonetic name.
 * See {@link ContactsContract.PhoneticNameStyle}.
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Relation.TYPE_FATHER","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.PresenceColumns.IM_HANDLE","true","false","false","true","true","String","""im_handle""","","/**
 * The IM handle the presence item is for. The handle is scoped to
 * {@link #PROTOCOL}.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.LABEL","true","false","false","true","true","String","DataColumns.DATA3","","/**
 * The user defined label for the the contact method.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Website.TYPE_WORK","true","false","false","true","true","int","5","","","\android\provider\ContactsContract.java"
"android.provider.RawContactsEntity.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""raw_contact_entities"")","","/**
 * The content:// style URI for this table
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.MIDDLE_NAME","true","false","false","true","true","String","DATA5","","/**
 * The contact's middle name
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_ISDN","true","false","false","true","true","int","11","","","\android\provider\ContactsContract.java"
"android.provider.Nickname.CONTENT_ITEM_TYPE","true","false","false","true","true","String","""vnd.android.cursor.item/nickname""","","/**
 * MIME type used when storing this in data table.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.TERTIARY_EMAIL","true","false","false","true","true","String","""tertiary_email""","","/**
 * The extra field for an optional third contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.UNGROUPED_WITH_PHONES","true","false","false","true","true","String","""summ_phones""","","/**
 * Read-only count of {@link Contacts} from a specific source that have
 * no {@link CommonDataKinds.GroupMembership} entries, and also have phone numbers.
 * <p>
 * Type: INTEGER
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.LIST_FREQUENT_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_FREQUENT""","","/**
 * The action for the frequent contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContactsColumns.IS_RESTRICTED","true","false","false","true","true","String","""is_restricted""","","/**
 * Flag indicating that this {@link RawContacts} entry and its children have
 * been restricted to specific platform apps.
 * <P>Type: INTEGER (boolean)</P>
 *
 * @hide until finalized in future platform release
 */
","\android\provider\ContactsContract.java"
"android.provider.SyncColumns.ACCOUNT_NAME","true","false","false","true","true","String","""account_name""","","/**
 * The name of the account instance to which this row belongs, which when paired with
 * {@link #ACCOUNT_TYPE} identifies a specific account.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Nickname.NAME","true","false","false","true","true","String","DATA","","/**
 * The name itself
 */
","\android\provider\ContactsContract.java"
"android.provider.SyncColumns.DIRTY","true","false","false","true","true","String","""dirty""","","/**
 * Flag indicating that {@link #VERSION} has changed, and this row needs
 * to be synchronized by its owning account.
 * <P>Type: INTEGER (boolean)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.FULL_NAME_STYLE","true","false","false","true","true","String","DATA10","","/**
 * The style used for combining given/middle/family name into a full name.
 * See {@link ContactsContract.FullNameStyle}.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.POSTAL","true","false","false","true","true","String","""postal""","","/**
 * The extra field for the contact postal address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Organization.TITLE","true","false","false","true","true","String","DATA4","","/**
 * The position title at this company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.IM_PROTOCOL","true","false","false","true","true","String","""im_protocol""","","/**
 * The extra field for the IM protocol
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_ISDN","true","false","false","true","true","int","11","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ORGANIZATION","true","false","false","true","true","int","30","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SHOW_OR_CREATE_CONTACT","true","false","false","true","true","String","""com.android.contacts.action.SHOW_OR_CREATE_CONTACT""","","/**
 * Takes as input a data URI with a mailto: or tel: scheme. If a single
 * contact exists with the given data it will be shown. If no contact
 * exists, a dialog will ask the user if they want to create a new
 * contact with the provided details filled in. If multiple contacts
 * share the data the user will be prompted to pick which contact they
 * want to view.
 * <p>
 * For <code>mailto:</code> URIs, the scheme specific portion must be a
 * raw email address, such as one built using
 * {@link Uri#fromParts(String, String, String)}.
 * <p>
 * For <code>tel:</code> URIs, the scheme specific portion is compared
 * to existing numbers using the standard caller ID lookup algorithm.
 * The number must be properly encoded, for example using
 * {@link Uri#fromParts(String, String, String)}.
 * <p>
 * Any extras from the {@link Insert} class will be passed along to the
 * create activity if there are no contacts to show.
 * <p>
 * Passing true for the {@link #EXTRA_FORCE_CREATE} extra will skip
 * prompting the user when the contact doesn't exist.
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.TYPE_OTHER","true","false","false","true","true","int","3","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STREET","true","false","false","true","true","String","DATA4","","/**
 * Can be street, avenue, road, etc. This element also includes the
 * house number and room/apartment/flat/floor number.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.LIST_FREQUENT_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_FREQUENT""","","/**
 * The action for the frequent contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.PHOTO_ID","true","false","false","true","true","String","""photo_id""","","/**
 * Reference to the row in the data table holding the photo.
 * <P>Type: INTEGER REFERENCES data(_id)</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DISPLAY_ORDER_ALTERNATIVE","true","false","false","true","true","int","2","","/**
 * The value for the DISPLAY_ORDER key corresponding to showing the family name first.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.GROUP_ROW_ID","true","false","false","true","true","String","DATA1","","/**
 * The row id of the group that this group membership refers to. Exactly one of
 * this or {@link #GROUP_SOURCE_ID} must be set when inserting a row.
 * <P>Type: INTEGER</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.FOR_EXPORT_ONLY","true","false","false","true","true","String","""for_export_only""","","/**
 * If {@link #FOR_EXPORT_ONLY} is explicitly set to ""1"", returned Cursor toward
 * Data.CONTENT_URI contains only exportable data.
 *
 * This flag is useful (currently) only for vCard exporter in Contacts app, which
 * needs to exclude ""un-exportable"" data from available data to export, while
 * Contacts app itself has priviledge to access all data including ""un-expotable""
 * ones and providers return all of them regardless of the callers' intention.
 * <P>Type: INTEGER</p>
 *
 * @hide Maybe available only in Eclair and not really ready for public use.
 * TODO: remove, or implement this feature completely. As of now (Eclair),
 * we only use this flag in queryEntities(), not query().
 */
","\android\provider\ContactsContract.java"
"android.provider.StructuredName.PHONETIC_FAMILY_NAME","true","false","false","true","true","String","DATA9","","/**
 * The phonetic version of the family name for the contact.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.DATA_KEYS","false","false","true","true","true","String","new String[] { Data.DATA1, Data.DATA2, Data.DATA3, Data.DATA4, Data.DATA5, Data.DATA6, Data.DATA7, Data.DATA8, Data.DATA9, Data.DATA10, Data.DATA11, Data.DATA12, Data.DATA13, Data.DATA14, Data.DATA15, Data.SYNC1, Data.SYNC2, Data.SYNC3, Data.SYNC4 }","","","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_MULTI_VCARD_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""as_multi_vcard"")","","/**
 * Base {@link Uri} for referencing multiple {@link Contacts} entry,
 * created by appending {@link #LOOKUP_KEY} using
 * {@link Uri#withAppendedPath(Uri, String)}. The lookup keys have to be
 * encoded and joined with the colon ("":"") seperator. The resulting string
 * has to be encoded again. Provides
 * {@link OpenableColumns} columns when queried, or returns the
 * referenced contact formatted as a vCard when opened through
 * {@link ContentResolver#openAssetFileDescriptor(Uri, String)}.
 *
 * This is private API because we do not have a well-defined way to
 * specify several entities yet. The format of this Uri might change in the future
 * or the Uri might be completely removed.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_CALLBACK","true","false","false","true","true","int","8","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.STATUS_CHANGING_LOCALE","true","false","false","true","true","int","3","","/**
 * The status used during a locale change.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.FullNameStyle.WESTERN","true","false","false","true","true","int","1","","","\android\provider\ContactsContract.java"
"android.provider.Intents.TERTIARY_EMAIL","true","false","false","true","true","String","""tertiary_email""","","/**
 * The extra field for an optional third contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.ADDRESS","true","false","false","true","true","String","DATA1","","/**
 * The email address.
 * <P>Type: TEXT</P>
 * @hide TODO: Unhide in a separate CL
 */
","\android\provider\ContactsContract.java"
"android.provider.Event.START_DATE","true","false","false","true","true","String","DATA","","/**
 * The event start date as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.COMPANY","true","false","false","true","true","String","""company""","","/**
 * The extra field for the contact company.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_SPOUSE","true","false","false","true","true","int","14","","","\android\provider\ContactsContract.java"
"android.provider.Intents.LIST_GROUP_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_GROUP""","","/**
 * The action for the contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.SECONDARY_EMAIL","true","false","false","true","true","String","""secondary_email""","","/**
 * The extra field for an optional second contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/provider_status""","","/**
 * The MIME-type of {@link #CONTENT_URI} providing a directory of
 * settings.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.Email.CONTENT_LOOKUP_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""lookup"")","","/**
 * <p>
 * The content:// style URL for looking up data rows by email address. The
 * lookup argument, an email address, should be passed as an additional path segment
 * after this URI.
 * </p>
 * <p>Example:
 * <pre>
 * Uri uri = Uri.withAppendedPath(Email.CONTENT_LOOKUP_URI, Uri.encode(email));
 * Cursor c = getContentResolver().query(uri,
 * new String[]{Email.CONTACT_ID, Email.DISPLAY_NAME, Email.DATA},
 * null, null, null);
 * </pre>
 * </p>
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.NOTES","true","false","false","true","true","String","""notes""","","/**
 * The extra field for the contact notes.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneLookup.CONTENT_TYPE","true","false","false","true","true","String","""vnd.android.cursor.dir/phone_lookup""","","/**
 * The MIME type of {@link #CONTENT_FILTER_URI} providing a directory of phone lookup rows.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.BaseSyncColumns.SYNC4","true","false","false","true","true","String","""sync4""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.BaseSyncColumns.SYNC3","true","false","false","true","true","String","""sync3""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.BaseSyncColumns.SYNC2","true","false","false","true","true","String","""sync2""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.TERTIARY_EMAIL_TYPE","true","false","false","true","true","String","""tertiary_email_type""","","/**
 * The extra field for an optional third contact email type.
 * <P>Type: Either an integer value from
 * {@link CommonDataKinds.Email}
 * or a string specifying a custom label.</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.BaseSyncColumns.SYNC1","true","false","false","true","true","String","""sync1""","","/**
 * Generic column for use by sync adapters.
 */
","\android\provider\ContactsContract.java"
"android.provider.Phone.CONTENT_FILTER_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""filter"")","","/**
 * The content:// style URL for phone lookup using a filter. The filter returns
 * records of MIME type {@link #CONTENT_ITEM_TYPE}. The filter is applied
 * to display names as well as phone numbers. The filter argument should be passed
 * as an additional path segment after this URI.
 */
","\android\provider\ContactsContract.java"
"android.provider.Intents.EXTRA_FORCE_CREATE","true","false","false","true","true","String","""com.android.contacts.action.FORCE_CREATE""","","/**
 * Used with {@link #SHOW_OR_CREATE_CONTACT} to force creating a new
 * contact if no matching contact found. Otherwise, default behavior is
 * to prompt user with dialog before creating.
 * <p>
 * Type: BOOLEAN
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.CONTACT_STATUS_ICON","true","false","false","true","true","String","""contact_status_icon""","","/**
 * The resource ID of the icon for the source of contact status. This
 * resource is scoped by the {@link #CONTACT_STATUS_RES_PACKAGE}.
 * <p>Type: NUMBER</p>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.TYPE_BLOG","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.Phone.TYPE_MOBILE","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.ADDRESS_BOOK_INDEX_EXTRAS","true","false","false","true","true","String","""address_book_index_extras""","","/**
 * Add this query parameter to a URI to get back row counts grouped by
 * the address book index as cursor extras. For most languages it is the
 * first letter of the sort key. This parameter does not affect the main
 * content of the cursor.
 *
 * @hide
 */
","\android\provider\ContactsContract.java"
"android.provider.UI.LIST_ALL_CONTACTS_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_ALL_CONTACTS""","","/**
 * The action for the all contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.CONTENT_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(AUTHORITY_URI, ""raw_contacts"")","","/**
 * The content:// style URI for this table, which requests a directory of
 * raw contact rows matching the selection criteria.
 */
","\android\provider\ContactsContract.java"
"android.provider.Insert.EMAIL","true","false","false","true","true","String","""email""","","/**
 * The extra field for the contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_VCARD_URI","true","false","false","true","true","Uri","Uri.withAppendedPath(CONTENT_URI, ""as_vcard"")","","/**
 * Base {@link Uri} for referencing a single {@link Contacts} entry,
 * created by appending {@link #LOOKUP_KEY} using
 * {@link Uri#withAppendedPath(Uri, String)}. Provides
 * {@link OpenableColumns} columns when queried, or returns the
 * referenced contact formatted as a vCard when opened through
 * {@link ContentResolver#openAssetFileDescriptor(Uri, String)}.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.AUTHORITY_URI","true","false","false","true","true","Uri","Uri.parse(""content://"" + AUTHORITY)","","/**
 * A content:// style uri to the authority for the contacts provider
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.EXTRA_CREATE_DESCRIPTION","true","false","false","true","true","String","""com.android.contacts.action.CREATE_DESCRIPTION""","","/**
 * Used with {@link #SHOW_OR_CREATE_CONTACT} to specify an exact
 * description to be shown when prompting user about creating a new
 * contact.
 * <p>
 * Type: STRING
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.TYPE_PAGER","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SORT_KEY_PRIMARY","true","false","false","true","true","String","""sort_key""","","/**
 * Sort key that takes into account locale-based traditions for sorting
 * names in address books.  The default
 * sort key is {@link #DISPLAY_NAME_PRIMARY}.  For Chinese names
 * the sort key is the name's Pinyin spelling, and for Japanese names
 * it is the Hiragana version of the phonetic name.
 */
","\android\provider\ContactsContract.java"
"android.provider.ContactNameColumns.DISPLAY_NAME_PRIMARY","true","false","false","true","true","String","""display_name""","","/**
 * <p>
 * The standard text shown as the contact's display name, based on the best
 * available information for the contact (for example, it might be the email address
 * if the name is not available).
 * The information actually used to compute the name is stored in
 * {@link #DISPLAY_NAME_SOURCE}.
 * </p>
 * <p>
 * A contacts provider is free to choose whatever representation makes most
 * sense for its target market.
 * For example in the default Android Open Source Project implementation,
 * if the display name is
 * based on the structured name and the structured name follows
 * the Western full-name style, then this field contains the ""given name first""
 * version of the full name.
 * <p>
 *
 * @see ContactsContract.ContactNameColumns#DISPLAY_NAME_ALTERNATIVE
 */
","\android\provider\ContactsContract.java"
"android.provider.PhoneLookupColumns.LABEL","true","false","false","true","true","String","""label""","","/**
 * The user defined label for the phone number.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_ICQ","true","false","false","true","true","int","6","","","\android\provider\ContactsContract.java"
"android.provider.Contacts.CONTENT_DIRECTORY","true","false","false","true","true","String","""photo""","","/**
 * The directory twig for this sub-table
 */
","\android\provider\ContactsContract.java"
"android.provider.Website.TYPE_BLOG","true","false","false","true","true","int","2","","","\android\provider\ContactsContract.java"
"android.provider.ContactsContract.SECONDARY_EMAIL","true","false","false","true","true","String","""secondary_email""","","/**
 * The extra field for an optional second contact email address.
 * <P>Type: String</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.COMPANY","true","false","false","true","true","String","DATA","","/**
 * The company as the user entered it.
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.provider.UI.LIST_STARRED_ACTION","true","false","false","true","true","String","""com.android.contacts.action.LIST_STARRED""","","/**
 * The action for the starred contacts list tab.
 */
","\android\provider\ContactsContract.java"
"android.provider.RawContacts.DATA_KEYS","false","false","true","true","true","String","new String[] { Data.DATA1, Data.DATA2, Data.DATA3, Data.DATA4, Data.DATA5, Data.DATA6, Data.DATA7, Data.DATA8, Data.DATA9, Data.DATA10, Data.DATA11, Data.DATA12, Data.DATA13, Data.DATA14, Data.DATA15, Data.SYNC1, Data.SYNC2, Data.SYNC3, Data.SYNC4 }","","","\android\provider\ContactsContract.java"
"android.provider.StructuredPostal.NEIGHBORHOOD","true","false","false","true","true","String","DATA6","","/**
 * This is used to disambiguate a street address when a city
 * contains more than one street with the same name, or to specify a
 * small place whose mail is routed through a larger postal town. In
 * China it could be a county or a minor city.
 * <p>
 * Type: TEXT
 */
","\android\provider\ContactsContract.java"
"android.provider.Im.PROTOCOL_QQ","true","false","false","true","true","int","4","","","\android\provider\ContactsContract.java"
"android.provider.CommonDataKinds.PREFIX","true","false","false","true","true","String","DATA4","","/**
 * The contact's honorific prefix, e.g. ""Sir""
 * <P>Type: TEXT</P>
 */
","\android\provider\ContactsContract.java"
"android.os.UEvent.mMap","true","false","false","false","false","HashMap<String,String>","new HashMap<String, String>()","","// collection of key=value pairs parsed from the uevent message
","\android\os\UEventObserver.java"
"android.os.UEventObserver.sThreadStarted","false","false","true","true","false","boolean","false","","","\android\os\UEventObserver.java"
"android.os.UEventThread.mObservers","false","false","true","false","false","ArrayList<Object>","new ArrayList<Object>()","","/**
 * Many to many mapping of string match to observer.
 * Multimap would be better, but not available in android, so use
 * an ArrayList where even elements are the String match and odd
 * elements the corresponding UEventObserver observer
 */
","\android\os\UEventObserver.java"
"android.os.UEventObserver.mObservers","false","false","true","false","false","ArrayList<Object>","new ArrayList<Object>()","","/**
 * Many to many mapping of string match to observer.
 * Multimap would be better, but not available in android, so use
 * an ArrayList where even elements are the String match and odd
 * elements the corresponding UEventObserver observer
 */
","\android\os\UEventObserver.java"
"android.os.UEventObserver.TAG","false","false","true","true","true","String","UEventObserver.class.getSimpleName()","","","\android\os\UEventObserver.java"
"android.os.UEventObserver.sThread","false","false","true","true","false","UEventThread","","","","\android\os\UEventObserver.java"
"android.os.UEventObserver.mMap","true","false","false","false","false","HashMap<String,String>","new HashMap<String, String>()","","// collection of key=value pairs parsed from the uevent message
","\android\os\UEventObserver.java"
"android.widget.HeaderViewListAdapter.mFooterViewInfos","false","false","false","false","false","ArrayList<ListView.FixedViewInfo>","","","","\android\widget\HeaderViewListAdapter.java"
"android.widget.HeaderViewListAdapter.mIsFilterable","false","false","true","false","true","boolean","","","","\android\widget\HeaderViewListAdapter.java"
"android.widget.HeaderViewListAdapter.mAdapter","false","false","true","false","true","ListAdapter","","","","\android\widget\HeaderViewListAdapter.java"
"android.widget.HeaderViewListAdapter.mHeaderViewInfos","false","false","false","false","false","ArrayList<ListView.FixedViewInfo>","","","// They are indeed created when declared in ListView and then shared.
","\android\widget\HeaderViewListAdapter.java"
"android.widget.HeaderViewListAdapter.mAreAllFixedViewsSelectable","false","false","false","false","false","boolean","","","","\android\widget\HeaderViewListAdapter.java"
"android.widget.HeaderViewListAdapter.EMPTY_INFO_LIST","false","false","false","true","true","ArrayList<ListView.FixedViewInfo>","new ArrayList<ListView.FixedViewInfo>()","","// Currently only used by some CTS tests, which may be removed.
","\android\widget\HeaderViewListAdapter.java"
"android.app.AlarmManager.mService","false","false","true","false","true","IAlarmManager","","","","\android\app\AlarmManager.java"
"android.app.AlarmManager.INTERVAL_HALF_HOUR","true","false","false","true","true","long","2 * INTERVAL_FIFTEEN_MINUTES","","","\android\app\AlarmManager.java"
"android.app.AlarmManager.INTERVAL_FIFTEEN_MINUTES","true","false","false","true","true","long","15 * 60 * 1000","","/**
 * Available inexact recurrence intervals recognized by
 * {@link #setInexactRepeating(int, long, long, PendingIntent)}
 */
","\android\app\AlarmManager.java"
"android.app.AlarmManager.ELAPSED_REALTIME","true","false","false","true","true","int","3","","/**
 * Alarm time in {@link android.os.SystemClock#elapsedRealtime
 * SystemClock.elapsedRealtime()} (time since boot, including sleep).
 * This alarm does not wake the device up; if it goes off while the device
 * is asleep, it will not be delivered until the next time the device
 * wakes up.
 */
","\android\app\AlarmManager.java"
"android.app.AlarmManager.RTC","true","false","false","true","true","int","1","","/**
 * Alarm time in {@link System#currentTimeMillis System.currentTimeMillis()}
 * (wall clock time in UTC).  This alarm does not wake the
 * device up; if it goes off while the device is asleep, it will not be
 * delivered until the next time the device wakes up.
 */
","\android\app\AlarmManager.java"
"android.app.AlarmManager.ELAPSED_REALTIME_WAKEUP","true","false","false","true","true","int","2","","/**
 * Alarm time in {@link android.os.SystemClock#elapsedRealtime
 * SystemClock.elapsedRealtime()} (time since boot, including sleep),
 * which will wake up the device when it goes off.
 */
","\android\app\AlarmManager.java"
"android.app.AlarmManager.INTERVAL_HOUR","true","false","false","true","true","long","2 * INTERVAL_HALF_HOUR","","","\android\app\AlarmManager.java"
"android.app.AlarmManager.INTERVAL_DAY","true","false","false","true","true","long","2 * INTERVAL_HALF_DAY","","","\android\app\AlarmManager.java"
"android.app.AlarmManager.INTERVAL_HALF_DAY","true","false","false","true","true","long","12 * INTERVAL_HOUR","","","\android\app\AlarmManager.java"
"android.app.AlarmManager.RTC_WAKEUP","true","false","false","true","true","int","0","","/**
 * Alarm time in {@link System#currentTimeMillis System.currentTimeMillis()}
 * (wall clock time in UTC), which will wake up the device when
 * it goes off.
 */
","\android\app\AlarmManager.java"
"android.widget.AppSecurityPermissions.mNonDangerousList","false","false","true","false","false","LinearLayout","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mGroupLabelCache","false","false","true","false","false","HashMap<String,CharSequence>","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.TAG","false","false","true","true","true","String","""AppSecurityPermissions""","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mCurrentState","false","false","true","false","false","State","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mShowMoreIcon","false","false","true","false","false","ImageView","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mNoPermsView","false","false","true","false","false","View","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mDangerousIcon","false","false","true","false","false","Drawable","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mShowMinIcon","false","false","true","false","false","Drawable","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mPm","false","false","true","false","false","PackageManager","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.PermissionInfoComparator.mPm","false","false","true","false","false","PackageManager","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.PermissionInfoComparator.sCollator","false","false","true","false","true","Collator","Collator.getInstance()","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mDefaultGrpLabel","false","false","true","false","false","String","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mDangerousMap","false","false","true","false","false","Map<String,String>","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mNormalMap","false","false","true","false","false","Map<String,String>","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mDangerousList","false","false","true","false","false","LinearLayout","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mPermFormat","false","false","true","false","false","String","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.localLOGV","false","false","true","false","false","boolean","false","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mShowMaxIcon","false","false","true","false","false","Drawable","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mPermsList","false","false","true","false","false","List<PermissionInfo>","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mContext","false","false","true","false","false","Context","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.sCollator","false","false","true","false","true","Collator","Collator.getInstance()","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mShowMore","false","false","true","false","false","View","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mInflater","false","false","true","false","false","LayoutInflater","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mDefaultGrpName","false","false","true","false","false","String","""DefaultGrp""","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mExpanded","false","false","true","false","false","boolean","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mShowMoreText","false","false","true","false","false","TextView","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mNormalIcon","false","false","true","false","false","Drawable","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.AppSecurityPermissions.mPermsView","false","false","true","false","false","LinearLayout","","","","\android\widget\AppSecurityPermissions.java"
"android.widget.RatingBar.mProgressOnStartTracking","false","false","true","false","false","int","","","","\android\widget\RatingBar.java"
"android.widget.RatingBar.mNumStars","false","false","true","false","false","int","5","","","\android\widget\RatingBar.java"
"android.widget.RatingBar.mOnRatingBarChangeListener","false","false","true","false","false","OnRatingBarChangeListener","","","","\android\widget\RatingBar.java"
"android.webkit.FileLoader.TYPE_RES","false","false","false","true","true","int","2","","// used for files under res directory
","\android\webkit\FileLoader.java"
"android.webkit.FileLoader.mPath","false","false","true","false","false","String","","","// Full path to the file to load
","\android\webkit\FileLoader.java"
"android.webkit.FileLoader.TYPE_ASSET","false","false","false","true","true","int","1","","// used for files under asset directory
","\android\webkit\FileLoader.java"
"android.webkit.FileLoader.mType","false","false","true","false","false","int","","","// Indicates the type of the load
","\android\webkit\FileLoader.java"
"android.webkit.FileLoader.TYPE_FILE","false","false","false","true","true","int","3","","// generic file
","\android\webkit\FileLoader.java"
"android.webkit.FileLoader.mAllowFileAccess","false","false","true","false","false","boolean","","","// Allow/block file system access
","\android\webkit\FileLoader.java"
"android.webkit.FileLoader.LOGTAG","false","false","true","true","true","String","""webkit""","","","\android\webkit\FileLoader.java"
"android.preference.ListPreference.mEntries","false","false","true","false","false","CharSequence","","","","\android\preference\ListPreference.java"
"android.preference.ListPreference.mValue","false","false","true","false","false","String","","","","\android\preference\ListPreference.java"
"android.preference.SavedState.value","false","false","false","false","false","String","","","","\android\preference\ListPreference.java"
"android.preference.ListPreference.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\ListPreference.java"
"android.preference.ListPreference.mEntryValues","false","false","true","false","false","CharSequence","","","","\android\preference\ListPreference.java"
"android.preference.ListPreference.mClickedDialogEntryIndex","false","false","true","false","false","int","","","","\android\preference\ListPreference.java"
"android.preference.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\preference\ListPreference.java"
"android.preference.ListPreference.value","false","false","false","false","false","String","","","","\android\preference\ListPreference.java"
"android.os.FileObserver.m_mask","false","false","true","false","false","int","","","","\android\os\FileObserver.java"
"android.os.FileObserver.MODIFY","true","false","false","true","true","int","0x00000002","","/**
 * Event type: Data was written to a file
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.CLOSE_NOWRITE","true","false","false","true","true","int","0x00000010","","/**
 * Event type: Someone had a file or directory open read-only, and closed it
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.ATTRIB","true","false","false","true","true","int","0x00000004","","/**
 * Event type: Metadata (permissions, owner, timestamp) was changed explicitly
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.m_path","false","false","true","false","false","String","","","// instance
","\android\os\FileObserver.java"
"android.os.FileObserver.LOG_TAG","false","false","true","true","true","String","""FileObserver""","","","\android\os\FileObserver.java"
"android.os.FileObserver.ALL_EVENTS","true","false","false","true","true","int","ACCESS | MODIFY | ATTRIB | CLOSE_WRITE | CLOSE_NOWRITE | OPEN | MOVED_FROM | MOVED_TO | DELETE | CREATE | DELETE_SELF | MOVE_SELF","","/**
 * Event mask: All valid event types, combined
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.OPEN","true","false","false","true","true","int","0x00000020","","/**
 * Event type: A file or directory was opened
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.m_fd","false","false","true","false","false","int","","","","\android\os\FileObserver.java"
"android.os.FileObserver.s_observerThread","false","false","true","true","false","ObserverThread","","","","\android\os\FileObserver.java"
"android.os.FileObserver.MOVED_FROM","true","false","false","true","true","int","0x00000040","","/**
 * Event type: A file or subdirectory was moved from the monitored directory
 */
","\android\os\FileObserver.java"
"android.os.ObserverThread.m_observers","false","false","true","false","false","HashMap<Integer,WeakReference>","new HashMap<Integer, WeakReference>()","","","\android\os\FileObserver.java"
"android.os.ObserverThread.m_fd","false","false","true","false","false","int","","","","\android\os\FileObserver.java"
"android.os.FileObserver.CLOSE_WRITE","true","false","false","true","true","int","0x00000008","","/**
 * Event type: Someone had a file or directory open for writing, and closed it
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.DELETE","true","false","false","true","true","int","0x00000200","","/**
 * Event type: A file was deleted from the monitored directory
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.MOVE_SELF","true","false","false","true","true","int","0x00000800","","/**
 * Event type: The monitored file or directory was moved; monitoring continues
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.m_descriptor","false","false","true","false","false","Integer","","","","\android\os\FileObserver.java"
"android.os.FileObserver.DELETE_SELF","true","false","false","true","true","int","0x00000400","","/**
 * Event type: The monitored file or directory was deleted; monitoring effectively stops
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.m_observers","false","false","true","false","false","HashMap<Integer,WeakReference>","new HashMap<Integer, WeakReference>()","","","\android\os\FileObserver.java"
"android.os.FileObserver.MOVED_TO","true","false","false","true","true","int","0x00000080","","/**
 * Event type: A file or subdirectory was moved to the monitored directory
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.CREATE","true","false","false","true","true","int","0x00000100","","/**
 * Event type: A new file or subdirectory was created under the monitored directory
 */
","\android\os\FileObserver.java"
"android.os.FileObserver.ACCESS","true","false","false","true","true","int","0x00000001","","/**
 * Event type: Data was read from a file
 */
","\android\os\FileObserver.java"
"android.app.Dialog.mCreated","false","false","true","false","false","boolean","false","","","\android\app\Dialog.java"
"android.app.Dialog.DISMISS","false","false","true","true","true","int","0x43","","","\android\app\Dialog.java"
"android.app.Dialog.mListenersHandler","false","false","true","false","false","Handler","","","","\android\app\Dialog.java"
"android.app.Dialog.mOnKeyListener","false","false","true","false","false","OnKeyListener","","","","\android\app\Dialog.java"
"android.app.Dialog.mHandler","false","false","true","false","true","Handler","new Handler()","","","\android\app\Dialog.java"
"android.app.Dialog.mShowMessage","false","false","true","false","false","Message","","","","\android\app\Dialog.java"
"android.app.Dialog.CANCEL","false","false","true","true","true","int","0x44","","","\android\app\Dialog.java"
"android.app.Dialog.mOwnerActivity","false","false","true","false","false","Activity","","","","\android\app\Dialog.java"
"android.app.Dialog.mContext","false","false","false","false","true","Context","","","","\android\app\Dialog.java"
"android.app.Dialog.SHOW","false","false","true","true","true","int","0x45","","","\android\app\Dialog.java"
"android.app.Dialog.mDismissAction","false","false","true","false","true","Runnable","new Runnable() {

    public void run() {
        dismissDialog();
    }
}","","","\android\app\Dialog.java"
"android.app.Dialog.mDecor","false","false","false","false","false","View","","","","\android\app\Dialog.java"
"android.app.Dialog.mShowing","false","false","true","false","false","boolean","false","","","\android\app\Dialog.java"
"android.app.ListenersHandler.mDialog","false","false","true","false","false","WeakReference<DialogInterface>","","","","\android\app\Dialog.java"
"android.app.Dialog.mUiThread","false","false","true","false","true","Thread","","","","\android\app\Dialog.java"
"android.app.Dialog.mCanceledOnTouchOutside","false","false","true","false","false","boolean","false","","/**
 * Whether to cancel the dialog when a touch is received outside of the
 * window's bounds.
 */
","\android\app\Dialog.java"
"android.app.Dialog.mDialog","false","false","true","false","false","WeakReference<DialogInterface>","","","","\android\app\Dialog.java"
"android.app.Dialog.mCancelable","false","true","false","false","false","boolean","true","","/**
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
","\android\app\Dialog.java"
"android.app.Dialog.mWindow","false","false","false","false","false","Window","","","","\android\app\Dialog.java"
"android.app.Dialog.DIALOG_HIERARCHY_TAG","false","false","true","true","true","String","""android:dialogHierarchy""","","","\android\app\Dialog.java"
"android.app.Dialog.mDismissMessage","false","false","true","false","false","Message","","","","\android\app\Dialog.java"
"android.app.Dialog.mWindowManager","false","false","false","false","true","WindowManager","","","","\android\app\Dialog.java"
"android.app.Dialog.DIALOG_SHOWING_TAG","false","false","true","true","true","String","""android:dialogShowing""","","","\android\app\Dialog.java"
"android.app.Dialog.mCancelMessage","false","false","true","false","false","Message","","","","\android\app\Dialog.java"
"android.text.method.HideReturnsTransformationMethod.REPLACEMENT","false","false","true","true","false","char","new char[] { '\uFEFF' }","","","\android\text\method\HideReturnsTransformationMethod.java"
"android.text.method.HideReturnsTransformationMethod.ORIGINAL","false","false","true","true","false","char","new char[] { '\r' }","","","\android\text\method\HideReturnsTransformationMethod.java"
"android.text.method.HideReturnsTransformationMethod.sInstance","false","false","true","true","false","HideReturnsTransformationMethod","","","","\android\text\method\HideReturnsTransformationMethod.java"
"android.pim.vcard.VCardEntryCommitter.mTimeToCommit","false","false","true","false","false","long","","","","\android\pim\vcard\VCardEntryCommitter.java"
"android.pim.vcard.VCardEntryCommitter.mContentResolver","false","false","true","false","true","ContentResolver","","","","\android\pim\vcard\VCardEntryCommitter.java"
"android.pim.vcard.VCardEntryCommitter.LOG_TAG","true","false","false","true","false","String","""VCardEntryComitter""","","","\android\pim\vcard\VCardEntryCommitter.java"
"android.pim.vcard.VCardEntryCommitter.mCreatedUris","false","false","true","false","false","ArrayList<Uri>","new ArrayList<Uri>()","","","\android\pim\vcard\VCardEntryCommitter.java"
"android.content.Intent.ACTION_ATTACH_DATA","true","false","false","true","true","String","""android.intent.action.ATTACH_DATA""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Used to indicate that some piece of data should be attached to some other
 * place.  For example, image data could be attached to a contact.  It is up
 * to the recipient to decide where the data should be attached; the intent
 * does not specify the ultimate destination.
 * <p>Input: {@link #getData} is URI of data to be attached.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.CREATOR","true","false","false","true","true","Parcelable.Creator<Intent>","new Parcelable.Creator<Intent>() {

    public Intent createFromParcel(Parcel in) {
        return new Intent(in);
    }

    public Intent[] newArray(int size) {
        return new Intent[size];
    }
}","","","\android\content\Intent.java"
"android.content.Intent.ACTION_RUN","true","false","false","true","true","String","""android.intent.action.RUN""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Run the data, whatever that means.
 * <p>Input: ?  (Note: this is currently specific to the test harness.)
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP","true","false","false","true","true","int","0x20000000","","/**
 * If set, the activity will not be launched if it is already running
 * at the top of the history stack.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_INFO","true","false","false","true","true","String","""android.intent.category.INFO""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Provides information about the package it is in; typically used if
 * a package does not contain a {@link #CATEGORY_LAUNCHER} to provide
 * a front-door to the user without having to be shown in the all apps list.
 */
","\android\content\Intent.java"
"android.content.ShortcutIconResource.packageName","true","false","false","false","false","String","","","/**
 * The package name of the application containing the icon.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SEARCH_LONG_PRESS","true","false","false","true","true","String","""android.intent.action.SEARCH_LONG_PRESS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Start action associated with long pressing on the
 * search key.
 * <p>Input: Nothing.
 * <p>Output: Nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_UNSHARED","true","false","false","true","true","String","""android.intent.action.MEDIA_UNSHARED""","","/**
 * Broadcast Action:  External media is no longer being shared via USB mass storage.
 * The path to the mount point for the previously shared media is contained in the Intent.mData field.
 *
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.IMMUTABLE_FLAGS","true","false","false","true","true","int","FLAG_GRANT_READ_URI_PERMISSION | FLAG_GRANT_WRITE_URI_PERMISSION","","/**
 * @hide Flags that can't be changed with PendingIntent.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_HOME","true","false","false","true","true","String","""android.intent.category.HOME""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * This is the home activity, that is the first activity that is displayed
 * when the device boots.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_UNMOUNTABLE","true","false","false","true","true","String","""android.intent.action.MEDIA_UNMOUNTABLE""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External media is present but cannot be mounted.
 * The path to the mount point for the removed media is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_TAB","true","false","false","true","true","String","""android.intent.category.TAB""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Intended to be used as a tab inside of an containing TabActivity.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_VIEW","true","false","false","true","true","String","""android.intent.action.VIEW""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Display the data to the user.  This is the most common
 * action performed on data -- it is the generic action you can use on
 * a piece of data to get the most reasonable thing to occur.  For example,
 * when used on a contacts entry it will view the entry; when used on a
 * mailto: URI it will bring up a compose window filled with the information
 * supplied by the URI; when used with a tel: URI it will invoke the
 * dialer.
 * <p>Input: {@link #getData} is URI from which to retrieve data.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CHOOSER","true","false","false","true","true","String","""android.intent.action.CHOOSER""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Display an activity chooser, allowing the user to pick
 * what they want to before proceeding.  This can be used as an alternative
 * to the standard activity picker that is displayed by the system when
 * you try to start an activity with multiple possible matches, with these
 * differences in behavior:
 * <ul>
 * <li>You can specify the title that will appear in the activity chooser.
 * <li>The user does not have the option to make one of the matching
 * activities a preferred activity, and all possible activities will
 * always be shown even if one of them is currently marked as the
 * preferred activity.
 * </ul>
 * <p>
 * This action should be used when the user will naturally expect to
 * select an activity in order to proceed.  An example if when not to use
 * it is when the user clicks on a ""mailto:"" link.  They would naturally
 * expect to go directly to their mail app, so startActivity() should be
 * called directly: it will
 * either launch the current preferred app, or put up a dialog allowing the
 * user to pick an app to use and optionally marking that as preferred.
 * <p>
 * In contrast, if the user is selecting a menu item to send a picture
 * they are viewing to someone else, there are many different things they
 * may want to do at this point: send it through e-mail, upload it to a
 * web service, etc.  In this case the CHOOSER action should be used, to
 * always present to the user a list of the things they can do, with a
 * nice title given by the caller such as ""Send this photo with:"".
 * <p>
 * As a convenience, an Intent of this form can be created with the
 * {@link #createChooser} function.
 * <p>Input: No data should be specified.  get*Extra must have
 * a {@link #EXTRA_INTENT} field containing the Intent being executed,
 * and can optionally have a {@link #EXTRA_TITLE} field containing the
 * title text to display in the chooser.
 * <p>Output: Depends on the protocol of {@link #EXTRA_INTENT}.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_SHARED","true","false","false","true","true","String","""android.intent.action.MEDIA_SHARED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External media is unmounted because it is being shared via USB mass storage.
 * The path to the mount point for the shared media is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.mIntent","false","false","true","false","true","Intent","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_SYNC","true","false","false","true","true","String","""android.intent.action.SYNC""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Perform a data synchronization.
 * <p>Input: ?
 * <p>Output: ?
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SHUTDOWN","true","false","false","true","true","String","""android.intent.action.ACTION_SHUTDOWN""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  Device is shutting down.
 * This is broadcast when the device is being shut down (completely turned
 * off, not sleeping).  Once the broadcast is complete, the final shutdown
 * will proceed and all unsaved data lost.  Apps will not normally need
 * to handle this, since the foreground activity will be paused as well.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.FILL_IN_ACTION","true","false","false","true","true","int","1 << 0","","/**
 * Use with {@link #fillIn} to allow the current action value to be
 * overwritten, even if it is already set.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_TEMPLATE","true","false","false","true","true","String","""android.intent.extra.TEMPLATE""","","/**
 * The initial data to place in a newly created record.  Use with
 * {@link #ACTION_INSERT}.  The data here is a Map containing the same
 * fields as would be given to the underlying ContentProvider.insert()
 * call.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_INSERT","true","false","false","true","true","String","""android.intent.action.INSERT""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Insert an empty item into the given container.
 * <p>Input: {@link #getData} is URI of the directory (vnd.android.cursor.dir/*)
 * in which to place the data.
 * <p>Output: URI of the new data that was created.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_DATA_REMOVED","true","false","false","true","true","String","""android.intent.extra.DATA_REMOVED""","","/**
 * Used as a boolean extra field in {@link android.content.Intent#ACTION_PACKAGE_REMOVED}
 * intents to indicate whether this represents a full uninstall (removing
 * both the code and its data) or a partial uninstall (leaving its data,
 * implying that this is an update).
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SYNC_STATE_CHANGED","true","false","false","true","true","String","""android.intent.action.SYNC_STATE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Sync State Changed Action: This is broadcast when the sync starts or stops or when one has
 * been failing for a long time.  It is used by the SyncManager and the StatusBar service.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.mFlags","false","false","true","false","false","int","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_POWER_USAGE_SUMMARY","true","false","false","true","true","String","""android.intent.action.POWER_USAGE_SUMMARY""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show power usage information to the user.
 * <p>Input: Nothing.
 * <p>Output: Nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT","true","false","false","true","true","int","0x00400000","","/**
 * This flag is not normally set by application code, but set for you by
 * the system as described in the
 * {@link android.R.styleable#AndroidManifestActivity_launchMode
 * launchMode} documentation for the singleTask mode.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_TIME_TICK","true","false","false","true","true","String","""android.intent.action.TIME_TICK""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The current time has changed.  Sent every
 * minute.  You can <em>not</em> receive this through components declared
 * in manifests, only by exlicitly registering for it with
 * {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
 * Context.registerReceiver()}.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CALL","true","false","false","true","true","String","""android.intent.action.CALL""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Perform a call to someone specified by the data.
 * <p>Input: If nothing, an empty dialer is started; else {@link #getData}
 * is URI of a phone number to be dialed or a tel: URI of an explicit phone
 * number.
 * <p>Output: nothing.
 *
 * <p>Note: there will be restrictions on which applications can initiate a
 * call; most applications should use the {@link #ACTION_DIAL}.
 * <p>Note: this Intent <strong>cannot</strong> be used to call emergency
 * numbers.  Applications can <strong>dial</strong> emergency numbers using
 * {@link #ACTION_DIAL}, however.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_AIRPLANE_MODE_CHANGED","true","false","false","true","true","String","""android.intent.action.AIRPLANE_MODE""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * <p>Broadcast Action: The user has switched the phone into or out of Airplane Mode. One or
 * more radios have been turned off or on. The intent will have the following extra value:</p>
 * <ul>
 * <li><em>state</em> - A boolean value indicating whether Airplane Mode is on. If true,
 * then cell radio and possibly other radios such as bluetooth or WiFi may have also been
 * turned off</li>
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SENDTO","true","false","false","true","true","String","""android.intent.action.SENDTO""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Send a message to someone specified by the data.
 * <p>Input: {@link #getData} is URI describing the target.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_VOICE_COMMAND","true","false","false","true","true","String","""android.intent.action.VOICE_COMMAND""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Start Voice Command.
 * <p>Input: Nothing.
 * <p>Output: Nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.FILL_IN_SOURCE_BOUNDS","true","false","false","true","true","int","1 << 5","","/**
 * Use with {@link #fillIn} to allow the current package value to be
 * overwritten, even if it is already set.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_PACKAGE_CHANGED","true","false","false","true","true","String","""android.intent.action.PACKAGE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An existing application package has been changed (e.g.
 * a component has been enabled or disabled).  The data contains the name of
 * the package.
 * <ul>
 * <li> {@link #EXTRA_UID} containing the integer uid assigned to the package.
 * <li> {@link #EXTRA_CHANGED_COMPONENT_NAME_LIST} containing the class name
 * of the changed components.
 * <li> {@link #EXTRA_DONT_KILL_APP} containing boolean field to override the
 * default action of restarting the application.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.FILL_IN_PACKAGE","true","false","false","true","true","int","1 << 4","","/**
 * Use with {@link #fillIn} to allow the current package value to be
 * overwritten, even if it is already set.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_CLIENT_INTENT","true","false","false","true","true","String","""android.intent.extra.client_intent""","","/**
 * @hide
 * Magic extra system code can use when binding, to give a PendingIntent object
 * that can be launched for the user to disable the system's use of this
 * service.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_ALARM_COUNT","true","false","false","true","true","String","""android.intent.extra.ALARM_COUNT""","","/**
 * Used as an int extra field in {@link android.app.AlarmManager} intents
 * to tell the application being invoked how many pending alarms are being
 * delievered with the intent.  For one-shot alarms this will always be 1.
 * For recurring alarms, this might be greater than 1 if the device was
 * asleep or powered off at the time an earlier alarm would have been
 * delivered.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP","true","false","false","true","true","int","0x04000000","","/**
 * If set, and the activity being launched is already running in the
 * current task, then instead of launching a new instance of that activity,
 * all of the other activities on top of it will be closed and this Intent
 * will be delivered to the (now on top) old activity as a new Intent.
 *
 * <p>For example, consider a task consisting of the activities: A, B, C, D.
 * If D calls startActivity() with an Intent that resolves to the component
 * of activity B, then C and D will be finished and B receive the given
 * Intent, resulting in the stack now being: A, B.
 *
 * <p>The currently running instance of activity B in the above example will
 * either receive the new intent you are starting here in its
 * onNewIntent() method, or be itself finished and restarted with the
 * new intent.  If it has declared its launch mode to be ""multiple"" (the
 * default) and you have not set {@link #FLAG_ACTIVITY_SINGLE_TOP} in
 * the same intent, then it will be finished and re-created; for all other
 * launch modes or if {@link #FLAG_ACTIVITY_SINGLE_TOP} is set then this
 * Intent will be delivered to the current instance's onNewIntent().
 *
 * <p>This launch mode can also be used to good effect in conjunction with
 * {@link #FLAG_ACTIVITY_NEW_TASK}: if used to start the root activity
 * of a task, it will bring any currently running instance of that task
 * to the foreground, and then clear it to its root state.  This is
 * especially useful, for example, when launching an activity from the
 * notification manager.
 *
 * <p>See <a href=""{@docRoot}guide/topics/fundamentals.html#acttask"">Application Fundamentals:
 * Activities and Tasks</a> for more details on tasks.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_SAMPLE_CODE","true","false","false","true","true","String","""android.intent.category.SAMPLE_CODE""","","/**
 * To be used as an sample code example (not part of the normal user
 * experience).
 */
","\android\content\Intent.java"
"android.content.Intent.mPackage","false","false","true","false","false","String","","","","\android\content\Intent.java"
"android.content.Intent.mAction","false","false","true","false","false","String","","","","\android\content\Intent.java"
"android.content.Intent.packageName","true","false","false","false","false","String","","","/**
 * The package name of the application containing the icon.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_DOCK_STATE_CAR","true","false","false","true","true","int","2","","/**
 * Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
 * to represent that the phone is in a car dock.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CAMERA_BUTTON","true","false","false","true","true","String","""android.intent.action.CAMERA_BUTTON""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  The ""Camera Button"" was pressed.  Includes a single
 * extra field, {@link #EXTRA_KEY_EVENT}, containing the key event that
 * caused the broadcast.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_NEW_TASK","true","false","false","true","true","int","0x10000000","","/**
 * If set, this activity will become the start of a new task on this
 * history stack.  A task (from the activity that started it to the
 * next task activity) defines an atomic group of activities that the
 * user can move to.  Tasks can be moved to the foreground and background;
 * all of the activities inside of a particular task always remain in
 * the same order.  See
 * <a href=""{@docRoot}guide/topics/fundamentals.html#acttask"">Application Fundamentals:
 * Activities and Tasks</a> for more details on tasks.
 *
 * <p>This flag is generally used by activities that want
 * to present a ""launcher"" style behavior: they give the user a list of
 * separate things that can be done, which otherwise run completely
 * independently of the activity launching them.
 *
 * <p>When using this flag, if a task is already running for the activity
 * you are now starting, then a new activity will not be started; instead,
 * the current task will simply be brought to the front of the screen with
 * the state it was last in.  See {@link #FLAG_ACTIVITY_MULTIPLE_TASK} for a flag
 * to disable this behavior.
 *
 * <p>This flag can not be used when the caller is requesting a result from
 * the activity being launched.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION","true","false","false","true","true","int","0x00000002","","/**
 * If set, the recipient of this Intent will be granted permission to
 * perform write operations on the Uri in the Intent's data.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_ALL_APPS","true","false","false","true","true","String","""android.intent.action.ALL_APPS""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: List all available applications
 * <p>Input: Nothing.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_GTALK_SERVICE_DISCONNECTED","true","false","false","true","true","String","""android.intent.action.GTALK_DISCONNECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An GTalk connection has been disconnected.
 */
","\android\content\Intent.java"
"android.content.Intent.mExtras","false","false","true","false","false","Bundle","","","","\android\content\Intent.java"
"android.content.Intent.EXTRA_SHORTCUT_INTENT","true","false","false","true","true","String","""android.intent.extra.shortcut.INTENT""","","/**
 * The name of the extra used to define the Intent of a shortcut.
 *
 * @see #ACTION_CREATE_SHORTCUT
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_FACTORY_TEST","true","false","false","true","true","String","""android.intent.action.FACTORY_TEST""","","/**
 * Activity Action: Main entry point for factory tests.  Only used when
 * the device is booting in factory test node.  The implementing package
 * must be installed in the system image.
 * <p>Input: nothing
 * <p>Output: nothing
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_NOFS","true","false","false","true","true","String","""android.intent.action.MEDIA_NOFS""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External media is present, but is using an incompatible fs (or is blank)
 * The path to the mount point for the checking media is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_UMS_CONNECTED","true","false","false","true","true","String","""android.intent.action.UMS_CONNECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  The device has entered USB Mass Storage mode.
 * This is used mainly for the USB Settings panel.
 * Apps should listen for ACTION_MEDIA_MOUNTED and ACTION_MEDIA_UNMOUNTED broadcasts to be notified
 * when the SD card file system is mounted or unmounted
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_EMAIL","true","false","false","true","true","String","""android.intent.extra.EMAIL""","","/**
 * A String[] holding e-mail addresses that should be delivered to.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_TEST","true","false","false","true","true","String","""android.intent.category.TEST""","","/**
 * To be used as a test (not part of the normal user experience).
 */
","\android\content\Intent.java"
"android.content.Intent.resourceName","true","false","false","false","false","String","","","/**
 * The resource name of the icon, including package, name and type.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_RECEIVER_REPLACE_PENDING","true","false","false","true","true","int","0x20000000","","/**
 * If set, when sending a broadcast the new broadcast will replace
 * any existing pending broadcast that matches it.  Matching is defined
 * by {@link Intent#filterEquals(Intent) Intent.filterEquals} returning
 * true for the intents of the two broadcasts.  When a match is found,
 * the new broadcast (and receivers associated with it) will replace the
 * existing one in the pending broadcast list, remaining at the same
 * position in the list.
 *
 * <p>This flag is most typically used with sticky broadcasts, which
 * only care about delivering the most recent values of the broadcast
 * to their receivers.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_NO_USER_ACTION","true","false","false","true","true","int","0x00040000","","/**
 * If set, this flag will prevent the normal {@link android.app.Activity#onUserLeaveHint}
 * callback from occurring on the current frontmost activity before it is
 * paused as the newly-started activity is brought to the front.
 *
 * <p>Typically, an activity can rely on that callback to indicate that an
 * explicit user action has caused their activity to be moved out of the
 * foreground. The callback marks an appropriate point in the activity's
 * lifecycle for it to dismiss any notifications that it intends to display
 * ""until the user has seen them,"" such as a blinking LED.
 *
 * <p>If an activity is ever started via any non-user-driven events such as
 * phone-call receipt or an alarm handler, this flag should be passed to {@link
 * Context#startActivity Context.startActivity}, ensuring that the pausing
 * activity does not think the user has acknowledged its notification.
 */
","\android\content\Intent.java"
"android.content.ShortcutIconResource.CREATOR","true","false","false","true","true","Parcelable.Creator<ShortcutIconResource>","new Parcelable.Creator<ShortcutIconResource>() {

    public ShortcutIconResource createFromParcel(Parcel source) {
        ShortcutIconResource icon = new ShortcutIconResource();
        icon.packageName = source.readString();
        icon.resourceName = source.readString();
        return icon;
    }

    public ShortcutIconResource[] newArray(int size) {
        return new ShortcutIconResource[size];
    }
}","","/**
 * Used to read a ShortcutIconResource from a Parcel.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_DESK_DOCK","true","false","false","true","true","String","""android.intent.category.DESK_DOCK""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * An activity to run when device is inserted into a car dock.
 * Used with {@link #ACTION_MAIN} to launch an activity.  For more
 * information, see {@link android.app.UiModeManager}.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_ALARM_CHANGED","true","false","false","true","true","String","""android.intent.action.ALARM_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Alarm Changed Action: This is broadcast when the AlarmClock
 * application's alarm is set or unset.  It is used by the
 * AlarmClock application and the StatusBar service.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_EXTERNAL_APPLICATIONS_AVAILABLE","true","false","false","true","true","String","""android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Resources for a set of packages (which were
 * previously unavailable) are currently
 * available since the media on which they exist is available.
 * The extra data {@link #EXTRA_CHANGED_PACKAGE_LIST} contains a
 * list of packages whose availability changed.
 * The extra data {@link #EXTRA_CHANGED_UID_LIST} contains a
 * list of uids of packages whose availability changed.
 * Note that the
 * packages in this list do <em>not</em> receive this broadcast.
 * The specified set of packages are now available on the system.
 * <p>Includes the following extras:
 * <ul>
 * <li> {@link #EXTRA_CHANGED_PACKAGE_LIST} is the set of packages
 * whose resources(were previously unavailable) are currently available.
 * {@link #EXTRA_CHANGED_UID_LIST} is the set of uids of the
 * packages whose resources(were previously unavailable)
 * are  currently available.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_CC","true","false","false","true","true","String","""android.intent.extra.CC""","","/**
 * A String[] holding e-mail addresses that should be carbon copied.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_BATTERY_CHANGED","true","false","false","true","true","String","""android.intent.action.BATTERY_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  This is a <em>sticky broadcast</em> containing the
 * charging state, level, and other information about the battery.
 * See {@link android.os.BatteryManager} for documentation on the
 * contents of the Intent.
 *
 * <p class=""note"">
 * You can <em>not</em> receive this through components declared
 * in manifests, only by explicitly registering for it with
 * {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
 * Context.registerReceiver()}.  See {@link #ACTION_BATTERY_LOW},
 * {@link #ACTION_BATTERY_OKAY}, {@link #ACTION_POWER_CONNECTED},
 * and {@link #ACTION_POWER_DISCONNECTED} for distinct battery-related
 * broadcasts that are sent and can be received through manifest
 * receivers.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_UNIT_TEST","true","false","false","true","true","String","""android.intent.category.UNIT_TEST""","","/**
 * To be used as a unit test (run through the Test Harness).
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_REPLACING","true","false","false","true","true","String","""android.intent.extra.REPLACING""","","/**
 * Used as a boolean extra field in {@link android.content.Intent#ACTION_PACKAGE_REMOVED}
 * intents to indicate that this is a replacement of the package, so this
 * broadcast will immediately be followed by an add broadcast for a
 * different version of the same package.
 */
","\android\content\Intent.java"
"android.content.FilterComparison.mHashCode","false","false","true","false","true","int","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_SYSTEM_TUTORIAL","true","false","false","true","true","String","""android.intent.action.SYSTEM_TUTORIAL""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Start the platform-defined tutorial
 * <p>Input: {@link android.app.SearchManager#QUERY getStringExtra(SearchManager.QUERY)}
 * is the text to search for.  If empty, simply
 * enter your search results Activity with the search UI activated.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_STREAM","true","false","false","true","true","String","""android.intent.extra.STREAM""","","/**
 * A content: URI holding a stream of data associated with the Intent,
 * used with {@link #ACTION_SEND} to supply the data being sent.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_UMS_DISCONNECTED","true","false","false","true","true","String","""android.intent.action.UMS_DISCONNECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  The device has exited USB Mass Storage mode.
 * This is used mainly for the USB Settings panel.
 * Apps should listen for ACTION_MEDIA_MOUNTED and ACTION_MEDIA_UNMOUNTED broadcasts to be notified
 * when the SD card file system is mounted or unmounted
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_RECEIVER_BOOT_UPGRADE","true","false","false","true","true","int","0x08000000","","/**
 * Set when this broadcast is for a boot upgrade, a special mode that
 * allows the broadcast to be sent before the system is ready and launches
 * the app process with no providers running in it.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST","true","false","false","true","true","String","""android.intent.category.FRAMEWORK_INSTRUMENTATION_TEST""","","/**
 * To be used as code under test for framework instrumentation tests.
 */
","\android\content\Intent.java"
"android.content.Intent.mComponent","false","false","true","false","false","ComponentName","","","","\android\content\Intent.java"
"android.content.Intent.EXTRA_KEY_CONFIRM","true","false","false","true","true","String","""android.intent.extra.KEY_CONFIRM""","","/**
 * Set to true in {@link #ACTION_REQUEST_SHUTDOWN} to request confirmation from the user
 * before shutting down.
 *
 * {@hide}
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_SUBJECT","true","false","false","true","true","String","""android.intent.extra.SUBJECT""","","/**
 * A constant string holding the desired subject line of a message.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_DOCK_EVENT","true","false","false","true","true","String","""android.intent.action.DOCK_EVENT""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  A sticky broadcast for changes in the physical
 * docking state of the device.
 *
 * <p>The intent will have the following extra values:
 * <ul>
 * <li><em>{@link #EXTRA_DOCK_STATE}</em> - the current dock
 * state, indicating which dock the device is physically in.</li>
 * </ul>
 * <p>This is intended for monitoring the current physical dock state.
 * See {@link android.app.UiModeManager} for the normal API dealing with
 * dock mode changes.
 */
","\android\content\Intent.java"
"android.content.ShortcutIconResource.resourceName","true","false","false","false","false","String","","","/**
 * The resource name of the icon, including package, name and type.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_BATTERY_OKAY","true","false","false","true","true","String","""android.intent.action.BATTERY_OKAY""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  Indicates the battery is now okay after being low.
 * This will be sent after {@link #ACTION_BATTERY_LOW} once the battery has
 * gone back up to an okay state.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_UPGRADE_SETUP","true","false","false","true","true","String","""android.intent.action.UPGRADE_SETUP""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Setup wizard to launch after a platform update.  This
 * activity should have a string meta-data field associated with it,
 * {@link #METADATA_SETUP_VERSION}, which defines the current version of
 * the platform for setup.  The activity will be launched only if
 * {@link android.provider.Settings.Secure#LAST_SETUP_SHOWN} is not the
 * same value.
 * <p>Input: Nothing.
 * <p>Output: Nothing.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CALL_EMERGENCY","true","false","false","true","true","String","""android.intent.action.CALL_EMERGENCY""","","/**
 * Activity Action: Perform a call to an emergency number specified by the
 * data.
 * <p>Input: {@link #getData} is URI of a phone number to be dialed or a
 * tel: URI of an explicit phone number.
 * <p>Output: nothing.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_DEBUG_LOG_RESOLUTION","true","false","false","true","true","int","0x00000008","","/**
 * A flag you can enable for debugging: when set, log messages will be
 * printed during the resolution of this intent to show you what has
 * been found to create the final resolved list.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_EJECT","true","false","false","true","true","String","""android.intent.action.MEDIA_EJECT""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  User has expressed the desire to remove the external storage media.
 * Applications should close all files they have open within the mount point when they receive this intent.
 * The path to the mount point for the media to be ejected is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.URI_INTENT_SCHEME","true","false","false","true","true","int","1 << 0","","/**
 * Flag for use with {@link #toUri} and {@link #parseUri}: the URI string
 * always has the ""intent:"" scheme.  This syntax can be used when you want
 * to later disambiguate between URIs that are intended to describe an
 * Intent vs. all others that should be treated as raw URIs.  When used
 * with {@link #parseUri}, any other scheme will result in a generic
 * VIEW action for that raw URI.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_DEFAULT","true","false","false","true","true","String","ACTION_VIEW","","/**
 * A synonym for {@link #ACTION_VIEW}, the ""standard"" action that is
 * performed on a piece of data.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_INSERT_OR_EDIT","true","false","false","true","true","String","""android.intent.action.INSERT_OR_EDIT""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Pick an existing item, or insert a new item, and then edit it.
 * <p>Input: {@link #getType} is the desired MIME type of the item to create or edit.
 * The extras can contain type specific data to pass through to the editing/creating
 * activity.
 * <p>Output: The URI of the item that was picked.  This must be a content:
 * URI so that any receiver can access it.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_ANSWER","true","false","false","true","true","String","""android.intent.action.ANSWER""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Handle an incoming phone call.
 * <p>Input: nothing.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CALL_PRIVILEGED","true","false","false","true","true","String","""android.intent.action.CALL_PRIVILEGED""","","/**
 * Activity action: Perform a call to any number (emergency or not)
 * specified by the data.
 * <p>Input: {@link #getData} is URI of a phone number to be dialed or a
 * tel: URI of an explicit phone number.
 * <p>Output: nothing.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_PACKAGE_DATA_CLEARED","true","false","false","true","true","String","""android.intent.action.PACKAGE_DATA_CLEARED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The user has cleared the data of a package.  This should
 * be preceded by {@link #ACTION_PACKAGE_RESTARTED}, after which all of
 * its persistent data is erased and this broadcast sent.
 * Note that the cleared package does <em>not</em>
 * receive this broadcast. The data contains the name of the package.
 * <ul>
 * <li> {@link #EXTRA_UID} containing the integer uid assigned to the package.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_MOUNTED","true","false","false","true","true","String","""android.intent.action.MEDIA_MOUNTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External media is present and mounted at its mount point.
 * The path to the mount point for the removed media is contained in the Intent.mData field.
 * The Intent contains an extra with name ""read-only"" and Boolean value to indicate if the
 * media was mounted read only.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_DEVICE_STORAGE_LOW","true","false","false","true","true","String","""android.intent.action.DEVICE_STORAGE_LOW""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  A sticky broadcast that indicates low memory
 * condition on the device
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION","true","false","false","true","true","int","0x00000001","","/**
 * If set, the recipient of this Intent will be granted permission to
 * perform read operations on the Uri in the Intent's data.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_INITIAL_INTENTS","true","false","false","true","true","String","""android.intent.extra.INITIAL_INTENTS""","","/**
 * A Parcelable[] of {@link Intent} or
 * {@link android.content.pm.LabeledIntent} objects as set with
 * {@link #putExtra(String, Parcelable[])} of additional activities to place
 * a the front of the list of choices, when shown to the user with a
 * {@link #ACTION_CHOOSER}.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_PREFERENCE","true","false","false","true","true","String","""android.intent.category.PREFERENCE""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * This activity is a preference panel.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_MONKEY","true","false","false","true","true","String","""android.intent.category.MONKEY""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * This activity may be exercised by the monkey or other automated test tools.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_FORWARD_RESULT","true","false","false","true","true","int","0x02000000","","/**
 * If set and this intent is being used to launch a new activity from an
 * existing one, then the reply target of the existing activity will be
 * transfered to the new activity.  This way the new activity can call
 * {@link android.app.Activity#setResult} and have that result sent back to
 * the reply target of the original activity.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_CHECKING","true","false","false","true","true","String","""android.intent.action.MEDIA_CHECKING""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External media is present, and being disk-checked
 * The path to the mount point for the checking media is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_KEY_EVENT","true","false","false","true","true","String","""android.intent.extra.KEY_EVENT""","","/**
 * A {@link android.view.KeyEvent} object containing the event that
 * triggered the creation of the Intent it is in.
 */
","\android\content\Intent.java"
"android.content.Intent.FILL_IN_COMPONENT","true","false","false","true","true","int","1 << 3","","/**
 * Use with {@link #fillIn} to allow the current component value to be
 * overwritten, even if it is already set.
 */
","\android\content\Intent.java"
"android.content.Intent.METADATA_SETUP_VERSION","true","false","false","true","true","String","""android.SETUP_VERSION""","","/**
 * A string associated with a {@link #ACTION_UPGRADE_SETUP} activity
 * describing the last run version of the platform that was setup.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CONFIGURATION_CHANGED","true","false","false","true","true","String","""android.intent.action.CONFIGURATION_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The current device {@link android.content.res.Configuration}
 * (orientation, locale, etc) has changed.  When such a change happens, the
 * UIs (view hierarchy) will need to be rebuilt based on this new
 * information; for the most part, applications don't need to worry about
 * this, because the system will take care of stopping and restarting the
 * application to make sure it sees the new changes.  Some system code that
 * can not be restarted will need to watch for this action and handle it
 * appropriately.
 *
 * <p class=""note"">
 * You can <em>not</em> receive this through components declared
 * in manifests, only by explicitly registering for it with
 * {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
 * Context.registerReceiver()}.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 *
 * @see android.content.res.Configuration
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_TIMEZONE_CHANGED","true","false","false","true","true","String","""android.intent.action.TIMEZONE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The timezone has changed. The intent will have the following extra values:</p>
 * <ul>
 * <li><em>time-zone</em> - The java.util.TimeZone.getID() value identifying the new time zone.</li>
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET","true","false","false","true","true","int","0x00080000","","/**
 * If set, this marks a point in the task's activity stack that should
 * be cleared when the task is reset.  That is, the next time the task
 * is brought to the foreground with
 * {@link #FLAG_ACTIVITY_RESET_TASK_IF_NEEDED} (typically as a result of
 * the user re-launching it from home), this activity and all on top of
 * it will be finished so that the user does not return to them, but
 * instead returns to whatever activity preceeded it.
 *
 * <p>This is useful for cases where you have a logical break in your
 * application.  For example, an e-mail application may have a command
 * to view an attachment, which launches an image view activity to
 * display it.  This activity should be part of the e-mail application's
 * task, since it is a part of the task the user is involved in.  However,
 * if the user leaves that task, and later selects the e-mail app from
 * home, we may like them to return to the conversation they were
 * viewing, not the picture attachment, since that is confusing.  By
 * setting this flag when launching the image viewer, that viewer and
 * any activities it starts will be removed the next time the user returns
 * to mail.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_CHANGED_COMPONENT_NAME_LIST","true","false","false","true","true","String","""android.intent.extra.changed_component_name_list""","","/**
 * This field is part of {@link android.content.Intent#ACTION_PACKAGE_CHANGED},
 * and contains a string array of all of the components that have changed.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_DIAL","true","false","false","true","true","String","""android.intent.action.DIAL""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Dial a number as specified by the data.  This shows a
 * UI with the number being dialed, allowing the user to explicitly
 * initiate the call.
 * <p>Input: If nothing, an empty dialer is started; else {@link #getData}
 * is URI of a phone number to be dialed or a tel: URI of an explicit phone
 * number.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_DEVICE_STORAGE_OK","true","false","false","true","true","String","""android.intent.action.DEVICE_STORAGE_OK""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  Indicates low memory condition on the device no longer exists
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_NEW_OUTGOING_CALL","true","false","false","true","true","String","""android.intent.action.NEW_OUTGOING_CALL""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An outgoing call is about to be placed.
 *
 * <p>The Intent will have the following extra value:
 * <ul>
 * <li><em>{@link android.content.Intent#EXTRA_PHONE_NUMBER}</em> -
 * the phone number originally intended to be dialed.</li>
 * </ul>
 * <p>Once the broadcast is finished, the resultData is used as the actual
 * number to call.  If  <code>null</code>, no call will be placed.</p>
 * <p>It is perfectly acceptable for multiple receivers to process the
 * outgoing call in turn: for example, a parental control application
 * might verify that the user is authorized to place the call at that
 * time, then a number-rewriting application might add an area code if
 * one was not specified.</p>
 * <p>For consistency, any receiver whose purpose is to prohibit phone
 * calls should have a priority of 0, to ensure it will see the final
 * phone number to be dialed.
 * Any receiver whose purpose is to rewrite phone numbers to be called
 * should have a positive priority.
 * Negative priorities are reserved for the system for this broadcast;
 * using them may cause problems.</p>
 * <p>Any BroadcastReceiver receiving this Intent <em>must not</em>
 * abort the broadcast.</p>
 * <p>Emergency calls cannot be intercepted using this mechanism, and
 * other calls cannot be modified to call emergency numbers using this
 * mechanism.
 * <p>You must hold the
 * {@link android.Manifest.permission#PROCESS_OUTGOING_CALLS}
 * permission to receive this Intent.</p>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.METADATA_DOCK_HOME","true","false","false","true","true","String","""android.dock_home""","","/**
 * Boolean that can be supplied as meta-data with a dock activity, to
 * indicate that the dock should take over the home key when it is active.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_DOCK_STATE","true","false","false","true","true","String","""android.intent.extra.DOCK_STATE""","","/**
 * Used as an int extra field in {@link android.content.Intent#ACTION_DOCK_EVENT}
 * intents to request the dock state.  Possible values are
 * {@link android.content.Intent#EXTRA_DOCK_STATE_UNDOCKED},
 * {@link android.content.Intent#EXTRA_DOCK_STATE_DESK}, or
 * {@link android.content.Intent#EXTRA_DOCK_STATE_CAR}.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_OPENABLE","true","false","false","true","true","String","""android.intent.category.OPENABLE""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Used to indicate that a GET_CONTENT intent only wants URIs that can be opened with
 * ContentResolver.openInputStream. Openable URIs must support the columns in OpenableColumns
 * when queried, though it is allowable for those columns to be blank.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_BOOT_COMPLETED","true","false","false","true","true","String","""android.intent.action.BOOT_COMPLETED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: This is broadcast once, after the system has finished
 * booting.  It can be used to perform application-specific initialization,
 * such as installing alarms.  You must hold the
 * {@link android.Manifest.permission#RECEIVE_BOOT_COMPLETED} permission
 * in order to receive this broadcast.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_INPUT_METHOD_CHANGED","true","false","false","true","true","String","""android.intent.action.INPUT_METHOD_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An input method has been changed.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_SELECTED_ALTERNATIVE","true","false","false","true","true","String","""android.intent.category.SELECTED_ALTERNATIVE""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Set if the activity should be considered as an alternative selection
 * action to the data the user has currently selected.  This is like
 * {@link #CATEGORY_ALTERNATIVE}, but is used in activities showing a list
 * of items from which the user can select, giving them alternatives to the
 * default action that will be performed on it.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CREATE_SHORTCUT","true","false","false","true","true","String","""android.intent.action.CREATE_SHORTCUT""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Creates a shortcut.
 * <p>Input: Nothing.</p>
 * <p>Output: An Intent representing the shortcut. The intent must contain three
 * extras: SHORTCUT_INTENT (value: Intent), SHORTCUT_NAME (value: String),
 * and SHORTCUT_ICON (value: Bitmap) or SHORTCUT_ICON_RESOURCE
 * (value: ShortcutIconResource).</p>
 *
 * @see #EXTRA_SHORTCUT_INTENT
 * @see #EXTRA_SHORTCUT_NAME
 * @see #EXTRA_SHORTCUT_ICON
 * @see #EXTRA_SHORTCUT_ICON_RESOURCE
 * @see android.content.Intent.ShortcutIconResource
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_POWER_CONNECTED","true","false","false","true","true","String","""android.intent.action.ACTION_POWER_CONNECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External power has been connected to the device.
 * This is intended for applications that wish to register specifically to this notification.
 * Unlike ACTION_BATTERY_CHANGED, applications will be woken for this and so do not have to
 * stay active to receive this notification.  This action can be used to implement actions
 * that wait until power is available to trigger.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_UNMOUNTED","true","false","false","true","true","String","""android.intent.action.MEDIA_UNMOUNTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External media is present, but not mounted at its mount point.
 * The path to the mount point for the removed media is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_GTALK_SERVICE_CONNECTED","true","false","false","true","true","String","""android.intent.action.GTALK_CONNECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An GTalk connection has been established.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_UID","true","false","false","true","true","String","""android.intent.extra.UID""","","/**
 * Used as an int extra field in {@link android.content.Intent#ACTION_UID_REMOVED}
 * intents to supply the uid the package had been assigned.  Also an optional
 * extra in {@link android.content.Intent#ACTION_PACKAGE_REMOVED} or
 * {@link android.content.Intent#ACTION_PACKAGE_CHANGED} for the same
 * purpose.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_NO_HISTORY","true","false","false","true","true","int","0x40000000","","/**
 * If set, the new activity is not kept in the history stack.  As soon as
 * the user navigates away from it, the activity is finished.  This may also
 * be set with the {@link android.R.styleable#AndroidManifestActivity_noHistory
 * noHistory} attribute.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CALL_BUTTON","true","false","false","true","true","String","""android.intent.action.CALL_BUTTON""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: The user pressed the ""call"" button to go to the dialer
 * or other appropriate UI for placing a call.
 * <p>Input: Nothing.
 * <p>Output: Nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_CLOSE_SYSTEM_DIALOGS","true","false","false","true","true","String","""android.intent.action.CLOSE_SYSTEM_DIALOGS""","","/**
 * Broadcast Action: This is broadcast when a user action should request a
 * temporary system dialog to dismiss.  Some examples of temporary system
 * dialogs are the notification window-shade and the recent tasks dialog.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_UID_REMOVED","true","false","false","true","true","String","""android.intent.action.UID_REMOVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A user ID has been removed from the system.  The user
 * ID number is stored in the extra data under {@link #EXTRA_UID}.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_BCC","true","false","false","true","true","String","""android.intent.extra.BCC""","","/**
 * A String[] holding e-mail addresses that should be blind carbon copied.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE","true","false","false","true","true","String","""android.intent.action.MEDIA_SCANNER_SCAN_FILE""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  Request the media scanner to scan a file and add it to the media database.
 * The path to the file is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_REMOVED","true","false","false","true","true","String","""android.intent.action.MEDIA_REMOVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External media has been removed.
 * The path to the mount point for the removed media is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_DELETE","true","false","false","true","true","String","""android.intent.action.DELETE""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Delete the given data from its container.
 * <p>Input: {@link #getData} is URI of data to be deleted.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_BATTERY_LOW","true","false","false","true","true","String","""android.intent.action.BATTERY_LOW""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  Indicates low battery condition on the device.
 * This broadcast corresponds to the ""Low battery warning"" system dialog.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_SHORTCUT_ICON","true","false","false","true","true","String","""android.intent.extra.shortcut.ICON""","","/**
 * The name of the extra used to define the icon, as a Bitmap, of a shortcut.
 *
 * @see #ACTION_CREATE_SHORTCUT
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_POWER_DISCONNECTED","true","false","false","true","true","String","""android.intent.action.ACTION_POWER_DISCONNECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External power has been removed from the device.
 * This is intended for applications that wish to register specifically to this notification.
 * Unlike ACTION_BATTERY_CHANGED, applications will be woken for this and so do not have to
 * stay active to receive this notification.  This action can be used to implement actions
 * that wait until power is available to trigger.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_PREVIOUS_IS_TOP","true","false","false","true","true","int","0x01000000","","/**
 * If set and this intent is being used to launch a new activity from an
 * existing one, the current activity will not be counted as the top
 * activity for deciding whether the new intent should be delivered to
 * the top instead of starting a new one.  The previous activity will
 * be used as the top, with the assumption being that the current activity
 * will finish itself immediately.
 */
","\android\content\Intent.java"
"android.content.Intent.FILL_IN_DATA","true","false","false","true","true","int","1 << 1","","/**
 * Use with {@link #fillIn} to allow the current data or type value
 * overwritten, even if it is already set.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_PACKAGES","true","false","false","true","true","String","""android.intent.extra.PACKAGES""","","/**
 * @hide String array of package names.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_DONT_KILL_APP","true","false","false","true","true","String","""android.intent.extra.DONT_KILL_APP""","","/**
 * Used as an boolean extra field in {@link android.content.Intent#ACTION_PACKAGE_REMOVED} or
 * {@link android.content.Intent#ACTION_PACKAGE_CHANGED} intents to override the default action
 * of restarting the application.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT","true","false","false","true","true","int","0X00020000","","/**
 * If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
 * this flag will cause the launched activity to be brought to the front of its
 * task's history stack if it is already running.
 *
 * <p>For example, consider a task consisting of four activities: A, B, C, D.
 * If D calls startActivity() with an Intent that resolves to the component
 * of activity B, then B will be brought to the front of the history stack,
 * with this resulting order:  A, C, D, B.
 *
 * This flag will be ignored if {@link #FLAG_ACTIVITY_CLEAR_TOP} is also
 * specified.
 */
","\android\content\Intent.java"
"android.content.Intent.mType","false","false","true","false","false","String","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_PICK_ACTIVITY","true","false","false","true","true","String","""android.intent.action.PICK_ACTIVITY""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Pick an activity given an intent, returning the class
 * selected.
 * <p>Input: get*Extra field {@link #EXTRA_INTENT} is an Intent
 * used with {@link PackageManager#queryIntentActivities} to determine the
 * set of activities from which to pick.
 * <p>Output: Class name of the activity that was selected.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_TITLE","true","false","false","true","true","String","""android.intent.extra.TITLE""","","/**
 * A CharSequence dialog title to provide to the user when used with a
 * {@link #ACTION_CHOOSER}.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_PACKAGE_ADDED","true","false","false","true","true","String","""android.intent.action.PACKAGE_ADDED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new application package has been installed on the
 * device. The data contains the name of the package.  Note that the
 * newly installed package does <em>not</em> receive this broadcast.
 * <p>My include the following extras:
 * <ul>
 * <li> {@link #EXTRA_UID} containing the integer uid assigned to the new package.
 * <li> {@link #EXTRA_REPLACING} is set to true if this is following
 * an {@link #ACTION_PACKAGE_REMOVED} broadcast for the same package.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_LAUNCHER","true","false","false","true","true","String","""android.intent.category.LAUNCHER""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Should be displayed in the top-level launcher.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_EDIT","true","false","false","true","true","String","""android.intent.action.EDIT""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Provide explicit editable access to the given data.
 * <p>Input: {@link #getData} is URI of data to be edited.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MANAGE_PACKAGE_STORAGE","true","false","false","true","true","String","""android.intent.action.MANAGE_PACKAGE_STORAGE""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  Indicates low memory condition notification acknowledged by user
 * and package management should be started.
 * This is triggered by the user from the ACTION_DEVICE_STORAGE_LOW
 * notification.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_BUG_REPORT","true","false","false","true","true","String","""android.intent.extra.BUG_REPORT""","","/**
 * Used as a parcelable extra field in {@link #ACTION_APP_ERROR}, containing
 * the bug report.
 *
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_CHANGED_UID_LIST","true","false","false","true","true","String","""android.intent.extra.changed_uid_list""","","/**
 * This field is part of
 * {@link android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_AVAILABLE},
 * {@link android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE}
 * and contains an integer array of uids of all of the components
 * that have changed.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_DEVELOPMENT_PREFERENCE","true","false","false","true","true","String","""android.intent.category.DEVELOPMENT_PREFERENCE""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * This activity is a development preference panel.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_DOCK_STATE_DESK","true","false","false","true","true","int","1","","/**
 * Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
 * to represent that the phone is in a desk dock.
 */
","\android\content\Intent.java"
"android.content.Intent.mData","false","false","true","false","false","Uri","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_TIME_CHANGED","true","false","false","true","true","String","""android.intent.action.TIME_SET""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The time was set.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MAIN","true","false","false","true","true","String","""android.intent.action.MAIN""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Start as a main entry point, does not expect to
 * receive data.
 * <p>Input: nothing
 * <p>Output: nothing
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_CHANGED_COMPONENT_NAME","true","false","false","true","true","String","""android.intent.extra.changed_component_name""","@Deprecated","/**
 * @deprecated See {@link #EXTRA_CHANGED_COMPONENT_NAME_LIST}; this field
 * will contain only the first name in the list.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_DATE_CHANGED","true","false","false","true","true","String","""android.intent.action.DATE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The date has changed.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_PACKAGE_INSTALL","true","false","false","true","true","String","""android.intent.action.PACKAGE_INSTALL""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Trigger the download and eventual installation
 * of a package.
 * <p>Input: {@link #getData} is the URI of the package file to download.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_PACKAGE_REPLACED","true","false","false","true","true","String","""android.intent.action.PACKAGE_REPLACED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: A new version of an application package has been
 * installed, replacing an existing version that was previously installed.
 * The data contains the name of the package.
 * <p>My include the following extras:
 * <ul>
 * <li> {@link #EXTRA_UID} containing the integer uid assigned to the new package.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_REMOTE_INTENT_TOKEN","true","false","false","true","true","String","""android.intent.extra.remote_intent_token""","","/**
 * Used in the extra field in the remote intent. It's astring token passed with the
 * remote intent.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_CLIENT_LABEL","true","false","false","true","true","String","""android.intent.extra.client_label""","","/**
 * @hide
 * Magic extra system code can use when binding, to give a label for
 * who it is that has bound to a service.  This is an integer giving
 * a framework string resource that can be displayed to the user.
 */
","\android\content\Intent.java"
"android.content.FilterComparison.mIntent","false","false","true","false","true","Intent","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_HEADSET_PLUG","true","false","false","true","true","String","""android.intent.action.HEADSET_PLUG""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Wired Headset plugged in or unplugged.
 *
 * <p>The intent will have the following extra values:
 * <ul>
 * <li><em>state</em> - 0 for unplugged, 1 for plugged. </li>
 * <li><em>name</em> - Headset type, human readable string </li>
 * <li><em>microphone</em> - 1 if headset has a microphone, 0 otherwise </li>
 * </ul>
 * </ul>
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_USER_PRESENT","true","false","false","true","true","String","""android.intent.action.USER_PRESENT""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Sent when the user is present after device wakes up (e.g when the
 * keyguard is gone).
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_DEFAULT","true","false","false","true","true","String","""android.intent.category.DEFAULT""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Set if the activity should be an option for the default action
 * (center press) to perform on a piece of data.  Setting this will
 * hide from the user any activities without it set when performing an
 * action on some data.  Note that this is normal -not- set in the
 * Intent when initiating an action -- it is for use in intent filters
 * specified in packages.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_EMBED","true","false","false","true","true","String","""android.intent.category.EMBED""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Capable of running inside a parent activity container.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SCREEN_OFF","true","false","false","true","true","String","""android.intent.action.SCREEN_OFF""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Sent after the screen turns off.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_BAD_REMOVAL","true","false","false","true","true","String","""android.intent.action.MEDIA_BAD_REMOVAL""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  External media was removed from SD card slot, but mount point was not unmounted.
 * The path to the mount point for the removed media is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_PACKAGE_REMOVED","true","false","false","true","true","String","""android.intent.action.PACKAGE_REMOVED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: An existing application package has been removed from
 * the device.  The data contains the name of the package.  The package
 * that is being installed does <em>not</em> receive this Intent.
 * <ul>
 * <li> {@link #EXTRA_UID} containing the integer uid previously assigned
 * to the package.
 * <li> {@link #EXTRA_DATA_REMOVED} is set to true if the entire
 * application -- data and code -- is being removed.
 * <li> {@link #EXTRA_REPLACING} is set to true if this will be followed
 * by an {@link #ACTION_PACKAGE_ADDED} broadcast for the same package.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.mCategories","false","false","true","false","false","HashSet<String>","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_PACKAGE_RESTARTED","true","false","false","true","true","String","""android.intent.action.PACKAGE_RESTARTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The user has restarted a package, and all of its
 * processes have been killed.  All runtime state
 * associated with it (processes, alarms, notifications, etc) should
 * be removed.  Note that the restarted package does <em>not</em>
 * receive this broadcast.
 * The data contains the name of the package.
 * <ul>
 * <li> {@link #EXTRA_UID} containing the integer uid assigned to the package.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_BUG_REPORT","true","false","false","true","true","String","""android.intent.action.BUG_REPORT""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show activity for reporting a bug.
 * <p>Input: Nothing.
 * <p>Output: Nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_CAR_DOCK","true","false","false","true","true","String","""android.intent.category.CAR_DOCK""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * An activity to run when device is inserted into a car dock.
 * Used with {@link #ACTION_MAIN} to launch an activity.  For more
 * information, see {@link android.app.UiModeManager}.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED","true","false","false","true","true","int","0x00200000","","/**
 * If set, and this activity is either being started in a new task or
 * bringing to the top an existing task, then it will be launched as
 * the front door of the task.  This will result in the application of
 * any affinities needed to have that task in the proper state (either
 * moving activities to or from it), or simply resetting that task to
 * its initial state if needed.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_PROVIDER_CHANGED","true","false","false","true","true","String","""android.intent.action.PROVIDER_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Some content providers have parts of their namespace
 * where they publish new events or items that the user may be especially
 * interested in. For these things, they may broadcast this action when the
 * set of interesting items change.
 *
 * For example, GmailProvider sends this notification when the set of unread
 * mail in the inbox changes.
 *
 * <p>The data of the intent identifies which part of which provider
 * changed. When queried through the content resolver, the data URI will
 * return the data set in question.
 *
 * <p>The intent will have the following extra values:
 * <ul>
 * <li><em>count</em> - The number of items in the data set. This is the
 * same as the number of items in the cursor returned by querying the
 * data URI. </li>
 * </ul>
 *
 * This intent will be sent at boot (if the count is non-zero) and when the
 * data set changes. It is possible for the data set to change without the
 * count changing (for example, if a new unread message arrives in the same
 * sync operation in which a message is archived). The phone should still
 * ring/vibrate/etc as normal in this case.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_REQUEST_SHUTDOWN","true","false","false","true","true","String","""android.intent.action.ACTION_REQUEST_SHUTDOWN""","","/**
 * Activity Action:  Start this activity to request system shutdown.
 * The optional boolean extra field {@link #EXTRA_KEY_CONFIRM} can be set to true
 * to request confirmation from the user before shutting down.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 *
 * {@hide}
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_CAR_MODE","true","false","false","true","true","String","""android.intent.category.CAR_MODE""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Used to indicate that the activity can be used in a car environment.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT","true","false","false","true","true","int","0x10000000","","/**
 * If set, when sending a broadcast <i>before boot has completed</i> only
 * registered receivers will be called -- no BroadcastReceiver components
 * will be launched.  Sticky intent state will be recorded properly even
 * if no receivers wind up being called.  If {@link #FLAG_RECEIVER_REGISTERED_ONLY}
 * is specified in the broadcast intent, this flag is unnecessary.
 *
 * <p>This flag is only for use by system sevices as a convenience to
 * avoid having to implement a more complex mechanism around detection
 * of boot completion.
 *
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_REBOOT","true","false","false","true","true","String","""android.intent.action.REBOOT""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Have the device reboot.  This is only for use by
 * system code.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SCREEN_ON","true","false","false","true","true","String","""android.intent.action.SCREEN_ON""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Sent after the screen turns on.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_INSTALLER_PACKAGE_NAME","true","false","false","true","true","String","""android.intent.extra.INSTALLER_PACKAGE_NAME""","","/**
 * Used as a string extra field when sending an intent to PackageInstaller to install a
 * package. Specifies the installer package name; this package will receive the
 * {@link #ACTION_APP_ERROR} intent.
 *
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_WEB_SEARCH","true","false","false","true","true","String","""android.intent.action.WEB_SEARCH""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Perform a web search.
 * <p>
 * Input: {@link android.app.SearchManager#QUERY
 * getStringExtra(SearchManager.QUERY)} is the text to search for. If it is
 * a url starts with http or https, the site will be opened. If it is plain
 * text, Google search will be applied.
 * <p>
 * Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_SHORTCUT_NAME","true","false","false","true","true","String","""android.intent.extra.shortcut.NAME""","","/**
 * The name of the extra used to define the name of a shortcut.
 *
 * @see #ACTION_CREATE_SHORTCUT
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY","true","false","false","true","true","int","0x00100000","","/**
 * This flag is not normally set by application code, but set for you by
 * the system if this activity is being launched from history
 * (longpress home key).
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_SHORTCUT_ICON_RESOURCE","true","false","false","true","true","String","""android.intent.extra.shortcut.ICON_RESOURCE""","","/**
 * The name of the extra used to define the icon, as a ShortcutIconResource, of a shortcut.
 *
 * @see #ACTION_CREATE_SHORTCUT
 * @see android.content.Intent.ShortcutIconResource
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_PHONE_NUMBER","true","false","false","true","true","String","""android.intent.extra.PHONE_NUMBER""","","/**
 * A String holding the phone number originally entered in
 * {@link android.content.Intent#ACTION_NEW_OUTGOING_CALL}, or the actual
 * number to call in a {@link android.content.Intent#ACTION_CALL}.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SEND_MULTIPLE","true","false","false","true","true","String","""android.intent.action.SEND_MULTIPLE""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Deliver multiple data to someone else.
 * <p>
 * Like ACTION_SEND, except the data is multiple.
 * <p>
 * Input: {@link #getType} is the MIME type of the data being sent.
 * get*ArrayListExtra can have either a {@link #EXTRA_TEXT} or {@link
 * #EXTRA_STREAM} field, containing the data to be sent.
 * <p>
 * Multiple types are supported, and receivers should handle mixed types
 * whenever possible. The right way for the receiver to check them is to
 * use the content resolver on each URI. The intent sender should try to
 * put the most concrete mime type in the intent type, but it can fall
 * back to {@literal <type>/*} or {@literal *}/* as needed.
 * <p>
 * e.g. if you are sending image/jpg and image/jpg, the intent's type can
 * be image/jpg, but if you are sending image/jpg and image/png, then the
 * intent's type should be image/*.
 * <p>
 * Optional standard extras, which may be interpreted by some recipients as
 * appropriate, are: {@link #EXTRA_EMAIL}, {@link #EXTRA_CC},
 * {@link #EXTRA_BCC}, {@link #EXTRA_SUBJECT}.
 * <p>
 * Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_APP_ERROR","true","false","false","true","true","String","""android.intent.action.APP_ERROR""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: The user pressed the ""Report"" button in the crash/ANR dialog.
 * This intent is delivered to the package which installed the application, usually
 * the Market.
 * <p>Input: No data is specified. The bug report is passed in using
 * an {@link #EXTRA_BUG_REPORT} field.
 * <p>Output: Nothing.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION","true","false","false","true","true","int","0X00010000","","/**
 * If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
 * this flag will prevent the system from applying an activity transition
 * animation to go to the next activity state.  This doesn't mean an
 * animation will never run -- if another activity change happens that doesn't
 * specify this flag before the activity started here is displayed, then
 * that transition will be used.  This this flag can be put to good use
 * when you are going to do a series of activity operations but the
 * animation seen by the user shouldn't be driven by the first activity
 * change but rather a later one.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_WALLPAPER_CHANGED","true","false","false","true","true","String","""android.intent.action.WALLPAPER_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  The current system wallpaper has changed.  See
 * {@link android.app.WallpaperManager} for retrieving the new wallpaper.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_INTENT","true","false","false","true","true","String","""android.intent.extra.INTENT""","","/**
 * An Intent describing the choices you would like shown with
 * {@link #ACTION_PICK_ACTIVITY}.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_MULTIPLE_TASK","true","false","false","true","true","int","0x08000000","","/**
 * <strong>Do not use this flag unless you are implementing your own
 * top-level application launcher.</strong>  Used in conjunction with
 * {@link #FLAG_ACTIVITY_NEW_TASK} to disable the
 * behavior of bringing an existing task to the foreground.  When set,
 * a new task is <em>always</em> started to host the Activity for the
 * Intent, regardless of whether there is already an existing task running
 * the same thing.
 *
 * <p><strong>Because the default system does not include graphical task management,
 * you should not use this flag unless you provide some way for a user to
 * return back to the tasks you have launched.</strong>
 *
 * <p>This flag is ignored if
 * {@link #FLAG_ACTIVITY_NEW_TASK} is not set.
 *
 * <p>See <a href=""{@docRoot}guide/topics/fundamentals.html#acttask"">Application Fundamentals:
 * Activities and Tasks</a> for more details on tasks.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_SCANNER_STARTED","true","false","false","true","true","String","""android.intent.action.MEDIA_SCANNER_STARTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  The media scanner has started scanning a directory.
 * The path to the directory being scanned is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_PRE_BOOT_COMPLETED","true","false","false","true","true","String","""android.intent.action.PRE_BOOT_COMPLETED""","","/**
 * Broadcast Action: hook for permforming cleanup after a system update.
 *
 * The broadcast is sent when the system is booting, before the
 * BOOT_COMPLETED broadcast.  It is only sent to receivers in the system
 * image.  A receiver for this should do its work and then disable itself
 * so that it does not get run again at the next boot.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_FROM_BACKGROUND","true","false","false","true","true","int","0x00000004","","/**
 * Can be set by the caller to indicate that this Intent is coming from
 * a background operation, not from direct user interaction.
 */
","\android\content\Intent.java"
"android.content.Intent.mHashCode","false","false","true","false","true","int","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_PICK","true","false","false","true","true","String","""android.intent.action.PICK""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Pick an item from the data, returning what was selected.
 * <p>Input: {@link #getData} is URI containing a directory of data
 * (vnd.android.cursor.dir/*) from which to pick an item.
 * <p>Output: The URI of the item that was picked.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_DOCK_STATE_UNDOCKED","true","false","false","true","true","int","0","","/**
 * Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
 * to represent that the phone is not in any dock.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SET_WALLPAPER","true","false","false","true","true","String","""android.intent.action.SET_WALLPAPER""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Show settings for choosing wallpaper
 * <p>Input: Nothing.
 * <p>Output: Nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SEARCH","true","false","false","true","true","String","""android.intent.action.SEARCH""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Perform a search.
 * <p>Input: {@link android.app.SearchManager#QUERY getStringExtra(SearchManager.QUERY)}
 * is the text to search for.  If empty, simply
 * enter your search results Activity with the search UI activated.
 * <p>Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_ALTERNATIVE","true","false","false","true","true","String","""android.intent.category.ALTERNATIVE""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Set if the activity should be considered as an alternative action to
 * the data the user is currently viewing.  See also
 * {@link #CATEGORY_SELECTED_ALTERNATIVE} for an alternative action that
 * applies to the selection in a list of items.
 *
 * <p>Supporting this category means that you would like your activity to be
 * displayed in the set of alternative things the user can do, usually as
 * part of the current activity's options menu.  You will usually want to
 * include a specific label in the &lt;intent-filter&gt; of this action
 * describing to the user what it does.
 *
 * <p>The action of IntentFilter with this category is important in that it
 * describes the specific action the target will perform.  This generally
 * should not be a generic action (such as {@link #ACTION_VIEW}, but rather
 * a specific name such as ""com.android.camera.action.CROP.  Only one
 * alternative of any particular action will be shown to the user, so using
 * a specific action like this makes sure that your alternative will be
 * displayed while also allowing other applications to provide their own
 * overrides of that particular action.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE","true","false","false","true","true","String","""android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Resources for a set of packages are currently
 * unavailable since the media on which they exist is unavailable.
 * The extra data {@link #EXTRA_CHANGED_PACKAGE_LIST} contains a
 * list of packages whose availability changed.
 * The extra data {@link #EXTRA_CHANGED_UID_LIST} contains a
 * list of uids of packages whose availability changed.
 * The specified set of packages can no longer be
 * launched and are practically unavailable on the system.
 * <p>Inclues the following extras:
 * <ul>
 * <li> {@link #EXTRA_CHANGED_PACKAGE_LIST} is the set of packages
 * whose resources are no longer available.
 * {@link #EXTRA_CHANGED_UID_LIST} is the set of packages
 * whose resources are no longer available.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS","true","false","false","true","true","int","0x00800000","","/**
 * If set, the new activity is not kept in the list of recently launched
 * activities.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_GET_CONTENT","true","false","false","true","true","String","""android.intent.action.GET_CONTENT""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Allow the user to select a particular kind of data and
 * return it.  This is different than {@link #ACTION_PICK} in that here we
 * just say what kind of data is desired, not a URI of existing data from
 * which the user can pick.  A ACTION_GET_CONTENT could allow the user to
 * create the data as it runs (for example taking a picture or recording a
 * sound), let them browser over the web and download the desired data,
 * etc.
 * <p>
 * There are two main ways to use this action: if you want an specific kind
 * of data, such as a person contact, you set the MIME type to the kind of
 * data you want and launch it with {@link Context#startActivity(Intent)}.
 * The system will then launch the best application to select that kind
 * of data for you.
 * <p>
 * You may also be interested in any of a set of types of content the user
 * can pick.  For example, an e-mail application that wants to allow the
 * user to add an attachment to an e-mail message can use this action to
 * bring up a list of all of the types of content the user can attach.
 * <p>
 * In this case, you should wrap the GET_CONTENT intent with a chooser
 * (through {@link #createChooser}), which will give the proper interface
 * for the user to pick how to send your data and allow you to specify
 * a prompt indicating what they are doing.  You will usually specify a
 * broad MIME type (such as image/* or {@literal *}/*), resulting in a
 * broad range of content types the user can select from.
 * <p>
 * When using such a broad GET_CONTENT action, it is often desireable to
 * only pick from data that can be represented as a stream.  This is
 * accomplished by requiring the {@link #CATEGORY_OPENABLE} in the Intent.
 * <p>
 * Input: {@link #getType} is the desired MIME type to retrieve.  Note
 * that no URI is supplied in the intent, as there are no constraints on
 * where the returned data originally comes from.  You may also include the
 * {@link #CATEGORY_OPENABLE} if you can only accept data that can be
 * opened as a stream.
 * <p>
 * Output: The URI of the item that was picked.  This must be a content:
 * URI so that any receiver can access it.
 */
","\android\content\Intent.java"
"android.content.Intent.mSourceBounds","false","false","true","false","false","Rect","","","","\android\content\Intent.java"
"android.content.Intent.ACTION_REMOTE_INTENT","true","false","false","true","true","String","""com.google.android.c2dm.intent.RECEIVE""","","/**
 * Broadcast Action: a remote intent is to be broadcasted.
 *
 * A remote intent is used for remote RPC between devices. The remote intent
 * is serialized and sent from one device to another device. The receiving
 * device parses the remote intent and broadcasts it. Note that anyone can
 * broadcast a remote intent. However, if the intent receiver of the remote intent
 * does not trust intent broadcasts from arbitrary intent senders, it should require
 * the sender to hold certain permissions so only trusted sender's broadcast will be
 * let through.
 * @hide
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_SCANNER_FINISHED","true","false","false","true","true","String","""android.intent.action.MEDIA_SCANNER_FINISHED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  The media scanner has finished scanning a directory.
 * The path to the scanned directory is contained in the Intent.mData field.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_MEDIA_BUTTON","true","false","false","true","true","String","""android.intent.action.MEDIA_BUTTON""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action:  The ""Media Button"" was pressed.  Includes a single
 * extra field, {@link #EXTRA_KEY_EVENT}, containing the key event that
 * caused the broadcast.
 */
","\android\content\Intent.java"
"android.content.Intent.CATEGORY_BROWSABLE","true","false","false","true","true","String","""android.intent.category.BROWSABLE""","@SdkConstant(SdkConstantType.INTENT_CATEGORY)","/**
 * Activities that can be safely invoked from a browser must support this
 * category.  For example, if the user is viewing a web page or an e-mail
 * and clicks on a link in the text, the Intent generated execute that
 * link will require the BROWSABLE category, so that only activities
 * supporting this category will be considered as possible actions.  By
 * supporting this category, you are promising that there is nothing
 * damaging (without user intervention) that can happen by invoking any
 * matching Intent.
 */
","\android\content\Intent.java"
"android.content.Intent.FILL_IN_CATEGORIES","true","false","false","true","true","int","1 << 2","","/**
 * Use with {@link #fillIn} to allow the current categories to be
 * overwritten, even if they are already set.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_TEXT","true","false","false","true","true","String","""android.intent.extra.TEXT""","","/**
 * A constant CharSequence that is associated with the Intent, used with
 * {@link #ACTION_SEND} to supply the literal data to be sent.  Note that
 * this may be a styled CharSequence, so you must use
 * {@link Bundle#getCharSequence(String) Bundle.getCharSequence()} to
 * retrieve it.
 */
","\android\content\Intent.java"
"android.content.Intent.FLAG_RECEIVER_REGISTERED_ONLY","true","false","false","true","true","int","0x40000000","","/**
 * If set, when sending a broadcast only registered receivers will be
 * called -- no BroadcastReceiver components will be launched.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_SEND","true","false","false","true","true","String","""android.intent.action.SEND""","@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)","/**
 * Activity Action: Deliver some data to someone else.  Who the data is
 * being delivered to is not specified; it is up to the receiver of this
 * action to ask the user where the data should be sent.
 * <p>
 * When launching a SEND intent, you should usually wrap it in a chooser
 * (through {@link #createChooser}), which will give the proper interface
 * for the user to pick how to send your data and allow you to specify
 * a prompt indicating what they are doing.
 * <p>
 * Input: {@link #getType} is the MIME type of the data being sent.
 * get*Extra can have either a {@link #EXTRA_TEXT}
 * or {@link #EXTRA_STREAM} field, containing the data to be sent.  If
 * using EXTRA_TEXT, the MIME type should be ""text/plain""; otherwise it
 * should be the MIME type of the data in EXTRA_STREAM.  Use {@literal *}/*
 * if the MIME type is unknown (this will only allow senders that can
 * handle generic data streams).
 * <p>
 * Optional standard extras, which may be interpreted by some recipients as
 * appropriate, are: {@link #EXTRA_EMAIL}, {@link #EXTRA_CC},
 * {@link #EXTRA_BCC}, {@link #EXTRA_SUBJECT}.
 * <p>
 * Output: nothing.
 */
","\android\content\Intent.java"
"android.content.Intent.EXTRA_CHANGED_PACKAGE_LIST","true","false","false","true","true","String","""android.intent.extra.changed_package_list""","","/**
 * This field is part of
 * {@link android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_AVAILABLE},
 * {@link android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE}
 * and contains a string array of all of the components that have changed.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_LOCALE_CHANGED","true","false","false","true","true","String","""android.intent.action.LOCALE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The current device's locale has changed.
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.content.Intent.ACTION_QUERY_PACKAGE_RESTART","true","false","false","true","true","String","""android.intent.action.QUERY_PACKAGE_RESTART""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * @hide
 * Broadcast Action: Ask system services if there is any reason to
 * restart the given package.  The data contains the name of the
 * package.
 * <ul>
 * <li> {@link #EXTRA_UID} containing the integer uid assigned to the package.
 * <li> {@link #EXTRA_PACKAGES} String array of all packages to check.
 * </ul>
 *
 * <p class=""note"">This is a protected intent that can only be sent
 * by the system.
 */
","\android\content\Intent.java"
"android.speech.srec.UlawEncoderInputStream.TAG","false","false","true","true","true","String","""UlawEncoderInputStream""","","","\android\speech\srec\UlawEncoderInputStream.java"
"android.speech.srec.UlawEncoderInputStream.mOneByte","false","false","true","false","true","byte","new byte[1]","","","\android\speech\srec\UlawEncoderInputStream.java"
"android.speech.srec.UlawEncoderInputStream.SCALE_BITS","false","false","true","true","true","int","16","","","\android\speech\srec\UlawEncoderInputStream.java"
"android.speech.srec.UlawEncoderInputStream.mMax","false","false","true","false","false","int","0","","","\android\speech\srec\UlawEncoderInputStream.java"
"android.speech.srec.UlawEncoderInputStream.mBufCount","false","false","true","false","false","int","0","","// should be 0 or 1
","\android\speech\srec\UlawEncoderInputStream.java"
"android.speech.srec.UlawEncoderInputStream.MAX_ULAW","false","false","true","true","true","int","8192","","","\android\speech\srec\UlawEncoderInputStream.java"
"android.speech.srec.UlawEncoderInputStream.mBuf","false","false","true","false","true","byte","new byte[1024]","","","\android\speech\srec\UlawEncoderInputStream.java"
"android.speech.srec.UlawEncoderInputStream.mIn","false","false","true","false","false","InputStream","","","","\android\speech\srec\UlawEncoderInputStream.java"
"android.pim.vcard.VCardEntryConstructor.mAccount","false","false","true","false","true","Account","","","","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mTimePushIntoContentResolver","false","false","true","false","false","long","","","/**
 * For measuring performance.
 */
","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mParamType","false","false","true","false","false","String","","","","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mVCardType","false","false","true","false","true","int","","","","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.DEFAULT_CHARSET_FOR_DECODED_BYTES","false","false","false","true","true","String","""UTF-8""","","/* package */
","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mCurrentProperty","false","false","true","false","false","VCardEntry.Property","new VCardEntry.Property()","","","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.LOG_TAG","false","false","true","true","false","String","""VCardEntryConstructor""","","","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mCurrentContactStruct","false","false","true","false","false","VCardEntry","","","","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mStrictLineBreakParsing","false","false","true","false","true","boolean","","","","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mEntryHandlers","false","false","true","false","true","List<VCardEntryHandler>","new ArrayList<VCardEntryHandler>()","","","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mCharsetForDecodedBytes","false","false","true","false","true","String","","","/**
 * The charset with which byte array is encoded to String.
 */
","\android\pim\vcard\VCardEntryConstructor.java"
"android.pim.vcard.VCardEntryConstructor.mInputCharset","false","false","true","false","false","String","","","/**
 * The charset using which {@link VCardInterpreter} parses the text.
 */
","\android\pim\vcard\VCardEntryConstructor.java"
"android.webkit.LoadListener.MSG_CONTENT_ERROR","false","false","true","true","true","int","130","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.XML_MIME_TYPE","false","false","true","true","true","String","""^[\\w_\\-+~!$\\^{}|.%'`#&*]+/"" + ""[\\w_\\-+~!$\\^{}|.%'`#&*]+\\+xml$""","","// content before giving it to webkit.
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.MSG_SSL_ERROR","false","false","true","true","true","int","180","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mAuthFailed","false","false","true","false","false","boolean","","","// indicates that the prev. auth failed
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mMethod","false","false","true","false","false","String","","","// cache. It is needed if the cache returns a redirect
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mRequestHandle","false","false","true","false","false","RequestHandle","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mCacheLoader","false","false","true","false","false","CacheLoader","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mPostData","false","false","true","false","false","byte","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mUserGesture","false","false","true","false","true","boolean","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mNativeLoader","false","false","true","false","false","int","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_TEMPORARY_REDIRECT","false","false","true","true","true","int","307","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_MOVED_PERMANENTLY","false","false","true","true","true","int","301","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mContentLength","true","false","false","false","false","long","","","// Content length of the incoming data
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_NOT_FOUND","false","false","true","true","true","int","404","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mSslErrorRequestHandle","false","false","true","false","false","RequestHandle","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mPermanent","false","false","true","false","false","boolean","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mEncoding","false","false","true","false","false","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mMimeType","false","false","true","false","false","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mContext","false","false","true","false","false","Context","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.MSG_LOCATION_CHANGED","false","false","true","true","true","int","140","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mRequestHeaders","false","false","true","false","false","Map<String,String>","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mUri","false","false","true","false","false","WebAddress","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mUrl","false","false","true","false","false","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.MSG_CONTENT_FINISHED","false","false","true","true","true","int","120","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mDataBuilder","false","false","true","false","true","ByteArrayBuilder","new ByteArrayBuilder()","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mPassword","false","false","true","false","true","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mSslError","false","false","true","false","false","SslError","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mStatusCode","false","false","true","false","false","int","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_FOUND","false","false","true","true","true","int","302","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mMessageQueue","false","false","true","false","false","Vector<Message>","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mIsMainResourceLoader","false","false","true","false","true","boolean","","","// Does this loader correspond to the main content (as opposed to a supporting resource)
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_OK","false","false","true","true","true","int","200","","// Standard HTTP status codes in a more representative format
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mCancelled","false","false","true","false","false","boolean","","","// The request has been cancelled.
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.MSG_CONTENT_DATA","false","false","true","true","true","int","110","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_SEE_OTHER","false","false","true","true","true","int","303","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mCacheRedirectCount","false","false","true","false","false","int","","","// between the network and the cache.
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.MSG_SSL_CERTIFICATE","false","false","true","true","true","int","170","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mStatusText","false","false","true","false","false","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.MSG_STATUS","false","false","true","true","true","int","160","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mBrowserFrame","false","false","true","false","false","BrowserFrame","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.CONTENT_TYPE_PATTERN","false","false","true","true","true","Pattern","Pattern.compile(""^((?:[xX]-)?[a-zA-Z\\*]+/[\\w\\+\\*-]+[\\.[\\w\\+-]+]*)$"")","","/**
 * Parses the content-type header.
 * The first part only allows '-' if it follows x or X.
 */
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mPostIdentifier","false","false","true","false","false","long","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mHeaders","false","false","true","false","false","Headers","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mTransferEncoding","false","false","true","false","false","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.MSG_LOCATION_CHANGED_REQUEST","false","false","true","true","true","int","150","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.LOGTAG","false","false","true","true","true","String","""webkit""","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mErrorID","false","false","true","false","false","int","OK","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mIsMainPageLoader","false","false","true","false","false","boolean","","","// Does this loader correspond to the main-frame top-level page?
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mFromCache","false","false","true","false","false","boolean","false","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mSynchronous","false","false","true","false","false","boolean","","","// Flag to indicate that this load is synchronous.
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.MSG_CONTENT_HEADERS","false","false","true","true","true","int","100","","// Network thread and the WebCore thread.
","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mErrorDescription","false","false","true","false","false","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_AUTH","false","false","true","true","true","int","401","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_PARTIAL_CONTENT","false","false","true","true","true","int","206","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mAuthHeader","false","false","true","false","false","HttpAuthHeader","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mOriginalUrl","false","false","true","false","false","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_PROXY_AUTH","false","false","true","true","true","int","407","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.sCertificateTypeMap","false","false","true","true","false","HashMap<String,String>","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.HTTP_NOT_MODIFIED","false","false","true","true","true","int","304","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.mUsername","false","false","true","false","true","String","","","","\android\webkit\LoadListener.java"
"android.webkit.LoadListener.sNativeLoaderCount","false","false","true","true","false","int","","","","\android\webkit\LoadListener.java"
"android.content.pm.InstrumentationInfo.targetPackage","true","false","false","false","false","String","","","/**
 * The name of the application package being instrumented.  From the
 * ""package"" attribute.
 */
","\android\content\pm\InstrumentationInfo.java"
"android.content.pm.InstrumentationInfo.handleProfiling","true","false","false","false","false","boolean","","","/**
 * Specifies whether or not this instrumentation will handle profiling.
 */
","\android\content\pm\InstrumentationInfo.java"
"android.content.pm.InstrumentationInfo.functionalTest","true","false","false","false","false","boolean","","","/**
 * Specifies whether or not to run this instrumentation as a functional test
 */
","\android\content\pm\InstrumentationInfo.java"
"android.content.pm.InstrumentationInfo.dataDir","true","false","false","false","false","String","","","/**
 * Full path to a directory assigned to the package for its persistent
 * data.
 */
","\android\content\pm\InstrumentationInfo.java"
"android.content.pm.InstrumentationInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<InstrumentationInfo>","new Parcelable.Creator<InstrumentationInfo>() {

    public InstrumentationInfo createFromParcel(Parcel source) {
        return new InstrumentationInfo(source);
    }

    public InstrumentationInfo[] newArray(int size) {
        return new InstrumentationInfo[size];
    }
}","","","\android\content\pm\InstrumentationInfo.java"
"android.content.pm.InstrumentationInfo.publicSourceDir","true","false","false","false","false","String","","","/**
 * Full path to the location of the publicly available parts of this package (i.e. the resources
 * and manifest).  For non-forward-locked apps this will be the same as {@link #sourceDir).
 */
","\android\content\pm\InstrumentationInfo.java"
"android.content.pm.InstrumentationInfo.sourceDir","true","false","false","false","false","String","","","/**
 * Full path to the location of this package.
 */
","\android\content\pm\InstrumentationInfo.java"
"com.google.android.mms.util.PduCache.MMS_INBOX","false","false","true","true","true","int","2","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_DRAFTS","false","false","true","true","true","int","6","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_INBOX_ID","false","false","true","true","true","int","3","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_SENT","false","false","true","true","true","int","4","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_CONVERSATION","false","false","true","true","true","int","10","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_DRAFTS_ID","false","false","true","true","true","int","7","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MATCH_TO_MSGBOX_ID_MAP","false","false","true","true","true","HashMap<Integer,Integer>","","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.TAG","false","false","true","true","true","String","""PduCache""","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.mMessageBoxes","false","false","true","false","true","HashMap<Integer,HashSet<Uri>>","","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.DEBUG","false","false","true","true","true","boolean","false","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_SENT_ID","false","false","true","true","true","int","5","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_ALL_ID","false","false","true","true","true","int","1","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.sInstance","false","false","true","true","false","PduCache","","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.LOCAL_LOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_ALL","false","false","true","true","true","int","0","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_OUTBOX_ID","false","false","true","true","true","int","9","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_OUTBOX","false","false","true","true","true","int","8","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.mThreads","false","false","true","false","true","HashMap<Long,HashSet<Uri>>","","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.MMS_CONVERSATION_ID","false","false","true","true","true","int","11","","","\com\google\android\mms\util\PduCache.java"
"com.google.android.mms.util.PduCache.URI_MATCHER","false","false","true","true","true","UriMatcher","","","","\com\google\android\mms\util\PduCache.java"
"android.view.ScaleGestureDetector.mPrevEvent","false","false","true","false","false","MotionEvent","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mListener","false","false","true","false","true","OnScaleGestureListener","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mPrevPressure","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mCurrEvent","false","false","true","false","false","MotionEvent","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mGestureInProgress","false","false","true","false","false","boolean","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mEdgeSlop","false","false","true","false","true","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mPrevLen","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mCurrFingerDiffX","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mCurrFingerDiffY","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mFocusX","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mFocusY","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mTimeDelta","false","false","true","false","false","long","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mRightSlopEdge","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mScaleFactor","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mBottomSlopEdge","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mCurrPressure","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mContext","false","false","true","false","true","Context","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mSloppyGesture","false","false","true","false","false","boolean","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.PRESSURE_THRESHOLD","false","false","true","true","true","float","0.67f","","/**
 * This value is the threshold ratio between our previous combined pressure
 * and the current combined pressure. We will only fire an onScale event if
 * the computed ratio between the current and previous event pressures is
 * greater than this value. When pressure decreases rapidly between events
 * the position values can often be imprecise, as it usually indicates
 * that the user is in the process of lifting a pointer off of the device.
 * Its value was tuned experimentally.
 */
","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mCurrLen","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mPrevFingerDiffX","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.view.ScaleGestureDetector.mPrevFingerDiffY","false","false","true","false","false","float","","","","\android\view\ScaleGestureDetector.java"
"android.text.Selection.SELECTION_START","true","false","false","true","true","Object","new START()","","","\android\text\Selection.java"
"android.text.Selection.SELECTION_END","true","false","false","true","true","Object","new END()","","","\android\text\Selection.java"
"android.bluetooth.BluetoothServerSocket.mSocket","false","false","false","false","true","BluetoothSocket","","","/*package*/
","\android\bluetooth\BluetoothServerSocket.java"
"android.bluetooth.BluetoothServerSocket.mHandler","false","false","true","false","false","Handler","","","","\android\bluetooth\BluetoothServerSocket.java"
"android.bluetooth.BluetoothServerSocket.mMessage","false","false","true","false","false","int","","","","\android\bluetooth\BluetoothServerSocket.java"
"android.text.method.TextKeyListener.mAutoText","false","false","true","false","false","boolean","","","","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.AUTO_TEXT","false","false","false","true","true","int","2","","/* package */
","\android\text\method\TextKeyListener.java"
"android.text.method.NullKeyListener.sInstance","false","false","true","true","false","NullKeyListener","","","","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.mResolver","false","false","true","false","false","WeakReference<ContentResolver>","","","","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.AUTO_PERIOD","false","false","false","true","true","int","4","","/* package */
","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.INHIBIT_REPLACEMENT","false","false","false","true","true","Object","new NoCopySpan.Concrete()","","/* package */
","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.AUTO_CAP","false","false","false","true","true","int","1","","/* package */
","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.LAST_TYPED","false","false","false","true","true","Object","new NoCopySpan.Concrete()","","/* package */
","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.mObserver","false","false","true","false","false","TextKeyListener.SettingsObserver","","","","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.SHOW_PASSWORD","false","false","false","true","true","int","8","","/* package */
","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.CAPPED","false","false","false","true","true","Object","new NoCopySpan.Concrete()","","/* package */
","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.ACTIVE","false","false","false","true","true","Object","new NoCopySpan.Concrete()","","/* package */
","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.sInstance","false","false","true","true","false","NullKeyListener","","","","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.mPrefs","false","false","true","false","false","int","","","","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.mPrefsInited","false","false","true","false","false","boolean","","","","\android\text\method\TextKeyListener.java"
"android.text.method.TextKeyListener.mAutoCap","false","false","true","false","false","Capitalize","","","","\android\text\method\TextKeyListener.java"
"android.widget.ViewAnimator.mWhichChild","false","false","false","false","false","int","0","","","\android\widget\ViewAnimator.java"
"android.widget.ViewAnimator.mOutAnimation","false","false","false","false","false","Animation","","","","\android\widget\ViewAnimator.java"
"android.widget.ViewAnimator.mInAnimation","false","false","false","false","false","Animation","","","","\android\widget\ViewAnimator.java"
"android.widget.ViewAnimator.mFirstTime","false","false","false","false","false","boolean","true","","","\android\widget\ViewAnimator.java"
"android.widget.ViewAnimator.mAnimateFirstTime","false","false","false","false","false","boolean","true","","","\android\widget\ViewAnimator.java"
"android.app.TimePickerDialog.IS_24_HOUR","false","false","true","true","true","String","""is24hour""","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.mInitialHourOfDay","false","false","false","false","false","int","","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.MINUTE","false","false","true","true","true","String","""minute""","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.mCalendar","false","false","true","false","true","Calendar","","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.mIs24HourView","false","false","false","false","false","boolean","","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.mCallback","false","false","true","false","true","OnTimeSetListener","","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.HOUR","false","false","true","true","true","String","""hour""","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.mInitialMinute","false","false","false","false","false","int","","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.mDateFormat","false","false","true","false","true","java.text.DateFormat","","","","\android\app\TimePickerDialog.java"
"android.app.TimePickerDialog.mTimePicker","false","false","true","false","true","TimePicker","","","","\android\app\TimePickerDialog.java"
"com.android.internal.widget.PointerState.mCurSize","false","false","true","false","false","float","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerState.mVelocity","false","false","true","false","false","VelocityTracker","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mPrintCoords","false","false","true","false","false","boolean","true","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mTextLevelPaint","false","false","true","false","true","Paint","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mPathPaint","false","false","true","false","true","Paint","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mCurNumPointers","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerState.mCurPressure","false","false","true","false","false","float","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mCurDown","false","false","true","false","false","boolean","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mCurPressure","false","false","true","false","false","float","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mHeaderBottom","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mCurSize","false","false","true","false","false","float","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mTextMetrics","false","false","true","false","true","FontMetricsInt","new FontMetricsInt()","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mTextPaint","false","false","true","false","true","Paint","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mPaint","false","false","true","false","true","Paint","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mPointers","false","false","true","false","true","ArrayList<PointerState>","new ArrayList<PointerState>()","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerState.mCurWidth","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mTargetPaint","false","false","true","false","true","Paint","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerState.mCurDown","false","false","true","false","false","boolean","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mCurX","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mCurY","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerState.mCurX","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerState.mCurY","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mTextBackgroundPaint","false","false","true","false","true","Paint","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mYs","false","false","true","false","true","ArrayList<Float>","new ArrayList<Float>()","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mXs","false","false","true","false","true","ArrayList<Float>","new ArrayList<Float>()","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerState.mXs","false","false","true","false","true","ArrayList<Float>","new ArrayList<Float>()","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mMaxNumPointers","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mVC","false","false","true","false","true","ViewConfiguration","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mCurWidth","false","false","true","false","false","int","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerLocationView.mVelocity","false","false","true","false","false","VelocityTracker","","","","\com\android\internal\widget\PointerLocationView.java"
"com.android.internal.widget.PointerState.mYs","false","false","true","false","true","ArrayList<Float>","new ArrayList<Float>()","","","\com\android\internal\widget\PointerLocationView.java"
"android.gesture.GestureStroke.boundingBox","true","false","false","false","true","RectF","","","","\android\gesture\GestureStroke.java"
"android.gesture.GestureStroke.length","true","false","false","false","true","float","","","","\android\gesture\GestureStroke.java"
"android.gesture.GestureStroke.mCachedPath","false","false","true","false","false","Path","","","","\android\gesture\GestureStroke.java"
"android.gesture.GestureStroke.timestamps","false","false","true","false","true","long","","","","\android\gesture\GestureStroke.java"
"android.gesture.GestureStroke.TOUCH_TOLERANCE","false","false","false","true","true","float","3","","","\android\gesture\GestureStroke.java"
"android.gesture.GestureStroke.points","true","false","false","false","true","float","","","","\android\gesture\GestureStroke.java"
"com.android.internal.util.TypedProperties.TYPE_SHORT","false","false","false","true","true","int","'I' | 2 << 8","","// TYPE_CHAR: character literal syntax not supported; use short.
","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.STRING_NOT_SET","true","false","false","true","true","int","-1","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_LONG","false","false","false","true","true","int","'I' | 8 << 8","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_FLOAT","false","false","false","true","true","int","'F' | 4 << 8","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_DOUBLE","false","false","false","true","true","int","'F' | 8 << 8","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.NULL_STRING","false","false","false","true","true","String","new String(""<TypedProperties:NULL_STRING>"")","","// A sentinel instance used to indicate a null string.
","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_BYTE","false","false","false","true","true","int","'I' | 1 << 8","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_ERROR","false","false","false","true","true","int","-1","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_BOOLEAN","false","false","false","true","true","int","'Z'","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_STRING","false","false","false","true","true","int","'L' | 's' << 8","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.STRING_SET","true","false","false","true","true","int","1","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.STRING_NULL","true","false","false","true","true","int","0","","","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.STRING_TYPE_MISMATCH","true","false","false","true","true","int","-2","","// Values returned by getStringInfo()
","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_UNSET","false","false","false","true","true","int","'x'","","// Constants used to represent the supported types.
","\com\android\internal\util\TypedProperties.java"
"com.android.internal.util.TypedProperties.TYPE_INT","false","false","false","true","true","int","'I' | 4 << 8","","","\com\android\internal\util\TypedProperties.java"
"android.app.Notification.FLAG_AUTO_CANCEL","true","false","false","true","true","int","0x00000010","","/**
 * Bit to be bitwise-ored into the {@link #flags} field that should be
 * set if the notification should be canceled when it is clicked by the
 * user.
 */
","\android\app\Notification.java"
"android.app.Notification.deleteIntent","true","false","false","false","false","PendingIntent","","","/**
 * The intent to execute when the status entry is deleted by the user
 * with the ""Clear All Notifications"" button. This probably shouldn't
 * be launching an activity since several of those will be sent at the
 * same time.
 */
","\android\app\Notification.java"
"android.app.Notification.flags","true","false","false","false","false","int","","","","\android\app\Notification.java"
"android.app.Notification.sound","true","false","false","false","false","Uri","","","/**
 * The sound to play.
 *
 * <p>
 * To play the default notification sound, see {@link #defaults}.
 * </p>
 */
","\android\app\Notification.java"
"android.app.Notification.CREATOR","true","false","false","true","true","Parcelable.Creator<Notification>","new Parcelable.Creator<Notification>() {

    public Notification createFromParcel(Parcel parcel) {
        return new Notification(parcel);
    }

    public Notification[] newArray(int size) {
        return new Notification[size];
    }
}","","/**
 * Parcelable.Creator that instantiates Notification objects
 */
","\android\app\Notification.java"
"android.app.Notification.STREAM_DEFAULT","true","false","false","true","true","int","-1","","/**
 * Use this constant as the value for audioStreamType to request that
 * the default stream type for notifications be used.  Currently the
 * default stream type is STREAM_RING.
 */
","\android\app\Notification.java"
"android.app.Notification.number","true","false","false","false","false","int","","","/**
 * The number of events that this notification represents.  For example, if this is the
 * new mail notification, this would be the number of unread messages.  This number is
 * be superimposed over the icon in the status bar.  If the number is 0 or negative, it
 * is not shown in the status bar.
 */
","\android\app\Notification.java"
"android.app.Notification.contentIntent","true","false","false","false","false","PendingIntent","","","/**
 * The intent to execute when the expanded status entry is clicked.  If
 * this is an activity, it must include the
 * {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK} flag, which requires
 * that you take care of task management as described in the <em>Activities and Tasks</em>
 * section of the <a href=""{@docRoot}guide/topics/fundamentals.html#acttask"">Application
 * Fundamentals</a> document.
 */
","\android\app\Notification.java"
"android.app.Notification.DEFAULT_ALL","true","false","false","true","true","int","~0","","/**
 * Use all default values (where applicable).
 */
","\android\app\Notification.java"
"android.app.Notification.FLAG_INSISTENT","true","false","false","true","true","int","0x00000004","","/**
 * Bit to be bitwise-ored into the {@link #flags} field that if set,
 * the audio will be repeated until the notification is
 * cancelled or the notification window is opened.
 */
","\android\app\Notification.java"
"android.app.Notification.ledOnMS","true","false","false","false","false","int","","","/**
 * The number of milliseconds for the LED to be on while it's flashing.
 * The hardware will do its best approximation.
 *
 * @see #FLAG_SHOW_LIGHTS
 * @see #flags
 */
","\android\app\Notification.java"
"android.app.Notification.FLAG_FOREGROUND_SERVICE","true","false","false","true","true","int","0x00000040","","/**
 * Bit to be bitwise-ored into the {@link #flags} field that should be
 * set if this notification represents a currently running service.  This
 * will normally be set for you by {@link Service#startForeground}.
 */
","\android\app\Notification.java"
"android.app.Notification.DEFAULT_VIBRATE","true","false","false","true","true","int","2","","/**
 * Use the default notification vibrate. This will ignore any given
 * {@link #vibrate}. Using phone vibration requires the
 * {@link android.Manifest.permission#VIBRATE VIBRATE} permission.
 *
 * @see #defaults
 */
","\android\app\Notification.java"
"android.app.Notification.when","true","false","false","false","false","long","","","/**
 * The timestamp for the notification.  The icons and expanded views
 * are sorted by this key.
 */
","\android\app\Notification.java"
"android.app.Notification.iconLevel","true","false","false","false","false","int","","","/**
 * If the icon in the status bar is to have more than one level, you can set this.  Otherwise,
 * leave it at its default value of 0.
 *
 * @see android.widget.ImageView#setImageLevel
 * @see android.graphics.drawable#setLevel
 */
","\android\app\Notification.java"
"android.app.Notification.FLAG_NO_CLEAR","true","false","false","true","true","int","0x00000020","","/**
 * Bit to be bitwise-ored into the {@link #flags} field that should be
 * set if the notification should not be canceled when the user clicks
 * the Clear all button.
 */
","\android\app\Notification.java"
"android.app.Notification.FLAG_SHOW_LIGHTS","true","false","false","true","true","int","0x00000001","","/**
 * Bit to be bitwise-ored into the {@link #flags} field that should be
 * set if you want the LED on for this notification.
 * <ul>
 * <li>To turn the LED off, pass 0 in the alpha channel for colorARGB
 * or 0 for both ledOnMS and ledOffMS.</li>
 * <li>To turn the LED on, pass 1 for ledOnMS and 0 for ledOffMS.</li>
 * <li>To flash the LED, pass the number of milliseconds that it should
 * be on and off to ledOnMS and ledOffMS.</li>
 * </ul>
 * <p>
 * Since hardware varies, you are not guaranteed that any of the values
 * you pass are honored exactly.  Use the system defaults (TODO) if possible
 * because they will be set to values that work on any given hardware.
 * <p>
 * The alpha channel must be set for forward compatibility.
 */
","\android\app\Notification.java"
"android.app.Notification.ledOffMS","true","false","false","false","false","int","","","/**
 * The number of milliseconds for the LED to be off while it's flashing.
 * The hardware will do its best approximation.
 *
 * @see #FLAG_SHOW_LIGHTS
 * @see #flags
 */
","\android\app\Notification.java"
"android.app.Notification.ledARGB","true","false","false","false","false","int","","","/**
 * The color of the led.  The hardware will do its best approximation.
 *
 * @see #FLAG_SHOW_LIGHTS
 * @see #flags
 */
","\android\app\Notification.java"
"android.app.Notification.tickerText","true","false","false","false","false","CharSequence","","","/**
 * Text to scroll across the screen when this item is added to
 * the status bar.
 */
","\android\app\Notification.java"
"android.app.Notification.vibrate","true","false","false","false","false","long","","","/**
 * The pattern with which to vibrate.
 *
 * <p>
 * To vibrate the default pattern, see {@link #defaults}.
 * </p>
 *
 * @see android.os.Vibrator#vibrate(long[],int)
 */
","\android\app\Notification.java"
"android.app.Notification.audioStreamType","true","false","false","false","false","int","STREAM_DEFAULT","","/**
 * The audio stream type to use when playing the sound.
 * Should be one of the STREAM_ constants from
 * {@link android.media.AudioManager}.
 */
","\android\app\Notification.java"
"android.app.Notification.defaults","true","false","false","false","false","int","","","/**
 * Specifies which values should be taken from the defaults.
 * <p>
 * To set, OR the desired from {@link #DEFAULT_SOUND},
 * {@link #DEFAULT_VIBRATE}, {@link #DEFAULT_LIGHTS}. For all default
 * values, use {@link #DEFAULT_ALL}.
 * </p>
 */
","\android\app\Notification.java"
"android.app.Notification.FLAG_ONGOING_EVENT","true","false","false","true","true","int","0x00000002","","/**
 * Bit to be bitwise-ored into the {@link #flags} field that should be
 * set if this notification is in reference to something that is ongoing,
 * like a phone call.  It should not be set if this notification is in
 * reference to something that happened at a particular point in time,
 * like a missed phone call.
 */
","\android\app\Notification.java"
"android.app.Notification.contentView","true","false","false","false","false","RemoteViews","","","/**
 * The view that shows when this notification is shown in the expanded status bar.
 */
","\android\app\Notification.java"
"android.app.Notification.FLAG_ONLY_ALERT_ONCE","true","false","false","true","true","int","0x00000008","","/**
 * Bit to be bitwise-ored into the {@link #flags} field that should be
 * set if you want the sound and/or vibration play each time the
 * notification is sent, even if it has not been canceled before that.
 */
","\android\app\Notification.java"
"android.app.Notification.DEFAULT_LIGHTS","true","false","false","true","true","int","4","","/**
 * Use the default notification lights. This will ignore the
 * {@link #FLAG_SHOW_LIGHTS} bit, and {@link #ledARGB}, {@link #ledOffMS}, or
 * {@link #ledOnMS}.
 *
 * @see #defaults
 */
","\android\app\Notification.java"
"android.app.Notification.icon","true","false","false","false","false","int","","","/**
 * The resource id of a drawable to use as the icon in the status bar.
 */
","\android\app\Notification.java"
"android.app.Notification.DEFAULT_SOUND","true","false","false","true","true","int","1","","/**
 * Use the default notification sound. This will ignore any given
 * {@link #sound}.
 *
 * @see #defaults
 */
","\android\app\Notification.java"
"android.util.TimeUtils.TAG","false","false","true","true","true","String","""TimeUtils""","","","\android\util\TimeUtils.java"
"android.webkit.PluginData.mHeaders","false","false","true","false","false","Map<String,String[]>","","","/**
 * The associated HTTP response headers stored as a map of
 * lowercase header name to [ unmodified header name, header value].
 * TODO: This design was always a hack. Remove (involves updating
 * the Gears C++ side).
 */
","\android\webkit\PluginData.java"
"android.webkit.PluginData.mStatusCode","false","false","true","false","false","int","","","/**
 * The associated HTTP response code.
 */
","\android\webkit\PluginData.java"
"android.webkit.PluginData.mStream","false","false","true","false","false","InputStream","","","/**
 * The content stream.
 */
","\android\webkit\PluginData.java"
"android.webkit.PluginData.mContentLength","false","false","true","false","false","long","","","/**
 * The content length.
 */
","\android\webkit\PluginData.java"
"android.bluetooth.Device.AUDIO_VIDEO","true","false","false","true","true","int","0x0400","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH_WEIGHING","true","false","false","true","true","int","0x090C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.PHONE","true","false","false","true","true","int","0x0200","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.CAPTURE","true","false","false","true","true","int","0x080000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_VIDEO_GAMING_TOY","true","false","false","true","true","int","0x0448","","// public static final int AUDIO_VIDEO_RESERVED              = 0x0444;
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.TOY_CONTROLLER","true","false","false","true","true","int","0x0810","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PHONE_MODEM_OR_GATEWAY","true","false","false","true","true","int","0x0210","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.OBJECT_TRANSFER","true","false","false","true","true","int","0x100000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH_PULSE_RATE","true","false","false","true","true","int","0x0918","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.HEALTH","true","false","false","true","true","int","0x0900","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH_BLOOD_PRESSURE","true","false","false","true","true","int","0x0904","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_UNCATEGORIZED","true","false","false","true","true","int","0x0400","","// Minor classes for the AUDIO_VIDEO major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PHONE","true","false","false","true","true","int","0x0200","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.TOY","true","false","false","true","true","int","0x0800","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.COMPUTER","true","false","false","true","true","int","0x0100","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_HANDSFREE","true","false","false","true","true","int","0x0408","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_VIDEO_CONFERENCING","true","false","false","true","true","int","0x0440","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.COMPUTER_DESKTOP","true","false","false","true","true","int","0x0104","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_UNCATEGORIZED","true","false","false","true","true","int","0x0400","","// Minor classes for the AUDIO_VIDEO major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.INFORMATION","true","false","false","true","true","int","0x800000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.PERIPHERAL","true","false","false","true","true","int","0x0500","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.IMAGING","true","false","false","true","true","int","0x0600","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.COMPUTER_LAPTOP","true","false","false","true","true","int","0x010C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH_PULSE_OXIMETER","true","false","false","true","true","int","0x0914","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PHONE_UNCATEGORIZED","true","false","false","true","true","int","0x0200","","// Devices in the PHONE major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PHONE_CORDLESS","true","false","false","true","true","int","0x0208","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.PHONE_ISDN","true","false","false","true","true","int","0x0214","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.TOY_DOLL_ACTION_FIGURE","true","false","false","true","true","int","0x080C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_HEADPHONES","true","false","false","true","true","int","0x0418","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_PORTABLE_AUDIO","true","false","false","true","true","int","0x041C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.MISC","true","false","false","true","true","int","0x0000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_VCR","true","false","false","true","true","int","0x042C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_CAR_AUDIO","true","false","false","true","true","int","0x0420","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.UNCATEGORIZED","true","false","false","true","true","int","0x1F00","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_MICROPHONE","true","false","false","true","true","int","0x0410","","// public static final int AUDIO_VIDEO_RESERVED              = 0x040C;
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.COMPUTER_SERVER","true","false","false","true","true","int","0x0108","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.PHONE_SMART","true","false","false","true","true","int","0x020C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.WEARABLE_GLASSES","true","false","false","true","true","int","0x0714","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.NETWORKING","true","false","false","true","true","int","0x0300","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.TELEPHONY","true","false","false","true","true","int","0x400000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.COMPUTER_HANDHELD_PC_PDA","true","false","false","true","true","int","0x0110","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.RENDER","true","false","false","true","true","int","0x040000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.COMPUTER","true","false","false","true","true","int","0x0100","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH_GLUCOSE","true","false","false","true","true","int","0x0910","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.TOY_CONTROLLER","true","false","false","true","true","int","0x0810","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.UNCATEGORIZED","true","false","false","true","true","int","0x1F00","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_WEARABLE_HEADSET","true","false","false","true","true","int","0x0404","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH_THERMOMETER","true","false","false","true","true","int","0x0908","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.WEARABLE","true","false","false","true","true","int","0x0700","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.MISC","true","false","false","true","true","int","0x0000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.NETWORKING","true","false","false","true","true","int","0x020000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.AUDIO","true","false","false","true","true","int","0x200000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.COMPUTER_UNCATEGORIZED","true","false","false","true","true","int","0x0100","","// Devices in the COMPUTER major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.COMPUTER_UNCATEGORIZED","true","false","false","true","true","int","0x0100","","// Devices in the COMPUTER major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.NETWORKING","true","false","false","true","true","int","0x0300","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.PHONE","true","false","false","true","true","int","0x0200","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.BITMASK","false","false","true","true","true","int","0xFFE000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_WEARABLE_HEADSET","true","false","false","true","true","int","0x0404","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_SET_TOP_BOX","true","false","false","true","true","int","0x0424","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PROFILE_OPP","true","false","false","true","true","int","2","","/**
 * @hide
 */
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.POSITIONING","true","false","false","true","true","int","0x010000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.TOY","true","false","false","true","true","int","0x0800","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_LOUDSPEAKER","true","false","false","true","true","int","0x0414","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.PHONE_MODEM_OR_GATEWAY","true","false","false","true","true","int","0x0210","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.WEARABLE_WRIST_WATCH","true","false","false","true","true","int","0x0704","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.IMAGING","true","false","false","true","true","int","0x0600","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH_UNCATEGORIZED","true","false","false","true","true","int","0x0900","","// Devices in the HEALTH major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.WEARABLE_UNCATEGORIZED","true","false","false","true","true","int","0x0700","","// Devices in the WEARABLE major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.TELEPHONY","true","false","false","true","true","int","0x400000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.PHONE_CORDLESS","true","false","false","true","true","int","0x0208","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_SET_TOP_BOX","true","false","false","true","true","int","0x0424","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_CAMCORDER","true","false","false","true","true","int","0x0434","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.TOY_DOLL_ACTION_FIGURE","true","false","false","true","true","int","0x080C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_VIDEO_GAMING_TOY","true","false","false","true","true","int","0x0448","","// public static final int AUDIO_VIDEO_RESERVED              = 0x0444;
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.COMPUTER","true","false","false","true","true","int","0x0100","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_MICROPHONE","true","false","false","true","true","int","0x0410","","// public static final int AUDIO_VIDEO_RESERVED              = 0x040C;
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_VIDEO_CAMERA","true","false","false","true","true","int","0x0430","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.WEARABLE","true","false","false","true","true","int","0x0700","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.COMPUTER_SERVER","true","false","false","true","true","int","0x0108","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH_DATA_DISPLAY","true","false","false","true","true","int","0x091C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PROFILE_A2DP","true","false","false","true","true","int","1","","/**
 * @hide
 */
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH_GLUCOSE","true","false","false","true","true","int","0x0910","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO","true","false","false","true","true","int","0x0400","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.WEARABLE_WRIST_WATCH","true","false","false","true","true","int","0x0704","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH","true","false","false","true","true","int","0x0900","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.COMPUTER_HANDHELD_PC_PDA","true","false","false","true","true","int","0x0110","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKER","true","false","false","true","true","int","0x043C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.TOY_GAME","true","false","false","true","true","int","0x0814","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_VIDEO_MONITOR","true","false","false","true","true","int","0x0438","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_CAR_AUDIO","true","false","false","true","true","int","0x0420","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_VIDEO_CONFERENCING","true","false","false","true","true","int","0x0440","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.TOY_UNCATEGORIZED","true","false","false","true","true","int","0x0800","","// Devices in the TOY major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_LOUDSPEAKER","true","false","false","true","true","int","0x0414","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.TOY","true","false","false","true","true","int","0x0800","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH_PULSE_OXIMETER","true","false","false","true","true","int","0x0914","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.TOY_VEHICLE","true","false","false","true","true","int","0x0808","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PHONE_CELLULAR","true","false","false","true","true","int","0x0204","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.WEARABLE_PAGER","true","false","false","true","true","int","0x0708","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.BITMASK","false","false","true","true","true","int","0x1F00","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_CAMCORDER","true","false","false","true","true","int","0x0434","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_HIFI_AUDIO","true","false","false","true","true","int","0x0428","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_VIDEO_CAMERA","true","false","false","true","true","int","0x0430","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PERIPHERAL","true","false","false","true","true","int","0x0500","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.WEARABLE","true","false","false","true","true","int","0x0700","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.mClass","false","false","true","false","true","int","","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.TOY_GAME","true","false","false","true","true","int","0x0814","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.INFORMATION","true","false","false","true","true","int","0x800000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.ERROR","true","false","false","true","true","int","0xFF000000","","/**
 * Legacy error value. Applications should use null instead.
 * @hide
 */
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.BITMASK","false","false","true","true","true","int","0x1F00","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.WEARABLE_HELMET","true","false","false","true","true","int","0x0710","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.TOY_ROBOT","true","false","false","true","true","int","0x0804","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.COMPUTER_DESKTOP","true","false","false","true","true","int","0x0104","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH_UNCATEGORIZED","true","false","false","true","true","int","0x0900","","// Devices in the HEALTH major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.NETWORKING","true","false","false","true","true","int","0x0300","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.COMPUTER_LAPTOP","true","false","false","true","true","int","0x010C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_PORTABLE_AUDIO","true","false","false","true","true","int","0x041C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_HANDSFREE","true","false","false","true","true","int","0x0408","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.WEARABLE_UNCATEGORIZED","true","false","false","true","true","int","0x0700","","// Devices in the WEARABLE major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.COMPUTER_WEARABLE","true","false","false","true","true","int","0x0118","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.CAPTURE","true","false","false","true","true","int","0x080000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.WEARABLE_JACKET","true","false","false","true","true","int","0x070C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.LIMITED_DISCOVERABILITY","true","false","false","true","true","int","0x002000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PHONE_SMART","true","false","false","true","true","int","0x020C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.COMPUTER_PALM_SIZE_PC_PDA","true","false","false","true","true","int","0x0114","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.LIMITED_DISCOVERABILITY","true","false","false","true","true","int","0x002000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_HIFI_AUDIO","true","false","false","true","true","int","0x0428","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.OBJECT_TRANSFER","true","false","false","true","true","int","0x100000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.CREATOR","true","false","false","true","true","Parcelable.Creator<BluetoothClass>","new Parcelable.Creator<BluetoothClass>() {

    public BluetoothClass createFromParcel(Parcel in) {
        return new BluetoothClass(in.readInt());
    }

    public BluetoothClass[] newArray(int size) {
        return new BluetoothClass[size];
    }
}","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_VCR","true","false","false","true","true","int","0x042C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH_BLOOD_PRESSURE","true","false","false","true","true","int","0x0904","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.MISC","true","false","false","true","true","int","0x0000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.BITMASK","false","false","true","true","true","int","0x1F00","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.WEARABLE_HELMET","true","false","false","true","true","int","0x0710","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO","true","false","false","true","true","int","0x200000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.COMPUTER_PALM_SIZE_PC_PDA","true","false","false","true","true","int","0x0114","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.WEARABLE_JACKET","true","false","false","true","true","int","0x070C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PROFILE_HEADSET","true","false","false","true","true","int","0","","/**
 * @hide
 */
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.COMPUTER_WEARABLE","true","false","false","true","true","int","0x0118","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.TOY_UNCATEGORIZED","true","false","false","true","true","int","0x0800","","// Devices in the TOY major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.TOY_VEHICLE","true","false","false","true","true","int","0x0808","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.IMAGING","true","false","false","true","true","int","0x0600","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.WEARABLE_PAGER","true","false","false","true","true","int","0x0708","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.PHONE_CELLULAR","true","false","false","true","true","int","0x0204","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.PHONE_UNCATEGORIZED","true","false","false","true","true","int","0x0200","","// Devices in the PHONE major class
","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.UNCATEGORIZED","true","false","false","true","true","int","0x1F00","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH_WEIGHING","true","false","false","true","true","int","0x090C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH_PULSE_RATE","true","false","false","true","true","int","0x0918","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_HEADPHONES","true","false","false","true","true","int","0x0418","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.HEALTH_DATA_DISPLAY","true","false","false","true","true","int","0x091C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.PHONE_ISDN","true","false","false","true","true","int","0x0214","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.TOY_ROBOT","true","false","false","true","true","int","0x0804","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH","true","false","false","true","true","int","0x0900","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.RENDER","true","false","false","true","true","int","0x040000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.PERIPHERAL","true","false","false","true","true","int","0x0500","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Service.POSITIONING","true","false","false","true","true","int","0x010000","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Device.AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKER","true","false","false","true","true","int","0x043C","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.WEARABLE_GLASSES","true","false","false","true","true","int","0x0714","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.HEALTH_THERMOMETER","true","false","false","true","true","int","0x0908","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.BluetoothClass.AUDIO_VIDEO_VIDEO_MONITOR","true","false","false","true","true","int","0x0438","","","\android\bluetooth\BluetoothClass.java"
"android.bluetooth.Major.AUDIO_VIDEO","true","false","false","true","true","int","0x0400","","","\android\bluetooth\BluetoothClass.java"
"android.app.KeyguardManager.mTag","false","false","true","false","false","String","","","","\android\app\KeyguardManager.java"
"android.app.KeyguardManager.mWM","false","false","true","false","false","IWindowManager","","","","\android\app\KeyguardManager.java"
"android.app.KeyguardManager.mToken","false","false","true","false","false","IBinder","new Binder()","","","\android\app\KeyguardManager.java"
"android.app.KeyguardLock.mTag","false","false","true","false","false","String","","","","\android\app\KeyguardManager.java"
"android.app.KeyguardLock.mToken","false","false","true","false","false","IBinder","new Binder()","","","\android\app\KeyguardManager.java"
"android.widget.SimpleExpandableListAdapter.mCollapsedGroupLayout","false","false","true","false","false","int","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mGroupData","false","false","true","false","false","List<? extends Map<String,?>>","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mGroupFrom","false","false","true","false","false","String","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mInflater","false","false","true","false","false","LayoutInflater","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mChildFrom","false","false","true","false","false","String","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mChildData","false","false","true","false","false","List<? extends List<? extends Map<String,?>>>","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mChildTo","false","false","true","false","false","int","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mLastChildLayout","false","false","true","false","false","int","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mChildLayout","false","false","true","false","false","int","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mGroupTo","false","false","true","false","false","int","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.widget.SimpleExpandableListAdapter.mExpandedGroupLayout","false","false","true","false","false","int","","","","\android\widget\SimpleExpandableListAdapter.java"
"android.os.Broadcaster.prev","false","false","false","false","false","Registration","","","","\android\os\Broadcaster.java"
"android.os.Registration.next","false","false","false","false","false","Registration","","","","\android\os\Broadcaster.java"
"android.os.Registration.prev","false","false","false","false","false","Registration","","","","\android\os\Broadcaster.java"
"android.os.Registration.targets","false","false","false","false","false","Handler","","","","\android\os\Broadcaster.java"
"android.os.Broadcaster.senderWhat","false","false","false","false","false","int","","","","\android\os\Broadcaster.java"
"android.os.Broadcaster.targetWhats","false","false","false","false","false","int","","","","\android\os\Broadcaster.java"
"android.os.Broadcaster.mReg","false","false","true","false","false","Registration","","","","\android\os\Broadcaster.java"
"android.os.Broadcaster.targets","false","false","false","false","false","Handler","","","","\android\os\Broadcaster.java"
"android.os.Registration.senderWhat","false","false","false","false","false","int","","","","\android\os\Broadcaster.java"
"android.os.Registration.targetWhats","false","false","false","false","false","int","","","","\android\os\Broadcaster.java"
"android.os.Broadcaster.next","false","false","false","false","false","Registration","","","","\android\os\Broadcaster.java"
"android.app.Builder.P","false","false","true","false","true","AlertController.AlertParams","","","","\android\app\AlertDialog.java"
"android.app.AlertDialog.P","false","false","true","false","true","AlertController.AlertParams","","","","\android\app\AlertDialog.java"
"android.app.AlertDialog.mAlert","false","false","true","false","false","AlertController","","","","\android\app\AlertDialog.java"
"android.bluetooth.SdpHelper.uuid","false","false","true","false","true","ParcelUuid","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mAuth","false","false","true","false","true","boolean","","","/* remote address */
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mOutputStream","false","false","true","false","true","BluetoothOutputStream","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.canceled","false","false","true","false","false","boolean","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mType","false","false","true","false","true","int","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.uuid","false","false","true","false","true","ParcelUuid","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mSocketData","false","false","true","false","false","int","","","/**
 * used by native code only
 */
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.SdpHelper.channel","false","false","true","false","false","int","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.SdpHelper.canceled","false","false","true","false","false","boolean","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.channel","false","false","true","false","false","int","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.device","false","false","true","false","true","BluetoothDevice","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mPort","false","false","true","false","false","int","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mInputStream","false","false","true","false","true","BluetoothInputStream","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.EADDRINUSE","false","false","false","true","true","int","98","","/*package*/
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.TYPE_RFCOMM","false","false","false","true","true","int","1","","/*package*/
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mEncrypt","false","false","true","false","true","boolean","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.TYPE_L2CAP","false","false","false","true","true","int","3","","/*package*/
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.EBADFD","false","false","false","true","true","int","77","","/*package*/
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.TAG","false","false","true","true","true","String","""BluetoothSocket""","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.SdpHelper.device","false","false","true","false","true","BluetoothDevice","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.SdpHelper.service","false","false","true","false","true","IBluetooth","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mAddress","false","false","true","false","true","String","","","/* remote device */
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.service","false","false","true","false","true","IBluetooth","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mDevice","false","false","true","false","true","BluetoothDevice","","","/* one of TYPE_RFCOMM etc */
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.MAX_RFCOMM_CHANNEL","true","false","false","true","true","int","30","","/**
 * @hide
 */
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mClosed","false","false","true","false","false","boolean","","","/**
 * prevents all native calls after destroyNative()
 */
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.TYPE_SCO","false","false","false","true","true","int","2","","/*package*/
","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mSdp","false","false","true","false","true","SdpHelper","","","","\android\bluetooth\BluetoothSocket.java"
"android.bluetooth.BluetoothSocket.mLock","false","false","true","false","true","ReentrantReadWriteLock","","","/**
 * protects mClosed
 */
","\android\bluetooth\BluetoothSocket.java"
"android.text.PackedIntVector.mValues","false","false","true","false","false","int","","","","\android\text\PackedIntVector.java"
"android.text.PackedIntVector.mRowGapStart","false","false","true","false","false","int","","","","\android\text\PackedIntVector.java"
"android.text.PackedIntVector.mRowGapLength","false","false","true","false","false","int","","","","\android\text\PackedIntVector.java"
"android.text.PackedIntVector.mValueGap","false","false","true","false","false","int","","","// starts, followed by lengths
","\android\text\PackedIntVector.java"
"android.text.PackedIntVector.mColumns","false","false","true","false","true","int","","","","\android\text\PackedIntVector.java"
"android.text.PackedIntVector.mRows","false","false","true","false","false","int","","","","\android\text\PackedIntVector.java"
"com.google.android.mms.ContentType.IMAGE_JPEG","true","false","false","true","true","String","""image/jpeg""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.MULTIPART_RELATED","true","false","false","true","true","String","""application/vnd.wap.multipart.related""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.IMAGE_GIF","true","false","false","true","true","String","""image/gif""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_IMELODY","true","false","false","true","true","String","""audio/imelody""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.TEXT_VCALENDAR","true","false","false","true","true","String","""text/x-vCalendar""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_AMR","true","false","false","true","true","String","""audio/amr""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_MPEG3","true","false","false","true","true","String","""audio/mpeg3""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.APP_XHTML","true","false","false","true","true","String","""application/xhtml+xml""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_X_MPEG","true","false","false","true","true","String","""audio/x-mpeg""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.VIDEO_3GPP","true","false","false","true","true","String","""video/3gpp""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.sSupportedContentTypes","false","false","true","true","true","ArrayList<String>","new ArrayList<String>()","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.APP_DRM_CONTENT","true","false","false","true","true","String","""application/vnd.oma.drm.content""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.IMAGE_PNG","true","false","false","true","true","String","""image/png""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_X_MPEG3","true","false","false","true","true","String","""audio/x-mpeg3""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.sSupportedAudioTypes","false","false","true","true","true","ArrayList<String>","new ArrayList<String>()","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.MMS_GENERIC","true","false","false","true","true","String","""application/vnd.wap.mms-generic""","","// Notification.ind, Delivery.ind).
","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.TEXT_HTML","true","false","false","true","true","String","""text/html""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_3GPP","true","false","false","true","true","String","""audio/3gpp""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_MIDI","true","false","false","true","true","String","""audio/midi""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.APP_WAP_XHTML","true","false","false","true","true","String","""application/vnd.wap.xhtml+xml""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.IMAGE_JPG","true","false","false","true","true","String","""image/jpg""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_X_MIDI","true","false","false","true","true","String","""audio/x-midi""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.VIDEO_3G2","true","false","false","true","true","String","""video/3gpp2""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_MP3","true","false","false","true","true","String","""audio/mp3""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_MP4","true","false","false","true","true","String","""audio/mp4""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_MPG","true","false","false","true","true","String","""audio/mpg""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_OGG","true","false","false","true","true","String","""application/ogg""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.sSupportedVideoTypes","false","false","true","true","true","ArrayList<String>","new ArrayList<String>()","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_X_MP3","true","false","false","true","true","String","""audio/x-mp3""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_X_MPG","true","false","false","true","true","String","""audio/x-mpg""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.VIDEO_UNSPECIFIED","true","false","false","true","true","String","""video/*""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.IMAGE_WBMP","true","false","false","true","true","String","""image/vnd.wap.wbmp""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_MID","true","false","false","true","true","String","""audio/mid""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.IMAGE_UNSPECIFIED","true","false","false","true","true","String","""image/*""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_UNSPECIFIED","true","false","false","true","true","String","""audio/*""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_MPEG","true","false","false","true","true","String","""audio/mpeg""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.sSupportedImageTypes","false","false","true","true","true","ArrayList<String>","new ArrayList<String>()","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_X_MID","true","false","false","true","true","String","""audio/x-mid""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.MMS_MESSAGE","true","false","false","true","true","String","""application/vnd.wap.mms-message""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.APP_DRM_MESSAGE","true","false","false","true","true","String","""application/vnd.oma.drm.message""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.MULTIPART_MIXED","true","false","false","true","true","String","""application/vnd.wap.multipart.mixed""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.VIDEO_MP4","true","false","false","true","true","String","""video/mp4""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.TEXT_PLAIN","true","false","false","true","true","String","""text/plain""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.APP_SMIL","true","false","false","true","true","String","""application/smil""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.VIDEO_H263","true","false","false","true","true","String","""video/h263""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.TEXT_VCARD","true","false","false","true","true","String","""text/x-vCard""","","","\com\google\android\mms\ContentType.java"
"com.google.android.mms.ContentType.AUDIO_AAC","true","false","false","true","true","String","""audio/aac""","","","\com\google\android\mms\ContentType.java"
"android.content.res.PluralRules.QUANTITY_MANY","false","false","false","true","true","int","0x0010","","","\android\content\res\PluralRules.java"
"android.content.res.PluralRules.QUANTITY_FEW","false","false","false","true","true","int","0x0008","","","\android\content\res\PluralRules.java"
"android.content.res.PluralRules.QUANTITY_OTHER","false","false","false","true","true","int","0x0000","","","\android\content\res\PluralRules.java"
"android.content.res.PluralRules.QUANTITY_TWO","false","false","false","true","true","int","0x0004","","","\android\content\res\PluralRules.java"
"android.content.res.PluralRules.ID_OTHER","false","false","false","true","true","int","0x01000004","","","\android\content\res\PluralRules.java"
"android.content.res.PluralRules.en","false","false","true","true","false","PluralRules","","","","\android\content\res\PluralRules.java"
"android.content.res.PluralRules.QUANTITY_ZERO","false","false","false","true","true","int","0x0001","","","\android\content\res\PluralRules.java"
"android.content.res.PluralRules.cs","false","false","true","true","false","PluralRules","","","","\android\content\res\PluralRules.java"
"android.content.res.PluralRules.QUANTITY_ONE","false","false","false","true","true","int","0x0002","","","\android\content\res\PluralRules.java"
"android.widget.BaseExpandableListAdapter.mDataSetObservable","false","false","true","false","true","DataSetObservable","new DataSetObservable()","","","\android\widget\BaseExpandableListAdapter.java"
"android.hardware.SensorEvent.accuracy","true","false","false","false","false","int","","","/**
 * The accuracy of this event.
 * See {@link android.hardware.SensorManager SensorManager}
 * for details.
 */
","\android\hardware\SensorEvent.java"
"android.hardware.SensorEvent.values","true","false","false","false","true","float","","","/**
 * The length and contents of the values array vary depending on which
 * sensor type is being monitored (see also {@link SensorEvent} for a
 * definition of the coordinate system used):
 *
 * <p>{@link android.hardware.Sensor#TYPE_ORIENTATION Sensor.TYPE_ORIENTATION}:<p>
 * All values are angles in degrees.
 *
 * <p>values[0]: Azimuth, angle between the magnetic north direction and
 * the Y axis, around the Z axis (0 to 359).
 * 0=North, 90=East, 180=South, 270=West
 *
 * <p>values[1]: Pitch, rotation around X axis (-180 to 180),
 * with positive values when the z-axis moves <b>toward</b> the y-axis.
 *
 * <p>values[2]: Roll, rotation around Y axis (-90 to 90), with
 * positive values  when the x-axis moves <b>toward</b> the z-axis.
 *
 * <p><b>Important note:</b> For historical reasons the roll angle is
 * positive in the clockwise direction (mathematically speaking, it
 * should be positive in the counter-clockwise direction).
 *
 * <p><b>Note:</b> This definition is different from <b>yaw, pitch and
 * roll</b> used in aviation where the X axis is along the long side of
 * the plane (tail to nose).
 *
 * <p><b>Note:</b> This sensor type exists for legacy reasons, please use
 * {@link android.hardware.SensorManager#getRotationMatrix
 * getRotationMatrix()} in conjunction with
 * {@link android.hardware.SensorManager#remapCoordinateSystem
 * remapCoordinateSystem()} and
 * {@link android.hardware.SensorManager#getOrientation getOrientation()}
 * to compute these values instead.
 *
 * <p>{@link android.hardware.Sensor#TYPE_ACCELEROMETER Sensor.TYPE_ACCELEROMETER}:<p>
 * All values are in SI units (m/s^2) and measure the acceleration applied
 * to the phone minus the force of gravity.
 *
 * <p>values[0]: Acceleration minus Gx on the x-axis
 * <p>values[1]: Acceleration minus Gy on the y-axis
 * <p>values[2]: Acceleration minus Gz on the z-axis
 *
 * <p><u>Examples</u>:
 * <li>When the device lies flat on a table and is pushed on its left
 * side toward the right, the x acceleration value is positive.</li>
 *
 * <li>When the device lies flat on a table, the acceleration value is
 * +9.81, which correspond to the acceleration of the device (0 m/s^2)
 * minus the force of gravity (-9.81 m/s^2).</li>
 *
 * <li>When the device lies flat on a table and is pushed toward the sky
 * with an acceleration of A m/s^2, the acceleration value is equal to
 * A+9.81 which correspond to the acceleration of the
 * device (+A m/s^2) minus the force of gravity (-9.81 m/s^2).</li>
 *
 * <p>{@link android.hardware.Sensor#TYPE_MAGNETIC_FIELD Sensor.TYPE_MAGNETIC_FIELD}:<p>
 * All values are in micro-Tesla (uT) and measure the ambient magnetic
 * field in the X, Y and Z axis.
 *
 * <p>{@link android.hardware.Sensor#TYPE_LIGHT Sensor.TYPE_LIGHT}:<p>
 *
 * <p>values[0]: Ambient light level in SI lux units
 *
 * <p>{@link android.hardware.Sensor#TYPE_PROXIMITY Sensor.TYPE_PROXIMITY}:<p>
 *
 * <p>values[0]: Proximity sensor distance measured in centimeters
 *
 * <p> Note that some proximity sensors only support a binary ""close"" or ""far"" measurement.
 * In this case, the sensor should report its maxRange value in the ""far"" state and a value
 * less than maxRange in the ""near"" state.
 */
","\android\hardware\SensorEvent.java"
"android.hardware.SensorEvent.sensor","true","false","false","false","false","Sensor","","","/**
 * The sensor that generated this event.
 * See {@link android.hardware.SensorManager SensorManager}
 * for details.
 */
","\android\hardware\SensorEvent.java"
"android.hardware.SensorEvent.timestamp","true","false","false","false","false","long","","","/**
 * The time in nanosecond at which the event happened
 */
","\android\hardware\SensorEvent.java"
"android.inputmethodservice.AbstractInputMethodSessionImpl.mRevoked","false","false","false","false","false","boolean","","","","\android\inputmethodservice\AbstractInputMethodService.java"
"android.inputmethodservice.AbstractInputMethodService.mEnabled","false","false","false","false","false","boolean","true","","","\android\inputmethodservice\AbstractInputMethodService.java"
"android.inputmethodservice.AbstractInputMethodService.mDispatcherState","false","false","false","false","true","KeyEvent.DispatcherState","new KeyEvent.DispatcherState()","","","\android\inputmethodservice\AbstractInputMethodService.java"
"android.inputmethodservice.AbstractInputMethodService.mInputMethod","false","false","true","false","false","InputMethod","","","","\android\inputmethodservice\AbstractInputMethodService.java"
"android.inputmethodservice.AbstractInputMethodService.mRevoked","false","false","false","false","false","boolean","","","","\android\inputmethodservice\AbstractInputMethodService.java"
"android.inputmethodservice.AbstractInputMethodSessionImpl.mEnabled","false","false","false","false","false","boolean","true","","","\android\inputmethodservice\AbstractInputMethodService.java"
"android.database.sqlite.SQLiteCompiledSql.nStatement","false","false","false","false","false","int","0","","/* package */
","\android\database\sqlite\SQLiteCompiledSql.java"
"android.database.sqlite.SQLiteCompiledSql.TAG","false","false","true","true","true","String","""SQLiteCompiledSql""","","","\android\database\sqlite\SQLiteCompiledSql.java"
"android.database.sqlite.SQLiteCompiledSql.mStackTrace","false","false","true","false","false","Throwable","null","","","\android\database\sqlite\SQLiteCompiledSql.java"
"android.database.sqlite.SQLiteCompiledSql.mDatabase","false","false","false","false","false","SQLiteDatabase","","","/* package */
","\android\database\sqlite\SQLiteCompiledSql.java"
"android.database.sqlite.SQLiteCompiledSql.mSqlStmt","false","false","true","false","false","String","null","","/**
 * the following are for debugging purposes
 */
","\android\database\sqlite\SQLiteCompiledSql.java"
"android.database.sqlite.SQLiteCompiledSql.nHandle","false","false","false","false","false","int","0","","/* package */
","\android\database\sqlite\SQLiteCompiledSql.java"
"android.database.sqlite.SQLiteCompiledSql.mInUse","false","false","true","false","false","boolean","false","","/**
 * when in cache and is in use, this member is set
 */
","\android\database\sqlite\SQLiteCompiledSql.java"
"android.text.LoginFilter.mAppendInvalid","false","false","true","false","false","boolean","","","// whether to append or ignore invalid characters
","\android\text\LoginFilter.java"
"android.text.UsernameFilterGeneric.mAllowed","false","false","true","true","true","String","""@_-+.""","","// Additional characters
","\android\text\LoginFilter.java"
"android.text.LoginFilter.mAllowed","false","false","true","true","true","String","""@_-+.""","","// Additional characters
","\android\text\LoginFilter.java"
"android.view.OrientationListener.mOrientationEventLis","false","false","true","false","false","OrientationEventListener","","","","\android\view\OrientationListener.java"
"android.view.OrientationListener.ORIENTATION_UNKNOWN","true","false","false","true","true","int","OrientationEventListener.ORIENTATION_UNKNOWN","","/**
 * Returned from onOrientationChanged when the device orientation cannot be determined
 * (typically when the device is in a close to flat position).
 *
 * @see #onOrientationChanged
 */
","\android\view\OrientationListener.java"
"android.view.MenuInflater.defaultItemOrder","false","false","true","true","true","int","0","","","\android\view\MenuInflater.java"
"android.view.MenuState.groupEnabled","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.defaultItemCheckable","false","false","true","true","true","int","0","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.groupVisible","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuState.groupId","false","false","true","false","false","int","","","/*
         * Group state is set on items as they are added, allowing an item to
         * override its group state. (As opposed to set on items at the group end tag.)
         */
","\android\view\MenuInflater.java"
"android.view.MenuState.itemNumericShortcut","false","false","true","false","false","char","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemTitleCondensed","false","false","true","false","false","String","","","","\android\view\MenuInflater.java"
"android.view.MenuState.groupVisible","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.groupEnabled","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.groupId","false","false","true","false","false","int","","","/*
         * Group state is set on items as they are added, allowing an item to
         * override its group state. (As opposed to set on items at the group end tag.)
         */
","\android\view\MenuInflater.java"
"android.view.MenuState.groupOrder","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.mContext","false","false","true","false","false","Context","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.groupCategory","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.defaultItemVisible","false","false","true","true","true","boolean","true","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.menu","false","false","true","false","false","Menu","","","","\android\view\MenuInflater.java"
"android.view.MenuState.defaultItemId","false","false","true","true","true","int","NO_ID","","","\android\view\MenuInflater.java"
"android.view.MenuState.defaultItemOrder","false","false","true","true","true","int","0","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemEnabled","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.XML_ITEM","false","false","true","true","true","String","""item""","","/**
 * Item tag name in XML.
 */
","\android\view\MenuInflater.java"
"android.view.MenuState.itemChecked","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemTitle","false","false","true","false","false","String","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemCategoryOrder","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemNumericShortcut","false","false","true","false","false","char","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.NO_ID","false","false","true","true","true","int","0","","","\android\view\MenuInflater.java"
"android.view.MenuState.defaultItemCategory","false","false","true","true","true","int","0","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemCategoryOrder","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemCheckable","false","false","true","false","false","int","","","/**
 * Sync to attrs.xml enum:
 * - 0: none
 * - 1: all
 * - 2: exclusive
 */
","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemIconResId","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemAdded","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.defaultGroupId","false","false","true","true","true","int","NO_ID","","","\android\view\MenuInflater.java"
"android.view.MenuState.defaultItemEnabled","false","false","true","true","true","boolean","true","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.XML_MENU","false","false","true","true","true","String","""menu""","","/**
 * Menu tag name in XML.
 */
","\android\view\MenuInflater.java"
"android.view.MenuState.itemAlphabeticShortcut","false","false","true","false","false","char","","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemVisible","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuState.defaultItemChecked","false","false","true","true","true","boolean","false","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemIconResId","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemCheckable","false","false","true","false","false","int","","","/**
 * Sync to attrs.xml enum:
 * - 0: none
 * - 1: all
 * - 2: exclusive
 */
","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemVisible","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuState.defaultItemVisible","false","false","true","true","true","boolean","true","","","\android\view\MenuInflater.java"
"android.view.MenuState.defaultGroupId","false","false","true","true","true","int","NO_ID","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemChecked","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemId","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.defaultItemId","false","false","true","true","true","int","NO_ID","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemEnabled","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemTitleCondensed","false","false","true","false","false","String","","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemTitle","false","false","true","false","false","String","","","","\android\view\MenuInflater.java"
"android.view.MenuState.itemId","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.groupCheckable","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuState.groupCheckable","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemAlphabeticShortcut","false","false","true","false","false","char","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.defaultItemChecked","false","false","true","true","true","boolean","false","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.defaultItemCategory","false","false","true","true","true","int","0","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.groupOrder","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.itemAdded","false","false","true","false","false","boolean","","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.XML_GROUP","false","false","true","true","true","String","""group""","","/**
 * Group tag name in XML.
 */
","\android\view\MenuInflater.java"
"android.view.MenuState.defaultItemCheckable","false","false","true","true","true","int","0","","","\android\view\MenuInflater.java"
"android.view.MenuInflater.defaultItemEnabled","false","false","true","true","true","boolean","true","","","\android\view\MenuInflater.java"
"android.view.MenuState.groupCategory","false","false","true","false","false","int","","","","\android\view\MenuInflater.java"
"android.view.MenuState.menu","false","false","true","false","false","Menu","","","","\android\view\MenuInflater.java"
"android.content.ContentProviderProxy.mRemote","false","false","true","false","false","IBinder","","","","\android\content\ContentProviderNative.java"
"android.content.ContentProviderNative.TAG","false","false","true","true","true","String","""ContentProvider""","","","\android\content\ContentProviderNative.java"
"android.text.style.MaskFilterSpan.mFilter","false","false","true","false","false","MaskFilter","","","","\android\text\style\MaskFilterSpan.java"
"android.widget.ZoomButtonsController.mTempIntArray","false","false","true","false","true","int","new int[2]","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mTempRect","false","false","true","false","true","Rect","new Rect()","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mConfigurationChangedReceiver","false","false","true","false","true","BroadcastReceiver","new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
        if (!mIsVisible)
            return;
        mHandler.removeMessages(MSG_POST_CONFIGURATION_CHANGED);
        mHandler.sendEmptyMessage(MSG_POST_CONFIGURATION_CHANGED);
    }
}","","/**
 * Needed to reposition the zoom controls after configuration changes.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mTouchTargetView","false","false","true","false","false","View","","","/**
 * The view (or null) that should receive touch events. This will get set if
 * the touch down hits the container. It will be reset on the touch up.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mContext","false","false","true","false","true","Context","","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mHandler","false","false","true","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        switch(msg.what) {
            case MSG_POST_CONFIGURATION_CHANGED:
                onPostConfigurationChanged();
                break;
            case MSG_DISMISS_ZOOM_CONTROLS:
                setVisible(false);
                break;
            case MSG_POST_SET_VISIBLE:
                if (mOwnerView.getWindowToken() == null) {
                    // Doh, it is still null, just ignore the set visible call
                    Log.e(TAG, ""Cannot make the zoom controller visible if the owner view is "" + ""not attached to a window."");
                } else {
                    setVisible(true);
                }
                break;
        }
    }
}","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.ZOOM_CONTROLS_TIMEOUT","false","false","true","true","true","int","(int) ViewConfiguration.getZoomControlsTimeout()","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mTouchTargetWindowLocation","false","false","true","false","true","int","new int[2]","","/**
 * The {@link #mTouchTargetView}'s location in window, set on touch down.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mConfigurationChangedFilter","false","false","true","false","true","IntentFilter","new IntentFilter(Intent.ACTION_CONFIGURATION_CHANGED)","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mPostedVisibleInitializer","false","false","true","false","false","Runnable","","","/**
 * When showing the zoom, we add the view as a new window. However, there is
 * logic that needs to know the size of the zoom which is determined after
 * it's laid out. Therefore, we must post this logic onto the UI thread so
 * it will be exceuted AFTER the layout. This is the logic.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mContainer","false","false","true","false","true","FrameLayout","","","/**
 * The container that is added as a window.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mCallback","false","false","true","false","false","OnZoomListener","","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mWindowManager","false","false","true","false","true","WindowManager","","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.ZOOM_CONTROLS_TOUCH_PADDING","false","false","true","true","true","int","20","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.MSG_POST_SET_VISIBLE","false","false","true","true","true","int","4","","/**
 * If setVisible(true) is called and the owner view's window token is null,
 * we delay the setVisible(true) call until it is not null.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mOwnerView","false","false","true","false","true","View","","","/**
 * The view that is being zoomed by this zoom controller.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mIsVisible","false","false","true","false","false","boolean","","","/**
 * Whether the container has been added to the window manager.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mContainerLayoutParams","false","false","true","false","false","LayoutParams","","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mControls","false","false","true","false","false","ZoomControls","","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mOwnerViewRawLocation","false","false","true","false","true","int","new int[2]","","/**
 * The location of the owner view on the screen. This is recalculated
 * each time the zoom controller is shown.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mAutoDismissControls","false","false","true","false","false","boolean","true","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.MSG_POST_CONFIGURATION_CHANGED","false","false","true","true","true","int","2","","/**
 * When configuration changes, this is called after the UI thread is idle.
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mReleaseTouchListenerOnUp","false","false","true","false","false","boolean","","","/**
 * If the zoom controller is dismissed but the user is still in a touch
 * interaction, we set this to true. This will ignore all touch events until
 * up/cancel, and then set the owner's touch listener to null.
 * <p>
 * Otherwise, the owner view would get mismatched events (i.e., touch move
 * even though it never got the touch down.)
 */
","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.TAG","false","false","true","true","true","String","""ZoomButtonsController""","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mContainerRawLocation","false","false","true","false","true","int","new int[2]","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.mTouchPaddingScaledSq","false","false","true","false","false","int","","","","\android\widget\ZoomButtonsController.java"
"android.widget.ZoomButtonsController.MSG_DISMISS_ZOOM_CONTROLS","false","false","true","true","true","int","3","","/**
 * Used to delay the zoom controller dismissal.
 */
","\android\widget\ZoomButtonsController.java"
"android.util.DisplayMetrics.DENSITY_MEDIUM","true","false","false","true","true","int","160","","/**
 * Standard quantized DPI for medium-density screens.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.heightPixels","true","false","false","false","false","int","","","/**
 * The absolute height of the display in pixels.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.xdpi","true","false","false","false","false","float","","","/**
 * The exact physical pixels per inch of the screen in the X dimension.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.scaledDensity","true","false","false","false","false","float","","","/**
 * A scaling factor for fonts displayed on the display.  This is the same
 * as {@link #density}, except that it may be adjusted in smaller
 * increments at runtime based on a user preference for the font size.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.densityDpi","true","false","false","false","false","int","","","/**
 * The screen density expressed as dots-per-inch.  May be either
 * {@link #DENSITY_LOW}, {@link #DENSITY_MEDIUM}, or {@link #DENSITY_HIGH}.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.DENSITY_DEVICE","true","false","false","true","true","int","getDeviceDensity()","","/**
 * The device's density.
 * @hide becase eventually this should be able to change while
 * running, so shouldn't be a constant.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.density","true","false","false","false","false","float","","","/**
 * The logical density of the display.  This is a scaling factor for the
 * Density Independent Pixel unit, where one DIP is one pixel on an
 * approximately 160 dpi screen (for example a 240x320, 1.5""x2"" screen),
 * providing the baseline of the system's display. Thus on a 160dpi screen
 * this density value will be 1; on a 120 dpi screen it would be .75; etc.
 *
 * <p>This value does not exactly follow the real screen size (as given by
 * {@link #xdpi} and {@link #ydpi}, but rather is used to scale the size of
 * the overall UI in steps based on gross changes in the display dpi.  For
 * example, a 240x320 screen will have a density of 1 even if its width is
 * 1.8"", 1.3"", etc. However, if the screen resolution is increased to
 * 320x480 but the screen size remained 1.5""x2"" then the density would be
 * increased (probably to 1.5).
 *
 * @see #DENSITY_DEFAULT
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.widthPixels","true","false","false","false","false","int","","","/**
 * The absolute width of the display in pixels.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.ydpi","true","false","false","false","false","float","","","/**
 * The exact physical pixels per inch of the screen in the Y dimension.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.DENSITY_HIGH","true","false","false","true","true","int","240","","/**
 * Standard quantized DPI for high-density screens.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.DENSITY_LOW","true","false","false","true","true","int","120","","/**
 * Standard quantized DPI for low-density screens.
 */
","\android\util\DisplayMetrics.java"
"android.util.DisplayMetrics.DENSITY_DEFAULT","true","false","false","true","true","int","DENSITY_MEDIUM","","/**
 * The reference density used throughout the system.
 */
","\android\util\DisplayMetrics.java"
"android.app.WallpaperManager.MSG_CLEAR_WALLPAPER","false","false","true","true","true","int","1","","","\android\app\WallpaperManager.java"
"android.app.FastBitmapDrawable.mBitmap","false","false","true","false","true","Bitmap","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.DEBUG","false","false","true","true","false","boolean","false","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.sGlobals","false","false","true","true","false","Globals","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.TAG","false","false","true","true","false","String","""WallpaperManager""","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mService","false","false","true","false","false","IWallpaperManager","","","","\android\app\WallpaperManager.java"
"android.app.Globals.MSG_CLEAR_WALLPAPER","false","false","true","true","true","int","1","","","\android\app\WallpaperManager.java"
"android.app.Globals.mHandler","false","false","true","false","true","Handler","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mDrawLeft","false","false","true","false","false","int","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mSync","false","false","true","true","false","Object","new Object()","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.COMMAND_DROP","true","false","false","true","true","String","""android.home.drop""","","/**
 * Command for {@link #sendWallpaperCommand}: reported by the wallpaper
 * host when the user drops an object into an area of the host.  The x
 * and y arguments are the location of the drop.
 */
","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mHandler","false","false","true","false","true","Handler","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.ACTION_LIVE_WALLPAPER_CHOOSER","true","false","false","true","true","String","""android.service.wallpaper.LIVE_WALLPAPER_CHOOSER""","","/**
 * Launch an activity for the user to pick the current global live
 * wallpaper.
 */
","\android\app\WallpaperManager.java"
"android.app.FastBitmapDrawable.mHeight","false","false","true","false","true","int","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mDefaultWallpaper","false","false","true","false","false","Bitmap","","","","\android\app\WallpaperManager.java"
"android.app.Globals.mWallpaper","false","false","true","false","false","Bitmap","","","","\android\app\WallpaperManager.java"
"android.app.Globals.mService","false","false","true","false","false","IWallpaperManager","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mHeight","false","false","true","false","true","int","","","","\android\app\WallpaperManager.java"
"android.app.Globals.mDefaultWallpaper","false","false","true","false","false","Bitmap","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mWallpaper","false","false","true","false","false","Bitmap","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mWallpaperXStep","false","false","true","false","false","float","-1","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mBitmap","false","false","true","false","true","Bitmap","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mDrawTop","false","false","true","false","false","int","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mWidth","false","false","true","false","true","int","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.COMMAND_TAP","true","false","false","true","true","String","""android.wallpaper.tap""","","/**
 * Command for {@link #sendWallpaperCommand}: reported by the wallpaper
 * host when the user taps on an empty area (not performing an action
 * in the host).  The x and y arguments are the location of the tap in
 * screen coordinates.
 */
","\android\app\WallpaperManager.java"
"android.app.FastBitmapDrawable.mWidth","false","false","true","false","true","int","","","","\android\app\WallpaperManager.java"
"android.app.FastBitmapDrawable.mDrawLeft","false","false","true","false","false","int","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mContext","false","false","true","false","true","Context","","","","\android\app\WallpaperManager.java"
"android.app.WallpaperManager.mWallpaperYStep","false","false","true","false","false","float","-1","","","\android\app\WallpaperManager.java"
"android.app.FastBitmapDrawable.mDrawTop","false","false","true","false","false","int","","","","\android\app\WallpaperManager.java"
"android.widget.VideoView.mCanSeekBack","false","false","true","false","false","boolean","","","","\android\widget\VideoView.java"
"android.widget.VideoView.mMediaController","false","false","true","false","false","MediaController","","","","\android\widget\VideoView.java"
"android.widget.VideoView.mSurfaceHeight","false","false","true","false","false","int","","","","\android\widget\VideoView.java"
"android.widget.VideoView.mHeaders","false","false","true","false","false","Map<String,String>","","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_PREPARED","false","false","true","true","true","int","2","","","\android\widget\VideoView.java"
"android.widget.VideoView.mMediaPlayer","false","false","true","false","false","MediaPlayer","null","","","\android\widget\VideoView.java"
"android.widget.VideoView.mDuration","false","false","true","false","false","int","","","","\android\widget\VideoView.java"
"android.widget.VideoView.mCanSeekForward","false","false","true","false","false","boolean","","","","\android\widget\VideoView.java"
"android.widget.VideoView.mPreparedListener","false","false","false","false","false","MediaPlayer.OnPreparedListener","new MediaPlayer.OnPreparedListener() {

    public void onPrepared(MediaPlayer mp) {
        mCurrentState = STATE_PREPARED;
        // Get the capabilities of the player for this stream
        Metadata data = mp.getMetadata(MediaPlayer.METADATA_ALL, MediaPlayer.BYPASS_METADATA_FILTER);
        if (data != null) {
            mCanPause = !data.has(Metadata.PAUSE_AVAILABLE) || data.getBoolean(Metadata.PAUSE_AVAILABLE);
            mCanSeekBack = !data.has(Metadata.SEEK_BACKWARD_AVAILABLE) || data.getBoolean(Metadata.SEEK_BACKWARD_AVAILABLE);
            mCanSeekForward = !data.has(Metadata.SEEK_FORWARD_AVAILABLE) || data.getBoolean(Metadata.SEEK_FORWARD_AVAILABLE);
        } else {
            mCanPause = mCanSeekBack = mCanSeekForward = true;
        }
        if (mOnPreparedListener != null) {
            mOnPreparedListener.onPrepared(mMediaPlayer);
        }
        if (mMediaController != null) {
            mMediaController.setEnabled(true);
        }
        mVideoWidth = mp.getVideoWidth();
        mVideoHeight = mp.getVideoHeight();
        // mSeekWhenPrepared may be changed after seekTo() call
        int seekToPosition = mSeekWhenPrepared;
        if (seekToPosition != 0) {
            seekTo(seekToPosition);
        }
        if (mVideoWidth != 0 && mVideoHeight != 0) {
            // Log.i(""@@@@"", ""video size: "" + mVideoWidth +""/""+ mVideoHeight);
            getHolder().setFixedSize(mVideoWidth, mVideoHeight);
            if (mSurfaceWidth == mVideoWidth && mSurfaceHeight == mVideoHeight) {
                // start the video here instead of in the callback.
                if (mTargetState == STATE_PLAYING) {
                    start();
                    if (mMediaController != null) {
                        mMediaController.show();
                    }
                } else if (!isPlaying() && (seekToPosition != 0 || getCurrentPosition() > 0)) {
                    if (mMediaController != null) {
                        // Show the media controls when we're paused into a video and make 'em stick.
                        mMediaController.show(0);
                    }
                }
            }
        } else {
            // The video size might be reported to us later.
            if (mTargetState == STATE_PLAYING) {
                start();
            }
        }
    }
}","","","\android\widget\VideoView.java"
"android.widget.VideoView.mVideoWidth","false","false","true","false","false","int","","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_RESUME","false","false","true","true","true","int","7","","","\android\widget\VideoView.java"
"android.widget.VideoView.TAG","false","false","true","false","false","String","""VideoView""","","","\android\widget\VideoView.java"
"android.widget.VideoView.mOnCompletionListener","false","false","true","false","false","OnCompletionListener","","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_PLAYBACK_COMPLETED","false","false","true","true","true","int","5","","","\android\widget\VideoView.java"
"android.widget.VideoView.mErrorListener","false","false","true","false","false","MediaPlayer.OnErrorListener","new MediaPlayer.OnErrorListener() {

    public boolean onError(MediaPlayer mp, int framework_err, int impl_err) {
        Log.d(TAG, ""Error: "" + framework_err + "","" + impl_err);
        mCurrentState = STATE_ERROR;
        mTargetState = STATE_ERROR;
        if (mMediaController != null) {
            mMediaController.hide();
        }
        /* If an error handler has been supplied, use it and finish. */
        if (mOnErrorListener != null) {
            if (mOnErrorListener.onError(mMediaPlayer, framework_err, impl_err)) {
                return true;
            }
        }
        /* Otherwise, pop up an error dialog so the user knows that
             * something bad has happened. Only try and pop up the dialog
             * if we're attached to a window. When we're going away and no
             * longer have a window, don't bother showing the user an error.
             */
        if (getWindowToken() != null) {
            Resources r = mContext.getResources();
            int messageId;
            if (framework_err == MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK) {
                messageId = com.android.internal.R.string.VideoView_error_text_invalid_progressive_playback;
            } else {
                messageId = com.android.internal.R.string.VideoView_error_text_unknown;
            }
            new AlertDialog.Builder(mContext).setTitle(com.android.internal.R.string.VideoView_error_title).setMessage(messageId).setPositiveButton(com.android.internal.R.string.VideoView_error_button, new DialogInterface.OnClickListener() {

                public void onClick(DialogInterface dialog, int whichButton) {
                    /* If we get here, there is no onError listener, so
                                         * at least inform them that the video is over.
                                         */
                    if (mOnCompletionListener != null) {
                        mOnCompletionListener.onCompletion(mMediaPlayer);
                    }
                }
            }).setCancelable(false).show();
        }
        return true;
    }
}","","","\android\widget\VideoView.java"
"android.widget.VideoView.mSurfaceWidth","false","false","true","false","false","int","","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_PREPARING","false","false","true","true","true","int","1","","","\android\widget\VideoView.java"
"android.widget.VideoView.mSeekWhenPrepared","false","false","true","false","false","int","","","// recording the seek position while preparing
","\android\widget\VideoView.java"
"android.widget.VideoView.mTargetState","false","false","true","false","false","int","STATE_IDLE","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_SUSPEND","false","false","true","true","true","int","6","","","\android\widget\VideoView.java"
"android.widget.VideoView.mSurfaceHolder","false","false","true","false","false","SurfaceHolder","null","","// All the stuff we need for playing and showing a video
","\android\widget\VideoView.java"
"android.widget.VideoView.mUri","false","false","true","false","false","Uri","","","// settable by the client
","\android\widget\VideoView.java"
"android.widget.VideoView.mBufferingUpdateListener","false","false","true","false","false","MediaPlayer.OnBufferingUpdateListener","new MediaPlayer.OnBufferingUpdateListener() {

    public void onBufferingUpdate(MediaPlayer mp, int percent) {
        mCurrentBufferPercentage = percent;
    }
}","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_IDLE","false","false","true","true","true","int","0","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_PLAYING","false","false","true","true","true","int","3","","","\android\widget\VideoView.java"
"android.widget.VideoView.mStateWhenSuspended","false","false","true","false","false","int","","","// state before calling suspend()
","\android\widget\VideoView.java"
"android.widget.VideoView.mSizeChangedListener","false","false","false","false","false","MediaPlayer.OnVideoSizeChangedListener","new MediaPlayer.OnVideoSizeChangedListener() {

    public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {
        mVideoWidth = mp.getVideoWidth();
        mVideoHeight = mp.getVideoHeight();
        if (mVideoWidth != 0 && mVideoHeight != 0) {
            getHolder().setFixedSize(mVideoWidth, mVideoHeight);
        }
    }
}","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_ERROR","false","false","true","true","true","int","-1","","// all possible internal states
","\android\widget\VideoView.java"
"android.widget.VideoView.mOnPreparedListener","false","false","true","false","false","MediaPlayer.OnPreparedListener","","","","\android\widget\VideoView.java"
"android.widget.VideoView.mCanPause","false","false","true","false","false","boolean","","","","\android\widget\VideoView.java"
"android.widget.VideoView.mCurrentBufferPercentage","false","false","true","false","false","int","","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_PAUSED","false","false","true","true","true","int","4","","","\android\widget\VideoView.java"
"android.widget.VideoView.mSHCallback","false","false","false","false","false","SurfaceHolder.Callback","new SurfaceHolder.Callback() {

    public void surfaceChanged(SurfaceHolder holder, int format, int w, int h) {
        mSurfaceWidth = w;
        mSurfaceHeight = h;
        boolean isValidState = (mTargetState == STATE_PLAYING);
        boolean hasValidSize = (mVideoWidth == w && mVideoHeight == h);
        if (mMediaPlayer != null && isValidState && hasValidSize) {
            if (mSeekWhenPrepared != 0) {
                seekTo(mSeekWhenPrepared);
            }
            start();
            if (mMediaController != null) {
                mMediaController.show();
            }
        }
    }

    public void surfaceCreated(SurfaceHolder holder) {
        mSurfaceHolder = holder;
        // resume() was called before surfaceCreated()
        if (mMediaPlayer != null && mCurrentState == STATE_SUSPEND && mTargetState == STATE_RESUME) {
            mMediaPlayer.setDisplay(mSurfaceHolder);
            resume();
        } else {
            openVideo();
        }
    }

    public void surfaceDestroyed(SurfaceHolder holder) {
        // after we return from this we can't use the surface any more
        mSurfaceHolder = null;
        if (mMediaController != null)
            mMediaController.hide();
        if (mCurrentState != STATE_SUSPEND) {
            release(true);
        }
    }
}","","","\android\widget\VideoView.java"
"android.widget.VideoView.mCompletionListener","false","false","true","false","false","MediaPlayer.OnCompletionListener","new MediaPlayer.OnCompletionListener() {

    public void onCompletion(MediaPlayer mp) {
        mCurrentState = STATE_PLAYBACK_COMPLETED;
        mTargetState = STATE_PLAYBACK_COMPLETED;
        if (mMediaController != null) {
            mMediaController.hide();
        }
        if (mOnCompletionListener != null) {
            mOnCompletionListener.onCompletion(mMediaPlayer);
        }
    }
}","","","\android\widget\VideoView.java"
"android.widget.VideoView.mVideoHeight","false","false","true","false","false","int","","","","\android\widget\VideoView.java"
"android.widget.VideoView.STATE_SUSPEND_UNSUPPORTED","false","false","true","true","true","int","8","","","\android\widget\VideoView.java"
"android.widget.VideoView.mCurrentState","false","false","true","false","false","int","STATE_IDLE","","// of STATE_PAUSED.
","\android\widget\VideoView.java"
"android.widget.VideoView.mOnErrorListener","false","false","true","false","false","OnErrorListener","","","","\android\widget\VideoView.java"
"android.os.RecoverySystem.TAG","false","false","true","true","true","String","""RecoverySystem""","","","\android\os\RecoverySystem.java"
"android.os.RecoverySystem.LOG_FILE_MAX_LENGTH","false","false","true","true","false","int","64 * 1024","","// Length limits for reading files.
","\android\os\RecoverySystem.java"
"android.os.RecoverySystem.RECOVERY_DIR","false","false","true","true","false","File","new File(""/cache/recovery"")","","/**
 * Used to communicate with recovery.  See bootable/recovery/recovery.c.
 */
","\android\os\RecoverySystem.java"
"android.os.RecoverySystem.PUBLISH_PROGRESS_INTERVAL_MS","false","false","true","true","true","long","500","","/**
 * Send progress to listeners no more often than this (in ms).
 */
","\android\os\RecoverySystem.java"
"android.os.RecoverySystem.COMMAND_FILE","false","false","true","true","false","File","new File(RECOVERY_DIR, ""command"")","","","\android\os\RecoverySystem.java"
"android.os.RecoverySystem.LOG_FILE","false","false","true","true","false","File","new File(RECOVERY_DIR, ""log"")","","","\android\os\RecoverySystem.java"
"android.os.RecoverySystem.DEFAULT_KEYSTORE","false","false","true","true","true","File","new File(""/system/etc/security/otacerts.zip"")","","/**
 * Default location of zip file containing public keys (X509
 * certs) authorized to sign OTA updates.
 */
","\android\os\RecoverySystem.java"
"android.content.pm.PermissionInfo.PROTECTION_SIGNATURE","true","false","false","true","true","int","2","","/**
 * System-level value for {@link #protectionLevel}, corresponding
 * to the <code>signature</code> value of
 * {@link android.R.attr#protectionLevel}.
 */
","\android\content\pm\PermissionInfo.java"
"android.content.pm.PermissionInfo.PROTECTION_NORMAL","true","false","false","true","true","int","0","","/**
 * A normal application value for {@link #protectionLevel}, corresponding
 * to the <code>normal</code> value of
 * {@link android.R.attr#protectionLevel}.
 */
","\android\content\pm\PermissionInfo.java"
"android.content.pm.PermissionInfo.PROTECTION_SIGNATURE_OR_SYSTEM","true","false","false","true","true","int","3","","/**
 * System-level value for {@link #protectionLevel}, corresponding
 * to the <code>signatureOrSystem</code> value of
 * {@link android.R.attr#protectionLevel}.
 */
","\android\content\pm\PermissionInfo.java"
"android.content.pm.PermissionInfo.nonLocalizedDescription","true","false","false","false","false","CharSequence","","","/**
 * The description string provided in the AndroidManifest file, if any.  You
 * probably don't want to use this, since it will be null if the description
 * is in a resource.  You probably want
 * {@link PermissionInfo#loadDescription} instead.
 */
","\android\content\pm\PermissionInfo.java"
"android.content.pm.PermissionInfo.CREATOR","true","false","false","true","true","Creator<PermissionInfo>","new Creator<PermissionInfo>() {

    public PermissionInfo createFromParcel(Parcel source) {
        return new PermissionInfo(source);
    }

    public PermissionInfo[] newArray(int size) {
        return new PermissionInfo[size];
    }
}","","","\android\content\pm\PermissionInfo.java"
"android.content.pm.PermissionInfo.PROTECTION_DANGEROUS","true","false","false","true","true","int","1","","/**
 * Dangerous value for {@link #protectionLevel}, corresponding
 * to the <code>dangerous</code> value of
 * {@link android.R.attr#protectionLevel}.
 */
","\android\content\pm\PermissionInfo.java"
"android.content.pm.PermissionInfo.protectionLevel","true","false","false","false","false","int","","","/**
 * The level of access this permission is protecting, as per
 * {@link android.R.attr#protectionLevel}.  Values may be
 * {@link #PROTECTION_NORMAL}, {@link #PROTECTION_DANGEROUS}, or
 * {@link #PROTECTION_SIGNATURE}.
 */
","\android\content\pm\PermissionInfo.java"
"android.content.pm.PermissionInfo.group","true","false","false","false","false","String","","","/**
 * The group this permission is a part of, as per
 * {@link android.R.attr#permissionGroup}.
 */
","\android\content\pm\PermissionInfo.java"
"android.content.pm.PermissionInfo.descriptionRes","true","false","false","false","false","int","","","/**
 * A string resource identifier (in the package's resources) of this
 * permission's description.  From the ""description"" attribute or,
 * if not set, 0.
 */
","\android\content\pm\PermissionInfo.java"
"com.android.internal.content.SelectionBuilder.mSelection","false","false","true","false","false","StringBuilder","new StringBuilder()","","","\com\android\internal\content\SelectionBuilder.java"
"com.android.internal.content.SelectionBuilder.mSelectionArgs","false","false","true","false","false","ArrayList<String>","new ArrayList<String>()","","","\com\android\internal\content\SelectionBuilder.java"
"com.android.internal.view.BaseSurfaceHolder.mCallbacks","true","false","false","false","true","ArrayList<SurfaceHolder.Callback>","new ArrayList<SurfaceHolder.Callback>()","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mRequestedHeight","false","false","false","false","false","int","-1","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mSurfaceFrame","false","false","false","false","true","Rect","new Rect()","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mRequestedType","false","false","false","false","false","int","-1","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mType","false","false","false","false","false","int","-1","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mRequestedFormat","false","false","false","false","false","int","PixelFormat.OPAQUE","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mRequestedWidth","false","false","false","false","false","int","-1","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mSurface","true","false","false","false","true","Surface","new Surface()","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mLastLockTime","false","false","false","false","false","long","0","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.TAG","false","false","true","true","true","String","""BaseSurfaceHolder""","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.DEBUG","false","false","false","true","true","boolean","false","","","\com\android\internal\view\BaseSurfaceHolder.java"
"com.android.internal.view.BaseSurfaceHolder.mSurfaceLock","true","false","false","false","true","ReentrantLock","new ReentrantLock()","","","\com\android\internal\view\BaseSurfaceHolder.java"
"android.pim.vcard.VCardUtils.sUnAcceptableAsciiInV21WordSet","false","false","true","true","true","Set<Character>","new HashSet<Character>(Arrays.asList('[', ']', '=', ':', '.', ',', ' '))","","","\android\pim\vcard\VCardUtils.java"
"android.pim.vcard.VCardUtils.sMobilePhoneLabelSet","false","false","true","true","true","Set<String>","","","","\android\pim\vcard\VCardUtils.java"
"android.pim.vcard.VCardUtils.sKnownPhoneTypeMap_StoI","false","false","true","true","true","Map<String,Integer>","","","","\android\pim\vcard\VCardUtils.java"
"android.pim.vcard.VCardUtils.sKnownPhoneTypesMap_ItoS","false","false","true","true","true","Map<Integer,String>","","","// vCard and current (as of 2009-08-07) Contacts structure.
","\android\pim\vcard\VCardUtils.java"
"android.pim.vcard.VCardUtils.sPhoneTypesUnknownToContactsSet","false","false","true","true","true","Set<String>","","","","\android\pim\vcard\VCardUtils.java"
"android.pim.vcard.VCardUtils.sKnownImPropNameMap_ItoS","false","false","true","true","true","Map<Integer,String>","","","","\android\pim\vcard\VCardUtils.java"
"android.app.WallpaperInfo.mAuthorResource","false","false","false","false","true","int","","","/**
 * Resource identifier for a string indicating the author of the wallpaper.
 */
","\android\app\WallpaperInfo.java"
"android.app.WallpaperInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<WallpaperInfo>","new Parcelable.Creator<WallpaperInfo>() {

    public WallpaperInfo createFromParcel(Parcel source) {
        return new WallpaperInfo(source);
    }

    public WallpaperInfo[] newArray(int size) {
        return new WallpaperInfo[size];
    }
}","","/**
 * Used to make this class parcelable.
 */
","\android\app\WallpaperInfo.java"
"android.app.WallpaperInfo.mSettingsActivityName","false","false","false","false","true","String","","","/**
 * The wallpaper setting activity's name, to
 * launch the setting activity of this wallpaper.
 */
","\android\app\WallpaperInfo.java"
"android.app.WallpaperInfo.TAG","false","false","false","true","true","String","""WallpaperInfo""","","","\android\app\WallpaperInfo.java"
"android.app.WallpaperInfo.mService","false","false","false","false","true","ResolveInfo","","","/**
 * The Service that implements this wallpaper component.
 */
","\android\app\WallpaperInfo.java"
"android.app.WallpaperInfo.mThumbnailResource","false","false","false","false","true","int","","","/**
 * Resource identifier for this wallpaper's thumbnail image.
 */
","\android\app\WallpaperInfo.java"
"android.app.WallpaperInfo.mDescriptionResource","false","false","false","false","true","int","","","/**
 * Resource identifier for a string containing a short description of the wallpaper.
 */
","\android\app\WallpaperInfo.java"
"android.os.IServiceManager.descriptor","false","false","false","true","true","String","""android.os.IServiceManager""","","","\android\os\IServiceManager.java"
"android.os.IServiceManager.CHECK_SERVICES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 4","","","\android\os\IServiceManager.java"
"android.os.IServiceManager.ADD_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 2","","","\android\os\IServiceManager.java"
"android.os.IServiceManager.SET_PERMISSION_CONTROLLER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 5","","","\android\os\IServiceManager.java"
"android.os.IServiceManager.GET_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION","","","\android\os\IServiceManager.java"
"android.os.IServiceManager.LIST_SERVICES_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 3","","","\android\os\IServiceManager.java"
"android.os.IServiceManager.CHECK_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 1","","","\android\os\IServiceManager.java"
"com.android.internal.logging.AndroidHandler.THE_FORMATTER","false","false","true","true","true","Formatter","new Formatter() {

    @Override
    public String format(LogRecord r) {
        Throwable thrown = r.getThrown();
        if (thrown != null) {
            StringWriter sw = new StringWriter();
            PrintWriter pw = new PrintWriter(sw);
            sw.write(r.getMessage());
            sw.write(""\n"");
            thrown.printStackTrace(pw);
            pw.flush();
            return sw.toString();
        } else {
            return r.getMessage();
        }
    }
}","","/**
 * Holds the formatter for all Android log handlers.
 */
","\com\android\internal\logging\AndroidHandler.java"
"android.view.GestureDetector.mHandler","false","false","true","false","true","Handler","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.DOUBLE_TAP_TIMEOUT","false","false","true","true","true","int","ViewConfiguration.getDoubleTapTimeout()","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.SHOW_PRESS","false","false","true","true","true","int","1","","// constants for Message.what used by GestureHandler below
","\android\view\GestureDetector.java"
"android.view.GestureDetector.mCurrentDownEvent","false","false","true","false","false","MotionEvent","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mStillDown","false","false","true","false","false","boolean","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mDoubleTapListener","false","false","true","false","false","OnDoubleTapListener","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.LONG_PRESS","false","false","true","true","true","int","2","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mPreviousUpEvent","false","false","true","false","false","MotionEvent","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mIgnoreMultitouch","false","false","true","false","false","boolean","","","/**
 * True if we are at a target API level of >= Froyo or the developer can
 * explicitly set it. If true, input events with > 1 pointer will be ignored
 * so we can work side by side with multitouch gesture detectors.
 */
","\android\view\GestureDetector.java"
"android.view.GestureDetector.mInLongPress","false","false","true","false","false","boolean","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mBiggerTouchSlopSquare","false","false","true","false","false","int","20 * 20","","// TODO: ViewConfiguration
","\android\view\GestureDetector.java"
"android.view.GestureDetector.mMinimumFlingVelocity","false","false","true","false","false","int","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mAlwaysInTapRegion","false","false","true","false","false","boolean","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mIsLongpressEnabled","false","false","true","false","false","boolean","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mMaximumFlingVelocity","false","false","true","false","false","int","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mVelocityTracker","false","false","true","false","false","VelocityTracker","","","/**
 * Determines speed during touch scrolling
 */
","\android\view\GestureDetector.java"
"android.view.GestureDetector.mAlwaysInBiggerTapRegion","false","false","true","false","false","boolean","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mDoubleTapSlopSquare","false","false","true","false","false","int","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mTouchSlopSquare","false","false","true","false","false","int","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.TAP_TIMEOUT","false","false","true","true","true","int","ViewConfiguration.getTapTimeout()","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mIsDoubleTapping","false","false","true","false","false","boolean","","","/**
 * True when the user is still touching for the second tap (down, move, and
 * up events). Can only be true if there is a double tap listener attached.
 */
","\android\view\GestureDetector.java"
"android.view.GestureDetector.TAP","false","false","true","true","true","int","3","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mListener","false","false","true","false","true","OnGestureListener","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.LONGPRESS_TIMEOUT","false","false","true","true","true","int","ViewConfiguration.getLongPressTimeout()","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mLastMotionY","false","false","true","false","false","float","","","","\android\view\GestureDetector.java"
"android.view.GestureDetector.mLastMotionX","false","false","true","false","false","float","","","","\android\view\GestureDetector.java"
"android.net.WebAddress.mAuthInfo","true","false","false","false","false","String","","","","\android\net\WebAddress.java"
"android.net.WebAddress.MATCH_GROUP_PATH","false","false","false","true","true","int","5","","","\android\net\WebAddress.java"
"android.net.WebAddress.mScheme","true","false","false","false","false","String","","","","\android\net\WebAddress.java"
"android.net.WebAddress.mPath","true","false","false","false","false","String","","","","\android\net\WebAddress.java"
"android.net.WebAddress.mHost","true","false","false","false","false","String","","","","\android\net\WebAddress.java"
"android.net.WebAddress.MATCH_GROUP_HOST","false","false","false","true","true","int","3","","","\android\net\WebAddress.java"
"android.net.WebAddress.sAddressPattern","false","false","false","true","false","Pattern","Pattern.compile(/* scheme    */
""(?:(http|https|file)\\:\\/\\/)?"" + /* authority */
""(?:([-A-Za-z0-9$_.+!*'(),;?&=]+(?:\\:[-A-Za-z0-9$_.+!*'(),;?&=]+)?)@)?"" + /* host      */
""([-"" + GOOD_IRI_CHAR + ""%_]+(?:\\.[-"" + GOOD_IRI_CHAR + ""%_]+)*|\\[[0-9a-fA-F:\\.]+\\])?"" + /* port      */
""(?:\\:([0-9]*))?"" + /* path      */
""(\\/?[^#]*)?"" + /* anchor    */
"".*"", Pattern.CASE_INSENSITIVE)","","","\android\net\WebAddress.java"
"android.net.WebAddress.MATCH_GROUP_AUTHORITY","false","false","false","true","true","int","2","","","\android\net\WebAddress.java"
"android.net.WebAddress.MATCH_GROUP_PORT","false","false","false","true","true","int","4","","","\android\net\WebAddress.java"
"android.net.WebAddress.MATCH_GROUP_SCHEME","false","false","false","true","true","int","1","","","\android\net\WebAddress.java"
"android.net.WebAddress.LOGTAG","false","false","true","true","true","String","""http""","","","\android\net\WebAddress.java"
"android.net.WebAddress.mPort","true","false","false","false","false","int","","","","\android\net\WebAddress.java"
"android.os.CountDownTimer.mCountdownInterval","false","false","true","false","true","long","","","/**
 * The interval in millis that the user receives callbacks
 */
","\android\os\CountDownTimer.java"
"android.os.CountDownTimer.mMillisInFuture","false","false","true","false","true","long","","","/**
 * Millis since epoch when alarm should stop.
 */
","\android\os\CountDownTimer.java"
"android.os.CountDownTimer.mStopTimeInFuture","false","false","true","false","false","long","","","","\android\os\CountDownTimer.java"
"android.os.CountDownTimer.MSG","false","false","true","true","true","int","1","","","\android\os\CountDownTimer.java"
"android.os.CountDownTimer.mHandler","false","false","true","false","false","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        synchronized (CountDownTimer.this) {
            final long millisLeft = mStopTimeInFuture - SystemClock.elapsedRealtime();
            if (millisLeft <= 0) {
                onFinish();
            } else if (millisLeft < mCountdownInterval) {
                // no tick, just delay until done
                sendMessageDelayed(obtainMessage(MSG), millisLeft);
            } else {
                long lastTickStart = SystemClock.elapsedRealtime();
                onTick(millisLeft);
                // take into account user's onTick taking time to execute
                long delay = lastTickStart + mCountdownInterval - SystemClock.elapsedRealtime();
                // complete, skip to next interval
                while (delay < 0) delay += mCountdownInterval;
                sendMessageDelayed(obtainMessage(MSG), delay);
            }
        }
    }
}","","// handles counting down
","\android\os\CountDownTimer.java"
"com.android.internal.content.PackageMonitor.mModifiedPackages","false","false","false","false","false","String","","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.mSomePackagesChanged","false","false","false","false","false","boolean","","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.mRegisteredContext","false","false","false","false","false","Context","","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.PACKAGE_UNCHANGED","true","false","false","true","true","int","0","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.PACKAGE_UPDATING","true","false","false","true","true","int","1","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.sExternalFilt","false","false","false","true","true","IntentFilter","new IntentFilter()","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.PACKAGE_TEMPORARY_CHANGE","true","false","false","true","true","int","2","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.sPackageFilt","false","false","false","true","true","IntentFilter","new IntentFilter()","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.mTempArray","false","false","false","false","false","String","new String[1]","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.mAppearingPackages","false","false","false","false","false","String","","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.mDisappearingPackages","false","false","false","false","false","String","","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.sNonDataFilt","false","false","false","true","true","IntentFilter","new IntentFilter()","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.PACKAGE_PERMANENT_CHANGE","true","false","false","true","true","int","3","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.mUpdatingPackages","false","false","false","false","true","HashSet<String>","new HashSet<String>()","","","\com\android\internal\content\PackageMonitor.java"
"com.android.internal.content.PackageMonitor.mChangeType","false","false","false","false","false","int","","","","\com\android\internal\content\PackageMonitor.java"
"android.view.inputmethod.InputConnection.GET_EXTRACTED_TEXT_MONITOR","true","false","false","true","true","int","0x0001","","/**
 * Flag for use with {@link #getExtractedText} to indicate you would
 * like to receive updates when the extracted text changes.
 */
","\android\view\inputmethod\InputConnection.java"
"android.view.inputmethod.InputConnection.GET_TEXT_WITH_STYLES","false","false","false","true","true","int","0x0001","","/**
 * Flag for use with {@link #getTextAfterCursor} and
 * {@link #getTextBeforeCursor} to have style information returned along
 * with the text.  If not set, you will receive only the raw text.  If
 * set, you may receive a complex CharSequence of both text and style
 * spans.
 */
","\android\view\inputmethod\InputConnection.java"
"android.webkit.WebIconDatabase.RELEASE_ICON","false","false","false","true","true","int","5","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.mMessages","false","false","true","false","false","Vector<Message>","new Vector<Message>()","","// Vector of messages before the WebCore thread is ready
","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.mListener","false","false","true","false","true","IconListener","","","","\android\webkit\WebIconDatabase.java"
"android.webkit.IconResult.mIcon","false","false","true","false","true","Bitmap","","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.REQUEST_ICON","false","false","false","true","true","int","3","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.RELEASE_ICON","false","false","false","true","true","int","5","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.mIcon","false","false","true","false","true","Bitmap","","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.mMessages","false","false","true","false","false","Vector<Message>","new Vector<Message>()","","// Vector of messages before the WebCore thread is ready
","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.OPEN","false","false","false","true","true","int","0","","// Message ids
","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.ICON_RESULT","false","false","true","true","true","int","10","","// Message for dispatching icon request results
","\android\webkit\WebIconDatabase.java"
"android.webkit.IconResult.mListener","false","false","true","false","true","IconListener","","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.mUrl","false","false","true","false","true","String","","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.mHandler","false","false","true","false","false","Handler","","","// Actual handler that runs in WebCore thread
","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.mIcon","false","false","true","false","true","Bitmap","","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.REQUEST_ICON","false","false","false","true","true","int","3","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.LOGTAG","false","false","true","true","true","String","""WebIconDatabase""","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.RETAIN_ICON","false","false","false","true","true","int","4","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.BULK_REQUEST_ICON","false","false","false","true","true","int","6","","","\android\webkit\WebIconDatabase.java"
"android.webkit.IconResult.mUrl","false","false","true","false","true","String","","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.REMOVE_ALL","false","false","false","true","true","int","2","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.CLOSE","false","false","false","true","true","int","1","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.sIconDatabase","false","false","true","true","false","WebIconDatabase","","","// Global instance of a WebIconDatabase
","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.ICON_RESULT","false","false","true","true","true","int","10","","// Message for dispatching icon request results
","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.CLOSE","false","false","false","true","true","int","1","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.mUrl","false","false","true","false","true","String","","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.BULK_REQUEST_ICON","false","false","false","true","true","int","6","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.OPEN","false","false","false","true","true","int","0","","// Message ids
","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.mEventHandler","false","false","true","false","true","EventHandler","new EventHandler()","","// ready.
","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.REMOVE_ALL","false","false","false","true","true","int","2","","","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.RETAIN_ICON","false","false","false","true","true","int","4","","","\android\webkit\WebIconDatabase.java"
"android.webkit.EventHandler.mHandler","false","false","true","false","false","Handler","","","// Actual handler that runs in WebCore thread
","\android\webkit\WebIconDatabase.java"
"android.webkit.WebIconDatabase.mListener","false","false","true","false","true","IconListener","","","","\android\webkit\WebIconDatabase.java"
"android.service.urlrenderer.InternalCallback.mCallback","false","false","true","false","true","IUrlRendererCallback","","","","\android\service\urlrenderer\UrlRendererService.java"
"android.service.urlrenderer.UrlRendererService.TAG","false","false","false","true","true","String","""UrlRendererService""","","","\android\service\urlrenderer\UrlRendererService.java"
"android.service.urlrenderer.UrlRendererService.mCallback","false","false","true","false","true","IUrlRendererCallback","","","","\android\service\urlrenderer\UrlRendererService.java"
"android.service.urlrenderer.UrlRendererService.mBinderInterface","false","false","true","false","true","IUrlRendererService.Stub","new IUrlRendererService.Stub() {

    public void render(List<String> urls, int width, int height, IUrlRendererCallback cb) {
        processRequest(urls, width, height, new InternalCallback(cb));
    }
}","","","\android\service\urlrenderer\UrlRendererService.java"
"android.service.urlrenderer.UrlRendererService.SERVICE_INTERFACE","true","false","false","true","true","String","""android.service.urlrenderer.UrlRendererService""","@SdkConstant(SdkConstantType.SERVICE_ACTION)","/**
 * The {@link Intent} that must be declared as handled by the service.
 */
","\android\service\urlrenderer\UrlRendererService.java"
"android.widget.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.NO_OP_CHANGE_LISTENER","false","false","true","true","true","OnTimeChangedListener","new OnTimeChangedListener() {

    public void onTimeChanged(TimePicker view, int hourOfDay, int minute) {
    }
}","","/**
 * A no-op callback used in the constructor to avoid null checks
 * later in the code.
 */
","\android\widget\TimePicker.java"
"android.widget.TimePicker.mIs24HourView","false","false","true","false","false","Boolean","false","","","\android\widget\TimePicker.java"
"android.widget.SavedState.mMinute","false","false","true","false","true","int","","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.mPmText","false","false","true","false","true","String","","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.mCurrentMinute","false","false","true","false","false","int","0","","// 0-59
","\android\widget\TimePicker.java"
"android.widget.TimePicker.mIsAm","false","false","true","false","false","boolean","","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.mMinute","false","false","true","false","true","int","","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.mCurrentHour","false","false","true","false","false","int","0","","// 0-23
","\android\widget\TimePicker.java"
"android.widget.TimePicker.mAmPmButton","false","false","true","false","true","Button","","","","\android\widget\TimePicker.java"
"android.widget.SavedState.mHour","false","false","true","false","true","int","","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.mMinutePicker","false","false","true","false","true","NumberPicker","","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.mAmText","false","false","true","false","true","String","","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.mHour","false","false","true","false","true","int","","","","\android\widget\TimePicker.java"
"android.widget.TimePicker.mOnTimeChangedListener","false","false","true","false","false","OnTimeChangedListener","","","// callbacks
","\android\widget\TimePicker.java"
"android.widget.TimePicker.mHourPicker","false","false","true","false","true","NumberPicker","","","// ui components
","\android\widget\TimePicker.java"
"android.bluetooth.BluetoothPbap.STATE_CONNECTING","true","false","false","true","true","int","1","","/**
 * Connection attempt in progress
 */
","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.RESULT_FAILURE","true","false","false","true","true","int","0","","","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.mConnection","false","false","true","false","false","ServiceConnection","new ServiceConnection() {

    public void onServiceConnected(ComponentName className, IBinder service) {
        if (DBG)
            log(""Proxy object connected"");
        mService = IBluetoothPbap.Stub.asInterface(service);
        if (mServiceListener != null) {
            mServiceListener.onServiceConnected();
        }
    }

    public void onServiceDisconnected(ComponentName className) {
        if (DBG)
            log(""Proxy object disconnected"");
        mService = null;
        if (mServiceListener != null) {
            mServiceListener.onServiceDisconnected();
        }
    }
}","","","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.PBAP_PREVIOUS_STATE","true","false","false","true","true","String","""android.bluetooth.pbap.intent.PBAP_PREVIOUS_STATE""","","/**
 * int extra for PBAP_STATE_CHANGED_ACTION
 */
","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.DBG","false","false","true","true","true","boolean","false","","","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.mContext","false","false","true","false","true","Context","","","","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.mService","false","false","true","false","false","IBluetoothPbap","","","","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.RESULT_CANCELED","true","false","false","true","true","int","2","","/**
 * Connection canceled before completion.
 */
","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.PBAP_STATE_CHANGED_ACTION","true","false","false","true","true","String","""android.bluetooth.pbap.intent.action.PBAP_STATE_CHANGED""","","/**
 * Indicates the state of an pbap connection state has changed.
 * This intent will always contain PBAP_STATE, PBAP_PREVIOUS_STATE and
 * BluetoothIntent.ADDRESS extras.
 */
","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.PBAP_STATE","true","false","false","true","true","String","""android.bluetooth.pbap.intent.PBAP_STATE""","","/**
 * int extra for PBAP_STATE_CHANGED_ACTION
 */
","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.STATE_DISCONNECTED","true","false","false","true","true","int","0","","/**
 * No client currently connected
 */
","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.RESULT_SUCCESS","true","false","false","true","true","int","1","","","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.TAG","false","false","true","true","true","String","""BluetoothPbap""","","","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.STATE_CONNECTED","true","false","false","true","true","int","2","","/**
 * Client is currently connected
 */
","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.mServiceListener","false","false","true","false","true","ServiceListener","","","","\android\bluetooth\BluetoothPbap.java"
"android.bluetooth.BluetoothPbap.STATE_ERROR","true","false","false","true","true","int","-1","","/**
 * There was an error trying to obtain the state
 */
","\android\bluetooth\BluetoothPbap.java"
"com.android.internal.http.multipart.FilePartSource.fileName","false","false","true","false","false","String","null","","/**
 * File part file name.
 */
","\com\android\internal\http\multipart\FilePartSource.java"
"com.android.internal.http.multipart.FilePartSource.file","false","false","true","false","false","File","null","","/**
 * File part file.
 */
","\com\android\internal\http\multipart\FilePartSource.java"
"android.app.H.PROFILER_CONTROL","true","false","false","true","true","int","127","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DEBUG_BROADCAST","false","false","true","true","true","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DESTROY_ACTIVITY","true","false","false","true","true","int","109","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mAppDir","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.NEW_INTENT","true","false","false","true","true","int","112","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.instrumentationName","false","false","false","false","false","ComponentName","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mUnregisterLocation","false","false","false","false","false","RuntimeException","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mReceiver","false","false","false","false","true","BroadcastReceiver","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.description","false","false","false","false","false","CharSequence","","","","\android\app\ActivityThread.java"
"android.app.ProviderRecord.mName","false","false","false","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.SERVICE_ARGS","true","false","false","true","true","int","115","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mUnregisterLocation","false","false","false","false","false","RuntimeException","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.instrumentationWatcher","false","false","false","false","false","IInstrumentationWatcher","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mConfiguration","false","false","false","false","false","Configuration","","","","\android\app\ActivityThread.java"
"android.app.ContextCleanupInfo.who","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mBaseClassLoader","false","false","true","false","true","ClassLoader","","","","\android\app\ActivityThread.java"
"android.app.H.LAUNCH_ACTIVITY","true","false","false","true","true","int","100","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mBaseClassLoader","false","false","true","false","true","ClassLoader","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.resultCode","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mInstrumentation","false","false","false","false","true","Instrumentation","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.paused","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.activityInfo","false","false","false","false","false","ActivityInfo","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mSecurityViolation","false","false","true","false","true","boolean","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mCommand","false","false","false","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.activity","false","false","false","false","false","Activity","","","","\android\app\ActivityThread.java"
"android.app.H.STOP_ACTIVITY_HIDE","true","false","false","true","true","int","104","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mName","false","false","false","false","true","ComponentName","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mIIntentReceiver","false","false","false","false","true","IIntentReceiver.Stub","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mUnregisteredReceivers","false","false","true","false","true","HashMap<Context,HashMap<BroadcastReceiver,ReceiverDispatcher>>","new HashMap<Context, HashMap<BroadcastReceiver, ReceiverDispatcher>>()","","","\android\app\ActivityThread.java"
"android.app.ReceiverData.intent","false","false","false","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mDisplayMetrics","false","false","false","false","false","DisplayMetrics","null","","","\android\app\ActivityThread.java"
"android.app.H.BIND_SERVICE","true","false","false","true","true","int","121","","","\android\app\ActivityThread.java"
"android.app.ProviderRecord.mProvider","false","false","false","false","true","IContentProvider","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.window","false","false","false","false","false","Window","","","","\android\app\ActivityThread.java"
"android.app.BindServiceData.intent","false","false","false","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mCurData","false","false","true","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.ONE_COUNT_COLUMN","false","false","true","true","true","String","""%17s %8d""","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.isForward","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mFlags","false","false","true","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.STOP_ACTIVITY_SHOW","true","false","false","true","true","int","103","","","\android\app\ActivityThread.java"
"android.app.H.ACTIVITY_CONFIGURATION_CHANGED","true","false","false","true","true","int","125","","","\android\app\ActivityThread.java"
"android.app.H.UNBIND_SERVICE","true","false","false","true","true","int","122","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mIServiceConnection","false","false","true","false","true","InnerConnection","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.REMOVE_PROVIDER","true","false","false","true","true","int","131","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mUnregisteredReceivers","false","false","true","false","true","HashMap<Context,HashMap<BroadcastReceiver,ReceiverDispatcher>>","new HashMap<Context, HashMap<BroadcastReceiver, ReceiverDispatcher>>()","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.nextIdle","false","false","false","false","false","ActivityRecord","","","","\android\app\ActivityThread.java"
"android.app.InnerReceiver.mStrongRef","false","false","false","false","true","ReceiverDispatcher","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mActiveConnections","false","false","true","false","true","HashMap<ComponentName,ConnectionInfo>","new HashMap<ComponentName, ConnectionInfo>()","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mCurOrdered","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mDataDir","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.BIND_APPLICATION","true","false","false","true","true","int","110","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.startId","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.parent","false","false","false","false","false","Activity","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mClassLoader","false","false","true","false","false","ClassLoader","","","","\android\app\ActivityThread.java"
"android.app.CreateServiceData.token","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.debugMode","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.processName","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.activityInfo","false","false","false","false","false","ActivityInfo","","","","\android\app\ActivityThread.java"
"android.app.StopInfo.thumbnail","false","false","false","false","false","Bitmap","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mServices","false","false","true","false","true","HashMap<Context,HashMap<ServiceConnection,ServiceDispatcher>>","new HashMap<Context, HashMap<ServiceConnection, ServiceDispatcher>>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.CONFIGURATION_CHANGED","true","false","false","true","true","int","118","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mInstrumentationAppPackage","false","false","false","false","false","String","null","","","\android\app\ActivityThread.java"
"android.app.DumpServiceInfo.fd","false","false","false","false","false","FileDescriptor","","","","\android\app\ActivityThread.java"
"android.app.ContextCleanupInfo.what","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mResDir","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mProvider","false","false","false","false","true","IContentProvider","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.createdConfig","false","false","false","false","false","Configuration","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mLocation","false","false","true","false","true","ServiceConnectionLeaked","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mCurCode","false","false","true","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mActiveConnections","false","false","true","false","true","HashMap<ComponentName,ConnectionInfo>","new HashMap<ComponentName, ConnectionInfo>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DEBUG","false","false","true","true","true","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mCurCode","false","false","true","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.context","false","false","false","false","false","ContextImpl","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.MIN_TIME_BETWEEN_GCS","false","false","true","true","true","long","5 * 1000","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.hideForNow","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.config","false","false","false","false","false","Configuration","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mUnbindLocation","false","false","true","false","false","RuntimeException","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mName","false","false","false","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.profileFile","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.Args.mCurSticky","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.count","true","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.intent","false","false","false","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.pendingResults","false","false","false","false","false","List<ResultInfo>","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mCurSticky","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mConnection","false","false","true","false","true","ServiceConnection","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.instrumentationName","false","false","false","false","false","ComponentName","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.profileFile","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.H.DESTROY_ACTIVITY","true","false","false","true","true","int","109","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.HEAP_COLUMN","false","false","true","true","true","String","""%17s %8s %8s %8s %8s""","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mClassLoader","false","false","true","false","false","ClassLoader","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.deathMonitor","false","false","false","false","false","IBinder.DeathRecipient","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mDispatcher","false","false","false","false","true","WeakReference<ReceiverDispatcher>","","","","\android\app\ActivityThread.java"
"android.app.H.GC_WHEN_IDLE","true","false","false","true","true","int","120","","","\android\app\ActivityThread.java"
"android.app.H.STOP_SERVICE","true","false","false","true","true","int","116","","","\android\app\ActivityThread.java"
"android.app.RunConnection.mName","false","false","false","false","true","ComponentName","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mReceiver","false","false","false","false","true","BroadcastReceiver","","","","\android\app\ActivityThread.java"
"android.app.ApplicationThread.TWO_COUNT_COLUMNS","false","false","true","true","true","String","""%17s %8d %17s %8d""","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mCurSticky","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mCurMap","false","false","true","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mCurMap","false","false","true","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mAppDir","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.PATTERN_SEMICOLON","false","false","true","true","true","Pattern","Pattern.compile("";"")","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.paused","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.PAUSE_ACTIVITY","true","false","false","true","true","int","101","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.resultData","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.who","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.state","false","false","false","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.CreateBackupAgentData.appInfo","false","false","false","false","false","ApplicationInfo","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mResources","false","false","true","false","false","Resources","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.providers","false","false","false","false","false","List<ProviderInfo>","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.path","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.BIND_SERVICE","true","false","false","true","true","int","121","","","\android\app\ActivityThread.java"
"android.app.H.DUMP_SERVICE","true","false","false","true","true","int","123","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mLocation","false","false","false","false","true","IntentReceiverLeaked","","","","\android\app\ActivityThread.java"
"android.app.StopInfo.description","false","false","false","false","false","CharSequence","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.binder","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mPackages","false","false","false","false","true","HashMap<String,WeakReference<PackageInfo>>","new HashMap<String, WeakReference<PackageInfo>>()","","// seen, not removing entries from this map.
","\android\app\ActivityThread.java"
"android.app.PackageInfo.mIncludeCode","false","false","true","false","true","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.SEND_RESULT","true","false","false","true","true","int","108","","","\android\app\ActivityThread.java"
"android.app.ApplicationThread.DB_INFO_FORMAT","false","false","true","true","true","String","""  %8d %8d %10d  %s""","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.debugMode","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mCurOrdered","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.H.HIDE_WINDOW","true","false","false","true","true","int","106","","","\android\app\ActivityThread.java"
"android.app.NewIntentData.intents","false","false","false","false","false","List<Intent>","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.CREATE_BACKUP_AGENT","true","false","false","true","true","int","128","","","\android\app\ActivityThread.java"
"android.app.H.CONFIGURATION_CHANGED","true","false","false","true","true","int","118","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.dumped","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.LAUNCH_ACTIVITY","true","false","false","true","true","int","100","","","\android\app\ActivityThread.java"
"android.app.ApplicationThread.HEAP_COLUMN","false","false","true","true","true","String","""%17s %8s %8s %8s %8s""","","","\android\app\ActivityThread.java"
"android.app.ServiceArgsData.startId","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.instrumentationArgs","false","false","false","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mUnboundServices","false","false","true","false","true","HashMap<Context,HashMap<ServiceConnection,ServiceDispatcher>>","new HashMap<Context, HashMap<ServiceConnection, ServiceDispatcher>>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.GC_WHEN_IDLE","true","false","false","true","true","int","120","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mResDir","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ServiceArgsData.token","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.H.ENABLE_JIT","true","false","false","true","true","int","132","","","\android\app\ActivityThread.java"
"android.app.H.BIND_APPLICATION","true","false","false","true","true","int","110","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mPackageName","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DESTROY_BACKUP_AGENT","true","false","false","true","true","int","129","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mIIntentReceiver","false","false","false","false","true","IIntentReceiver.Stub","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.LOW_MEMORY","true","false","false","true","true","int","124","","","\android\app\ActivityThread.java"
"android.app.ApplicationThread.ONE_COUNT_COLUMN","false","false","true","true","true","String","""%17s %8d""","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.intents","false","false","false","false","false","List<Intent>","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.parent","false","false","false","false","false","Activity","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.warned","false","false","true","true","false","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mInstrumentation","false","false","false","false","false","Instrumentation","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.CREATE_SERVICE","true","false","false","true","true","int","114","","","\android\app\ActivityThread.java"
"android.app.H.SUICIDE","true","false","false","true","true","int","130","","","\android\app\ActivityThread.java"
"android.app.H.SHOW_WINDOW","true","false","false","true","true","int","105","","","\android\app\ActivityThread.java"
"android.app.ReceiverData.resultData","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.info","false","false","false","false","false","PackageInfo","","","","\android\app\ActivityThread.java"
"android.app.H.EXIT_APPLICATION","true","false","false","true","true","int","111","","","\android\app\ActivityThread.java"
"android.app.H.STOP_ACTIVITY_SHOW","true","false","false","true","true","int","103","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.pendingIntents","false","false","false","false","false","List<Intent>","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mStrongRef","false","false","false","false","true","ReceiverDispatcher","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.PROFILER_CONTROL","true","false","false","true","true","int","127","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DEBUG_RESULTS","false","false","true","true","true","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mResourcePackages","false","false","false","false","true","HashMap<String,WeakReference<PackageInfo>>","new HashMap<String, WeakReference<PackageInfo>>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.TAG","false","false","true","true","true","String","""ActivityThread""","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mCompatibilityInfo","false","false","true","false","false","CompatibilityInfo","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mBoundApplication","false","false","false","false","false","AppBindData","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.deathMonitor","false","false","false","false","false","IBinder.DeathRecipient","","","","\android\app\ActivityThread.java"
"android.app.CreateServiceData.info","false","false","false","false","false","ServiceInfo","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.restrictedBackupMode","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.H.LOW_MEMORY","true","false","false","true","true","int","124","","","\android\app\ActivityThread.java"
"android.app.AppBindData.handlingProfiling","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mAllApplications","false","false","false","false","true","ArrayList<Application>","new ArrayList<Application>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.fd","false","false","false","false","false","ParcelFileDescriptor","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mLocalProvider","false","false","false","false","true","ContentProvider","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mNewActivities","false","false","false","false","false","ActivityRecord","null","","// be reported when next we idle.
","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.deathMonitor","false","false","false","false","false","IBinder.DeathRecipient","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DB_INFO_FORMAT","false","false","true","true","true","String","""  %8d %8d %10d  %s""","","","\android\app\ActivityThread.java"
"android.app.H.RESUME_ACTIVITY","true","false","false","true","true","int","107","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mCurIntent","false","false","true","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mGcIdlerScheduled","false","false","false","false","false","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.hideForNow","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.ident","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.H.RECEIVER","true","false","false","true","true","int","113","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.startsNotResumed","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mGcIdler","false","false","false","false","true","GcIdler","new GcIdler()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.backupMode","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ContextCleanupInfo.context","false","false","false","false","false","ContextImpl","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mInstrumentationAppDir","false","false","false","false","false","String","null","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mContext","false","false","false","false","true","Context","","","","\android\app\ActivityThread.java"
"android.app.ResourcesKey.mResDir","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mDied","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.H.CREATE_BACKUP_AGENT","true","false","false","true","true","int","128","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.RELAUNCH_ACTIVITY","true","false","false","true","true","int","126","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mActiveResources","false","false","false","false","true","HashMap<ResourcesKey,WeakReference<Resources>>","new HashMap<ResourcesKey, WeakReference<Resources>>()","","","\android\app\ActivityThread.java"
"android.app.CreateBackupAgentData.backupMode","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mName","false","false","false","false","true","ComponentName","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mThumbnailHeight","false","false","true","false","false","int","-1","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.token","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.H.DESTROY_BACKUP_AGENT","true","false","false","true","true","int","129","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.PAUSE_ACTIVITY_FINISHING","true","false","false","true","true","int","102","","","\android\app\ActivityThread.java"
"android.app.AppBindData.instrumentationArgs","false","false","false","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mIIntentReceiver","false","false","false","false","true","IIntentReceiver.Stub","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.info","false","false","false","false","false","PackageInfo","","","","\android\app\ActivityThread.java"
"android.app.DumpServiceInfo.args","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.H.RELAUNCH_ACTIVITY","true","false","false","true","true","int","126","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mRegistered","false","false","false","false","true","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.lastNonConfigurationInstance","false","false","false","false","false","Object","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mConnection","false","false","true","false","true","ServiceConnection","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mActivityThread","false","false","true","false","true","Handler","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DEBUG_CONFIGURATION","false","false","true","true","true","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.startsNotResumed","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.packageInfo","false","false","false","false","false","PackageInfo","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.pendingIntents","false","false","false","false","false","List<Intent>","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mResConfiguration","false","false","false","false","false","Configuration","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mCurMap","false","false","true","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.createdConfig","false","false","false","false","false","Configuration","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mActivityThread","false","false","true","false","true","Handler","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DEBUG_BACKUP","false","false","true","true","true","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mService","false","false","false","false","true","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ResourcesKey.mHash","false","false","true","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.ApplicationThread.ACTIVITY_THREAD_CHECKIN_VERSION","false","false","true","true","true","int","1","","// Formatting for checkin service - update version if row format changes
","\android\app\ActivityThread.java"
"android.app.ActivityThread.mSystemThread","false","false","false","false","false","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mStrongRef","false","false","false","false","true","ReceiverDispatcher","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.binder","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ReceiverData.resultAbort","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mProviderRefCountMap","false","false","false","false","true","HashMap<IBinder,ProviderRefCount>","new HashMap<IBinder, ProviderRefCount>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.resultAbort","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mApplicationInfo","false","false","true","false","true","ApplicationInfo","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mSharedLibraries","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.stopped","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mClientCount","false","false","false","false","false","int","0","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mThumbnailWidth","false","false","true","false","false","int","-1","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mApplicationInfo","false","false","true","false","true","ApplicationInfo","","","","\android\app\ActivityThread.java"
"android.app.ReceiverData.resultExtras","false","false","false","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.EXIT_APPLICATION","true","false","false","true","true","int","111","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mJitEnabled","false","false","false","false","false","boolean","false","","","\android\app\ActivityThread.java"
"android.app.ConnectionInfo.deathMonitor","false","false","false","false","false","IBinder.DeathRecipient","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.lastNonConfigurationChildInstances","false","false","false","false","false","HashMap<String,Object>","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mSharedLibraries","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mDied","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.H.CLEAN_UP_CONTEXT","true","false","false","true","true","int","119","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mCurData","false","false","true","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.CreateServiceData.intent","false","false","false","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mH","false","false","false","false","true","H","new H()","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mActiveConnections","false","false","true","false","true","HashMap<ComponentName,ConnectionInfo>","new HashMap<ComponentName, ConnectionInfo>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.instrumentationWatcher","false","false","false","false","false","IInstrumentationWatcher","","","","\android\app\ActivityThread.java"
"android.app.BindServiceData.rebind","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mScale","false","false","true","false","true","float","","","","\android\app\ActivityThread.java"
"android.app.ProviderRefCount.count","true","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DUMP_SERVICE","true","false","false","true","true","int","123","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mContext","false","false","true","false","true","Context","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mLocation","false","false","true","false","true","ServiceConnectionLeaked","","","","\android\app\ActivityThread.java"
"android.app.ReceiverData.resultCode","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.ident","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mDispatcher","false","false","false","false","true","WeakReference<ServiceDispatcher>","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mReceivers","false","false","true","false","true","HashMap<Context,HashMap<BroadcastReceiver,ReceiverDispatcher>>","new HashMap<Context, HashMap<BroadcastReceiver, ReceiverDispatcher>>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.what","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mDisplay","false","false","false","false","false","Display","null","","","\android\app\ActivityThread.java"
"android.app.ResultData.token","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.Args.mCurIntent","false","false","true","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.WarningContextClassLoader.warned","false","false","true","true","false","boolean","false","","","\android\app\ActivityThread.java"
"android.app.Args.mCurData","false","false","true","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.sync","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mClientCount","false","false","false","false","false","int","0","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mReceivers","false","false","true","false","true","HashMap<Context,HashMap<BroadcastReceiver,ReceiverDispatcher>>","new HashMap<Context, HashMap<BroadcastReceiver, ReceiverDispatcher>>()","","","\android\app\ActivityThread.java"
"android.app.ReceiverData.sync","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mActivityThread","false","false","false","false","true","Handler","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mActivities","false","false","false","false","true","HashMap<IBinder,ActivityRecord>","new HashMap<IBinder, ActivityRecord>()","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.token","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mApplication","false","false","true","false","false","Application","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mServices","false","false","false","false","true","HashMap<IBinder,Service>","new HashMap<IBinder, Service>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.DISPATCH_PACKAGE_BROADCAST","true","false","false","true","true","int","133","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.SUICIDE","true","false","false","true","true","int","130","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mDataDirFile","false","false","true","false","true","File","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.stopped","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mContext","false","false","true","false","true","Context","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mLooper","false","false","false","false","true","Looper","Looper.myLooper()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mBackupAgents","false","false","false","false","true","HashMap<String,BackupAgent>","new HashMap<String, BackupAgent>()","","// set of instantiated backup agents, keyed by package name
","\android\app\ActivityThread.java"
"android.app.PackageInfo.mIServiceConnection","false","false","true","false","true","InnerConnection","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mReceiver","false","false","false","false","true","BroadcastReceiver","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mCurIntent","false","false","true","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.STOP_SERVICE","true","false","false","true","true","int","116","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mUnbindLocation","false","false","true","false","false","RuntimeException","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mCompatibilityInfo","false","false","true","false","false","CompatibilityInfo","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.thumbnail","false","false","false","false","false","Bitmap","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.activity","false","false","false","false","false","Activity","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.localLOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.RESUME_ACTIVITY","true","false","false","true","true","int","107","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mInitialApplication","false","false","false","false","false","Application","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.STOP_ACTIVITY_HIDE","true","false","false","true","true","int","104","","","\android\app\ActivityThread.java"
"android.app.RunConnection.mCommand","false","false","false","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mDispatcher","false","false","false","false","true","WeakReference<ServiceDispatcher>","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mPackageName","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.Args.mCurCode","false","false","true","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.state","false","false","false","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.processName","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mCurIntent","false","false","true","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mCommand","false","false","false","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mCurOrdered","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mDispatcher","false","false","false","false","true","WeakReference<ServiceDispatcher>","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.warned","false","false","true","true","false","boolean","false","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mInstrumentation","false","false","false","false","true","Instrumentation","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mUnregisterLocation","false","false","false","false","false","RuntimeException","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mActivityThread","false","false","true","false","true","Handler","","","","\android\app\ActivityThread.java"
"android.app.RunConnection.mService","false","false","false","false","true","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mLocalProviders","false","false","false","false","true","HashMap<IBinder,ProviderRecord>","new HashMap<IBinder, ProviderRecord>()","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.sThreadLocal","false","false","false","true","true","ThreadLocal","new ThreadLocal()","","","\android\app\ActivityThread.java"
"android.app.InnerConnection.mDispatcher","false","false","false","false","true","WeakReference<ServiceDispatcher>","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mInstrumentedAppDir","false","false","false","false","false","String","null","","","\android\app\ActivityThread.java"
"android.app.ResultData.results","false","false","false","false","false","List<ResultInfo>","","","","\android\app\ActivityThread.java"
"android.app.Args.mCurOrdered","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.UNBIND_SERVICE","true","false","false","true","true","int","122","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mDataDirFile","false","false","true","false","true","File","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.REQUEST_THUMBNAIL","true","false","false","true","true","int","117","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.SQLITE_MEM_RELEASED_EVENT_LOG_TAG","false","false","true","true","true","int","75003","","","\android\app\ActivityThread.java"
"android.app.ResourcesKey.mScale","false","false","true","false","true","float","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.LOG_ON_RESUME_CALLED","false","false","true","true","true","int","30022","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mPendingConfiguration","false","false","false","false","false","Configuration","null","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.appInfo","false","false","false","false","false","ApplicationInfo","","","","\android\app\ActivityThread.java"
"android.app.DumpServiceInfo.dumped","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.ENABLE_JIT","true","false","false","true","true","int","132","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.restrictedBackupMode","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.isForward","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mCurCode","false","false","true","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.lastNonConfigurationChildInstances","false","false","false","false","false","HashMap<String,Object>","","","","\android\app\ActivityThread.java"
"android.app.ProfilerControlData.path","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.H.REQUEST_THUMBNAIL","true","false","false","true","true","int","117","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.providers","false","false","false","false","false","List<ProviderInfo>","","","","\android\app\ActivityThread.java"
"android.app.H.SERVICE_ARGS","true","false","false","true","true","int","115","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mHash","false","false","true","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.DeathMonitor.mService","false","false","false","false","true","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ProviderRecord.mLocalProvider","false","false","false","false","true","ContentProvider","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mUnboundServices","false","false","true","false","true","HashMap<Context,HashMap<ServiceConnection,ServiceDispatcher>>","new HashMap<Context, HashMap<ServiceConnection, ServiceDispatcher>>()","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.newConfig","false","false","false","false","false","Configuration","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.handlingProfiling","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.embeddedID","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mRegistered","false","false","false","false","true","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.flags","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.appInfo","false","false","false","false","false","ApplicationInfo","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mResources","false","false","true","false","false","Resources","","","","\android\app\ActivityThread.java"
"android.app.ActivityRecord.window","false","false","false","false","false","Window","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.HIDE_WINDOW","true","false","false","true","true","int","106","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.resultExtras","false","false","false","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.H.SEND_RESULT","true","false","false","true","true","int","108","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mDataDir","false","false","true","false","true","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.CLEAN_UP_CONTEXT","true","false","false","true","true","int","119","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.embeddedID","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mNumVisibleActivities","false","false","false","false","false","int","0","","// Number of activities that are currently visible on-screen.
","\android\app\ActivityThread.java"
"android.app.ActivityThread.RECEIVER","true","false","false","true","true","int","113","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mService","false","false","false","false","true","IBinder","","","","\android\app\ActivityThread.java"
"android.app.Args.mCurMap","false","false","true","false","false","Bundle","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mIncludeCode","false","false","true","false","true","boolean","","","","\android\app\ActivityThread.java"
"android.app.DumpServiceInfo.service","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.ACTIVITY_THREAD_CHECKIN_VERSION","false","false","true","true","true","int","1","","// Formatting for checkin service - update version if row format changes
","\android\app\ActivityThread.java"
"android.app.ActivityThread.sPackageManager","false","false","false","true","false","IPackageManager","","","","\android\app\ActivityThread.java"
"android.app.H.PAUSE_ACTIVITY","true","false","false","true","true","int","101","","","\android\app\ActivityThread.java"
"android.app.ReceiverData.info","false","false","false","false","false","ActivityInfo","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mIServiceConnection","false","false","true","false","true","InnerConnection","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mFlags","false","false","true","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mRegistered","false","false","false","false","true","boolean","","","","\android\app\ActivityThread.java"
"android.app.H.REMOVE_PROVIDER","true","false","false","true","true","int","131","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.packageInfo","false","false","false","false","false","PackageInfo","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.args","false","false","false","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mProviderMap","false","false","false","false","true","HashMap<String,ProviderRecord>","new HashMap<String, ProviderRecord>()","","// The lock of mProviderMap protects the following variables.
","\android\app\ActivityThread.java"
"android.app.ActivityThread.rebind","false","false","false","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.NewIntentData.token","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mCommand","false","false","false","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mContext","false","false","true","false","true","Context","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mCurSticky","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.binder","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mAppThread","false","false","false","false","true","ApplicationThread","new ApplicationThread()","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mConnection","false","false","true","false","true","ServiceConnection","","","","\android\app\ActivityThread.java"
"android.app.ServiceArgsData.flags","false","false","false","false","false","int","","","","\android\app\ActivityThread.java"
"android.app.DeathMonitor.mName","false","false","false","false","true","ComponentName","","","","\android\app\ActivityThread.java"
"android.app.InnerReceiver.mDispatcher","false","false","false","false","true","WeakReference<ReceiverDispatcher>","","","","\android\app\ActivityThread.java"
"android.app.ConnectionInfo.binder","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.ACTIVITY_CONFIGURATION_CHANGED","true","false","false","true","true","int","125","","","\android\app\ActivityThread.java"
"android.app.ReceiverDispatcher.mStrongRef","false","false","false","false","true","ReceiverDispatcher","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mSecurityViolation","false","false","true","false","true","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.nextIdle","false","false","false","false","false","ActivityRecord","","","","\android\app\ActivityThread.java"
"android.app.ProfilerControlData.fd","false","false","false","false","false","ParcelFileDescriptor","","","","\android\app\ActivityThread.java"
"android.app.ServiceDispatcher.mService","false","false","false","false","true","IBinder","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mLocation","false","false","true","false","true","ServiceConnectionLeaked","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.SHOW_WINDOW","true","false","false","true","true","int","105","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mSystemContext","false","false","true","true","false","ContextImpl","null","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mApplication","false","false","true","false","false","Application","","","","\android\app\ActivityThread.java"
"android.app.ServiceArgsData.args","false","false","false","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.PackageInfo.mDied","false","false","true","false","false","boolean","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.pendingResults","false","false","false","false","false","List<ResultInfo>","","","","\android\app\ActivityThread.java"
"android.app.H.NEW_INTENT","true","false","false","true","true","int","112","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mRelaunchingActivities","false","false","false","false","true","ArrayList<ActivityRecord>","new ArrayList<ActivityRecord>()","","","\android\app\ActivityThread.java"
"android.app.BindServiceData.token","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.results","false","false","false","false","false","List<ResultInfo>","","","","\android\app\ActivityThread.java"
"android.app.AppBindData.config","false","false","false","false","false","Configuration","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.newConfig","false","false","false","false","false","Configuration","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.TWO_COUNT_COLUMNS","false","false","true","true","true","String","""%17s %8d %17s %8d""","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mCurData","false","false","true","false","false","String","","","","\android\app\ActivityThread.java"
"android.app.H.PAUSE_ACTIVITY_FINISHING","true","false","false","true","true","int","102","","","\android\app\ActivityThread.java"
"android.app.H.DISPATCH_PACKAGE_BROADCAST","true","false","false","true","true","int","133","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.intent","false","false","false","false","false","Intent","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mUnbindLocation","false","false","true","false","false","RuntimeException","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.LOG_ON_PAUSE_CALLED","false","false","true","true","true","int","30021","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.lastNonConfigurationInstance","false","false","false","false","false","Object","","","","\android\app\ActivityThread.java"
"android.app.H.CREATE_SERVICE","true","false","false","true","true","int","114","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.mFlags","false","false","true","false","true","int","","","","\android\app\ActivityThread.java"
"android.app.ActivityThread.service","false","false","false","false","false","IBinder","","","","\android\app\ActivityThread.java"
"android.os.Registrant.userObj","false","false","false","false","false","Object","","","","\android\os\Registrant.java"
"android.os.Registrant.what","false","false","false","false","false","int","","","","\android\os\Registrant.java"
"android.os.Registrant.refH","false","false","false","false","false","WeakReference","","","","\android\os\Registrant.java"
"android.bluetooth.BluetoothHeadset.mServiceListener","false","false","true","false","true","ServiceListener","","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.EXTRA_PREVIOUS_STATE","true","false","false","true","true","String","""android.bluetooth.headset.extra.PREVIOUS_STATE""","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.STATE_DISCONNECTED","true","false","false","true","true","int","0","","/**
 * No headset currently connected
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.LOCAL_DISCONNECT","true","false","false","true","true","int","1","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.STATE_CONNECTED","true","false","false","true","true","int","2","","/**
 * A headset is currently connected
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.EXTRA_AUDIO_STATE","true","false","false","true","true","String","""android.bluetooth.headset.extra.AUDIO_STATE""","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.EXTRA_STATE","true","false","false","true","true","String","""android.bluetooth.headset.extra.STATE""","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.TAG","false","false","true","true","true","String","""BluetoothHeadset""","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.mService","false","false","true","false","false","IBluetoothHeadset","","","/**
 * TODO(API release): Consider incorporating as new state in
 * HEADSET_STATE_CHANGED
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.RESULT_CANCELED","true","false","false","true","true","int","2","","/**
 * Connection canceled before completetion.
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.PRIORITY_OFF","true","false","false","true","true","int","0","","/**
 * Default priority for headsets that should not be auto-connected
 * and not allow incoming connections.
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.mContext","false","false","true","false","true","Context","","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.AUDIO_STATE_DISCONNECTED","true","false","false","true","true","int","0","","/**
 * A SCO audio channel is not established
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.RESULT_FAILURE","true","false","false","true","true","int","0","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.RESULT_SUCCESS","true","false","false","true","true","int","1","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.AUDIO_STATE_CONNECTED","true","false","false","true","true","int","1","","/**
 * A SCO audio channel is established
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.STATE_CONNECTING","true","false","false","true","true","int","1","","/**
 * Connection attempt in progress
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.mConnection","false","false","true","false","false","ServiceConnection","new ServiceConnection() {

    public void onServiceConnected(ComponentName className, IBinder service) {
        if (DBG)
            Log.d(TAG, ""Proxy object connected"");
        mService = IBluetoothHeadset.Stub.asInterface(service);
        if (mServiceListener != null) {
            mServiceListener.onServiceConnected();
        }
    }

    public void onServiceDisconnected(ComponentName className) {
        if (DBG)
            Log.d(TAG, ""Proxy object disconnected"");
        mService = null;
        if (mServiceListener != null) {
            mServiceListener.onServiceDisconnected();
        }
    }
}","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.DBG","false","false","true","true","true","boolean","false","","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.EXTRA_DISCONNECT_INITIATOR","true","false","false","true","true","String","""android.bluetooth.headset.extra.DISCONNECT_INITIATOR""","","/**
 * Extra to be used with the Headset State change intent.
 * This will be used only when Headset state changes to
 * {@link #STATE_DISCONNECTED} from any previous state.
 * This extra field is optional and will be used when
 * we have deterministic information regarding whether
 * the disconnect was initiated by the remote device or
 * by the local adapter.
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.PRIORITY_AUTO_CONNECT","true","false","false","true","true","int","1000","","/**
 * Default priority for headsets that  for which we will accept
 * inconing connections and auto-connect
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.ACTION_AUDIO_STATE_CHANGED","true","false","false","true","true","String","""android.bluetooth.headset.action.AUDIO_STATE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * TODO(API release): Consider incorporating as new state in
 * HEADSET_STATE_CHANGED
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.ACTION_STATE_CHANGED","true","false","false","true","true","String","""android.bluetooth.headset.action.STATE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.PRIORITY_UNDEFINED","true","false","false","true","true","int","-1","","/**
 * Default priority when not set or when the device is unpaired
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.REMOTE_DISCONNECT","true","false","false","true","true","int","0","","/**
 * Values for {@link #EXTRA_DISCONNECT_INITIATOR}
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.STATE_ERROR","true","false","false","true","true","int","-1","","/**
 * There was an error trying to obtain the state
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.bluetooth.BluetoothHeadset.PRIORITY_ON","true","false","false","true","true","int","100","","/**
 * Default priority for headsets that  for which we will accept
 * inconing connections but not auto-connect
 */
","\android\bluetooth\BluetoothHeadset.java"
"android.inputmethodservice.SoftInputWindow.mDispatcherState","false","false","false","false","true","KeyEvent.DispatcherState","","","","\android\inputmethodservice\SoftInputWindow.java"
"android.app.backup.BackupManager.TAG","false","false","true","true","true","String","""BackupManager""","","","\android\app\backup\BackupManager.java"
"android.app.backup.BackupManager.mContext","false","false","true","false","false","Context","","","","\android\app\backup\BackupManager.java"
"android.app.backup.BackupManager.sService","false","false","true","true","false","IBackupManager","","","","\android\app\backup\BackupManager.java"
"android.app.IApplicationThread.descriptor","false","false","false","false","false","String","""android.app.IApplicationThread""","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_FINISH_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 8","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.PROFILER_CONTROL_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 27","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_ACTIVITY_CONFIGURATION_CHANGED_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 24","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.DISPATCH_PACKAGE_BROADCAST_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 33","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_WINDOW_VISIBILITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 3","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_RELAUNCH_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 25","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_SERVICE_ARGS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 16","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.BACKUP_MODE_FULL","false","false","false","true","true","int","1","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_CREATE_BACKUP_AGENT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 29","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.BIND_APPLICATION_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 12","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.EXTERNAL_STORAGE_UNAVAILABLE","false","false","false","true","true","int","1","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SET_SCHEDULING_GROUP_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 28","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_DESTROY_BACKUP_AGENT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 30","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.DEBUG_ON","false","false","false","true","true","int","1","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.DEBUG_OFF","false","false","false","true","true","int","0","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_SEND_RESULT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 5","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.GET_MEMORY_INFO_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 31","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_RECEIVER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 9","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_PAUSE_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_SUICIDE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 32","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_LOW_MEMORY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 23","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_REGISTERED_RECEIVER_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 22","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.PROCESS_IN_BACKGROUND_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 18","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_BIND_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 19","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.PACKAGE_REMOVED","false","false","false","true","true","int","0","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_EXIT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 13","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_RESUME_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 4","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_NEW_INTENT_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 7","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.REQUEST_PSS_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 26","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_CREATE_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 10","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.REQUEST_THUMBNAIL_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 14","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.BACKUP_MODE_RESTORE","false","false","false","true","true","int","2","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_LAUNCH_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 6","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_UNBIND_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 20","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.BACKUP_MODE_INCREMENTAL","false","false","false","true","true","int","0","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.DUMP_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 21","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.UPDATE_TIME_ZONE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 17","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.DEBUG_WAIT","false","false","false","true","true","int","2","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_STOP_SERVICE_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 11","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_CONFIGURATION_CHANGED_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 15","","","\android\app\IApplicationThread.java"
"android.app.IApplicationThread.SCHEDULE_STOP_ACTIVITY_TRANSACTION","false","false","false","false","false","int","IBinder.FIRST_CALL_TRANSACTION + 2","","","\android\app\IApplicationThread.java"
"android.os.ServiceManagerProxy.mRemote","false","false","true","false","false","IBinder","","","","\android\os\ServiceManagerNative.java"
"android.app.NotificationManager.TAG","false","false","true","true","false","String","""NotificationManager""","","","\android\app\NotificationManager.java"
"android.app.NotificationManager.DEBUG","false","false","true","true","false","boolean","false","","","\android\app\NotificationManager.java"
"android.app.NotificationManager.localLOGV","false","false","true","true","false","boolean","DEBUG || android.util.Config.LOGV","","","\android\app\NotificationManager.java"
"android.app.NotificationManager.mContext","false","false","true","false","false","Context","","","","\android\app\NotificationManager.java"
"android.app.NotificationManager.sService","false","false","true","true","false","INotificationManager","","","","\android\app\NotificationManager.java"
"com.android.internal.widget.LockPatternUtils.FAILED_ATTEMPTS_BEFORE_RESET","true","false","false","true","true","int","20","","/**
 * The number of incorrect attempts before which we fall back on an alternative
 * method of verifying the user, and resetting their lock pattern.
 */
","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.TAG","false","false","true","true","true","String","""LockPatternUtils""","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.PATTERN_EVER_CHOSEN_KEY","false","false","true","true","true","String","""lockscreen.patterneverchosen""","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.PASSWORD_TYPE_KEY","true","false","false","true","true","String","""lockscreen.password_type""","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.FAILED_ATTEMPT_TIMEOUT_MS","true","false","false","true","true","long","30000L","","/**
 * How long the user is prevented from trying again after entering the
 * wrong pattern too many times.
 */
","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.mDevicePolicyManager","false","false","true","false","false","DevicePolicyManager","","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.mContext","false","false","true","false","true","Context","","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.LOCKOUT_PERMANENT_KEY","false","false","true","true","true","String","""lockscreen.lockedoutpermanently""","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.MIN_LOCK_PATTERN_SIZE","true","false","false","true","true","int","4","","/**
 * The minimum number of dots in a valid pattern.
 */
","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.sLockPatternFilename","false","false","true","true","false","String","","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.LOCKOUT_ATTEMPT_DEADLINE","false","false","true","true","true","String","""lockscreen.lockoutattemptdeadline""","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.LOCK_PASSWORD_FILE","false","false","true","true","true","String","""/system/password.key""","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.FAILED_ATTEMPTS_BEFORE_TIMEOUT","true","false","false","true","true","int","5","","/**
 * The maximum number of incorrect attempts before the user is prevented
 * from trying again for {@link #FAILED_ATTEMPT_TIMEOUT_MS}.
 */
","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.LOCK_PASSWORD_SALT_KEY","false","false","true","true","true","String","""lockscreen.password_salt""","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.mContentResolver","false","false","true","false","true","ContentResolver","","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.LOCK_PATTERN_FILE","false","false","true","true","true","String","""/system/gesture.key""","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.sLockPasswordFilename","false","false","true","true","false","String","","","","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.FAILED_ATTEMPT_COUNTDOWN_INTERVAL_MS","true","false","false","true","true","long","1000L","","/**
 * The interval of the countdown for showing progress of the lockout.
 */
","\com\android\internal\widget\LockPatternUtils.java"
"com.android.internal.widget.LockPatternUtils.MIN_PATTERN_REGISTER_FAIL","true","false","false","true","true","int","3","","/**
 * The minimum number of dots the user must include in a wrong pattern
 * attempt for it to be counted against the counts that affect
 * {@link #FAILED_ATTEMPTS_BEFORE_TIMEOUT} and {@link #FAILED_ATTEMPTS_BEFORE_RESET}
 */
","\com\android\internal\widget\LockPatternUtils.java"
"android.text.style.StyleSpan.mStyle","false","false","true","false","true","int","","","","\android\text\style\StyleSpan.java"
"android.app.SearchableInfo.MD_LABEL_SEARCHABLE","false","false","true","true","true","String","""android.app.searchable""","","// the current long wordy javadoc in SearchManager.java ?
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSearchMode","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mIconId","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.SEARCH_MODE_QUERY_REWRITE_FROM_DATA","false","false","true","true","true","int","0x10","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mVoiceLanguageModeId","false","false","true","false","true","int","","","// voiceLanguageModel
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mKeyCode","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mVoiceSearchMode","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSearchActivity","false","false","true","false","true","ComponentName","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.MD_XML_ELEMENT_SEARCHABLE_ACTION_KEY","false","false","true","true","true","String","""actionkey""","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.LOG_TAG","false","false","true","true","true","String","""SearchableInfo""","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSettingsDescriptionId","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.VOICE_SEARCH_SHOW_BUTTON","false","false","true","true","true","int","1","","// Flag values for Searchable_voiceSearchMode
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestIntentData","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mHintId","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.DBG","false","false","true","true","true","boolean","false","","// general debugging support
","\android\app\SearchableInfo.java"
"android.app.ActionKeyInfo.mQueryActionMsg","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.SEARCH_MODE_BADGE_ICON","false","false","true","true","true","int","0x08","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mVoiceLanguageId","false","false","true","false","true","int","","","// voiceLanguage
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mQueryActionMsg","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.VOICE_SEARCH_LAUNCH_RECOGNIZER","false","false","true","true","true","int","4","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mActionKeys","false","false","true","false","false","HashMap<Integer,ActionKeyInfo>","null","","// This is not final, to allow lazy initialization.
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSearchImeOptions","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.SEARCH_MODE_QUERY_REWRITE_FROM_TEXT","false","false","true","true","true","int","0x20","","","\android\app\SearchableInfo.java"
"android.app.ActionKeyInfo.mKeyCode","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.ActionKeyInfo.mSuggestActionMsgColumn","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSearchButtonText","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.SEARCH_MODE_BADGE_LABEL","false","false","true","true","true","int","0x04","","// flags in the searchMode attribute
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mVoiceMaxResults","false","false","true","false","true","int","","","// voiceMaxResults
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestSelection","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mAutoUrlDetect","false","false","true","false","true","boolean","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestAuthority","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.VOICE_SEARCH_LAUNCH_WEB_SEARCH","false","false","true","true","true","int","2","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestPath","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestThreshold","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mLabelId","false","false","true","false","true","int","","","// true member variables - what we know about the searchability
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mQueryAfterZeroResults","false","false","true","false","true","boolean","","","","\android\app\SearchableInfo.java"
"android.app.ActionKeyInfo.mSuggestActionMsg","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mVoicePromptTextId","false","false","true","false","true","int","","","// voicePromptText
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.CREATOR","true","false","false","true","true","Parcelable.Creator<SearchableInfo>","new Parcelable.Creator<SearchableInfo>() {

    public SearchableInfo createFromParcel(Parcel in) {
        return new SearchableInfo(in);
    }

    public SearchableInfo[] newArray(int size) {
        return new SearchableInfo[size];
    }
}","","/**
 * Support for parcelable and aidl operations.
 */
","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestActionMsg","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestIntentAction","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mIncludeInGlobalSearch","false","false","true","false","true","boolean","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.MD_XML_ELEMENT_SEARCHABLE","false","false","true","true","true","String","""searchable""","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSearchInputType","false","false","true","false","true","int","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestProviderPackage","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.SearchableInfo.mSuggestActionMsgColumn","false","false","true","false","true","String","","","","\android\app\SearchableInfo.java"
"android.app.backup.FileBackupHelperBase.mContext","false","false","false","false","false","Context","","","","\android\app\backup\FileBackupHelperBase.java"
"android.app.backup.FileBackupHelperBase.TAG","false","false","true","true","true","String","""FileBackupHelperBase""","","","\android\app\backup\FileBackupHelperBase.java"
"android.app.backup.FileBackupHelperBase.mExceptionLogged","false","false","false","false","false","boolean","","","","\android\app\backup\FileBackupHelperBase.java"
"android.app.backup.FileBackupHelperBase.mPtr","false","false","false","false","false","int","","","","\android\app\backup\FileBackupHelperBase.java"
"android.preference.PreferenceGroup.mOrderingAsAdded","false","false","true","false","false","boolean","true","","","\android\preference\PreferenceGroup.java"
"android.preference.PreferenceGroup.mPreferenceList","false","false","true","false","false","List<Preference>","","","/**
 * The container for child {@link Preference}s. This is sorted based on the
 * ordering, please use {@link #addPreference(Preference)} instead of adding
 * to this directly.
 */
","\android\preference\PreferenceGroup.java"
"android.preference.PreferenceGroup.mCurrentPreferenceOrder","false","false","true","false","false","int","0","","","\android\preference\PreferenceGroup.java"
"android.preference.PreferenceGroup.mAttachedToActivity","false","false","true","false","false","boolean","false","","","\android\preference\PreferenceGroup.java"
"android.content.res.ColorStateList.mColors","false","false","true","false","false","int","","","// must be parallel to mStateSpecs
","\android\content\res\ColorStateList.java"
"android.content.res.ColorStateList.mStateSpecs","false","false","true","false","false","int","","","// must be parallel to mColors
","\android\content\res\ColorStateList.java"
"android.content.res.ColorStateList.CREATOR","true","false","false","true","true","Parcelable.Creator<ColorStateList>","new Parcelable.Creator<ColorStateList>() {

    public ColorStateList[] newArray(int size) {
        return new ColorStateList[size];
    }

    public ColorStateList createFromParcel(Parcel source) {
        final int N = source.readInt();
        int[][] stateSpecs = new int[N][];
        for (int i = 0; i < N; i++) {
            stateSpecs[i] = source.createIntArray();
        }
        int[] colors = source.createIntArray();
        return new ColorStateList(stateSpecs, colors);
    }
}","","","\android\content\res\ColorStateList.java"
"android.content.res.ColorStateList.EMPTY","false","false","true","true","true","int","new int[][] { new int[0] }","","","\android\content\res\ColorStateList.java"
"android.content.res.ColorStateList.mDefaultColor","false","false","true","false","false","int","0xffff0000","","","\android\content\res\ColorStateList.java"
"android.content.res.ColorStateList.sCache","false","false","true","true","true","SparseArray<WeakReference<ColorStateList>>","new SparseArray<WeakReference<ColorStateList>>()","","","\android\content\res\ColorStateList.java"
"android.bluetooth.BluetoothDevice.PAIRING_VARIANT_DISPLAY_PASSKEY","true","false","false","true","true","int","4","","/**
 * The user will be prompted to enter the passkey displayed on remote device
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_AUTH_CANCELED","true","false","false","true","true","int","3","","/**
 * A bond attempt failed because we canceled the bonding process
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_BOND_STATE_CHANGED","true","false","false","true","true","String","""android.bluetooth.device.action.BOND_STATE_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","// contain a hidden extra field EXTRA_REASON with the result code.
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.mAddress","false","false","true","false","true","String","","","","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.PAIRING_VARIANT_CONSENT","true","false","false","true","true","int","3","","/**
 * The user will be prompted to accept or deny the incoming pairing request
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_CLASS","true","false","false","true","true","String","""android.bluetooth.device.extra.CLASS""","","/**
 * Used as an Parcelable {@link BluetoothClass} extra field in {@link
 * #ACTION_FOUND} and {@link #ACTION_CLASS_CHANGED} intents.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_ACL_CONNECTED","true","false","false","true","true","String","""android.bluetooth.device.action.ACL_CONNECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Indicates a low level (ACL) connection has been
 * established with a remote device.
 * <p>Always contains the extra field {@link #EXTRA_DEVICE}.
 * <p>ACL connections are managed automatically by the Android Bluetooth
 * stack.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_RSSI","true","false","false","true","true","String","""android.bluetooth.device.extra.RSSI""","","/**
 * Used as an optional short extra field in {@link #ACTION_FOUND} intents.
 * Contains the RSSI value of the remote device as reported by the
 * Bluetooth hardware.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_AUTH_TIMEOUT","true","false","false","true","true","int","6","","/**
 * A bond attempt failed because of authentication timeout
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_REASON","true","false","false","true","true","String","""android.bluetooth.device.extra.REASON""","","/**
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_REPEATED_ATTEMPTS","true","false","false","true","true","int","7","","/**
 * A bond attempt failed because of repeated attempts
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.BOND_BONDING","true","false","false","true","true","int","11","","/**
 * Indicates bonding (pairing) is in progress with the remote device.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_NAME_CHANGED","true","false","false","true","true","String","""android.bluetooth.device.action.NAME_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Indicates the friendly name of a remote device has
 * been retrieved for the first time, or changed since the last retrieval.
 * <p>Always contains the extra fields {@link #EXTRA_DEVICE} and {@link
 * #EXTRA_NAME}.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.CREATOR","true","false","false","true","true","Parcelable.Creator<BluetoothDevice>","new Parcelable.Creator<BluetoothDevice>() {

    public BluetoothDevice createFromParcel(Parcel in) {
        return new BluetoothDevice(in.readString());
    }

    public BluetoothDevice[] newArray(int size) {
        return new BluetoothDevice[size];
    }
}","","","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_PASSKEY","true","false","false","true","true","String","""android.bluetooth.device.extra.PASSKEY""","","/**
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_UUID","true","false","false","true","true","String","""android.bluetooth.device.extra.UUID""","","/**
 * Used as an extra field in {@link #ACTION_UUID} intents,
 * Contains the {@link android.os.ParcelUuid}s of the remote device which
 * is a parcelable version of {@link UUID}.
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_DISCOVERY_IN_PROGRESS","true","false","false","true","true","int","5","","/**
 * A bond attempt failed because a discovery is in progress
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_PAIRING_VARIANT","true","false","false","true","true","String","""android.bluetooth.device.extra.PAIRING_VARIANT""","","/**
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.PAIRING_VARIANT_PASSKEY_CONFIRMATION","true","false","false","true","true","int","2","","/**
 * The user will be prompted to confirm the passkey displayed on the screen
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_AUTH_REJECTED","true","false","false","true","true","int","2","","/**
 * A bond attempt failed because the other side explicilty rejected
 * bonding
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_PREVIOUS_BOND_STATE","true","false","false","true","true","String","""android.bluetooth.device.extra.PREVIOUS_BOND_STATE""","","/**
 * Used as an int extra field in {@link #ACTION_BOND_STATE_CHANGED} intents.
 * Contains the previous bond state of the remote device.
 * <p>Possible values are:
 * {@link #BOND_NONE},
 * {@link #BOND_BONDING},
 * {@link #BOND_BONDED}.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_NAME","true","false","false","true","true","String","""android.bluetooth.device.extra.NAME""","","/**
 * Used as a String extra field in {@link #ACTION_NAME_CHANGED} and {@link
 * #ACTION_FOUND} intents. It contains the friendly Bluetooth name.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_PAIRING_CANCEL","true","false","false","true","true","String","""android.bluetooth.device.action.PAIRING_CANCEL""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_FOUND","true","false","false","true","true","String","""android.bluetooth.device.action.FOUND""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","// TODO: Change API to not broadcast RSSI if not available (incoming connection)
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.PAIRING_VARIANT_PASSKEY","true","false","false","true","true","int","1","","/**
 * The user will be prompted to enter a passkey
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.TAG","false","false","true","true","true","String","""BluetoothDevice""","","","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_BOND_STATE","true","false","false","true","true","String","""android.bluetooth.device.extra.BOND_STATE""","","/**
 * Used as an int extra field in {@link #ACTION_BOND_STATE_CHANGED} intents.
 * Contains the bond state of the remote device.
 * <p>Possible values are:
 * {@link #BOND_NONE},
 * {@link #BOND_BONDING},
 * {@link #BOND_BONDED}.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.PAIRING_VARIANT_PIN","true","false","false","true","true","int","0","","/**
 * The user will be prompted to enter a pin
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_PAIRING_REQUEST","true","false","false","true","true","String","""android.bluetooth.device.action.PAIRING_REQUEST""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_AUTH_FAILED","true","false","false","true","true","int","1","","/**
 * A bond attempt failed because pins did not match, or remote device did
 * not respond to pin request in time
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_REMOTE_AUTH_CANCELED","true","false","false","true","true","int","8","","/**
 * A bond attempt failed because we received an Authentication Cancel
 * by remote end
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_REMOTE_DEVICE_DOWN","true","false","false","true","true","int","4","","/**
 * A bond attempt failed because we could not contact the remote device
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_UUID","true","false","false","true","true","String","""android.bleutooth.device.action.UUID""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: This intent is used to broadcast the {@link UUID}
 * wrapped as a {@link android.os.ParcelUuid} of the remote device after it
 * has been fetched. This intent is sent only when the UUIDs of the remote
 * device are requested to be fetched using Service Discovery Protocol
 * <p> Always contains the extra field {@link #EXTRA_DEVICE}
 * <p> Always contains the extra filed {@link #EXTRA_UUID}
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.EXTRA_DEVICE","true","false","false","true","true","String","""android.bluetooth.device.extra.DEVICE""","","/**
 * Used as a Parcelable {@link BluetoothDevice} extra field in every intent
 * broadcast by this class. It contains the {@link BluetoothDevice} that
 * the intent applies to.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.BOND_BONDED","true","false","false","true","true","int","12","","/**
 * Indicates the remote device is bonded (paired).
 * <p>A shared link keys exists locally for the remote device, so
 * communication can be authenticated and encrypted.
 * <p><i>Being bonded (paired) with a remote device does not necessarily
 * mean the device is currently connected. It just means that the ponding
 * procedure was compeleted at some earlier time, and the link key is still
 * stored locally, ready to use on the next connection.
 * </i>
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ERROR","true","false","false","true","true","int","Integer.MIN_VALUE","","/**
 * Sentinel error value for this class. Guaranteed to not equal any other
 * integer constant in this class. Provided as a convenience for functions
 * that require a sentinel error value, for example:
 * <p><code>Intent.getIntExtra(BluetoothDevice.EXTRA_BOND_STATE,
 * BluetoothDevice.ERROR)</code>
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_ACL_DISCONNECT_REQUESTED","true","false","false","true","true","String","""android.bluetooth.device.action.ACL_DISCONNECT_REQUESTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Indicates that a low level (ACL) disconnection has
 * been requested for a remote device, and it will soon be disconnected.
 * <p>This is useful for graceful disconnection. Applications should use
 * this intent as a hint to immediately terminate higher level connections
 * (RFCOMM, L2CAP, or profile connections) to the remote device.
 * <p>Always contains the extra field {@link #EXTRA_DEVICE}.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_NAME_FAILED","true","false","false","true","true","String","""android.bluetooth.device.action.NAME_FAILED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","// TODO: is this actually useful?
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.UNBOND_REASON_REMOVED","true","false","false","true","true","int","9","","/**
 * An existing bond was explicitly revoked
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_CLASS_CHANGED","true","false","false","true","true","String","""android.bluetooth.device.action.CLASS_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Bluetooth class of a remote device has changed.
 * <p>Always contains the extra fields {@link #EXTRA_DEVICE} and {@link
 * #EXTRA_CLASS}.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 * @see {@link BluetoothClass}
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.BOND_SUCCESS","true","false","false","true","true","int","0","","/**
 * A bond attempt succeeded
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_ACL_DISCONNECTED","true","false","false","true","true","String","""android.bluetooth.device.action.ACL_DISCONNECTED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Indicates a low level (ACL) disconnection from a
 * remote device.
 * <p>Always contains the extra field {@link #EXTRA_DEVICE}.
 * <p>ACL connections are managed automatically by the Android Bluetooth
 * stack.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.sService","false","false","true","true","false","IBluetooth","","","/**
 * Lazy initialization. Guaranteed final after first object constructed, or
 * getService() called.
 * TODO: Unify implementation of sService amongst BluetoothFoo API's
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.BOND_NONE","true","false","false","true","true","int","10","","/**
 * Indicates the remote device is not bonded (paired).
 * <p>There is no shared link key with the remote device, so communication
 * (if it is allowed at all) will be unauthenticated and unencrypted.
 */
","\android\bluetooth\BluetoothDevice.java"
"android.bluetooth.BluetoothDevice.ACTION_DISAPPEARED","true","false","false","true","true","String","""android.bluetooth.device.action.DISAPPEARED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: Remote device disappeared.
 * <p>Sent when a remote device that was found in the last discovery is not
 * found in the current discovery.
 * <p>Always contains the extra field {@link #EXTRA_DEVICE}.
 * <p>Requires {@link android.Manifest.permission#BLUETOOTH} to receive.
 * @hide
 */
","\android\bluetooth\BluetoothDevice.java"
"android.view.FocusFinder.tlFocusFinder","false","false","true","true","false","ThreadLocal<FocusFinder>","new ThreadLocal<FocusFinder>() {

    protected FocusFinder initialValue() {
        return new FocusFinder();
    }
}","","","\android\view\FocusFinder.java"
"android.view.FocusFinder.mFocusedRect","false","false","false","false","false","Rect","new Rect()","","","\android\view\FocusFinder.java"
"android.view.FocusFinder.mOtherRect","false","false","false","false","false","Rect","new Rect()","","","\android\view\FocusFinder.java"
"android.view.FocusFinder.mBestCandidateRect","false","false","false","false","false","Rect","new Rect()","","","\android\view\FocusFinder.java"
"android.speech.srec.WaveHeader.mNumBytes","false","false","true","false","false","int","","","","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.mNumChannels","false","false","true","false","false","short","","","","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.HEADER_LENGTH","false","false","true","true","true","int","44","","","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.mFormat","false","false","true","false","false","short","","","","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.mSampleRate","false","false","true","false","false","int","","","","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.mBitsPerSample","false","false","true","false","false","short","","","","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.FORMAT_ALAW","true","false","false","true","true","short","6","","/**
 * Indicates ALAW format.
 */
","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.TAG","false","false","true","true","true","String","""WaveHeader""","","","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.FORMAT_ULAW","true","false","false","true","true","short","7","","/**
 * Indicates ULAW format.
 */
","\android\speech\srec\WaveHeader.java"
"android.speech.srec.WaveHeader.FORMAT_PCM","true","false","false","true","true","short","1","","/**
 * Indicates PCM format.
 */
","\android\speech\srec\WaveHeader.java"
"android.widget.Adapter.NO_SELECTION","false","false","false","true","true","int","Integer.MIN_VALUE","","","\android\widget\Adapter.java"
"android.widget.Adapter.IGNORE_ITEM_VIEW_TYPE","false","false","false","true","true","int","AdapterView.ITEM_VIEW_TYPE_IGNORE","","/**
 * An item view type that causes the {@link AdapterView} to ignore the item
 * view. For example, this can be used if the client does not want a
 * particular view to be given for conversion in
 * {@link #getView(int, View, ViewGroup)}.
 *
 * @see #getItemViewType(int)
 * @see #getViewTypeCount()
 */
","\android\widget\Adapter.java"
"android.view.animation.AnticipateOvershootInterpolator.mTension","false","false","true","false","true","float","","","","\android\view\animation\AnticipateOvershootInterpolator.java"
"android.view.animation.TranslateAnimation.mToYType","false","false","true","false","false","int","ABSOLUTE","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mFromYValue","false","false","true","false","false","float","0.0f","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mToXType","false","false","true","false","false","int","ABSOLUTE","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mFromYType","false","false","true","false","false","int","ABSOLUTE","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mFromXType","false","false","true","false","false","int","ABSOLUTE","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mFromXDelta","false","false","true","false","false","float","","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mToYDelta","false","false","true","false","false","float","","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mFromYDelta","false","false","true","false","false","float","","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mToXValue","false","false","true","false","false","float","0.0f","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mToYValue","false","false","true","false","false","float","0.0f","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mFromXValue","false","false","true","false","false","float","0.0f","","","\android\view\animation\TranslateAnimation.java"
"android.view.animation.TranslateAnimation.mToXDelta","false","false","true","false","false","float","","","","\android\view\animation\TranslateAnimation.java"
"com.google.android.mms.util.AbstractCache.mCacheMap","false","false","true","false","true","HashMap<K,CacheEntry<V>>","","","","\com\google\android\mms\util\AbstractCache.java"
"com.google.android.mms.util.AbstractCache.hit","false","false","false","false","false","int","","","","\com\google\android\mms\util\AbstractCache.java"
"com.google.android.mms.util.AbstractCache.TAG","false","false","true","true","true","String","""AbstractCache""","","","\com\google\android\mms\util\AbstractCache.java"
"com.google.android.mms.util.AbstractCache.MAX_CACHED_ITEMS","false","false","true","true","true","int","500","","","\com\google\android\mms\util\AbstractCache.java"
"com.google.android.mms.util.CacheEntry.hit","false","false","false","false","false","int","","","","\com\google\android\mms\util\AbstractCache.java"
"com.google.android.mms.util.AbstractCache.LOCAL_LOGV","false","false","true","true","true","boolean","DEBUG ? Config.LOGD : Config.LOGV","","","\com\google\android\mms\util\AbstractCache.java"
"com.google.android.mms.util.CacheEntry.value","false","false","false","false","false","V","","","","\com\google\android\mms\util\AbstractCache.java"
"com.google.android.mms.util.AbstractCache.value","false","false","false","false","false","V","","","","\com\google\android\mms\util\AbstractCache.java"
"com.google.android.mms.util.AbstractCache.DEBUG","false","false","true","true","true","boolean","false","","","\com\google\android\mms\util\AbstractCache.java"
"android.util.Decoder.SKIP","false","false","true","true","true","int","-1","","/**
 * Non-data values in the DECODE arrays.
 */
","\android\util\Base64.java"
"android.util.Base64.NO_CLOSE","true","false","false","true","true","int","16","","/**
 * Flag to pass to {@link Base64OutputStream} to indicate that it
 * should not close the output stream it is wrapping when it
 * itself is closed.
 */
","\android\util\Base64.java"
"android.util.Decoder.DECODE","false","false","true","true","true","int","{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }","","/**
 * Lookup table for turning bytes into their position in the
 * Base64 alphabet.
 */
","\android\util\Base64.java"
"android.util.Base64.do_cr","true","false","false","false","true","boolean","","","","\android\util\Base64.java"
"android.util.Coder.op","true","false","false","false","false","int","","","","\android\util\Base64.java"
"android.util.Base64.SKIP","false","false","true","true","true","int","-1","","/**
 * Non-data values in the DECODE arrays.
 */
","\android\util\Base64.java"
"android.util.Decoder.state","false","false","true","false","false","int","","","// state number (0 to 6)
","\android\util\Base64.java"
"android.util.Base64.DECODE","false","false","true","true","true","int","{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }","","/**
 * Lookup table for turning bytes into their position in the
 * Base64 alphabet.
 */
","\android\util\Base64.java"
"android.util.Base64.DEFAULT","true","false","false","true","true","int","0","","/**
 * Default values for encoder/decoder flags.
 */
","\android\util\Base64.java"
"android.util.Base64.ENCODE_WEBSAFE","false","false","true","true","true","byte","{ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_' }","","/**
 * Lookup table for turning Base64 alphabet positions (6 bits)
 * into output bytes.
 */
","\android\util\Base64.java"
"android.util.Encoder.ENCODE_WEBSAFE","false","false","true","true","true","byte","{ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_' }","","/**
 * Lookup table for turning Base64 alphabet positions (6 bits)
 * into output bytes.
 */
","\android\util\Base64.java"
"android.util.Decoder.value","false","false","true","false","false","int","","","","\android\util\Base64.java"
"android.util.Base64.alphabet","false","false","true","false","true","byte","","","","\android\util\Base64.java"
"android.util.Base64.DECODE_WEBSAFE","false","false","true","true","true","int","{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }","","/**
 * Decode lookup table for the ""web safe"" variant (RFC 3548
 * sec. 4) where - and _ replace + and /.
 */
","\android\util\Base64.java"
"android.util.Encoder.tail","false","false","true","false","true","byte","","","","\android\util\Base64.java"
"android.util.Coder.output","true","false","false","false","false","byte","","","","\android\util\Base64.java"
"android.util.Encoder.count","false","false","true","false","false","int","","","","\android\util\Base64.java"
"android.util.Base64.do_padding","true","false","false","false","true","boolean","","","","\android\util\Base64.java"
"android.util.Base64.NO_WRAP","true","false","false","true","true","int","2","","/**
 * Encoder flag bit to omit all line terminators (i.e., the output
 * will be on one long line).
 */
","\android\util\Base64.java"
"android.util.Decoder.alphabet","false","false","true","false","true","int","","","","\android\util\Base64.java"
"android.util.Encoder.do_newline","true","false","false","false","true","boolean","","","","\android\util\Base64.java"
"android.util.Encoder.alphabet","false","false","true","false","true","byte","","","","\android\util\Base64.java"
"android.util.Decoder.EQUALS","false","false","true","true","true","int","-2","","","\android\util\Base64.java"
"android.util.Base64.URL_SAFE","true","false","false","true","true","int","8","","/**
 * Encoder/decoder flag bit to indicate using the ""URL and
 * filename safe"" variant of Base64 (see RFC 3548 section 4) where
 * {@code -} and {@code _} are used in place of {@code +} and
 * {@code /}.
 */
","\android\util\Base64.java"
"android.util.Base64.do_newline","true","false","false","false","true","boolean","","","","\android\util\Base64.java"
"android.util.Encoder.do_padding","true","false","false","false","true","boolean","","","","\android\util\Base64.java"
"android.util.Base64.NO_PADDING","true","false","false","true","true","int","1","","/**
 * Encoder flag bit to omit the padding '=' characters at the end
 * of the output (if any).
 */
","\android\util\Base64.java"
"android.util.Base64.count","false","false","true","false","false","int","","","","\android\util\Base64.java"
"android.util.Base64.CRLF","true","false","false","true","true","int","4","","/**
 * Encoder flag bit to indicate lines should be terminated with a
 * CRLF pair instead of just an LF.  Has no effect if {@code
 * NO_WRAP} is specified as well.
 */
","\android\util\Base64.java"
"android.util.Base64.EQUALS","false","false","true","true","true","int","-2","","","\android\util\Base64.java"
"android.util.Base64.state","false","false","true","false","false","int","","","// state number (0 to 6)
","\android\util\Base64.java"
"android.util.Encoder.ENCODE","false","false","true","true","true","byte","{ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/' }","","/**
 * Lookup table for turning Base64 alphabet positions (6 bits)
 * into output bytes.
 */
","\android\util\Base64.java"
"android.util.Base64.tail","false","false","true","false","true","byte","","","","\android\util\Base64.java"
"android.util.Base64.LINE_GROUPS","true","false","false","true","true","int","19","","/**
 * Emit a new line every this many output tuples.  Corresponds to
 * a 76-character line length (the maximum allowable according to
 * <a href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045</a>).
 */
","\android\util\Base64.java"
"android.util.Encoder.tailLen","false","false","false","false","false","int","","","/* package */
","\android\util\Base64.java"
"android.util.Base64.value","false","false","true","false","false","int","","","","\android\util\Base64.java"
"android.util.Base64.output","true","false","false","false","false","byte","","","","\android\util\Base64.java"
"android.util.Encoder.LINE_GROUPS","true","false","false","true","true","int","19","","/**
 * Emit a new line every this many output tuples.  Corresponds to
 * a 76-character line length (the maximum allowable according to
 * <a href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045</a>).
 */
","\android\util\Base64.java"
"android.util.Encoder.do_cr","true","false","false","false","true","boolean","","","","\android\util\Base64.java"
"android.util.Base64.tailLen","false","false","false","false","false","int","","","/* package */
","\android\util\Base64.java"
"android.util.Decoder.DECODE_WEBSAFE","false","false","true","true","true","int","{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }","","/**
 * Decode lookup table for the ""web safe"" variant (RFC 3548
 * sec. 4) where - and _ replace + and /.
 */
","\android\util\Base64.java"
"android.util.Base64.op","true","false","false","false","false","int","","","","\android\util\Base64.java"
"android.util.Base64.ENCODE","false","false","true","true","true","byte","{ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/' }","","/**
 * Lookup table for turning Base64 alphabet positions (6 bits)
 * into output bytes.
 */
","\android\util\Base64.java"
"android.text.style.TypefaceSpan.mFamily","false","false","true","false","true","String","","","","\android\text\style\TypefaceSpan.java"
"android.widget.ScrollView.INVALID_POINTER","false","false","true","true","true","int","-1","","/**
 * Sentinel value for no current active pointer.
 * Used by {@link #mActivePointerId}.
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.mFillViewport","false","false","true","false","false","boolean","","","/**
 * When set to true, the scroll view measure its child to make it fill the currently
 * visible area.
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.mMinimumVelocity","false","false","true","false","false","int","","","","\android\widget\ScrollView.java"
"android.widget.ScrollView.mScrollViewMovedFocus","false","false","true","false","false","boolean","","","/**
 * Flag to indicate that we are moving focus ourselves. This is so the
 * code that watches for focus changes initiated outside this ScrollView
 * knows that it does not have to do anything.
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.mLastMotionY","false","false","true","false","false","float","","","/**
 * Position of the last motion event.
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.mVelocityTracker","false","false","true","false","false","VelocityTracker","","","/**
 * Determines speed during touch scrolling
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.mTouchSlop","false","false","true","false","false","int","","","","\android\widget\ScrollView.java"
"android.widget.ScrollView.mActivePointerId","false","false","true","false","false","int","INVALID_POINTER","","/**
 * ID of the active pointer. This is used to retain consistency during
 * drags/flings if multiple pointers are used.
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.mLastScroll","false","false","true","false","false","long","","","","\android\widget\ScrollView.java"
"android.widget.ScrollView.mScroller","false","false","true","false","false","Scroller","","","","\android\widget\ScrollView.java"
"android.widget.ScrollView.mChildToScrollTo","false","false","true","false","false","View","null","","/**
 * The child to give focus to in the event that a child has requested focus while the
 * layout is dirty. This prevents the scroll from being wrong if the child has not been
 * laid out before requesting focus.
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.MAX_SCROLL_FACTOR","false","false","false","true","true","float","0.5f","","","\android\widget\ScrollView.java"
"android.widget.ScrollView.mTempRect","false","false","true","false","true","Rect","new Rect()","","","\android\widget\ScrollView.java"
"android.widget.ScrollView.mIsLayoutDirty","false","false","true","false","false","boolean","true","","/**
 * True when the layout has changed but the traversal has not come through yet.
 * Ideally the view hierarchy would keep track of this for us.
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.mIsBeingDragged","false","false","true","false","false","boolean","false","","/**
 * True if the user is currently dragging this ScrollView around. This is
 * not the same as 'is being flinged', which can be checked by
 * mScroller.isFinished() (flinging begins when the user lifts his finger).
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.mSmoothScrollingEnabled","false","false","true","false","false","boolean","true","","/**
 * Whether arrow scrolling is animated.
 */
","\android\widget\ScrollView.java"
"android.widget.ScrollView.ANIMATED_SCROLL_GAP","false","false","false","true","true","int","250","","","\android\widget\ScrollView.java"
"android.widget.ScrollView.mMaximumVelocity","false","false","true","false","false","int","","","","\android\widget\ScrollView.java"
"android.os.RemoteCallback.mTarget","false","false","false","false","true","IRemoteCallback","","","","\android\os\RemoteCallback.java"
"android.os.RemoteCallback.CREATOR","true","false","false","true","true","Parcelable.Creator<RemoteCallback>","new Parcelable.Creator<RemoteCallback>() {

    public RemoteCallback createFromParcel(Parcel in) {
        IBinder target = in.readStrongBinder();
        return target != null ? new RemoteCallbackProxy(IRemoteCallback.Stub.asInterface(target)) : null;
    }

    public RemoteCallback[] newArray(int size) {
        return new RemoteCallback[size];
    }
}","","","\android\os\RemoteCallback.java"
"android.os.DeliverResult.mResult","false","false","false","false","true","Bundle","","","","\android\os\RemoteCallback.java"
"android.os.RemoteCallback.mResult","false","false","false","false","true","Bundle","","","","\android\os\RemoteCallback.java"
"android.os.RemoteCallback.mHandler","false","false","false","false","true","Handler","","","","\android\os\RemoteCallback.java"
"android.widget.ToggleButton.mIndicatorDrawable","false","false","true","false","false","Drawable","","","","\android\widget\ToggleButton.java"
"android.widget.ToggleButton.mTextOn","false","false","true","false","false","CharSequence","","","","\android\widget\ToggleButton.java"
"android.widget.ToggleButton.mDisabledAlpha","false","false","true","false","false","float","","","","\android\widget\ToggleButton.java"
"android.widget.ToggleButton.mTextOff","false","false","true","false","false","CharSequence","","","","\android\widget\ToggleButton.java"
"android.widget.ToggleButton.NO_ALPHA","false","false","true","true","true","int","0xFF","","","\android\widget\ToggleButton.java"
"android.net.ConnectivityManager.TETHER_ERROR_DISABLE_NAT_ERROR","true","false","false","true","true","int","9","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_ERRORED_TETHER","true","false","false","true","true","String","""erroredArray""","","/**
 * @hide
 * gives a String[]
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_EXTRA_INFO","true","false","false","true","true","String","""extraInfo""","","/**
 * The lookup key for a string that provides optionally supplied
 * extra information about the network state. The information
 * may be passed up from the lower networking layers, and its
 * meaning may be specific to a particular network type. Retrieve
 * it with {@link android.content.Intent#getStringExtra(String)}.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_SERVICE_UNAVAIL","true","false","false","true","true","int","2","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_UNKNOWN_IFACE","true","false","false","true","true","int","1","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_TETHER_IFACE_ERROR","true","false","false","true","true","int","6","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_UNSUPPORTED","true","false","false","true","true","int","3","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.ACTION_BACKGROUND_DATA_SETTING_CHANGED","true","false","false","true","true","String","""android.net.conn.BACKGROUND_DATA_SETTING_CHANGED""","@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)","/**
 * Broadcast Action: The setting for background data usage has changed
 * values. Use {@link #getBackgroundDataSetting()} to get the current value.
 * <p>
 * If an application uses the network in the background, it should listen
 * for this broadcast and stop using the background data if the value is
 * false.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_NO_CONNECTIVITY","true","false","false","true","true","String","""noConnectivity""","","/**
 * The lookup key for a boolean that indicates whether there is a
 * complete lack of connectivity, i.e., no network is available.
 * Retrieve it with {@link android.content.Intent#getBooleanExtra(String,boolean)}.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_MASTER_ERROR","true","false","false","true","true","int","5","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.DEFAULT_NETWORK_PREFERENCE","true","false","false","true","true","int","TYPE_WIFI","","","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.CONNECTIVITY_ACTION","true","false","false","true","true","String","""android.net.conn.CONNECTIVITY_CHANGE""","","/**
 * A change in network connectivity has occurred. A connection has either
 * been established or lost. The NetworkInfo for the affected network is
 * sent as an extra; it should be consulted to see what kind of
 * connectivity event occurred.
 * <p/>
 * If this is a connection that was the result of failing over from a
 * disconnected network, then the FAILOVER_CONNECTION boolean extra is
 * set to true.
 * <p/>
 * For a loss of connectivity, if the connectivity manager is attempting
 * to connect (or has already connected) to another network, the
 * NetworkInfo for the new network is also passed as an extra. This lets
 * any receivers of the broadcast know that they should not necessarily
 * tell the user that no data traffic will be possible. Instead, the
 * reciever should expect another broadcast soon, indicating either that
 * the failover attempt succeeded (and so there is still overall data
 * connectivity), or that the failover attempt failed, meaning that all
 * connectivity has been lost.
 * <p/>
 * For a disconnect event, the boolean extra EXTRA_NO_CONNECTIVITY
 * is set to {@code true} if there are no connected networks at all.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_AVAILABLE_TETHER","true","false","false","true","true","String","""availableArray""","","/**
 * @hide
 * gives a String[]
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_IFACE_CFG_ERROR","true","false","false","true","true","int","10","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TYPE_MOBILE_HIPRI","true","false","false","true","true","int","5","","/**
 * A High Priority Mobile data connection.  This connection is typically
 * the same as {@link #TYPE_MOBILE} but the routing setup is different.
 * Only requesting processes will have access to the Mobile DNS servers
 * and only IP's explicitly requested via {@link #requestRouteToHost}
 * will route over this interface if a default route exists.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.MAX_NETWORK_TYPE","true","false","false","true","true","int","TYPE_MOBILE_HIPRI","","/**
 * {@hide} TODO: Need to adjust this for WiMAX.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.MAX_RADIO_TYPE","true","false","false","true","true","int","TYPE_WIFI","","/**
 * {@hide} TODO: Need to adjust this for WiMAX.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TYPE_WIMAX","true","false","false","true","true","int","6","","/**
 * The Default WiMAX data connection.  When active, all data traffic
 * will use this connection by default.  Should not coexist with other
 * default connections.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TYPE_MOBILE_MMS","true","false","false","true","true","int","2","","/**
 * An MMS-specific Mobile data connection.  This connection may be the
 * same as {@link #TYPE_MOBILE} but it may be different.  This is used
 * by applications needing to talk to the carrier's Multimedia Messaging
 * Service servers.  It may coexist with default data connections.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_REASON","true","false","false","true","true","String","""reason""","","/**
 * The lookup key for a string that indicates why an attempt to connect
 * to a network failed. The string has no particular structure. It is
 * intended to be used in notifications presented to users. Retrieve
 * it with {@link android.content.Intent#getStringExtra(String)}.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_NO_ERROR","true","false","false","true","true","int","0","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_UNAVAIL_IFACE","true","false","false","true","true","int","4","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_NETWORK_INFO","true","false","false","true","true","String","""networkInfo""","","/**
 * The lookup key for a {@link NetworkInfo} object. Retrieve with
 * {@link android.content.Intent#getParcelableExtra(String)}.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_ACTIVE_TETHER","true","false","false","true","true","String","""activeArray""","","/**
 * @hide
 * gives a String[]
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TYPE_WIFI","true","false","false","true","true","int","1","","/**
 * The Default WIFI data connection.  When active, all data traffic
 * will use this connection by default.  Should not coexist with other
 * default connections.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_ENABLE_NAT_ERROR","true","false","false","true","true","int","8","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TYPE_MOBILE_DUN","true","false","false","true","true","int","4","","/**
 * A DUN-specific Mobile data connection.  This connection may be the
 * same as {@link #TYPE_MOBILE} but it may be different.  This is used
 * by applicaitons performing a Dial Up Networking bridge so that
 * the carrier is aware of DUN traffic.  It may coexist with default data
 * connections.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_IS_FAILOVER","true","false","false","true","true","String","""isFailover""","","/**
 * The lookup key for a boolean that indicates whether a connect event
 * is for a network to which the connectivity manager was failing over
 * following a disconnect on another network.
 * Retrieve it with {@link android.content.Intent#getBooleanExtra(String,boolean)}.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TYPE_MOBILE","true","false","false","true","true","int","0","","/**
 * The Default Mobile data connection.  When active, all data traffic
 * will use this connection by default.  Should not coexist with other
 * default connections.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.mService","false","false","true","false","false","IConnectivityManager","","","","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.ACTION_TETHER_STATE_CHANGED","true","false","false","true","true","String","""android.net.conn.TETHER_STATE_CHANGED""","","/**
 * Broadcast Action: A tetherable connection has come or gone
 * TODO - finish the doc
 * @hide
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TYPE_MOBILE_SUPL","true","false","false","true","true","int","3","","/**
 * A SUPL-specific Mobile data connection.  This connection may be the
 * same as {@link #TYPE_MOBILE} but it may be different.  This is used
 * by applications needing to talk to the carrier's Secure User Plane
 * Location servers for help locating the device.  It may coexist with
 * default data connections.
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.TETHER_ERROR_UNTETHER_IFACE_ERROR","true","false","false","true","true","int","7","","/**
 * {@hide}
 */
","\android\net\ConnectivityManager.java"
"android.net.ConnectivityManager.EXTRA_OTHER_NETWORK_INFO","true","false","false","true","true","String","""otherNetwork""","","/**
 * The lookup key for a {@link NetworkInfo} object. This is supplied when
 * there is another network that it may be possible to connect to. Retrieve with
 * {@link android.content.Intent#getParcelableExtra(String)}.
 */
","\android\net\ConnectivityManager.java"
"com.android.internal.preference.YesNoPreference.mWasPositiveResult","false","false","true","false","false","boolean","","","","\com\android\internal\preference\YesNoPreference.java"
"com.android.internal.preference.YesNoPreference.wasPositiveResult","false","false","false","false","false","boolean","","","","\com\android\internal\preference\YesNoPreference.java"
"com.android.internal.preference.YesNoPreference.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\com\android\internal\preference\YesNoPreference.java"
"com.android.internal.preference.SavedState.wasPositiveResult","false","false","false","false","false","boolean","","","","\com\android\internal\preference\YesNoPreference.java"
"com.android.internal.preference.SavedState.CREATOR","true","false","false","true","true","Parcelable.Creator<SavedState>","new Parcelable.Creator<SavedState>() {

    public SavedState createFromParcel(Parcel in) {
        return new SavedState(in);
    }

    public SavedState[] newArray(int size) {
        return new SavedState[size];
    }
}","","","\com\android\internal\preference\YesNoPreference.java"
"android.bluetooth.BluetoothOutputStream.mSocket","false","false","true","false","false","BluetoothSocket","","","","\android\bluetooth\BluetoothOutputStream.java"
"android.webkit.StreamLoader.mData","false","false","true","false","false","byte","","","// buffer to pass data to loader with.
","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.MSG_HEADERS","false","false","true","true","true","int","101","","// Send headers to loader
","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.mLoadListener","false","true","false","false","true","LoadListener","","","// loader class
","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.MSG_END","false","false","true","true","true","int","103","","// Send endData to loader
","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.mContentLength","false","true","false","false","false","long","","","// content length of data
","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.MSG_DATA","false","false","true","true","true","int","102","","// Send data to loader
","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.mContext","false","true","false","false","true","Context","","","","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.mDataStream","false","true","false","false","false","InputStream","","","// stream to read data from
","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.mHandler","false","false","true","false","false","Handler","","","// Handler which will be initialized in the thread where load() is called.
","\android\webkit\StreamLoader.java"
"android.webkit.StreamLoader.MSG_STATUS","false","false","true","true","true","int","100","","// Send status to loader
","\android\webkit\StreamLoader.java"
"android.os.MyRunnable.mResultCode","false","false","false","false","true","int","","","","\android\os\ResultReceiver.java"
"android.os.ResultReceiver.mResultData","false","false","false","false","true","Bundle","","","","\android\os\ResultReceiver.java"
"android.os.ResultReceiver.mReceiver","false","false","false","false","false","IResultReceiver","","","","\android\os\ResultReceiver.java"
"android.os.ResultReceiver.mLocal","false","false","false","false","true","boolean","","","","\android\os\ResultReceiver.java"
"android.os.ResultReceiver.mResultCode","false","false","false","false","true","int","","","","\android\os\ResultReceiver.java"
"android.os.MyRunnable.mResultData","false","false","false","false","true","Bundle","","","","\android\os\ResultReceiver.java"
"android.os.ResultReceiver.mHandler","false","false","false","false","true","Handler","","","","\android\os\ResultReceiver.java"
"android.os.ResultReceiver.CREATOR","true","false","false","true","true","Parcelable.Creator<ResultReceiver>","new Parcelable.Creator<ResultReceiver>() {

    public ResultReceiver createFromParcel(Parcel in) {
        return new ResultReceiver(in);
    }

    public ResultReceiver[] newArray(int size) {
        return new ResultReceiver[size];
    }
}","","","\android\os\ResultReceiver.java"
"android.os.Build.BASE_1_1","true","false","false","true","true","int","2","","/**
 * February 2009: First Android update, officially called 1.1.
 */
","\android\os\Build.java"
"android.os.Build.BOOTLOADER","true","false","false","true","true","String","getString(""ro.bootloader"")","","/**
 * The system bootloader version number.
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.CUPCAKE","true","false","false","true","true","int","3","","/**
 * May 2009: Android 1.5.
 */
","\android\os\Build.java"
"android.os.Build.INCREMENTAL","true","false","false","true","true","String","getString(""ro.build.version.incremental"")","","/**
 * The internal value used by the underlying source control to
 * represent this build.  E.g., a perforce changelist number
 * or a git hash.
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.BASE_1_1","true","false","false","true","true","int","2","","/**
 * February 2009: First Android update, officially called 1.1.
 */
","\android\os\Build.java"
"android.os.Build.UNKNOWN","true","false","false","true","true","String","""unknown""","","/**
 * Value used for when a build property is unknown.
 */
","\android\os\Build.java"
"android.os.Build.TIME","true","false","false","true","true","long","getLong(""ro.build.date.utc"") * 1000","","// The following properties only make sense for internal engineering builds.
","\android\os\Build.java"
"android.os.Build.FROYO","true","false","false","true","true","int","8","","","\android\os\Build.java"
"android.os.Build.HARDWARE","true","false","false","true","true","String","getString(""ro.hardware"")","","/**
 * The name of the hardware (from the kernel command line or /proc).
 */
","\android\os\Build.java"
"android.os.Build.MANUFACTURER","true","false","false","true","true","String","getString(""ro.product.manufacturer"")","","/**
 * The manufacturer of the product/hardware.
 */
","\android\os\Build.java"
"android.os.Build.SDK_INT","true","false","false","true","true","int","SystemProperties.getInt(""ro.build.version.sdk"", 0)","","/**
 * The user-visible SDK version of the framework; its possible
 * values are defined in {@link Build.VERSION_CODES}.
 */
","\android\os\Build.java"
"android.os.VERSION.INCREMENTAL","true","false","false","true","true","String","getString(""ro.build.version.incremental"")","","/**
 * The internal value used by the underlying source control to
 * represent this build.  E.g., a perforce changelist number
 * or a git hash.
 */
","\android\os\Build.java"
"android.os.Build.RELEASE","true","false","false","true","true","String","getString(""ro.build.version.release"")","","/**
 * The user-visible version string.  E.g., ""1.0"" or ""3.4b5"".
 */
","\android\os\Build.java"
"android.os.Build.CODENAME","true","false","false","true","true","String","getString(""ro.build.version.codename"")","","/**
 * The current development codename, or the string ""REL"" if this is
 * a release build.
 */
","\android\os\Build.java"
"android.os.VERSION.CODENAME","true","false","false","true","true","String","getString(""ro.build.version.codename"")","","/**
 * The current development codename, or the string ""REL"" if this is
 * a release build.
 */
","\android\os\Build.java"
"android.os.Build.MODEL","true","false","false","true","true","String","getString(""ro.product.model"")","","/**
 * The end-user-visible name for the end product.
 */
","\android\os\Build.java"
"android.os.Build.CPU_ABI2","true","false","false","true","true","String","getString(""ro.product.cpu.abi2"")","","/**
 * The name of the second instruction set (CPU type + ABI convention) of native code.
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.ECLAIR_MR1","true","false","false","true","true","int","7","","/**
 * January 2010: Android 2.1
 */
","\android\os\Build.java"
"android.os.Build.CUR_DEVELOPMENT","true","false","false","true","true","int","10000","","/**
 * Magic version number for a current development build, which has
 * not yet turned into an official release.
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.DONUT","true","false","false","true","true","int","4","","/**
 * September 2009: Android 1.6.
 *
 * <p>Applications targeting this or a later release will get these
 * new changes in behavior:</p>
 * <ul>
 * <li> They must explicitly request the
 * {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} permission to be
 * able to modify the contents of the SD card.  (Apps targeting
 * earlier versions will always request the permission.)
 * <li> They must explicitly request the
 * {@link android.Manifest.permission#READ_PHONE_STATE} permission to be
 * able to be able to retrieve phone state info.  (Apps targeting
 * earlier versions will always request the permission.)
 * <li> They are assumed to support different screen densities and
 * sizes.  (Apps targeting earlier versions are assumed to only support
 * medium density normal size screens unless otherwise indicated).
 * They can still explicitly specify screen support either way with the
 * supports-screens manifest tag.
 * </ul>
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.BASE","true","false","false","true","true","int","1","","/**
 * October 2008: The original, first, version of Android.  Yay!
 */
","\android\os\Build.java"
"android.os.Build.CUPCAKE","true","false","false","true","true","int","3","","/**
 * May 2009: Android 1.5.
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.FROYO","true","false","false","true","true","int","8","","","\android\os\Build.java"
"android.os.Build.DEVICE","true","false","false","true","true","String","getString(""ro.product.device"")","","/**
 * The name of the industrial design.
 */
","\android\os\Build.java"
"android.os.VERSION.SDK","true","false","false","true","true","String","getString(""ro.build.version.sdk"")","@Deprecated","/**
 * The user-visible SDK version of the framework in its raw String
 * representation; use {@link #SDK_INT} instead.
 *
 * @deprecated Use {@link #SDK_INT} to easily get this as an integer.
 */
","\android\os\Build.java"
"android.os.Build.TYPE","true","false","false","true","true","String","getString(""ro.build.type"")","","/**
 * The type of build, like ""user"" or ""eng"".
 */
","\android\os\Build.java"
"android.os.Build.FINGERPRINT","true","false","false","true","true","String","getString(""ro.build.fingerprint"")","","/**
 * A string that uniquely identifies this build.  Do not attempt to parse this value.
 */
","\android\os\Build.java"
"android.os.Build.BRAND","true","false","false","true","true","String","getString(""ro.product.brand"")","","/**
 * The brand (e.g., carrier) the software is customized for, if any.
 */
","\android\os\Build.java"
"android.os.VERSION.SDK_INT","true","false","false","true","true","int","SystemProperties.getInt(""ro.build.version.sdk"", 0)","","/**
 * The user-visible SDK version of the framework; its possible
 * values are defined in {@link Build.VERSION_CODES}.
 */
","\android\os\Build.java"
"android.os.Build.BASE","true","false","false","true","true","int","1","","/**
 * October 2008: The original, first, version of Android.  Yay!
 */
","\android\os\Build.java"
"android.os.Build.ECLAIR_0_1","true","false","false","true","true","int","6","","/**
 * December 2009: Android 2.0.1
 */
","\android\os\Build.java"
"android.os.Build.ECLAIR","true","false","false","true","true","int","5","","/**
 * November 2009: Android 2.0
 *
 * <p>Applications targeting this or a later release will get these
 * new changes in behavior:</p>
 * <ul>
 * <li> The {@link android.app.Service#onStartCommand
 * Service.onStartCommand} function will return the new
 * {@link android.app.Service#START_STICKY} behavior instead of the
 * old compatibility {@link android.app.Service#START_STICKY_COMPATIBILITY}.
 * <li> The {@link android.app.Activity} class will now execute back
 * key presses on the key up instead of key down, to be able to detect
 * canceled presses from virtual keys.
 * <li> The {@link android.widget.TabWidget} class will use a new color scheme
 * for tabs. In the new scheme, the foreground tab has a medium gray background
 * the background tabs have a dark gray background.
 * </ul>
 */
","\android\os\Build.java"
"android.os.Build.PRODUCT","true","false","false","true","true","String","getString(""ro.product.name"")","","/**
 * The name of the overall product.
 */
","\android\os\Build.java"
"android.os.Build.HOST","true","false","false","true","true","String","getString(""ro.build.host"")","","","\android\os\Build.java"
"android.os.Build.RADIO","true","false","false","true","true","String","getString(""gsm.version.baseband"")","","/**
 * The radio firmware version number.
 */
","\android\os\Build.java"
"android.os.Build.ECLAIR_MR1","true","false","false","true","true","int","7","","/**
 * January 2010: Android 2.1
 */
","\android\os\Build.java"
"android.os.Build.TAGS","true","false","false","true","true","String","getString(""ro.build.tags"")","","/**
 * Comma-separated tags describing the build, like ""unsigned,debug"".
 */
","\android\os\Build.java"
"android.os.Build.DONUT","true","false","false","true","true","int","4","","/**
 * September 2009: Android 1.6.
 *
 * <p>Applications targeting this or a later release will get these
 * new changes in behavior:</p>
 * <ul>
 * <li> They must explicitly request the
 * {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} permission to be
 * able to modify the contents of the SD card.  (Apps targeting
 * earlier versions will always request the permission.)
 * <li> They must explicitly request the
 * {@link android.Manifest.permission#READ_PHONE_STATE} permission to be
 * able to be able to retrieve phone state info.  (Apps targeting
 * earlier versions will always request the permission.)
 * <li> They are assumed to support different screen densities and
 * sizes.  (Apps targeting earlier versions are assumed to only support
 * medium density normal size screens unless otherwise indicated).
 * They can still explicitly specify screen support either way with the
 * supports-screens manifest tag.
 * </ul>
 */
","\android\os\Build.java"
"android.os.Build.ID","true","false","false","true","true","String","getString(""ro.build.id"")","","/**
 * Either a changelist number, or a label like ""M4-rc20"".
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.ECLAIR_0_1","true","false","false","true","true","int","6","","/**
 * December 2009: Android 2.0.1
 */
","\android\os\Build.java"
"android.os.Build.SDK","true","false","false","true","true","String","getString(""ro.build.version.sdk"")","@Deprecated","/**
 * The user-visible SDK version of the framework in its raw String
 * representation; use {@link #SDK_INT} instead.
 *
 * @deprecated Use {@link #SDK_INT} to easily get this as an integer.
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.CUR_DEVELOPMENT","true","false","false","true","true","int","10000","","/**
 * Magic version number for a current development build, which has
 * not yet turned into an official release.
 */
","\android\os\Build.java"
"android.os.Build.CPU_ABI","true","false","false","true","true","String","getString(""ro.product.cpu.abi"")","","/**
 * The name of the instruction set (CPU type + ABI convention) of native code.
 */
","\android\os\Build.java"
"android.os.VERSION_CODES.ECLAIR","true","false","false","true","true","int","5","","/**
 * November 2009: Android 2.0
 *
 * <p>Applications targeting this or a later release will get these
 * new changes in behavior:</p>
 * <ul>
 * <li> The {@link android.app.Service#onStartCommand
 * Service.onStartCommand} function will return the new
 * {@link android.app.Service#START_STICKY} behavior instead of the
 * old compatibility {@link android.app.Service#START_STICKY_COMPATIBILITY}.
 * <li> The {@link android.app.Activity} class will now execute back
 * key presses on the key up instead of key down, to be able to detect
 * canceled presses from virtual keys.
 * <li> The {@link android.widget.TabWidget} class will use a new color scheme
 * for tabs. In the new scheme, the foreground tab has a medium gray background
 * the background tabs have a dark gray background.
 * </ul>
 */
","\android\os\Build.java"
"android.os.VERSION.RELEASE","true","false","false","true","true","String","getString(""ro.build.version.release"")","","/**
 * The user-visible version string.  E.g., ""1.0"" or ""3.4b5"".
 */
","\android\os\Build.java"
"android.os.Build.USER","true","false","false","true","true","String","getString(""ro.build.user"")","","","\android\os\Build.java"
"android.os.Build.DISPLAY","true","false","false","true","true","String","getString(""ro.build.display.id"")","","/**
 * A build ID string meant for displaying to the user
 */
","\android\os\Build.java"
"android.os.Build.BOARD","true","false","false","true","true","String","getString(""ro.product.board"")","","/**
 * The name of the underlying board, like ""goldfish"".
 */
","\android\os\Build.java"
"com.android.internal.os.PowerProfile.TAG_ARRAYITEM","false","false","true","true","true","String","""value""","","","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_CPU_SPEEDS","true","false","false","true","true","String","""cpu.speeds""","","","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_NONE","true","false","false","true","true","String","""none""","","/**
 * No power consumption, or accounted for elsewhere.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.ATTR_NAME","false","false","true","true","true","String","""name""","","","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_BLUETOOTH_ON","true","false","false","true","true","String","""bluetooth.on""","","/**
 * Power consumption when Bluetooth driver is on.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_RADIO_SCANNING","true","false","false","true","true","String","""radio.scanning""","","/**
 * Power consumption when cell radio is hunting for a signal.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_SCREEN_ON","true","false","false","true","true","String","""screen.on""","","/**
 * Power consumption when screen is on, not including the backlight power.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_GPS_ON","true","false","false","true","true","String","""gps.on""","","/**
 * Power consumption when GPS is on.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_VIDEO","true","false","false","true","true","String","""dsp.video""","","/**
 * Power consumed by any media hardware when playing back video content. This is in addition
 * to the CPU power, probably due to a DSP.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_WIFI_SCAN","true","false","false","true","true","String","""wifi.scan""","","/**
 * Power consumption when WiFi driver is scanning for networks.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.TAG_ITEM","false","false","true","true","true","String","""item""","","","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_RADIO_ACTIVE","true","false","false","true","true","String","""radio.active""","","/**
 * Power consumption when talking on the phone.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_BLUETOOTH_ACTIVE","true","false","false","true","true","String","""bluetooth.active""","","/**
 * Power consumption when Bluetooth driver is transmitting/receiving.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_WIFI_ACTIVE","true","false","false","true","true","String","""wifi.active""","","/**
 * Power consumption when WiFi driver is transmitting/receiving.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_AUDIO","true","false","false","true","true","String","""dsp.audio""","","/**
 * Power consumed by the audio hardware when playing back audio content. This is in addition
 * to the CPU power, probably due to a DSP and / or amplifier.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.TAG_DEVICE","false","false","true","true","true","String","""device""","","","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_BLUETOOTH_AT_CMD","true","false","false","true","true","String","""bluetooth.at""","","/**
 * Power consumption when Bluetooth driver gets an AT command.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_SCREEN_FULL","true","false","false","true","true","String","""screen.full""","","/**
 * Power consumption at full backlight brightness. If the backlight is at
 * 50% brightness, then this should be multiplied by 0.5
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_CPU_ACTIVE","true","false","false","true","true","String","""cpu.active""","","/**
 * Power consumption when CPU is in power collapse mode.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_RADIO_ON","true","false","false","true","true","String","""radio.on""","","/**
 * Power consumption when cell radio is on but not on a call.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_WIFI_ON","true","false","false","true","true","String","""wifi.on""","","/**
 * Power consumption when WiFi driver is on.
 */
","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.sPowerMap","false","false","false","true","true","HashMap<String,Object>","new HashMap<String, Object>()","","","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.TAG_ARRAY","false","false","true","true","true","String","""array""","","","\com\android\internal\os\PowerProfile.java"
"com.android.internal.os.PowerProfile.POWER_CPU_IDLE","true","false","false","true","true","String","""cpu.idle""","","/**
 * Power consumption when CPU is in power collapse mode.
 */
","\com\android\internal\os\PowerProfile.java"
"android.text.Spanned.SPAN_PRIORITY_SHIFT","true","false","false","true","true","int","16","","/**
 * The bits numbered just above SPAN_PRIORITY_SHIFT determine the order
 * of change notifications -- higher numbers go first.  You probably
 * don't need to set this; it is used so that when text changes, the
 * text layout gets the chance to update itself before any other
 * callbacks can inquire about the layout of the text.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_MARK_POINT","true","false","false","true","true","int","0x12","","/**
 * SPAN_MARK_POINT is a synonym for {@link #SPAN_INCLUSIVE_INCLUSIVE}.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_POINT_MARK","true","false","false","true","true","int","0x21","","/**
 * SPAN_POINT_MARK is a synonym for {@link #SPAN_EXCLUSIVE_EXCLUSIVE}.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_INCLUSIVE_INCLUSIVE","true","false","false","true","true","int","SPAN_MARK_POINT","","/**
 * Spans of type SPAN_INCLUSIVE_INCLUSIVE expand
 * to include text inserted at either their starting or ending point.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_INCLUSIVE_EXCLUSIVE","true","false","false","true","true","int","SPAN_MARK_MARK","","/**
 * Non-0-length spans of type SPAN_INCLUSIVE_EXCLUSIVE expand
 * to include text inserted at their starting point but not at their
 * ending point.  When 0-length, they behave like marks.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_MARK_MARK","true","false","false","true","true","int","0x11","","/**
 * 0-length spans with type SPAN_MARK_MARK behave like text marks:
 * they remain at their original offset when text is inserted
 * at that offset.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_PRIORITY","true","false","false","true","true","int","0xFF << SPAN_PRIORITY_SHIFT","","/**
 * The bits specified by the SPAN_PRIORITY bitmap determine the order
 * of change notifications -- higher numbers go first.  You probably
 * don't need to set this; it is used so that when text changes, the
 * text layout gets the chance to update itself before any other
 * callbacks can inquire about the layout of the text.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_COMPOSING","true","false","false","true","true","int","0x100","","/**
 * This flag is set on spans that are being used to apply temporary
 * styling information on the composing text of an input method, so that
 * they can be found and removed when the composing text is being
 * replaced.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_PARAGRAPH","true","false","false","true","true","int","0x33","","/**
 * SPAN_PARAGRAPH behaves like SPAN_INCLUSIVE_EXCLUSIVE
 * (SPAN_MARK_MARK), except that if either end of the span is
 * at the end of the buffer, that end behaves like _POINT
 * instead (so SPAN_INCLUSIVE_INCLUSIVE if it starts in the
 * middle and ends at the end, or SPAN_EXCLUSIVE_INCLUSIVE
 * if it both starts and ends at the end).
 * <p>
 * Its endpoints must be the start or end of the buffer or
 * immediately after a \n character, and if the \n
 * that anchors it is deleted, the endpoint is pulled to the
 * next \n that follows in the buffer (or to the end of
 * the buffer).
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_POINT_MARK_MASK","true","false","false","true","true","int","0x33","","/**
 * Bitmask of bits that are relevent for controlling point/mark behavior
 * of spans.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_USER_SHIFT","true","false","false","true","true","int","24","","/**
 * The bits numbered SPAN_USER_SHIFT and above are available
 * for callers to use to store scalar data associated with their
 * span object.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_POINT_POINT","true","false","false","true","true","int","0x22","","/**
 * 0-length spans with type SPAN_POINT_POINT behave like cursors:
 * they are pushed forward by the length of the insertion when text
 * is inserted at their offset.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_EXCLUSIVE_EXCLUSIVE","true","false","false","true","true","int","SPAN_POINT_MARK","","/**
 * Spans of type SPAN_EXCLUSIVE_EXCLUSIVE do not expand
 * to include text inserted at either their starting or ending point.
 * They can never have a length of 0 and are automatically removed
 * from the buffer if all the text they cover is removed.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_EXCLUSIVE_INCLUSIVE","true","false","false","true","true","int","SPAN_POINT_POINT","","/**
 * Non-0-length spans of type SPAN_INCLUSIVE_EXCLUSIVE expand
 * to include text inserted at their ending point but not at their
 * starting point.  When 0-length, they behave like points.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_INTERMEDIATE","true","false","false","true","true","int","0x200","","/**
 * This flag will be set for intermediate span changes, meaning there
 * is guaranteed to be another change following it.  Typically it is
 * used for {@link Selection} which automatically uses this with the first
 * offset it sets when updating the selection.
 */
","\android\text\Spanned.java"
"android.text.Spanned.SPAN_USER","true","false","false","true","true","int","0xFFFFFFFF << SPAN_USER_SHIFT","","/**
 * The bits specified by the SPAN_USER bitfield are available
 * for callers to use to store scalar data associated with their
 * span object.
 */
","\android\text\Spanned.java"
"android.view.KeyCharacterMap.UMLAUT","false","false","true","true","true","int","'\u00A8' << 16","","","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.COMBINING_ACCENT","true","false","false","true","true","int","0x80000000","","/*
     * This bit will be set in the return value of {@link #get(int, int)} if the
     * key is a ""dead key.""
     */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.sLock","false","false","true","true","false","Object","new Object()","","","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.ACUTE","false","false","true","true","true","int","'\u00B4' << 16","","/*
     * TODO: Change the table format to support full 21-bit-wide
     * accent characters and combined characters if ever necessary.    
     */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.DEAD","false","false","true","true","false","SparseIntArray","new SparseIntArray()","","/**
 * Maps combinations of (display-form) dead key and second character
 * to combined output character.
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.mKeyboardDevice","false","false","true","false","false","int","","","","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.PREDICTIVE","true","false","false","true","true","int","2","","/**
 * A keyboard with all the letters, but with more than one letter
 * per key.
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.PICKER_DIALOG_INPUT","true","false","false","true","true","char","'\uEF01'","","/**
 * This private-use character is used to bring up a character picker for
 * miscellaneous symbols.
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.META_LENGTH","true","false","false","true","true","int","4","","","\android\view\KeyCharacterMap.java"
"android.view.KeyData.number","true","false","false","false","false","char","","","/**
 * The ""number"" value (see {@link #getNumber}).
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.NUMERIC","true","false","false","true","true","int","1","","/**
 * A numeric (12-key) keyboard.
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.meta","true","false","false","false","false","char","new char[META_LENGTH]","","/**
 * The character that will be generated in various meta states
 * (the same ones used for {@link #get} and defined as
 * {@link KeyEvent#META_SHIFT_ON} and {@link KeyEvent#META_ALT_ON}).
 * <table>
 * <tr><th>Index</th><th align=""left"">Value</th></tr>
 * <tr><td>0</td><td>no modifiers</td></tr>
 * <tr><td>1</td><td>caps</td></tr>
 * <tr><td>2</td><td>alt</td></tr>
 * <tr><td>3</td><td>caps + alt</td></tr>
 * </table>
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.CIRCUMFLEX","false","false","true","true","true","int","'^' << 16","","","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.mPointer","false","false","true","false","false","int","","","","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.TILDE","false","false","true","true","true","int","'~' << 16","","","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.GRAVE","false","false","true","true","true","int","'`' << 16","","","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.number","true","false","false","false","false","char","","","/**
 * The ""number"" value (see {@link #getNumber}).
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.displayLabel","true","false","false","false","false","char","","","/**
 * The display label (see {@link #getDisplayLabel}).
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.COMBINING","false","false","true","true","false","SparseIntArray","new SparseIntArray()","","/**
 * Maps Unicode combining diacritical to display-form dead key
 * (display character shifted left 16 bits).
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyData.displayLabel","true","false","false","false","false","char","","","/**
 * The display label (see {@link #getDisplayLabel}).
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.BUILT_IN_KEYBOARD","true","false","false","true","true","int","0","","/**
 * The id of the device's primary built in keyboard is always 0.
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyData.meta","true","false","false","false","false","char","new char[META_LENGTH]","","/**
 * The character that will be generated in various meta states
 * (the same ones used for {@link #get} and defined as
 * {@link KeyEvent#META_SHIFT_ON} and {@link KeyEvent#META_ALT_ON}).
 * <table>
 * <tr><th>Index</th><th align=""left"">Value</th></tr>
 * <tr><td>0</td><td>no modifiers</td></tr>
 * <tr><td>1</td><td>caps</td></tr>
 * <tr><td>2</td><td>alt</td></tr>
 * <tr><td>3</td><td>caps + alt</td></tr>
 * </table>
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.COMBINING_ACCENT_MASK","true","false","false","true","true","int","0x7FFFFFFF","","/**
 * Mask the return value from {@link #get(int, int)} with this value to get
 * a printable representation of the accent character of a ""dead key.""
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.HEX_INPUT","true","false","false","true","true","char","'\uEF00'","","/**
 * This private-use character is used to trigger Unicode character
 * input by hex digits.
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyData.META_LENGTH","true","false","false","true","true","int","4","","","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.ALPHA","true","false","false","true","true","int","3","","/**
 * A keyboard with all the letters, and maybe some numbers.
 */
","\android\view\KeyCharacterMap.java"
"android.view.KeyCharacterMap.sInstances","false","false","true","true","false","SparseArray<WeakReference<KeyCharacterMap>>","new SparseArray<WeakReference<KeyCharacterMap>>()","","","\android\view\KeyCharacterMap.java"
"android.widget.ZoomButton.mIsInLongpress","false","false","true","false","false","boolean","","","","\android\widget\ZoomButton.java"
"android.widget.ZoomButton.mRunnable","false","false","true","false","true","Runnable","new Runnable() {

    public void run() {
        if ((mOnClickListener != null) && mIsInLongpress && isEnabled()) {
            mOnClickListener.onClick(ZoomButton.this);
            mHandler.postDelayed(this, mZoomSpeed);
        }
    }
}","","","\android\widget\ZoomButton.java"
"android.widget.ZoomButton.mZoomSpeed","false","false","true","false","false","long","1000","","","\android\widget\ZoomButton.java"
"android.widget.ZoomButton.mHandler","false","false","true","false","true","Handler","","","","\android\widget\ZoomButton.java"
"android.content.Entity.values","true","false","false","false","true","ContentValues","","","","\android\content\Entity.java"
"android.content.NamedContentValues.values","true","false","false","false","true","ContentValues","","","","\android\content\Entity.java"
"android.content.NamedContentValues.uri","true","false","false","false","true","Uri","","","","\android\content\Entity.java"
"android.content.Entity.mValues","false","false","true","false","true","ContentValues","","","","\android\content\Entity.java"
"android.content.Entity.mSubValues","false","false","true","false","true","ArrayList<NamedContentValues>","","","","\android\content\Entity.java"
"android.content.Entity.uri","true","false","false","false","true","Uri","","","","\android\content\Entity.java"
"android.text.method.OnePointFiveTapState.active","false","false","false","false","false","boolean","","","","\android\text\method\ArrowKeyMovementMethod.java"
"android.text.method.ArrowKeyMovementMethod.mWhen","false","false","false","false","false","long","","","","\android\text\method\ArrowKeyMovementMethod.java"
"android.text.method.OnePointFiveTapState.mWhen","false","false","false","false","false","long","","","","\android\text\method\ArrowKeyMovementMethod.java"
"android.text.method.ArrowKeyMovementMethod.LAST_TAP_DOWN","false","false","true","true","true","Object","new Object()","","","\android\text\method\ArrowKeyMovementMethod.java"
"android.text.method.DoubleTapState.mWhen","false","false","false","false","false","long","","","","\android\text\method\ArrowKeyMovementMethod.java"
"android.text.method.ArrowKeyMovementMethod.sInstance","false","false","true","true","false","ArrowKeyMovementMethod","","","","\android\text\method\ArrowKeyMovementMethod.java"
"android.text.method.ArrowKeyMovementMethod.active","false","false","false","false","false","boolean","","","","\android\text\method\ArrowKeyMovementMethod.java"
"android.inputmethodservice.ExtractEditText.mIME","false","false","true","false","false","InputMethodService","","","","\android\inputmethodservice\ExtractEditText.java"
"android.inputmethodservice.ExtractEditText.mSettingExtractedText","false","false","true","false","false","int","","","","\android\inputmethodservice\ExtractEditText.java"
"android.speech.SpeechRecognizer.MSG_RESULTS","false","false","true","true","true","int","6","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_BEGINNING_OF_SPEECH","false","false","true","true","true","int","1","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_ERROR","false","false","true","true","true","int","4","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mInternalHandler","false","false","true","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        if (mInternalListener == null) {
            return;
        }
        switch(msg.what) {
            case MSG_BEGINNING_OF_SPEECH:
                mInternalListener.onBeginningOfSpeech();
                break;
            case MSG_BUFFER_RECEIVED:
                mInternalListener.onBufferReceived((byte[]) msg.obj);
                break;
            case MSG_END_OF_SPEECH:
                mInternalListener.onEndOfSpeech();
                break;
            case MSG_ERROR:
                mInternalListener.onError((Integer) msg.obj);
                break;
            case MSG_READY_FOR_SPEECH:
                mInternalListener.onReadyForSpeech((Bundle) msg.obj);
                break;
            case MSG_RESULTS:
                mInternalListener.onResults((Bundle) msg.obj);
                break;
            case MSG_PARTIAL_RESULTS:
                mInternalListener.onPartialResults((Bundle) msg.obj);
                break;
            case MSG_RMS_CHANGED:
                mInternalListener.onRmsChanged((Float) msg.obj);
                break;
            case MSG_ON_EVENT:
                mInternalListener.onEvent(msg.arg1, (Bundle) msg.obj);
                break;
        }
    }
}","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_CLIENT","true","false","false","true","true","int","5","","/**
 * Other client side errors.
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_BEGINNING_OF_SPEECH","false","false","true","true","true","int","1","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_READY_FOR_SPEECH","false","false","true","true","true","int","5","","","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_ON_EVENT","false","false","true","true","true","int","9","","","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_ERROR","false","false","true","true","true","int","4","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_STOP","false","false","true","true","true","int","2","","","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_READY_FOR_SPEECH","false","false","true","true","true","int","5","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_RMS_CHANGED","false","false","true","true","true","int","8","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mContext","false","false","true","false","true","Context","","","/**
 * Context with which the manager was created
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_PARTIAL_RESULTS","false","false","true","true","true","int","7","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_START","false","false","true","true","true","int","1","","/**
 * action codes
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.TAG","false","false","true","true","true","String","""SpeechRecognizer""","","/**
 * Log messages identifier
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_RMS_CHANGED","false","false","true","true","true","int","8","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_SERVER","true","false","false","true","true","int","4","","/**
 * Server sends error status.
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_END_OF_SPEECH","false","false","true","true","true","int","3","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_AUDIO","true","false","false","true","true","int","3","","/**
 * Audio recording error.
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.RESULTS_RECOGNITION","true","false","false","true","true","String","""results_recognition""","","/**
 * Used to retrieve an {@code ArrayList&lt;String&gt;} from the {@link Bundle} passed to the
 * {@link RecognitionListener#onResults(Bundle)} and
 * {@link RecognitionListener#onPartialResults(Bundle)} methods. These strings are the possible
 * recognition results, where the first element is the most likely candidate.
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mListener","false","false","true","false","true","InternalListener","new InternalListener()","","/**
 * The Listener that will receive all the callbacks
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_CANCEL","false","false","true","true","true","int","3","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_NO_MATCH","true","false","false","true","true","int","7","","/**
 * No recognition result matched.
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_BUFFER_RECEIVED","false","false","true","true","true","int","2","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mHandler","false","false","true","false","false","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        switch(msg.what) {
            case MSG_START:
                handleStartListening((Intent) msg.obj);
                break;
            case MSG_STOP:
                handleStopMessage();
                break;
            case MSG_CANCEL:
                handleCancelMessage();
                break;
            case MSG_CHANGE_LISTENER:
                handleChangeListener((RecognitionListener) msg.obj);
                break;
        }
    }
}","","/**
 * Handler that will execute the main tasks
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_RECOGNIZER_BUSY","true","false","false","true","true","int","8","","/**
 * RecognitionService busy.
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mInternalListener","false","false","true","false","false","RecognitionListener","","","","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_END_OF_SPEECH","false","false","true","true","true","int","3","","","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.mInternalListener","false","false","true","false","false","RecognitionListener","","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_BUFFER_RECEIVED","false","false","true","true","true","int","2","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mConnection","false","false","true","false","false","Connection","","","/**
 * The connection to the actual service
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mService","false","false","true","false","false","IRecognitionService","","","/**
 * The actual RecognitionService endpoint
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_ON_EVENT","false","false","true","true","true","int","9","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_NETWORK","true","false","false","true","true","int","2","","/**
 * Other network related errors.
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mPendingTasks","false","false","true","false","true","Queue<Message>","new LinkedList<Message>()","","/**
 * Temporary queue, saving the messages until the connection will be established, afterwards,
 * only mHandler will receive the messages
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_PARTIAL_RESULTS","false","false","true","true","true","int","7","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_INSUFFICIENT_PERMISSIONS","true","false","false","true","true","int","9","","/**
 * Insufficient permissions
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_SPEECH_TIMEOUT","true","false","false","true","true","int","6","","/**
 * No speech input
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.mInternalHandler","false","false","true","false","true","Handler","new Handler() {

    @Override
    public void handleMessage(Message msg) {
        if (mInternalListener == null) {
            return;
        }
        switch(msg.what) {
            case MSG_BEGINNING_OF_SPEECH:
                mInternalListener.onBeginningOfSpeech();
                break;
            case MSG_BUFFER_RECEIVED:
                mInternalListener.onBufferReceived((byte[]) msg.obj);
                break;
            case MSG_END_OF_SPEECH:
                mInternalListener.onEndOfSpeech();
                break;
            case MSG_ERROR:
                mInternalListener.onError((Integer) msg.obj);
                break;
            case MSG_READY_FOR_SPEECH:
                mInternalListener.onReadyForSpeech((Bundle) msg.obj);
                break;
            case MSG_RESULTS:
                mInternalListener.onResults((Bundle) msg.obj);
                break;
            case MSG_PARTIAL_RESULTS:
                mInternalListener.onPartialResults((Bundle) msg.obj);
                break;
            case MSG_RMS_CHANGED:
                mInternalListener.onRmsChanged((Float) msg.obj);
                break;
            case MSG_ON_EVENT:
                mInternalListener.onEvent(msg.arg1, (Bundle) msg.obj);
                break;
        }
    }
}","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.DBG","false","false","true","true","true","boolean","false","","/**
 * DEBUG value to enable verbose debug prints
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.ERROR_NETWORK_TIMEOUT","true","false","false","true","true","int","1","","/**
 * Network operation timed out.
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.InternalListener.MSG_RESULTS","false","false","true","true","true","int","6","","","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.mServiceComponent","false","false","true","false","true","ComponentName","","","/**
 * Component to direct service intent to
 */
","\android\speech\SpeechRecognizer.java"
"android.speech.SpeechRecognizer.MSG_CHANGE_LISTENER","false","false","true","true","true","int","4","","","\android\speech\SpeechRecognizer.java"
"android.content.pm.LabeledIntent.mNonLocalizedLabel","false","false","true","false","false","CharSequence","","","","\android\content\pm\LabeledIntent.java"
"android.content.pm.LabeledIntent.mLabelRes","false","false","true","false","false","int","","","","\android\content\pm\LabeledIntent.java"
"android.content.pm.LabeledIntent.mSourcePackage","false","false","true","false","false","String","","","","\android\content\pm\LabeledIntent.java"
"android.content.pm.LabeledIntent.CREATOR","true","false","false","true","true","Creator<LabeledIntent>","new Creator<LabeledIntent>() {

    public LabeledIntent createFromParcel(Parcel source) {
        return new LabeledIntent(source);
    }

    public LabeledIntent[] newArray(int size) {
        return new LabeledIntent[size];
    }
}","","","\android\content\pm\LabeledIntent.java"
"android.content.pm.LabeledIntent.mIcon","false","false","true","false","false","int","","","","\android\content\pm\LabeledIntent.java"
"android.text.method.TimeKeyListener.sInstance","false","false","true","true","false","TimeKeyListener","","","","\android\text\method\TimeKeyListener.java"
"android.text.method.TimeKeyListener.CHARACTERS","true","false","false","true","true","char","new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'm', 'p', ':' }","","/**
 * The characters that are used.
 *
 * @see KeyEvent#getMatch
 * @see #getAcceptedChars
 */
","\android\text\method\TimeKeyListener.java"
"android.pim.vcard.VCardParser_V30.sAcceptablePropsWithParam","false","false","true","true","true","HashSet<String>","new HashSet<String>(Arrays.asList(""BEGIN"", ""LOGO"", ""PHOTO"", ""LABEL"", ""FN"", ""TITLE"", ""SOUND"", ""VERSION"", ""TEL"", ""EMAIL"", ""TZ"", ""GEO"", ""NOTE"", ""URL"", // 2.1
""BDAY"", // 2.1
""ROLE"", // 2.1
""REV"", // 2.1
""UID"", // 2.1
""KEY"", // 2.1
""MAILER"", ""NAME"", ""PROFILE"", ""SOURCE"", ""NICKNAME"", ""CLASS"", ""SORT-STRING"", ""CATEGORIES"", // 3.0
""PRODID""))","","","\android\pim\vcard\VCardParser_V30.java"
"android.pim.vcard.VCardParser_V30.mStrictParsing","false","false","true","false","true","boolean","","","/**
 * True when the caller wants the parser to be strict about the input.
 * Currently this is only for testing.
 */
","\android\pim\vcard\VCardParser_V30.java"
"android.pim.vcard.VCardParser_V30.sAcceptableEncodingV30","false","false","true","true","true","HashSet<String>","new HashSet<String>(Arrays.asList(""7BIT"", ""8BIT"", ""BASE64"", ""B""))","","// Although ""7bit"" and ""BASE64"" is not allowed in vCard 3.0, we allow it for safety.
","\android\pim\vcard\VCardParser_V30.java"
"android.pim.vcard.VCardParser_V30.LOG_TAG","false","false","true","true","true","String","""VCardParser_V30""","","","\android\pim\vcard\VCardParser_V30.java"
"android.pim.vcard.VCardParser_V30.mPreviousLine","false","false","true","false","false","String","","","","\android\pim\vcard\VCardParser_V30.java"
"android.pim.vcard.VCardParser_V30.mEmittedAgentWarning","false","false","true","false","false","boolean","false","","","\android\pim\vcard\VCardParser_V30.java"
"android.pim.vcard.VCardParser_V30.acceptablePropsWithoutParam","false","false","true","true","true","HashSet<String>","new HashSet<String>()","","// since there may be some careers which violates the RFC...
","\android\pim\vcard\VCardParser_V30.java"
